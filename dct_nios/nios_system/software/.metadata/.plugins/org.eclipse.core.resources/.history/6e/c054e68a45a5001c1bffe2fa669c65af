
DCT_Nios_Project.elf:     file format elf32-littlenios2
DCT_Nios_Project.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040244

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x00012a88 memsz 0x00012a88 flags r-x
    LOAD off    0x00013aa8 vaddr 0x00052aa8 paddr 0x00054594 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00016080 vaddr 0x00056080 paddr 0x00056080 align 2**12
         filesz 0x00000000 memsz 0x00000178 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000121ec  00040244  00040244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000678  00052430  00052430  00013430  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  00052aa8  00054594  00013aa8  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000178  00056080  00056080  00016080  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  000561f8  000561f8  00015594  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00015594  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001018  00000000  00000000  000155b8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00025041  00000000  00000000  000165d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009b57  00000000  00000000  0003b611  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000c7b2  00000000  00000000  00045168  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000025dc  00000000  00000000  0005191c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003eba  00000000  00000000  00053ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00019d20  00000000  00000000  00057db2  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00071ad4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000019f0  00000000  00000000  00071b08  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00076a79  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  00076a7c  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00076a88  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00076a89  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  00076a8a  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  00076a95  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  00076aa0  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000008  00000000  00000000  00076aab  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000046  00000000  00000000  00076ab3  2**0
                  CONTENTS, READONLY
 26 .sopcinfo     0003c731  00000000  00000000  00076af9  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040244 l    d  .text	00000000 .text
00052430 l    d  .rodata	00000000 .rodata
00052aa8 l    d  .rwdata	00000000 .rwdata
00056080 l    d  .bss	00000000 .bss
000561f8 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../DCT_Nios_Project_bsp//obj/HAL/src/crt0.o
0004028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00056080 l     O .bss	00000004 context
00040290 l     F .text	00000060 pre_measurement
000402f0 l     F .text	00000040 post_measurement
00040330 l     F .text	00000044 get_runtime
000403bc l     F .text	00000034 FLOAT_TO_FIXED
000403f0 l     F .text	0000003c FIXED_TO_FLOAT
0004042c l     F .text	00000038 FIXED_MULT
00000000 l    df *ABS*	00000000 s_sin.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
00052650 l     O .rodata	00000108 two_over_pi
000525d0 l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
00052798 l     O .rodata	00000010 init_jk
00052758 l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
000528ee l     O .rodata	00000010 zeroes.4404
00047454 l     F .text	000000bc __sbprintf
000528fe l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00047664 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00049194 l     F .text	00000008 __fp_unlock
000491a8 l     F .text	0000019c __sinit.part.1
00049344 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00052aa8 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00052eec l     O .rwdata	00000020 lc_ctype_charset
00052ecc l     O .rwdata	00000020 lc_message_charset
00052f0c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00052930 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0004c740 l     F .text	000000fc __sprint_r.part.0
00052a64 l     O .rodata	00000010 blanks.4348
00052a54 l     O .rodata	00000010 zeroes.4349
0004dccc l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0004fbf0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004fcfc l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004fd28 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0004fe14 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004fef4 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004ffe0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
000501b4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00054584 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
00050400 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00050534 l     F .text	00000034 alt_dev_reg
000534f4 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0005081c l     F .text	0000020c altera_avalon_jtag_uart_irq
00050a28 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_performance_counter.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00051364 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
000517d8 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00051918 l     F .text	0000003c alt_get_errno
00051954 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
000560cc g     O .bss	00000004 alt_instruction_exception_handler
0004bd84 g     F .text	00000074 _mprec_log10
0004be70 g     F .text	0000008c __any_on
0004e268 g     F .text	00000054 _isatty_r
0005293c g     O .rodata	00000028 __mprec_tinytens
000500f0 g     F .text	0000007c alt_main
000450d4 g     F .text	000000c0 _puts_r
000560f8 g     O .bss	00000100 alt_irq
00042c60 g     F .text	00000014 fabs
0004e2bc g     F .text	00000060 _lseek_r
00054594 g       *ABS*	00000000 __flash_rwdata_start
00043a78 g     F .text	00000088 .hidden __eqdf2
000561f8 g       *ABS*	00000000 __alt_heap_start
00045098 g     F .text	0000003c printf
0004e4d4 g     F .text	0000009c _wcrtomb_r
0004c600 g     F .text	0000005c __sseek
000494e4 g     F .text	00000010 __sinit
000511cc g     F .text	00000024 alt_get_cpu_freq
0004e37c g     F .text	00000140 __swbuf_r
00049fac g     F .text	0000007c _setlocale_r
0004934c g     F .text	00000068 __sfmoreglue
00050190 g     F .text	00000024 __malloc_unlock
000404ac g     F .text	00000138 float_sin
0004ac7c g     F .text	0000015c memmove
000494cc g     F .text	00000018 _cleanup
0004af00 g     F .text	000000a8 _Balloc
00056084 g     O .bss	00000004 Q_M
00043b00 g     F .text	000000dc .hidden __gtdf2
00051d10 g     F .text	00000024 altera_nios2_gen2_irq_init
00040000 g     F .entry	0000001c __reset
00040020 g       *ABS*	00000000 __flash_exceptions_start
0004e20c g     F .text	0000005c _fstat_r
000560b0 g     O .bss	00000004 errno
00042c74 g     F .text	000001ec floor
0004c57c g     F .text	00000008 __seofread
000560b8 g     O .bss	00000004 alt_argv
0005c554 g       *ABS*	00000000 _gp
00053374 g     O .rwdata	00000180 alt_fd_list
00040ff4 g     F .text	0000076c __ieee754_rem_pio2
00051d34 g     F .text	00000090 alt_find_dev
0004ab34 g     F .text	00000148 memcpy
0004919c g     F .text	0000000c _cleanup_r
00044c70 g     F .text	000000dc .hidden __floatsidf
0005189c g     F .text	0000007c alt_io_redirect
0004fa54 g     F .text	000000f4 .hidden __ltdf2
00040374 g     F .text	00000048 SET_Q_FORMAT
00052430 g       *ABS*	00000000 __DTOR_END__
00045194 g     F .text	00000014 puts
00052000 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0004c460 g     F .text	00000074 __fpclassifyd
0004bce0 g     F .text	000000a4 __ratio
0004dcb0 g     F .text	0000001c __vfiprintf_internal
00050c20 g     F .text	0000021c altera_avalon_jtag_uart_read
00045068 g     F .text	00000030 _printf_r
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
00043110 g     F .text	00000064 .hidden __udivsi3
0004fe50 g     F .text	000000a4 isatty
0005298c g     O .rodata	000000c8 __mprec_tens
00056090 g     O .bss	00000004 num_fixed
0004a028 g     F .text	0000000c __locale_charset
00041760 g     F .text	000004a4 __kernel_cos
00051f70 g     F .text	00000090 alt_icache_flush
000560ac g     O .bss	00000004 __malloc_top_pad
00051168 g     F .text	00000040 perf_get_num_starts
0005455c g     O .rwdata	00000004 __mb_cur_max
0004a058 g     F .text	0000000c _localeconv_r
0004b30c g     F .text	0000003c __i2b
00049968 g     F .text	000004bc __sfvwrite_r
0005608c g     O .bss	00000004 F_ONE
00040b70 g     F .text	000000d4 tune_QM_sin
0004c4d4 g     F .text	00000054 _sbrk_r
0004e31c g     F .text	00000060 _read_r
0005457c g     O .rwdata	00000004 alt_max_fd
0004df00 g     F .text	000000f0 _fclose_r
00049164 g     F .text	00000030 fflush
000560a8 g     O .bss	00000004 __malloc_max_sbrked_mem
00042994 g     F .text	000002cc __kernel_sin
00044d4c g     F .text	00000110 .hidden __extendsfdf2
000431cc g     F .text	000008ac .hidden __adddf3
0004ba88 g     F .text	0000010c __b2d
0004ec34 g     F .text	00000538 .hidden __umoddi3
00040464 g     F .text	00000048 float_abs
0005001c g     F .text	000000d4 lseek
00054554 g     O .rwdata	00000004 _global_impure_ptr
0004befc g     F .text	00000564 _realloc_r
000561f8 g       *ABS*	00000000 __bss_end
000516e8 g     F .text	000000f0 alt_iic_isr_register
00051c08 g     F .text	00000108 alt_tick
0004e6bc g     F .text	00000578 .hidden __udivdi3
0004e168 g     F .text	00000024 _fputwc_r
00052964 g     O .rodata	00000028 __mprec_bigtens
0004b0f0 g     F .text	00000104 __s2b
0004fb48 g     F .text	000000a8 .hidden __floatunsidf
0004b7c8 g     F .text	00000060 __mcmp
00049504 g     F .text	00000018 __fp_lock_all
0005169c g     F .text	0000004c alt_ic_irq_enabled
00051b6c g     F .text	0000009c alt_alarm_stop
000560c0 g     O .bss	00000004 alt_irq_active
000400fc g     F .exceptions	000000d4 alt_irq_handler
0005334c g     O .rwdata	00000028 alt_dev_null
00041c04 g     F .text	00000d90 __kernel_rem_pio2
0005131c g     F .text	00000048 alt_dcache_flush_all
0004b1f4 g     F .text	00000068 __hi0bits
00044bf0 g     F .text	00000080 .hidden __fixdfsi
00054594 g       *ABS*	00000000 __ram_rwdata_end
00054574 g     O .rwdata	00000008 alt_dev_list
0005043c g     F .text	000000f8 write
00040a3c g     F .text	00000134 test_sin_fixed
00052aa8 g       *ABS*	00000000 __ram_rodata_end
0004fd64 g     F .text	000000b0 fstat
00056088 g     O .bss	00000004 Q_N
00040704 g     F .text	000000d0 optimized_fixed_sin
0004fa54 g     F .text	000000f4 .hidden __ledf2
0004b540 g     F .text	00000140 __pow5mult
0004c854 g     F .text	0000145c ___vfiprintf_internal_r
000560a0 g     O .bss	00000004 __nlocale_changed
00043174 g     F .text	00000058 .hidden __umodsi3
000561f8 g       *ABS*	00000000 end
0005075c g     F .text	000000c0 altera_avalon_jtag_uart_init
000401d0 g     F .exceptions	00000074 alt_instruction_exception_entry
00052430 g       *ABS*	00000000 __CTOR_LIST__
00080000 g       *ABS*	00000000 __alt_stack_pointer
00045004 g     F .text	00000064 .hidden __clzsi2
00050e3c g     F .text	00000224 altera_avalon_jtag_uart_write
000494f4 g     F .text	00000004 __sfp_lock_acquire
0004aa50 g     F .text	000000e4 memchr
00045240 g     F .text	000021f8 ___vfprintf_internal_r
00049658 g     F .text	00000310 _free_r
0004a034 g     F .text	00000010 __locale_mb_cur_max
0005227c g     F .text	00000180 __call_exitprocs
0005609c g     O .bss	00000004 __mlocale_changed
00054560 g     O .rwdata	00000004 __malloc_sbrk_base
00040244 g     F .text	0000004c _start
000560c4 g     O .bss	00000004 _alt_tick_rate
00040f04 g     F .text	000000f0 sin
00056094 g     O .bss	00000004 num_float
0004b680 g     F .text	00000148 __lshift
000560c8 g     O .bss	00000004 _alt_nticks
000501f0 g     F .text	000000fc read
000505a0 g     F .text	00000058 alt_sys_init
00052164 g     F .text	00000118 __register_exitproc
00040904 g     F .text	00000138 test_sin_float
0004b348 g     F .text	000001f8 __multiply
00050ac8 g     F .text	00000068 altera_avalon_jtag_uart_close
00052aa8 g       *ABS*	00000000 __ram_rwdata_start
00052430 g       *ABS*	00000000 __ram_rodata_start
000560d0 g     O .bss	00000028 __malloc_current_mallinfo
0004bb94 g     F .text	0000014c __d2b
000505f8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00051ecc g     F .text	000000a4 alt_get_fd
0004dde8 g     F .text	00000054 _close_r
00051060 g     F .text	000000bc perf_get_section_time
000520e8 g     F .text	0000007c memcmp
000506b8 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
000561f8 g       *ABS*	00000000 __alt_stack_base
00050708 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00047510 g     F .text	00000154 __swsetup_r
0004f16c g     F .text	000008e8 .hidden __divdf3
000493b4 g     F .text	00000118 __sfp
0004bdf8 g     F .text	00000078 __copybits
0005111c g     F .text	0000004c perf_get_total_time
00052f44 g     O .rwdata	00000408 __malloc_av_
00049500 g     F .text	00000004 __sinit_lock_release
00043bdc g     F .text	00000718 .hidden __muldf3
0004c528 g     F .text	00000054 __sread
00051dc4 g     F .text	00000108 alt_find_file
000513a0 g     F .text	000000a4 alt_dev_llist_insert
0005016c g     F .text	00000024 __malloc_lock
00050350 g     F .text	000000b0 sbrk
00049108 g     F .text	0000005c _fflush_r
0004de3c g     F .text	000000c4 _calloc_r
00056080 g       *ABS*	00000000 __bss_start
0004add8 g     F .text	00000128 memset
00040c44 g     F .text	000002c0 main
000560bc g     O .bss	00000004 alt_envp
000560a4 g     O .bss	00000004 __malloc_max_total_mem
00050658 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0004e4bc g     F .text	00000018 __swbuf
0004c65c g     F .text	00000008 __sclose
00080000 g       *ABS*	00000000 __alt_heap_limit
0004dff0 g     F .text	00000014 fclose
00044e5c g     F .text	000001a8 .hidden __truncdfsf2
00047864 g     F .text	00001688 _dtoa_r
0004a244 g     F .text	0000080c _malloc_r
0004e630 g     F .text	00000030 __ascii_wctomb
00054580 g     O .rwdata	00000004 alt_errno
00049e24 g     F .text	000000c4 _fwalk
00043018 g     F .text	00000084 .hidden __divsi3
00049534 g     F .text	00000124 _malloc_trim_r
00052430 g       *ABS*	00000000 __CTOR_END__
0004c664 g     F .text	000000dc strcmp
00052430 g       *ABS*	00000000 __flash_rodata_start
00052430 g       *ABS*	00000000 __DTOR_LIST__
00042ffc g     F .text	0000001c copysign
00043a78 g     F .text	00000088 .hidden __nedf2
00050568 g     F .text	00000038 alt_irq_init
000502ec g     F .text	00000064 alt_release_fd
000527a8 g     O .rodata	00000100 .hidden __clz_tab
00056098 g     O .bss	00000004 _PathLocale
0005209c g     F .text	00000014 atexit
0004dd88 g     F .text	00000060 _write_r
0004a064 g     F .text	00000018 setlocale
00054558 g     O .rwdata	00000004 _impure_ptr
000560b4 g     O .bss	00000004 alt_argc
00048eec g     F .text	0000021c __sflush_r
00042e60 g     F .text	0000019c scalbn
000514a4 g     F .text	00000060 _do_dtors
0004a050 g     F .text	00000008 __locale_cjk_lang
000405e4 g     F .text	00000120 optimized_float_sin
00040020 g       .exceptions	00000000 alt_irq_entry
0004ba24 g     F .text	00000064 __ulp
0004951c g     F .text	00000018 __fp_unlock_all
0005456c g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
0004a07c g     F .text	0000000c localeconv
00051538 g     F .text	00000050 alt_ic_isr_register
00054594 g       *ABS*	00000000 _edata
000561f8 g       *ABS*	00000000 _end
0004e004 g     F .text	00000164 __fputwc
00040244 g       *ABS*	00000000 __ram_exceptions_end
00050b30 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
00051610 g     F .text	0000008c alt_ic_irq_disable
0004c584 g     F .text	0000007c __swrite
00054564 g     O .rwdata	00000004 __malloc_trim_threshold
000511a8 g     F .text	00000024 alt_get_performance_counter_base
0004a044 g     F .text	0000000c __locale_msgcharset
000520b0 g     F .text	00000038 exit
00049ee8 g     F .text	000000c4 _fwalk_reent
0004b828 g     F .text	000001fc __mdiff
0004309c g     F .text	00000074 .hidden __modsi3
00080000 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
000494f8 g     F .text	00000004 __sfp_lock_release
000523fc g     F .text	00000034 _exit
000407d4 g     F .text	00000130 fixed_sin
000511f0 g     F .text	0000012c alt_alarm_start
0004a088 g     F .text	000001bc __smakebuf_r
000451a8 g     F .text	00000098 strlen
00051a18 g     F .text	00000154 open
00043b00 g     F .text	000000dc .hidden __gedf2
00054568 g     O .rwdata	00000004 __wctomb
0004c83c g     F .text	00000018 __sprint_r
00051504 g     F .text	00000034 alt_icache_flush_all
00054588 g     O .rwdata	00000004 alt_priority_mask
00051588 g     F .text	00000088 alt_ic_irq_enable
00047438 g     F .text	0000001c __vfprintf_internal
0004e660 g     F .text	0000005c _wctomb_r
000442f4 g     F .text	000008fc .hidden __subdf3
0004b25c g     F .text	000000b0 __lo0bits
0005458c g     O .rwdata	00000008 alt_alarm_list
00051444 g     F .text	00000060 _do_ctors
0004e570 g     F .text	000000c0 wcrtomb
0004fc2c g     F .text	000000d0 close
0004ff5c g     F .text	00000084 alt_load
0004e18c g     F .text	00000080 fputwc
000494fc g     F .text	00000004 __sinit_lock_acquire
0004afd0 g     F .text	00000120 __multadd
0004afa8 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__alt_data_end+0xfffc0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08409114 	ori	at,at,580
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__reset-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	00401d00 	call	401d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   40118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0fffb17 	ldw	r3,-20(fp)
   40130:	e0bffc17 	ldw	r2,-16(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001426 	beq	r2,zero,4018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	00800174 	movhi	r2,5
   40140:	10983e04 	addi	r2,r2,24824
   40144:	e0fffd17 	ldw	r3,-12(fp)
   40148:	180690fa 	slli	r3,r3,3
   4014c:	10c5883a 	add	r2,r2,r3
   40150:	10c00017 	ldw	r3,0(r2)
   40154:	00800174 	movhi	r2,5
   40158:	10983e04 	addi	r2,r2,24824
   4015c:	e13ffd17 	ldw	r4,-12(fp)
   40160:	200890fa 	slli	r4,r4,3
   40164:	1105883a 	add	r2,r2,r4
   40168:	10800104 	addi	r2,r2,4
   4016c:	10800017 	ldw	r2,0(r2)
   40170:	1009883a 	mov	r4,r2
   40174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   40178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   4017c:	0005313a 	rdctl	r2,ipending
   40180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   40184:	e0bfff17 	ldw	r2,-4(fp)
   40188:	00000706 	br	401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   4018c:	e0bffc17 	ldw	r2,-16(fp)
   40190:	1085883a 	add	r2,r2,r2
   40194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   40198:	e0bffd17 	ldw	r2,-12(fp)
   4019c:	10800044 	addi	r2,r2,1
   401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   401a4:	003fe106 	br	4012c <__alt_data_end+0xfffc012c>

    active = alt_irq_pending ();
   401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   401ac:	e0bffb17 	ldw	r2,-20(fp)
   401b0:	103fdb1e 	bne	r2,zero,40120 <__alt_data_end+0xfffc0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401b4:	0001883a 	nop
}
   401b8:	0001883a 	nop
   401bc:	e037883a 	mov	sp,fp
   401c0:	dfc00117 	ldw	ra,4(sp)
   401c4:	df000017 	ldw	fp,0(sp)
   401c8:	dec00204 	addi	sp,sp,8
   401cc:	f800283a 	ret

000401d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401d0:	defffb04 	addi	sp,sp,-20
   401d4:	dfc00415 	stw	ra,16(sp)
   401d8:	df000315 	stw	fp,12(sp)
   401dc:	df000304 	addi	fp,sp,12
   401e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   401e4:	000531fa 	rdctl	r2,exception
   401e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   401ec:	e0bffd17 	ldw	r2,-12(fp)
   401f0:	10801f0c 	andi	r2,r2,124
   401f4:	1004d0ba 	srli	r2,r2,2
   401f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   401fc:	0005333a 	rdctl	r2,badaddr
   40200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   40204:	d0a6de17 	ldw	r2,-25736(gp)
   40208:	10000726 	beq	r2,zero,40228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   4020c:	d0a6de17 	ldw	r2,-25736(gp)
   40210:	e0fffd17 	ldw	r3,-12(fp)
   40214:	e1bffe17 	ldw	r6,-8(fp)
   40218:	e17fff17 	ldw	r5,-4(fp)
   4021c:	1809883a 	mov	r4,r3
   40220:	103ee83a 	callr	r2
   40224:	00000206 	br	40230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   40228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   4022c:	0005883a 	mov	r2,zero
}
   40230:	e037883a 	mov	sp,fp
   40234:	dfc00117 	ldw	ra,4(sp)
   40238:	df000017 	ldw	fp,0(sp)
   4023c:	dec00204 	addi	sp,sp,8
   40240:	f800283a 	ret

Disassembly of section .text:

00040244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   40244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   40248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   4024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   40250:	00bffd16 	blt	zero,r2,40248 <__alt_data_end+0xfffc0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40254:	06c00234 	movhi	sp,8
    ori sp, sp, %lo(__alt_stack_pointer)
   40258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   4025c:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   40260:	d6b15514 	ori	gp,gp,50516
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40264:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   40268:	10982014 	ori	r2,r2,24704

    movhi r3, %hi(__bss_end)
   4026c:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   40270:	18d87e14 	ori	r3,r3,25080

    beq r2, r3, 1f
   40274:	10c00326 	beq	r2,r3,40284 <_start+0x40>

0:
    stw zero, (r2)
   40278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   4027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   40280:	10fffd36 	bltu	r2,r3,40278 <__alt_data_end+0xfffc0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40284:	004ff5c0 	call	4ff5c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   40288:	00500f00 	call	500f0 <alt_main>

0004028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   4028c:	003fff06 	br	4028c <__alt_data_end+0xfffc028c>

00040290 <pre_measurement>:

static alt_irq_context context; /* Use when disabling interrupts. */



static void pre_measurement(void){
   40290:	defffe04 	addi	sp,sp,-8
   40294:	df000115 	stw	fp,4(sp)
   40298:	df000104 	addi	fp,sp,4

  PERF_RESET (PERFORMANCE_COUNTER_0_BASE);
   4029c:	00c00044 	movi	r3,1
   402a0:	00800234 	movhi	r2,8
   402a4:	10861004 	addi	r2,r2,6208
   402a8:	10c00035 	stwio	r3,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   402ac:	0005303a 	rdctl	r2,status
   402b0:	e0bfff15 	stw	r2,-4(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   402b4:	e0ffff17 	ldw	r3,-4(fp)
   402b8:	00bfff84 	movi	r2,-2
   402bc:	1884703a 	and	r2,r3,r2
   402c0:	1001703a 	wrctl	status,r2
  
  return context;
   402c4:	e0bfff17 	ldw	r2,-4(fp)

  context = alt_irq_disable_all();
   402c8:	d0a6cb15 	stw	r2,-25812(gp)

  PERF_START_MEASURING (PERFORMANCE_COUNTER_0_BASE);
   402cc:	0007883a 	mov	r3,zero
   402d0:	00800234 	movhi	r2,8
   402d4:	10861104 	addi	r2,r2,6212
   402d8:	10c00035 	stwio	r3,0(r2)

}
   402dc:	0001883a 	nop
   402e0:	e037883a 	mov	sp,fp
   402e4:	df000017 	ldw	fp,0(sp)
   402e8:	dec00104 	addi	sp,sp,4
   402ec:	f800283a 	ret

000402f0 <post_measurement>:



static void post_measurement(void){
   402f0:	defffe04 	addi	sp,sp,-8
   402f4:	df000115 	stw	fp,4(sp)
   402f8:	df000104 	addi	fp,sp,4

	alt_irq_enable_all(context);
   402fc:	d0a6cb17 	ldw	r2,-25812(gp)
   40300:	e0bfff15 	stw	r2,-4(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   40304:	e0bfff17 	ldw	r2,-4(fp)
   40308:	1001703a 	wrctl	status,r2

	PERF_STOP_MEASURING (PERFORMANCE_COUNTER_0_BASE);
   4030c:	0007883a 	mov	r3,zero
   40310:	00800234 	movhi	r2,8
   40314:	10861004 	addi	r2,r2,6208
   40318:	10c00035 	stwio	r3,0(r2)

}
   4031c:	0001883a 	nop
   40320:	e037883a 	mov	sp,fp
   40324:	df000017 	ldw	fp,0(sp)
   40328:	dec00104 	addi	sp,sp,4
   4032c:	f800283a 	ret

00040330 <get_runtime>:



static inline int get_runtime(int sec) {
   40330:	defffd04 	addi	sp,sp,-12
   40334:	dfc00215 	stw	ra,8(sp)
   40338:	df000115 	stw	fp,4(sp)
   4033c:	df000104 	addi	fp,sp,4
   40340:	e13fff15 	stw	r4,-4(fp)

	return (int)perf_get_section_time ((void*)PERFORMANCE_COUNTER_0_BASE, sec);
   40344:	e17fff17 	ldw	r5,-4(fp)
   40348:	01000234 	movhi	r4,8
   4034c:	21061004 	addi	r4,r4,6208
   40350:	00510600 	call	51060 <perf_get_section_time>
   40354:	1009883a 	mov	r4,r2
   40358:	180b883a 	mov	r5,r3
   4035c:	2005883a 	mov	r2,r4

}
   40360:	e037883a 	mov	sp,fp
   40364:	dfc00117 	ldw	ra,4(sp)
   40368:	df000017 	ldw	fp,0(sp)
   4036c:	dec00204 	addi	sp,sp,8
   40370:	f800283a 	ret

00040374 <SET_Q_FORMAT>:

int F_ONE = 0;



void SET_Q_FORMAT(int M, int N) {
   40374:	defffd04 	addi	sp,sp,-12
   40378:	df000215 	stw	fp,8(sp)
   4037c:	df000204 	addi	fp,sp,8
   40380:	e13ffe15 	stw	r4,-8(fp)
   40384:	e17fff15 	stw	r5,-4(fp)

    Q_M = M;
   40388:	e0bffe17 	ldw	r2,-8(fp)
   4038c:	d0a6cc15 	stw	r2,-25808(gp)

    Q_N = N;
   40390:	e0bfff17 	ldw	r2,-4(fp)
   40394:	d0a6cd15 	stw	r2,-25804(gp)

    F_ONE = 1 << N;
   40398:	00c00044 	movi	r3,1
   4039c:	e0bfff17 	ldw	r2,-4(fp)
   403a0:	1884983a 	sll	r2,r3,r2
   403a4:	d0a6ce15 	stw	r2,-25800(gp)

}
   403a8:	0001883a 	nop
   403ac:	e037883a 	mov	sp,fp
   403b0:	df000017 	ldw	fp,0(sp)
   403b4:	dec00104 	addi	sp,sp,4
   403b8:	f800283a 	ret

000403bc <FLOAT_TO_FIXED>:



static inline fixed FLOAT_TO_FIXED(float f) {
   403bc:	defffe04 	addi	sp,sp,-8
   403c0:	df000115 	stw	fp,4(sp)
   403c4:	df000104 	addi	fp,sp,4
   403c8:	e13fff15 	stw	r4,-4(fp)

    return (fixed)(f * F_ONE);
   403cc:	d0a6ce17 	ldw	r2,-25800(gp)
   403d0:	1007feb2 	custom	250,r3,r2,zero
   403d4:	e0bfff17 	ldw	r2,-4(fp)
   403d8:	1885ff32 	custom	252,r2,r3,r2
   403dc:	1005fe72 	custom	249,r2,r2,zero

}
   403e0:	e037883a 	mov	sp,fp
   403e4:	df000017 	ldw	fp,0(sp)
   403e8:	dec00104 	addi	sp,sp,4
   403ec:	f800283a 	ret

000403f0 <FIXED_TO_FLOAT>:



static inline float FIXED_TO_FLOAT(fixed f){
   403f0:	defffe04 	addi	sp,sp,-8
   403f4:	df000115 	stw	fp,4(sp)
   403f8:	df000104 	addi	fp,sp,4
   403fc:	e13fff15 	stw	r4,-4(fp)

    return (float)(f)/F_ONE;
   40400:	e0bfff17 	ldw	r2,-4(fp)
   40404:	1007feb2 	custom	250,r3,r2,zero
   40408:	d0a6ce17 	ldw	r2,-25800(gp)
   4040c:	1005feb2 	custom	250,r2,r2,zero
   40410:	1885fff2 	custom	255,r2,r3,r2
   40414:	1007883a 	mov	r3,r2

}
   40418:	1805883a 	mov	r2,r3
   4041c:	e037883a 	mov	sp,fp
   40420:	df000017 	ldw	fp,0(sp)
   40424:	dec00104 	addi	sp,sp,4
   40428:	f800283a 	ret

0004042c <FIXED_MULT>:



static inline fixed FIXED_MULT(fixed op1, fixed op2) {
   4042c:	defffd04 	addi	sp,sp,-12
   40430:	df000215 	stw	fp,8(sp)
   40434:	df000204 	addi	fp,sp,8
   40438:	e13ffe15 	stw	r4,-8(fp)
   4043c:	e17fff15 	stw	r5,-4(fp)

    return (fixed)op1*op2 >> Q_N;
   40440:	e0fffe17 	ldw	r3,-8(fp)
   40444:	e0bfff17 	ldw	r2,-4(fp)
   40448:	1887383a 	mul	r3,r3,r2
   4044c:	d0a6cd17 	ldw	r2,-25804(gp)
   40450:	1885d83a 	sra	r2,r3,r2

}
   40454:	e037883a 	mov	sp,fp
   40458:	df000017 	ldw	fp,0(sp)
   4045c:	dec00104 	addi	sp,sp,4
   40460:	f800283a 	ret

00040464 <float_abs>:



float float_abs(float x) {
   40464:	defffe04 	addi	sp,sp,-8
   40468:	df000115 	stw	fp,4(sp)
   4046c:	df000104 	addi	fp,sp,4
   40470:	e13fff15 	stw	r4,-4(fp)

    if (x >= 0) return x;
   40474:	e0bfff17 	ldw	r2,-4(fp)
   40478:	0007883a 	mov	r3,zero
   4047c:	10c5f932 	custom	228,r2,r2,r3
   40480:	10000226 	beq	r2,zero,4048c <float_abs+0x28>
   40484:	e0bfff17 	ldw	r2,-4(fp)
   40488:	00000206 	br	40494 <float_abs+0x30>

    else return -x;
   4048c:	e0bfff17 	ldw	r2,-4(fp)
   40490:	1005f872 	custom	225,r2,r2,zero
   40494:	1007883a 	mov	r3,r2

}
   40498:	1805883a 	mov	r2,r3
   4049c:	e037883a 	mov	sp,fp
   404a0:	df000017 	ldw	fp,0(sp)
   404a4:	dec00104 	addi	sp,sp,4
   404a8:	f800283a 	ret

000404ac <float_sin>:

int num_float;

int num_fixed;

float float_sin(float x, int terms) {
   404ac:	defff704 	addi	sp,sp,-36
   404b0:	df000815 	stw	fp,32(sp)
   404b4:	df000804 	addi	fp,sp,32
   404b8:	e13ffe15 	stw	r4,-8(fp)
   404bc:	e17fff15 	stw	r5,-4(fp)

    num_float++;
   404c0:	d0a6d017 	ldw	r2,-25792(gp)
   404c4:	10800044 	addi	r2,r2,1
   404c8:	d0a6d015 	stw	r2,-25792(gp)

    PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 2);
   404cc:	0007883a 	mov	r3,zero
   404d0:	00800234 	movhi	r2,8
   404d4:	10861904 	addi	r2,r2,6244
   404d8:	10c00035 	stwio	r3,0(r2)

    float result = x;
   404dc:	e0bffe17 	ldw	r2,-8(fp)
   404e0:	e0bff815 	stw	r2,-32(fp)

    float x2 = x*x;
   404e4:	e0fffe17 	ldw	r3,-8(fp)
   404e8:	e0bffe17 	ldw	r2,-8(fp)
   404ec:	1885ff32 	custom	252,r2,r3,r2
   404f0:	e0bffd15 	stw	r2,-12(fp)

    float num = x;
   404f4:	e0bffe17 	ldw	r2,-8(fp)
   404f8:	e0bff915 	stw	r2,-28(fp)

    int den = 1;
   404fc:	00800044 	movi	r2,1
   40500:	e0bffa15 	stw	r2,-24(fp)

    int neg = 1;
   40504:	00800044 	movi	r2,1
   40508:	e0bffb15 	stw	r2,-20(fp)

    for (int i = 1; i < terms; i++) {
   4050c:	00800044 	movi	r2,1
   40510:	e0bffc15 	stw	r2,-16(fp)
   40514:	00002506 	br	405ac <float_sin+0x100>

        num *= x2;
   40518:	e0fff917 	ldw	r3,-28(fp)
   4051c:	e0bffd17 	ldw	r2,-12(fp)
   40520:	1885ff32 	custom	252,r2,r3,r2
   40524:	e0bff915 	stw	r2,-28(fp)

        den *= (2*i+1)*(2*i);
   40528:	e0bffc17 	ldw	r2,-16(fp)
   4052c:	1085883a 	add	r2,r2,r2
   40530:	10c00044 	addi	r3,r2,1
   40534:	e0bffc17 	ldw	r2,-16(fp)
   40538:	1085883a 	add	r2,r2,r2
   4053c:	1885383a 	mul	r2,r3,r2
   40540:	e0fffa17 	ldw	r3,-24(fp)
   40544:	1885383a 	mul	r2,r3,r2
   40548:	e0bffa15 	stw	r2,-24(fp)

        if (!neg)
   4054c:	e0bffb17 	ldw	r2,-20(fp)
   40550:	1000081e 	bne	r2,zero,40574 <float_sin+0xc8>

            result += num/den;
   40554:	e0bffa17 	ldw	r2,-24(fp)
   40558:	1005feb2 	custom	250,r2,r2,zero
   4055c:	e0fff917 	ldw	r3,-28(fp)
   40560:	1885fff2 	custom	255,r2,r3,r2
   40564:	e0fff817 	ldw	r3,-32(fp)
   40568:	1885ff72 	custom	253,r2,r3,r2
   4056c:	e0bff815 	stw	r2,-32(fp)
   40570:	00000706 	br	40590 <float_sin+0xe4>

        else

            result -= num/den;
   40574:	e0bffa17 	ldw	r2,-24(fp)
   40578:	1005feb2 	custom	250,r2,r2,zero
   4057c:	e0fff917 	ldw	r3,-28(fp)
   40580:	1885fff2 	custom	255,r2,r3,r2
   40584:	e0fff817 	ldw	r3,-32(fp)
   40588:	1885ffb2 	custom	254,r2,r3,r2
   4058c:	e0bff815 	stw	r2,-32(fp)

        neg = !neg;
   40590:	e0bffb17 	ldw	r2,-20(fp)
   40594:	1005003a 	cmpeq	r2,r2,zero
   40598:	10803fcc 	andi	r2,r2,255
   4059c:	e0bffb15 	stw	r2,-20(fp)

    int den = 1;

    int neg = 1;

    for (int i = 1; i < terms; i++) {
   405a0:	e0bffc17 	ldw	r2,-16(fp)
   405a4:	10800044 	addi	r2,r2,1
   405a8:	e0bffc15 	stw	r2,-16(fp)
   405ac:	e0fffc17 	ldw	r3,-16(fp)
   405b0:	e0bfff17 	ldw	r2,-4(fp)
   405b4:	18bfd816 	blt	r3,r2,40518 <__alt_data_end+0xfffc0518>

        neg = !neg;

    }

    PERF_END (PERFORMANCE_COUNTER_0_BASE, 2);
   405b8:	0007883a 	mov	r3,zero
   405bc:	00800234 	movhi	r2,8
   405c0:	10861804 	addi	r2,r2,6240
   405c4:	10c00035 	stwio	r3,0(r2)

    return result;
   405c8:	e0bff817 	ldw	r2,-32(fp)
   405cc:	1007883a 	mov	r3,r2

}
   405d0:	1805883a 	mov	r2,r3
   405d4:	e037883a 	mov	sp,fp
   405d8:	df000017 	ldw	fp,0(sp)
   405dc:	dec00104 	addi	sp,sp,4
   405e0:	f800283a 	ret

000405e4 <optimized_float_sin>:



float optimized_float_sin(float x) {
   405e4:	defffb04 	addi	sp,sp,-20
   405e8:	df000415 	stw	fp,16(sp)
   405ec:	df000404 	addi	fp,sp,16
   405f0:	e13fff15 	stw	r4,-4(fp)

    num_float++;
   405f4:	d0a6d017 	ldw	r2,-25792(gp)
   405f8:	10800044 	addi	r2,r2,1
   405fc:	d0a6d015 	stw	r2,-25792(gp)

    PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 2);
   40600:	0007883a 	mov	r3,zero
   40604:	00800234 	movhi	r2,8
   40608:	10861904 	addi	r2,r2,6244
   4060c:	10c00035 	stwio	r3,0(r2)

    float result = x;
   40610:	e0bfff17 	ldw	r2,-4(fp)
   40614:	e0bffc15 	stw	r2,-16(fp)

    float x2 = x*x;
   40618:	e0ffff17 	ldw	r3,-4(fp)
   4061c:	e0bfff17 	ldw	r2,-4(fp)
   40620:	1885ff32 	custom	252,r2,r3,r2
   40624:	e0bffd15 	stw	r2,-12(fp)



    float powx = x2*x; //x^3
   40628:	e0fffd17 	ldw	r3,-12(fp)
   4062c:	e0bfff17 	ldw	r2,-4(fp)
   40630:	1885ff32 	custom	252,r2,r3,r2
   40634:	e0bffe15 	stw	r2,-8(fp)

    result -= powx * (0.166666f);//1/3!
   40638:	e0fffe17 	ldw	r3,-8(fp)
   4063c:	008f8af4 	movhi	r2,15915
   40640:	10aa9f84 	addi	r2,r2,-21890
   40644:	1885ff32 	custom	252,r2,r3,r2
   40648:	e0fffc17 	ldw	r3,-16(fp)
   4064c:	1885ffb2 	custom	254,r2,r3,r2
   40650:	e0bffc15 	stw	r2,-16(fp)



    powx *= x2; //x^5
   40654:	e0fffe17 	ldw	r3,-8(fp)
   40658:	e0bffd17 	ldw	r2,-12(fp)
   4065c:	1885ff32 	custom	252,r2,r3,r2
   40660:	e0bffe15 	stw	r2,-8(fp)

    result += powx * (0.0083333f);//1/5!
   40664:	e0fffe17 	ldw	r3,-8(fp)
   40668:	008f0274 	movhi	r2,15369
   4066c:	10a21944 	addi	r2,r2,-30619
   40670:	1885ff32 	custom	252,r2,r3,r2
   40674:	e0fffc17 	ldw	r3,-16(fp)
   40678:	1885ff72 	custom	253,r2,r3,r2
   4067c:	e0bffc15 	stw	r2,-16(fp)



    powx *= x2; //x^7
   40680:	e0fffe17 	ldw	r3,-8(fp)
   40684:	e0bffd17 	ldw	r2,-12(fp)
   40688:	1885ff32 	custom	252,r2,r3,r2
   4068c:	e0bffe15 	stw	r2,-8(fp)

    result -= powx * (0.0001984126f); //1/7!
   40690:	e0fffe17 	ldw	r3,-8(fp)
   40694:	008e5434 	movhi	r2,14672
   40698:	10833e84 	addi	r2,r2,3322
   4069c:	1885ff32 	custom	252,r2,r3,r2
   406a0:	e0fffc17 	ldw	r3,-16(fp)
   406a4:	1885ffb2 	custom	254,r2,r3,r2
   406a8:	e0bffc15 	stw	r2,-16(fp)



    powx *= x2; //x^9
   406ac:	e0fffe17 	ldw	r3,-8(fp)
   406b0:	e0bffd17 	ldw	r2,-12(fp)
   406b4:	1885ff32 	custom	252,r2,r3,r2
   406b8:	e0bffe15 	stw	r2,-8(fp)

    result += powx * (0.000002755731f);//1/9!
   406bc:	e0fffe17 	ldw	r3,-8(fp)
   406c0:	008d8e74 	movhi	r2,13881
   406c4:	10bbc644 	addi	r2,r2,-4327
   406c8:	1885ff32 	custom	252,r2,r3,r2
   406cc:	e0fffc17 	ldw	r3,-16(fp)
   406d0:	1885ff72 	custom	253,r2,r3,r2
   406d4:	e0bffc15 	stw	r2,-16(fp)

    PERF_END (PERFORMANCE_COUNTER_0_BASE, 2);
   406d8:	0007883a 	mov	r3,zero
   406dc:	00800234 	movhi	r2,8
   406e0:	10861804 	addi	r2,r2,6240
   406e4:	10c00035 	stwio	r3,0(r2)

    return result;
   406e8:	e0bffc17 	ldw	r2,-16(fp)
   406ec:	1007883a 	mov	r3,r2

}
   406f0:	1805883a 	mov	r2,r3
   406f4:	e037883a 	mov	sp,fp
   406f8:	df000017 	ldw	fp,0(sp)
   406fc:	dec00104 	addi	sp,sp,4
   40700:	f800283a 	ret

00040704 <optimized_fixed_sin>:



fixed optimized_fixed_sin(register fixed x) {
   40704:	defffb04 	addi	sp,sp,-20
   40708:	df000415 	stw	fp,16(sp)
   4070c:	dcc00315 	stw	r19,12(sp)
   40710:	dc800215 	stw	r18,8(sp)
   40714:	dc400115 	stw	r17,4(sp)
   40718:	dc000015 	stw	r16,0(sp)
   4071c:	df000404 	addi	fp,sp,16
   40720:	2007883a 	mov	r3,r4

    num_fixed++;
   40724:	d0a6cf17 	ldw	r2,-25796(gp)
   40728:	10800044 	addi	r2,r2,1
   4072c:	d0a6cf15 	stw	r2,-25796(gp)

    register q_val = Q_N;
   40730:	d4a6cd17 	ldw	r18,-25804(gp)

    PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 1);
   40734:	0009883a 	mov	r4,zero
   40738:	00800234 	movhi	r2,8
   4073c:	10861504 	addi	r2,r2,6228
   40740:	11000035 	stwio	r4,0(r2)



    register fixed result = x;
   40744:	1823883a 	mov	r17,r3

    register fixed x2 = (x * x) >> q_val;
   40748:	18c5383a 	mul	r2,r3,r3
   4074c:	14a7d83a 	sra	r19,r2,r18



    register fixed powx = (x2*x) >> q_val;          //x^3
   40750:	98c5383a 	mul	r2,r19,r3
   40754:	14a1d83a 	sra	r16,r2,r18

    result -= (powx * 10923) >> 16 ;     //1/3!
   40758:	808aaae4 	muli	r2,r16,10923
   4075c:	1005d43a 	srai	r2,r2,16
   40760:	88a3c83a 	sub	r17,r17,r2



    powx = (powx * x2) >> q_val;            //x^5
   40764:	84c5383a 	mul	r2,r16,r19
   40768:	14a1d83a 	sra	r16,r2,r18

    result += (powx * 17) >> 11;          //1/5!
   4076c:	80800464 	muli	r2,r16,17
   40770:	1005d2fa 	srai	r2,r2,11
   40774:	88a3883a 	add	r17,r17,r2



    powx = (powx * x2) >> q_val;            //x^5
   40778:	84c5383a 	mul	r2,r16,r19
   4077c:	14a1d83a 	sra	r16,r2,r18

    result -= (powx * 13) >>16;          //1/7!
   40780:	80800364 	muli	r2,r16,13
   40784:	1005d43a 	srai	r2,r2,16
   40788:	88a3c83a 	sub	r17,r17,r2



    powx = (powx * x2) >> q_val;           //x^5
   4078c:	84c5383a 	mul	r2,r16,r19
   40790:	14a1d83a 	sra	r16,r2,r18

    result += (powx * 23) >> 23;         //1/9!
   40794:	808005e4 	muli	r2,r16,23
   40798:	1005d5fa 	srai	r2,r2,23
   4079c:	88a3883a 	add	r17,r17,r2

    PERF_END (PERFORMANCE_COUNTER_0_BASE, 1);
   407a0:	0007883a 	mov	r3,zero
   407a4:	00800234 	movhi	r2,8
   407a8:	10861404 	addi	r2,r2,6224
   407ac:	10c00035 	stwio	r3,0(r2)

    return result;
   407b0:	8805883a 	mov	r2,r17

}
   407b4:	e6fffc04 	addi	sp,fp,-16
   407b8:	df000417 	ldw	fp,16(sp)
   407bc:	dcc00317 	ldw	r19,12(sp)
   407c0:	dc800217 	ldw	r18,8(sp)
   407c4:	dc400117 	ldw	r17,4(sp)
   407c8:	dc000017 	ldw	r16,0(sp)
   407cc:	dec00504 	addi	sp,sp,20
   407d0:	f800283a 	ret

000407d4 <fixed_sin>:



fixed fixed_sin(fixed x, int terms) {
   407d4:	defff504 	addi	sp,sp,-44
   407d8:	dfc00a15 	stw	ra,40(sp)
   407dc:	df000915 	stw	fp,36(sp)
   407e0:	df000904 	addi	fp,sp,36
   407e4:	e13ffe15 	stw	r4,-8(fp)
   407e8:	e17fff15 	stw	r5,-4(fp)

    num_fixed++;
   407ec:	d0a6cf17 	ldw	r2,-25796(gp)
   407f0:	10800044 	addi	r2,r2,1
   407f4:	d0a6cf15 	stw	r2,-25796(gp)

    PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 1);
   407f8:	0007883a 	mov	r3,zero
   407fc:	00800234 	movhi	r2,8
   40800:	10861504 	addi	r2,r2,6228
   40804:	10c00035 	stwio	r3,0(r2)

    fixed result = x;
   40808:	e0bffe17 	ldw	r2,-8(fp)
   4080c:	e0bff715 	stw	r2,-36(fp)

    fixed x2 = FIXED_MULT(x,x);
   40810:	e17ffe17 	ldw	r5,-8(fp)
   40814:	e13ffe17 	ldw	r4,-8(fp)
   40818:	004042c0 	call	4042c <FIXED_MULT>
   4081c:	e0bffc15 	stw	r2,-16(fp)

    fixed num = x;
   40820:	e0bffe17 	ldw	r2,-8(fp)
   40824:	e0bff815 	stw	r2,-32(fp)

    int den = 1;
   40828:	00800044 	movi	r2,1
   4082c:	e0bff915 	stw	r2,-28(fp)

    int neg = 1;
   40830:	00800044 	movi	r2,1
   40834:	e0bffa15 	stw	r2,-24(fp)

    fixed term;

    for (int i = 1; i < terms; i++) {
   40838:	00800044 	movi	r2,1
   4083c:	e0bffb15 	stw	r2,-20(fp)
   40840:	00002306 	br	408d0 <fixed_sin+0xfc>

        num = FIXED_MULT(num, x2);
   40844:	e17ffc17 	ldw	r5,-16(fp)
   40848:	e13ff817 	ldw	r4,-32(fp)
   4084c:	004042c0 	call	4042c <FIXED_MULT>
   40850:	e0bff815 	stw	r2,-32(fp)

        den *= (2*i+1)*(2*i);
   40854:	e0bffb17 	ldw	r2,-20(fp)
   40858:	1085883a 	add	r2,r2,r2
   4085c:	10c00044 	addi	r3,r2,1
   40860:	e0bffb17 	ldw	r2,-20(fp)
   40864:	1085883a 	add	r2,r2,r2
   40868:	1885383a 	mul	r2,r3,r2
   4086c:	e0fff917 	ldw	r3,-28(fp)
   40870:	1885383a 	mul	r2,r3,r2
   40874:	e0bff915 	stw	r2,-28(fp)

        term = num / den; //fixed / int can just use direct integer divide. No need to shift at all.
   40878:	e17ff917 	ldw	r5,-28(fp)
   4087c:	e13ff817 	ldw	r4,-32(fp)
   40880:	00430180 	call	43018 <__divsi3>
   40884:	e0bffd15 	stw	r2,-12(fp)

        if (!neg)
   40888:	e0bffa17 	ldw	r2,-24(fp)
   4088c:	1000051e 	bne	r2,zero,408a4 <fixed_sin+0xd0>

            result += term;
   40890:	e0fff717 	ldw	r3,-36(fp)
   40894:	e0bffd17 	ldw	r2,-12(fp)
   40898:	1885883a 	add	r2,r3,r2
   4089c:	e0bff715 	stw	r2,-36(fp)
   408a0:	00000406 	br	408b4 <fixed_sin+0xe0>

        else

            result -= term;
   408a4:	e0fff717 	ldw	r3,-36(fp)
   408a8:	e0bffd17 	ldw	r2,-12(fp)
   408ac:	1885c83a 	sub	r2,r3,r2
   408b0:	e0bff715 	stw	r2,-36(fp)

        neg = !neg;
   408b4:	e0bffa17 	ldw	r2,-24(fp)
   408b8:	1005003a 	cmpeq	r2,r2,zero
   408bc:	10803fcc 	andi	r2,r2,255
   408c0:	e0bffa15 	stw	r2,-24(fp)

    int neg = 1;

    fixed term;

    for (int i = 1; i < terms; i++) {
   408c4:	e0bffb17 	ldw	r2,-20(fp)
   408c8:	10800044 	addi	r2,r2,1
   408cc:	e0bffb15 	stw	r2,-20(fp)
   408d0:	e0fffb17 	ldw	r3,-20(fp)
   408d4:	e0bfff17 	ldw	r2,-4(fp)
   408d8:	18bfda16 	blt	r3,r2,40844 <__alt_data_end+0xfffc0844>

        neg = !neg;

    }

    PERF_END (PERFORMANCE_COUNTER_0_BASE, 1);
   408dc:	0007883a 	mov	r3,zero
   408e0:	00800234 	movhi	r2,8
   408e4:	10861404 	addi	r2,r2,6224
   408e8:	10c00035 	stwio	r3,0(r2)

    return result;
   408ec:	e0bff717 	ldw	r2,-36(fp)

}
   408f0:	e037883a 	mov	sp,fp
   408f4:	dfc00117 	ldw	ra,4(sp)
   408f8:	df000017 	ldw	fp,0(sp)
   408fc:	dec00204 	addi	sp,sp,8
   40900:	f800283a 	ret

00040904 <test_sin_float>:

#define PI 3.14159265f

#define SAMPLES 20

void test_sin_float(int terms) {
   40904:	defff604 	addi	sp,sp,-40
   40908:	dfc00915 	stw	ra,36(sp)
   4090c:	df000815 	stw	fp,32(sp)
   40910:	df000804 	addi	fp,sp,32
   40914:	e13fff15 	stw	r4,-4(fp)

    float dx = 2*PI/SAMPLES;
   40918:	008fa874 	movhi	r2,16033
   4091c:	10b65f04 	addi	r2,r2,-9860
   40920:	e0bffd15 	stw	r2,-12(fp)

    float x = -PI;
   40924:	00b01274 	movhi	r2,49225
   40928:	1083f6c4 	addi	r2,r2,4059
   4092c:	e0bff915 	stw	r2,-28(fp)

    float err = 0;
   40930:	e03ffa15 	stw	zero,-24(fp)

    for (int i = 0; i < SAMPLES; i++) {
   40934:	e03ffb15 	stw	zero,-20(fp)
   40938:	00002806 	br	409dc <test_sin_float+0xd8>

        x += dx;
   4093c:	e0fff917 	ldw	r3,-28(fp)
   40940:	e0bffd17 	ldw	r2,-12(fp)
   40944:	1885ff72 	custom	253,r2,r3,r2
   40948:	e0bff915 	stw	r2,-28(fp)

        float result;

        if (terms >= 0)
   4094c:	e0bfff17 	ldw	r2,-4(fp)
   40950:	10000516 	blt	r2,zero,40968 <test_sin_float+0x64>

            result = float_sin(x, terms);
   40954:	e17fff17 	ldw	r5,-4(fp)
   40958:	e13ff917 	ldw	r4,-28(fp)
   4095c:	00404ac0 	call	404ac <float_sin>
   40960:	e0bffc15 	stw	r2,-16(fp)
   40964:	00000306 	br	40974 <test_sin_float+0x70>

        else

            result = optimized_float_sin(x);
   40968:	e13ff917 	ldw	r4,-28(fp)
   4096c:	00405e40 	call	405e4 <optimized_float_sin>
   40970:	e0bffc15 	stw	r2,-16(fp)

        float math_res = sin(x);
   40974:	e13ff917 	ldw	r4,-28(fp)
   40978:	0044d4c0 	call	44d4c <__extendsfdf2>
   4097c:	100b883a 	mov	r5,r2
   40980:	180d883a 	mov	r6,r3
   40984:	2809883a 	mov	r4,r5
   40988:	300b883a 	mov	r5,r6
   4098c:	0040f040 	call	40f04 <sin>
   40990:	100b883a 	mov	r5,r2
   40994:	180d883a 	mov	r6,r3
   40998:	2809883a 	mov	r4,r5
   4099c:	300b883a 	mov	r5,r6
   409a0:	0044e5c0 	call	44e5c <__truncdfsf2>
   409a4:	1007883a 	mov	r3,r2
   409a8:	e0fffe15 	stw	r3,-8(fp)

        err += float_abs(result - math_res);
   409ac:	e0fffc17 	ldw	r3,-16(fp)
   409b0:	e0bffe17 	ldw	r2,-8(fp)
   409b4:	1885ffb2 	custom	254,r2,r3,r2
   409b8:	1009883a 	mov	r4,r2
   409bc:	00404640 	call	40464 <float_abs>
   409c0:	1007883a 	mov	r3,r2
   409c4:	e0bffa17 	ldw	r2,-24(fp)
   409c8:	10c5ff72 	custom	253,r2,r2,r3
   409cc:	e0bffa15 	stw	r2,-24(fp)

    float x = -PI;

    float err = 0;

    for (int i = 0; i < SAMPLES; i++) {
   409d0:	e0bffb17 	ldw	r2,-20(fp)
   409d4:	10800044 	addi	r2,r2,1
   409d8:	e0bffb15 	stw	r2,-20(fp)
   409dc:	e0bffb17 	ldw	r2,-20(fp)
   409e0:	10800510 	cmplti	r2,r2,20
   409e4:	103fd51e 	bne	r2,zero,4093c <__alt_data_end+0xfffc093c>

        //printf("sin(%f) = %f\n", x, result);

    }

    err /= SAMPLES;
   409e8:	e0fffa17 	ldw	r3,-24(fp)
   409ec:	00906834 	movhi	r2,16800
   409f0:	1885fff2 	custom	255,r2,r3,r2
   409f4:	e0bffa15 	stw	r2,-24(fp)

    printf("SIN_FLOAT (N=%d, Terms=%d) Mean Error: %f\n", SAMPLES, terms, err);
   409f8:	e13ffa17 	ldw	r4,-24(fp)
   409fc:	0044d4c0 	call	44d4c <__extendsfdf2>
   40a00:	1009883a 	mov	r4,r2
   40a04:	180b883a 	mov	r5,r3
   40a08:	d9400015 	stw	r5,0(sp)
   40a0c:	200f883a 	mov	r7,r4
   40a10:	e1bfff17 	ldw	r6,-4(fp)
   40a14:	01400504 	movi	r5,20
   40a18:	01000174 	movhi	r4,5
   40a1c:	21090c04 	addi	r4,r4,9264
   40a20:	00450980 	call	45098 <printf>

}
   40a24:	0001883a 	nop
   40a28:	e037883a 	mov	sp,fp
   40a2c:	dfc00117 	ldw	ra,4(sp)
   40a30:	df000017 	ldw	fp,0(sp)
   40a34:	dec00204 	addi	sp,sp,8
   40a38:	f800283a 	ret

00040a3c <test_sin_fixed>:



float test_sin_fixed(int terms) {
   40a3c:	defff704 	addi	sp,sp,-36
   40a40:	dfc00815 	stw	ra,32(sp)
   40a44:	df000715 	stw	fp,28(sp)
   40a48:	df000704 	addi	fp,sp,28
   40a4c:	e13fff15 	stw	r4,-4(fp)

    float dx = 2*PI/SAMPLES;
   40a50:	008fa874 	movhi	r2,16033
   40a54:	10b65f04 	addi	r2,r2,-9860
   40a58:	e0bffd15 	stw	r2,-12(fp)

    float x = -PI;
   40a5c:	00b01274 	movhi	r2,49225
   40a60:	1083f6c4 	addi	r2,r2,4059
   40a64:	e0bff915 	stw	r2,-28(fp)

    float err = 0;
   40a68:	e03ffa15 	stw	zero,-24(fp)

    for (int i = 0; i < SAMPLES; i++) {
   40a6c:	e03ffb15 	stw	zero,-20(fp)
   40a70:	00003006 	br	40b34 <test_sin_fixed+0xf8>

        x += dx;
   40a74:	e0fff917 	ldw	r3,-28(fp)
   40a78:	e0bffd17 	ldw	r2,-12(fp)
   40a7c:	1885ff72 	custom	253,r2,r3,r2
   40a80:	e0bff915 	stw	r2,-28(fp)

        float result;

        if (terms >= 0)
   40a84:	e0bfff17 	ldw	r2,-4(fp)
   40a88:	10000916 	blt	r2,zero,40ab0 <test_sin_fixed+0x74>

            result = FIXED_TO_FLOAT(fixed_sin(FLOAT_TO_FIXED(x), terms));
   40a8c:	e13ff917 	ldw	r4,-28(fp)
   40a90:	00403bc0 	call	403bc <FLOAT_TO_FIXED>
   40a94:	e17fff17 	ldw	r5,-4(fp)
   40a98:	1009883a 	mov	r4,r2
   40a9c:	00407d40 	call	407d4 <fixed_sin>
   40aa0:	1009883a 	mov	r4,r2
   40aa4:	00403f00 	call	403f0 <FIXED_TO_FLOAT>
   40aa8:	e0bffc15 	stw	r2,-16(fp)
   40aac:	00000706 	br	40acc <test_sin_fixed+0x90>

        else

            result = FIXED_TO_FLOAT(optimized_fixed_sin(FLOAT_TO_FIXED(x)));
   40ab0:	e13ff917 	ldw	r4,-28(fp)
   40ab4:	00403bc0 	call	403bc <FLOAT_TO_FIXED>
   40ab8:	1009883a 	mov	r4,r2
   40abc:	00407040 	call	40704 <optimized_fixed_sin>
   40ac0:	1009883a 	mov	r4,r2
   40ac4:	00403f00 	call	403f0 <FIXED_TO_FLOAT>
   40ac8:	e0bffc15 	stw	r2,-16(fp)

        float math_res = sin(x);
   40acc:	e13ff917 	ldw	r4,-28(fp)
   40ad0:	0044d4c0 	call	44d4c <__extendsfdf2>
   40ad4:	100b883a 	mov	r5,r2
   40ad8:	180d883a 	mov	r6,r3
   40adc:	2809883a 	mov	r4,r5
   40ae0:	300b883a 	mov	r5,r6
   40ae4:	0040f040 	call	40f04 <sin>
   40ae8:	100b883a 	mov	r5,r2
   40aec:	180d883a 	mov	r6,r3
   40af0:	2809883a 	mov	r4,r5
   40af4:	300b883a 	mov	r5,r6
   40af8:	0044e5c0 	call	44e5c <__truncdfsf2>
   40afc:	1007883a 	mov	r3,r2
   40b00:	e0fffe15 	stw	r3,-8(fp)

        err += float_abs(result - math_res);
   40b04:	e0fffc17 	ldw	r3,-16(fp)
   40b08:	e0bffe17 	ldw	r2,-8(fp)
   40b0c:	1885ffb2 	custom	254,r2,r3,r2
   40b10:	1009883a 	mov	r4,r2
   40b14:	00404640 	call	40464 <float_abs>
   40b18:	1007883a 	mov	r3,r2
   40b1c:	e0bffa17 	ldw	r2,-24(fp)
   40b20:	10c5ff72 	custom	253,r2,r2,r3
   40b24:	e0bffa15 	stw	r2,-24(fp)

    float x = -PI;

    float err = 0;

    for (int i = 0; i < SAMPLES; i++) {
   40b28:	e0bffb17 	ldw	r2,-20(fp)
   40b2c:	10800044 	addi	r2,r2,1
   40b30:	e0bffb15 	stw	r2,-20(fp)
   40b34:	e0bffb17 	ldw	r2,-20(fp)
   40b38:	10800510 	cmplti	r2,r2,20
   40b3c:	103fcd1e 	bne	r2,zero,40a74 <__alt_data_end+0xfffc0a74>

        //printf("sin(%f) = %f\n", x, result);

    }

    err /= SAMPLES;
   40b40:	e0fffa17 	ldw	r3,-24(fp)
   40b44:	00906834 	movhi	r2,16800
   40b48:	1885fff2 	custom	255,r2,r3,r2
   40b4c:	e0bffa15 	stw	r2,-24(fp)

    return err;
   40b50:	e0bffa17 	ldw	r2,-24(fp)
   40b54:	1007883a 	mov	r3,r2

}
   40b58:	1805883a 	mov	r2,r3
   40b5c:	e037883a 	mov	sp,fp
   40b60:	dfc00117 	ldw	ra,4(sp)
   40b64:	df000017 	ldw	fp,0(sp)
   40b68:	dec00204 	addi	sp,sp,8
   40b6c:	f800283a 	ret

00040b70 <tune_QM_sin>:



/*Returns best M value*/

int tune_QM_sin(int terms) {
   40b70:	defff704 	addi	sp,sp,-36
   40b74:	dfc00815 	stw	ra,32(sp)
   40b78:	df000715 	stw	fp,28(sp)
   40b7c:	df000704 	addi	fp,sp,28
   40b80:	e13fff15 	stw	r4,-4(fp)

    float best_err = 1000000; //very large initial number
   40b84:	00925d34 	movhi	r2,18804
   40b88:	10890004 	addi	r2,r2,9216
   40b8c:	e0bffa15 	stw	r2,-24(fp)

    int bestM = 0;
   40b90:	e03ffb15 	stw	zero,-20(fp)

    for (int M = 1; M <= 31; M++) {
   40b94:	00800044 	movi	r2,1
   40b98:	e0bffc15 	stw	r2,-16(fp)
   40b9c:	00002006 	br	40c20 <tune_QM_sin+0xb0>

        int N = 31-M;
   40ba0:	00c007c4 	movi	r3,31
   40ba4:	e0bffc17 	ldw	r2,-16(fp)
   40ba8:	1885c83a 	sub	r2,r3,r2
   40bac:	e0bffd15 	stw	r2,-12(fp)

        SET_Q_FORMAT(M, N);
   40bb0:	e17ffd17 	ldw	r5,-12(fp)
   40bb4:	e13ffc17 	ldw	r4,-16(fp)
   40bb8:	00403740 	call	40374 <SET_Q_FORMAT>

        float err = test_sin_fixed(terms);
   40bbc:	e13fff17 	ldw	r4,-4(fp)
   40bc0:	0040a3c0 	call	40a3c <test_sin_fixed>
   40bc4:	e0bffe15 	stw	r2,-8(fp)

        if (err < best_err) {
   40bc8:	e0fffe17 	ldw	r3,-8(fp)
   40bcc:	e0bffa17 	ldw	r2,-24(fp)
   40bd0:	1885f9f2 	custom	231,r2,r3,r2
   40bd4:	10000f26 	beq	r2,zero,40c14 <tune_QM_sin+0xa4>

            best_err = err;
   40bd8:	e0bffe17 	ldw	r2,-8(fp)
   40bdc:	e0bffa15 	stw	r2,-24(fp)

            bestM = M;
   40be0:	e0bffc17 	ldw	r2,-16(fp)
   40be4:	e0bffb15 	stw	r2,-20(fp)

            printf("New Best (Q,M)=(%d,%d): Error = %f\n", M, N, best_err);
   40be8:	e13ffa17 	ldw	r4,-24(fp)
   40bec:	0044d4c0 	call	44d4c <__extendsfdf2>
   40bf0:	1009883a 	mov	r4,r2
   40bf4:	180b883a 	mov	r5,r3
   40bf8:	d9400015 	stw	r5,0(sp)
   40bfc:	200f883a 	mov	r7,r4
   40c00:	e1bffd17 	ldw	r6,-12(fp)
   40c04:	e17ffc17 	ldw	r5,-16(fp)
   40c08:	01000174 	movhi	r4,5
   40c0c:	21091704 	addi	r4,r4,9308
   40c10:	00450980 	call	45098 <printf>

    float best_err = 1000000; //very large initial number

    int bestM = 0;

    for (int M = 1; M <= 31; M++) {
   40c14:	e0bffc17 	ldw	r2,-16(fp)
   40c18:	10800044 	addi	r2,r2,1
   40c1c:	e0bffc15 	stw	r2,-16(fp)
   40c20:	e0bffc17 	ldw	r2,-16(fp)
   40c24:	10800810 	cmplti	r2,r2,32
   40c28:	103fdd1e 	bne	r2,zero,40ba0 <__alt_data_end+0xfffc0ba0>

        }

    }

    return bestM;
   40c2c:	e0bffb17 	ldw	r2,-20(fp)

}
   40c30:	e037883a 	mov	sp,fp
   40c34:	dfc00117 	ldw	ra,4(sp)
   40c38:	df000017 	ldw	fp,0(sp)
   40c3c:	dec00204 	addi	sp,sp,8
   40c40:	f800283a 	ret

00040c44 <main>:

#define NUM_ITEMS 100



int main(void){
   40c44:	defff404 	addi	sp,sp,-48
   40c48:	dfc00b15 	stw	ra,44(sp)
   40c4c:	df000a15 	stw	fp,40(sp)
   40c50:	dc000915 	stw	r16,36(sp)
   40c54:	df000a04 	addi	fp,sp,40



	volatile int a = 234;
   40c58:	00803a84 	movi	r2,234
   40c5c:	e0bffd15 	stw	r2,-12(fp)

	volatile int result;



	pre_measurement();
   40c60:	00402900 	call	40290 <pre_measurement>



	for (int i=0; i<NUM_ITEMS; i++){
   40c64:	e03ff915 	stw	zero,-28(fp)
   40c68:	00000f06 	br	40ca8 <main+0x64>

		PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 1);
   40c6c:	0007883a 	mov	r3,zero
   40c70:	00800234 	movhi	r2,8
   40c74:	10861504 	addi	r2,r2,6228
   40c78:	10c00035 	stwio	r3,0(r2)

		result = a^a;
   40c7c:	e0fffd17 	ldw	r3,-12(fp)
   40c80:	e0bffd17 	ldw	r2,-12(fp)
   40c84:	1884f03a 	xor	r2,r3,r2
   40c88:	e0bffe15 	stw	r2,-8(fp)

		PERF_END (PERFORMANCE_COUNTER_0_BASE, 1);
   40c8c:	0007883a 	mov	r3,zero
   40c90:	00800234 	movhi	r2,8
   40c94:	10861404 	addi	r2,r2,6224
   40c98:	10c00035 	stwio	r3,0(r2)

	pre_measurement();



	for (int i=0; i<NUM_ITEMS; i++){
   40c9c:	e0bff917 	ldw	r2,-28(fp)
   40ca0:	10800044 	addi	r2,r2,1
   40ca4:	e0bff915 	stw	r2,-28(fp)
   40ca8:	e0bff917 	ldw	r2,-28(fp)
   40cac:	10801910 	cmplti	r2,r2,100
   40cb0:	103fee1e 	bne	r2,zero,40c6c <__alt_data_end+0xfffc0c6c>

	}



	post_measurement();
   40cb4:	00402f00 	call	402f0 <post_measurement>



	int overhead_cycles = get_runtime(1)/NUM_ITEMS;
   40cb8:	01000044 	movi	r4,1
   40cbc:	00403300 	call	40330 <get_runtime>
   40cc0:	01401904 	movi	r5,100
   40cc4:	1009883a 	mov	r4,r2
   40cc8:	00430180 	call	43018 <__divsi3>
   40ccc:	e0bffb15 	stw	r2,-20(fp)



	printf("Mean Overhead Per PERF: %f\n", (float)overhead_cycles);
   40cd0:	e0bffb17 	ldw	r2,-20(fp)
   40cd4:	1005feb2 	custom	250,r2,r2,zero
   40cd8:	1009883a 	mov	r4,r2
   40cdc:	0044d4c0 	call	44d4c <__extendsfdf2>
   40ce0:	100d883a 	mov	r6,r2
   40ce4:	180f883a 	mov	r7,r3
   40ce8:	300b883a 	mov	r5,r6
   40cec:	380d883a 	mov	r6,r7
   40cf0:	01000174 	movhi	r4,5
   40cf4:	21092004 	addi	r4,r4,9344
   40cf8:	00450980 	call	45098 <printf>

	/*Inserting my code*/



    SET_Q_FORMAT(15, 14);
   40cfc:	01400384 	movi	r5,14
   40d00:	010003c4 	movi	r4,15
   40d04:	00403740 	call	40374 <SET_Q_FORMAT>

    //test_sin_float(5);

    //test_sin_fixed(20);

    int M = tune_QM_sin(5);
   40d08:	01000144 	movi	r4,5
   40d0c:	0040b700 	call	40b70 <tune_QM_sin>
   40d10:	e0bffc15 	stw	r2,-16(fp)

    SET_Q_FORMAT(M, 31-M); //this is what we use from now on
   40d14:	00c007c4 	movi	r3,31
   40d18:	e0bffc17 	ldw	r2,-16(fp)
   40d1c:	1885c83a 	sub	r2,r3,r2
   40d20:	100b883a 	mov	r5,r2
   40d24:	e13ffc17 	ldw	r4,-16(fp)
   40d28:	00403740 	call	40374 <SET_Q_FORMAT>



    for (int terms = 1; terms < 7; terms++) {
   40d2c:	00800044 	movi	r2,1
   40d30:	e0bffa15 	stw	r2,-24(fp)
   40d34:	00003a06 	br	40e20 <main+0x1dc>

        pre_measurement();
   40d38:	00402900 	call	40290 <pre_measurement>

        num_float = 0;
   40d3c:	d026d015 	stw	zero,-25792(gp)

        num_fixed = 0;
   40d40:	d026cf15 	stw	zero,-25796(gp)

        test_sin_float(terms);
   40d44:	e13ffa17 	ldw	r4,-24(fp)
   40d48:	00409040 	call	40904 <test_sin_float>

        printf("SIN_FIXED (Terms=%d, Samples=%d, M=%d, N=%d) Mean Error: %f\n", terms, SAMPLES, M, 31-M, test_sin_fixed(terms));
   40d4c:	00c007c4 	movi	r3,31
   40d50:	e0bffc17 	ldw	r2,-16(fp)
   40d54:	18a1c83a 	sub	r16,r3,r2
   40d58:	e13ffa17 	ldw	r4,-24(fp)
   40d5c:	0040a3c0 	call	40a3c <test_sin_fixed>
   40d60:	1007883a 	mov	r3,r2
   40d64:	1809883a 	mov	r4,r3
   40d68:	0044d4c0 	call	44d4c <__extendsfdf2>
   40d6c:	1009883a 	mov	r4,r2
   40d70:	180b883a 	mov	r5,r3
   40d74:	d9000115 	stw	r4,4(sp)
   40d78:	d9400215 	stw	r5,8(sp)
   40d7c:	dc000015 	stw	r16,0(sp)
   40d80:	e1fffc17 	ldw	r7,-16(fp)
   40d84:	01800504 	movi	r6,20
   40d88:	e17ffa17 	ldw	r5,-24(fp)
   40d8c:	01000174 	movhi	r4,5
   40d90:	21092704 	addi	r4,r4,9372
   40d94:	00450980 	call	45098 <printf>

        post_measurement();
   40d98:	00402f00 	call	402f0 <post_measurement>

        printf("Mean Fixed Sin Cycles (terms=%d): %d\n", terms, get_runtime(1)/num_fixed - overhead_cycles);
   40d9c:	01000044 	movi	r4,1
   40da0:	00403300 	call	40330 <get_runtime>
   40da4:	1007883a 	mov	r3,r2
   40da8:	d0a6cf17 	ldw	r2,-25796(gp)
   40dac:	100b883a 	mov	r5,r2
   40db0:	1809883a 	mov	r4,r3
   40db4:	00430180 	call	43018 <__divsi3>
   40db8:	1007883a 	mov	r3,r2
   40dbc:	e0bffb17 	ldw	r2,-20(fp)
   40dc0:	1885c83a 	sub	r2,r3,r2
   40dc4:	100d883a 	mov	r6,r2
   40dc8:	e17ffa17 	ldw	r5,-24(fp)
   40dcc:	01000174 	movhi	r4,5
   40dd0:	21093704 	addi	r4,r4,9436
   40dd4:	00450980 	call	45098 <printf>

        printf("Mean Float Sin Cycles (terms=%d): %d\n\n", terms, get_runtime(2)/num_float - overhead_cycles);
   40dd8:	01000084 	movi	r4,2
   40ddc:	00403300 	call	40330 <get_runtime>
   40de0:	1007883a 	mov	r3,r2
   40de4:	d0a6d017 	ldw	r2,-25792(gp)
   40de8:	100b883a 	mov	r5,r2
   40dec:	1809883a 	mov	r4,r3
   40df0:	00430180 	call	43018 <__divsi3>
   40df4:	1007883a 	mov	r3,r2
   40df8:	e0bffb17 	ldw	r2,-20(fp)
   40dfc:	1885c83a 	sub	r2,r3,r2
   40e00:	100d883a 	mov	r6,r2
   40e04:	e17ffa17 	ldw	r5,-24(fp)
   40e08:	01000174 	movhi	r4,5
   40e0c:	21094104 	addi	r4,r4,9476
   40e10:	00450980 	call	45098 <printf>

    SET_Q_FORMAT(M, 31-M); //this is what we use from now on



    for (int terms = 1; terms < 7; terms++) {
   40e14:	e0bffa17 	ldw	r2,-24(fp)
   40e18:	10800044 	addi	r2,r2,1
   40e1c:	e0bffa15 	stw	r2,-24(fp)
   40e20:	e0bffa17 	ldw	r2,-24(fp)
   40e24:	108001d0 	cmplti	r2,r2,7
   40e28:	103fc31e 	bne	r2,zero,40d38 <__alt_data_end+0xfffc0d38>



    /*For the optimized stuff*/

    pre_measurement();
   40e2c:	00402900 	call	40290 <pre_measurement>

    printf("Optimized Sine Test\n");
   40e30:	01000174 	movhi	r4,5
   40e34:	21094b04 	addi	r4,r4,9516
   40e38:	00451940 	call	45194 <puts>

    test_sin_float(-1); //-1 is flag for optimized test
   40e3c:	013fffc4 	movi	r4,-1
   40e40:	00409040 	call	40904 <test_sin_float>

    printf("SIN_FIXED (Optimized, Samples=%d, M=%d, N=%d) Mean Error: %f\n", SAMPLES, M, 31-M, test_sin_fixed(-1));
   40e44:	00c007c4 	movi	r3,31
   40e48:	e0bffc17 	ldw	r2,-16(fp)
   40e4c:	18a1c83a 	sub	r16,r3,r2
   40e50:	013fffc4 	movi	r4,-1
   40e54:	0040a3c0 	call	40a3c <test_sin_fixed>
   40e58:	1007883a 	mov	r3,r2
   40e5c:	1809883a 	mov	r4,r3
   40e60:	0044d4c0 	call	44d4c <__extendsfdf2>
   40e64:	1009883a 	mov	r4,r2
   40e68:	180b883a 	mov	r5,r3
   40e6c:	d9000015 	stw	r4,0(sp)
   40e70:	d9400115 	stw	r5,4(sp)
   40e74:	800f883a 	mov	r7,r16
   40e78:	e1bffc17 	ldw	r6,-16(fp)
   40e7c:	01400504 	movi	r5,20
   40e80:	01000174 	movhi	r4,5
   40e84:	21095004 	addi	r4,r4,9536
   40e88:	00450980 	call	45098 <printf>

    printf("Mean Fixed Sin Cycles (optimized): %d\n", get_runtime(1)/num_fixed - overhead_cycles);
   40e8c:	01000044 	movi	r4,1
   40e90:	00403300 	call	40330 <get_runtime>
   40e94:	1007883a 	mov	r3,r2
   40e98:	d0a6cf17 	ldw	r2,-25796(gp)
   40e9c:	100b883a 	mov	r5,r2
   40ea0:	1809883a 	mov	r4,r3
   40ea4:	00430180 	call	43018 <__divsi3>
   40ea8:	1007883a 	mov	r3,r2
   40eac:	e0bffb17 	ldw	r2,-20(fp)
   40eb0:	1885c83a 	sub	r2,r3,r2
   40eb4:	100b883a 	mov	r5,r2
   40eb8:	01000174 	movhi	r4,5
   40ebc:	21096004 	addi	r4,r4,9600
   40ec0:	00450980 	call	45098 <printf>

    printf("Mean Float Sin Cycles (optimized): %d\n\n", get_runtime(2)/num_float - overhead_cycles);
   40ec4:	01000084 	movi	r4,2
   40ec8:	00403300 	call	40330 <get_runtime>
   40ecc:	1007883a 	mov	r3,r2
   40ed0:	d0a6d017 	ldw	r2,-25792(gp)
   40ed4:	100b883a 	mov	r5,r2
   40ed8:	1809883a 	mov	r4,r3
   40edc:	00430180 	call	43018 <__divsi3>
   40ee0:	1007883a 	mov	r3,r2
   40ee4:	e0bffb17 	ldw	r2,-20(fp)
   40ee8:	1885c83a 	sub	r2,r3,r2
   40eec:	100b883a 	mov	r5,r2
   40ef0:	01000174 	movhi	r4,5
   40ef4:	21096a04 	addi	r4,r4,9640
   40ef8:	00450980 	call	45098 <printf>

    post_measurement();
   40efc:	00402f00 	call	402f0 <post_measurement>





	while(1);
   40f00:	003fff06 	br	40f00 <__alt_data_end+0xfffc0f00>

00040f04 <sin>:
   40f04:	00a00034 	movhi	r2,32768
   40f08:	defffa04 	addi	sp,sp,-24
   40f0c:	10bfffc4 	addi	r2,r2,-1
   40f10:	00cffa74 	movhi	r3,16361
   40f14:	dfc00515 	stw	ra,20(sp)
   40f18:	2884703a 	and	r2,r5,r2
   40f1c:	18c87ec4 	addi	r3,r3,8699
   40f20:	1880180e 	bge	r3,r2,40f84 <sin+0x80>
   40f24:	00dffc34 	movhi	r3,32752
   40f28:	18ffffc4 	addi	r3,r3,-1
   40f2c:	1880060e 	bge	r3,r2,40f48 <sin+0x44>
   40f30:	280f883a 	mov	r7,r5
   40f34:	200d883a 	mov	r6,r4
   40f38:	00442f40 	call	442f4 <__subdf3>
   40f3c:	dfc00517 	ldw	ra,20(sp)
   40f40:	dec00604 	addi	sp,sp,24
   40f44:	f800283a 	ret
   40f48:	d9800104 	addi	r6,sp,4
   40f4c:	0040ff40 	call	40ff4 <__ieee754_rem_pio2>
   40f50:	108000cc 	andi	r2,r2,3
   40f54:	00c00044 	movi	r3,1
   40f58:	10c01926 	beq	r2,r3,40fc0 <sin+0xbc>
   40f5c:	01000084 	movi	r4,2
   40f60:	11000f26 	beq	r2,r4,40fa0 <sin+0x9c>
   40f64:	10001c26 	beq	r2,zero,40fd8 <sin+0xd4>
   40f68:	d9800317 	ldw	r6,12(sp)
   40f6c:	d9c00417 	ldw	r7,16(sp)
   40f70:	d9000117 	ldw	r4,4(sp)
   40f74:	d9400217 	ldw	r5,8(sp)
   40f78:	00417600 	call	41760 <__kernel_cos>
   40f7c:	18e0003c 	xorhi	r3,r3,32768
   40f80:	003fee06 	br	40f3c <__alt_data_end+0xfffc0f3c>
   40f84:	d8000015 	stw	zero,0(sp)
   40f88:	000d883a 	mov	r6,zero
   40f8c:	000f883a 	mov	r7,zero
   40f90:	00429940 	call	42994 <__kernel_sin>
   40f94:	dfc00517 	ldw	ra,20(sp)
   40f98:	dec00604 	addi	sp,sp,24
   40f9c:	f800283a 	ret
   40fa0:	d9800317 	ldw	r6,12(sp)
   40fa4:	d9c00417 	ldw	r7,16(sp)
   40fa8:	d9000117 	ldw	r4,4(sp)
   40fac:	d9400217 	ldw	r5,8(sp)
   40fb0:	d8c00015 	stw	r3,0(sp)
   40fb4:	00429940 	call	42994 <__kernel_sin>
   40fb8:	18e0003c 	xorhi	r3,r3,32768
   40fbc:	003fdf06 	br	40f3c <__alt_data_end+0xfffc0f3c>
   40fc0:	d9800317 	ldw	r6,12(sp)
   40fc4:	d9c00417 	ldw	r7,16(sp)
   40fc8:	d9000117 	ldw	r4,4(sp)
   40fcc:	d9400217 	ldw	r5,8(sp)
   40fd0:	00417600 	call	41760 <__kernel_cos>
   40fd4:	003fd906 	br	40f3c <__alt_data_end+0xfffc0f3c>
   40fd8:	d9800317 	ldw	r6,12(sp)
   40fdc:	d9c00417 	ldw	r7,16(sp)
   40fe0:	d9000117 	ldw	r4,4(sp)
   40fe4:	d9400217 	ldw	r5,8(sp)
   40fe8:	d8c00015 	stw	r3,0(sp)
   40fec:	00429940 	call	42994 <__kernel_sin>
   40ff0:	003fd206 	br	40f3c <__alt_data_end+0xfffc0f3c>

00040ff4 <__ieee754_rem_pio2>:
   40ff4:	02200034 	movhi	r8,32768
   40ff8:	deffea04 	addi	sp,sp,-88
   40ffc:	423fffc4 	addi	r8,r8,-1
   41000:	00cffa74 	movhi	r3,16361
   41004:	ddc01315 	stw	r23,76(sp)
   41008:	dc400d15 	stw	r17,52(sp)
   4100c:	dfc01515 	stw	ra,84(sp)
   41010:	df001415 	stw	fp,80(sp)
   41014:	dd801215 	stw	r22,72(sp)
   41018:	dd401115 	stw	r21,68(sp)
   4101c:	dd001015 	stw	r20,64(sp)
   41020:	dcc00f15 	stw	r19,60(sp)
   41024:	dc800e15 	stw	r18,56(sp)
   41028:	dc000c15 	stw	r16,48(sp)
   4102c:	2a2e703a 	and	r23,r5,r8
   41030:	18c87ec4 	addi	r3,r3,8699
   41034:	2823883a 	mov	r17,r5
   41038:	1dc0790e 	bge	r3,r23,41220 <__ieee754_rem_pio2+0x22c>
   4103c:	009000f4 	movhi	r2,16387
   41040:	10b65ec4 	addi	r2,r2,-9861
   41044:	3021883a 	mov	r16,r6
   41048:	2027883a 	mov	r19,r4
   4104c:	15c02316 	blt	r2,r23,410dc <__ieee754_rem_pio2+0xe8>
   41050:	01cffe74 	movhi	r7,16377
   41054:	39c87ec4 	addi	r7,r7,8699
   41058:	01951034 	movhi	r6,21568
   4105c:	01417a0e 	bge	zero,r5,41648 <__ieee754_rem_pio2+0x654>
   41060:	00442f40 	call	442f4 <__subdf3>
   41064:	1025883a 	mov	r18,r2
   41068:	008ffe74 	movhi	r2,16377
   4106c:	10887ec4 	addi	r2,r2,8699
   41070:	1823883a 	mov	r17,r3
   41074:	b8808426 	beq	r23,r2,41288 <__ieee754_rem_pio2+0x294>
   41078:	018698b4 	movhi	r6,6754
   4107c:	01cf7474 	movhi	r7,15825
   41080:	3198cc44 	addi	r6,r6,25393
   41084:	39ed1844 	addi	r7,r7,-19359
   41088:	9009883a 	mov	r4,r18
   4108c:	180b883a 	mov	r5,r3
   41090:	00442f40 	call	442f4 <__subdf3>
   41094:	100d883a 	mov	r6,r2
   41098:	180f883a 	mov	r7,r3
   4109c:	9009883a 	mov	r4,r18
   410a0:	880b883a 	mov	r5,r17
   410a4:	80800015 	stw	r2,0(r16)
   410a8:	80c00115 	stw	r3,4(r16)
   410ac:	00442f40 	call	442f4 <__subdf3>
   410b0:	018698b4 	movhi	r6,6754
   410b4:	01cf7474 	movhi	r7,15825
   410b8:	3198cc44 	addi	r6,r6,25393
   410bc:	39ed1844 	addi	r7,r7,-19359
   410c0:	1009883a 	mov	r4,r2
   410c4:	180b883a 	mov	r5,r3
   410c8:	00442f40 	call	442f4 <__subdf3>
   410cc:	80800215 	stw	r2,8(r16)
   410d0:	80c00315 	stw	r3,12(r16)
   410d4:	00800044 	movi	r2,1
   410d8:	00005606 	br	41234 <__ieee754_rem_pio2+0x240>
   410dc:	00904e74 	movhi	r2,16697
   410e0:	10887ec4 	addi	r2,r2,8699
   410e4:	15c0830e 	bge	r2,r23,412f4 <__ieee754_rem_pio2+0x300>
   410e8:	009ffc34 	movhi	r2,32752
   410ec:	10bfffc4 	addi	r2,r2,-1
   410f0:	15c05c16 	blt	r2,r23,41264 <__ieee754_rem_pio2+0x270>
   410f4:	b829d53a 	srai	r20,r23,20
   410f8:	a53efa84 	addi	r20,r20,-1046
   410fc:	a024953a 	slli	r18,r20,20
   41100:	bca5c83a 	sub	r18,r23,r18
   41104:	900b883a 	mov	r5,r18
   41108:	0044bf00 	call	44bf0 <__fixdfsi>
   4110c:	1009883a 	mov	r4,r2
   41110:	0044c700 	call	44c70 <__floatsidf>
   41114:	9809883a 	mov	r4,r19
   41118:	900b883a 	mov	r5,r18
   4111c:	100d883a 	mov	r6,r2
   41120:	180f883a 	mov	r7,r3
   41124:	d8800215 	stw	r2,8(sp)
   41128:	d8c00315 	stw	r3,12(sp)
   4112c:	00442f40 	call	442f4 <__subdf3>
   41130:	000d883a 	mov	r6,zero
   41134:	01d05c34 	movhi	r7,16752
   41138:	1009883a 	mov	r4,r2
   4113c:	180b883a 	mov	r5,r3
   41140:	0043bdc0 	call	43bdc <__muldf3>
   41144:	180b883a 	mov	r5,r3
   41148:	1009883a 	mov	r4,r2
   4114c:	182b883a 	mov	r21,r3
   41150:	102d883a 	mov	r22,r2
   41154:	0044bf00 	call	44bf0 <__fixdfsi>
   41158:	1009883a 	mov	r4,r2
   4115c:	0044c700 	call	44c70 <__floatsidf>
   41160:	100d883a 	mov	r6,r2
   41164:	180f883a 	mov	r7,r3
   41168:	b009883a 	mov	r4,r22
   4116c:	a80b883a 	mov	r5,r21
   41170:	1027883a 	mov	r19,r2
   41174:	1825883a 	mov	r18,r3
   41178:	d8800415 	stw	r2,16(sp)
   4117c:	d8c00515 	stw	r3,20(sp)
   41180:	00442f40 	call	442f4 <__subdf3>
   41184:	000d883a 	mov	r6,zero
   41188:	01d05c34 	movhi	r7,16752
   4118c:	1009883a 	mov	r4,r2
   41190:	180b883a 	mov	r5,r3
   41194:	0043bdc0 	call	43bdc <__muldf3>
   41198:	000d883a 	mov	r6,zero
   4119c:	000f883a 	mov	r7,zero
   411a0:	1009883a 	mov	r4,r2
   411a4:	180b883a 	mov	r5,r3
   411a8:	d8800615 	stw	r2,24(sp)
   411ac:	d8c00715 	stw	r3,28(sp)
   411b0:	0043a780 	call	43a78 <__eqdf2>
   411b4:	1001431e 	bne	r2,zero,416c4 <__ieee754_rem_pio2+0x6d0>
   411b8:	000f883a 	mov	r7,zero
   411bc:	000d883a 	mov	r6,zero
   411c0:	9809883a 	mov	r4,r19
   411c4:	900b883a 	mov	r5,r18
   411c8:	0043a780 	call	43a78 <__eqdf2>
   411cc:	100f003a 	cmpeq	r7,r2,zero
   411d0:	00800084 	movi	r2,2
   411d4:	11cfc83a 	sub	r7,r2,r7
   411d8:	00800084 	movi	r2,2
   411dc:	d8800015 	stw	r2,0(sp)
   411e0:	00800174 	movhi	r2,5
   411e4:	10899404 	addi	r2,r2,9808
   411e8:	d8800115 	stw	r2,4(sp)
   411ec:	a00d883a 	mov	r6,r20
   411f0:	800b883a 	mov	r5,r16
   411f4:	d9000204 	addi	r4,sp,8
   411f8:	0041c040 	call	41c04 <__kernel_rem_pio2>
   411fc:	88000d0e 	bge	r17,zero,41234 <__ieee754_rem_pio2+0x240>
   41200:	81000117 	ldw	r4,4(r16)
   41204:	80c00317 	ldw	r3,12(r16)
   41208:	0085c83a 	sub	r2,zero,r2
   4120c:	2120003c 	xorhi	r4,r4,32768
   41210:	18e0003c 	xorhi	r3,r3,32768
   41214:	81000115 	stw	r4,4(r16)
   41218:	80c00315 	stw	r3,12(r16)
   4121c:	00000506 	br	41234 <__ieee754_rem_pio2+0x240>
   41220:	31000015 	stw	r4,0(r6)
   41224:	31400115 	stw	r5,4(r6)
   41228:	30000215 	stw	zero,8(r6)
   4122c:	30000315 	stw	zero,12(r6)
   41230:	0005883a 	mov	r2,zero
   41234:	dfc01517 	ldw	ra,84(sp)
   41238:	df001417 	ldw	fp,80(sp)
   4123c:	ddc01317 	ldw	r23,76(sp)
   41240:	dd801217 	ldw	r22,72(sp)
   41244:	dd401117 	ldw	r21,68(sp)
   41248:	dd001017 	ldw	r20,64(sp)
   4124c:	dcc00f17 	ldw	r19,60(sp)
   41250:	dc800e17 	ldw	r18,56(sp)
   41254:	dc400d17 	ldw	r17,52(sp)
   41258:	dc000c17 	ldw	r16,48(sp)
   4125c:	dec01604 	addi	sp,sp,88
   41260:	f800283a 	ret
   41264:	200d883a 	mov	r6,r4
   41268:	280f883a 	mov	r7,r5
   4126c:	00442f40 	call	442f4 <__subdf3>
   41270:	80800215 	stw	r2,8(r16)
   41274:	80800015 	stw	r2,0(r16)
   41278:	80c00315 	stw	r3,12(r16)
   4127c:	80c00115 	stw	r3,4(r16)
   41280:	0005883a 	mov	r2,zero
   41284:	003feb06 	br	41234 <__alt_data_end+0xfffc1234>
   41288:	01cf7474 	movhi	r7,15825
   4128c:	9009883a 	mov	r4,r18
   41290:	39ed1844 	addi	r7,r7,-19359
   41294:	01869834 	movhi	r6,6752
   41298:	180b883a 	mov	r5,r3
   4129c:	00442f40 	call	442f4 <__subdf3>
   412a0:	018b80f4 	movhi	r6,11779
   412a4:	01cee8f4 	movhi	r7,15267
   412a8:	319c1cc4 	addi	r6,r6,28787
   412ac:	39c66284 	addi	r7,r7,6538
   412b0:	1009883a 	mov	r4,r2
   412b4:	180b883a 	mov	r5,r3
   412b8:	1025883a 	mov	r18,r2
   412bc:	1823883a 	mov	r17,r3
   412c0:	00442f40 	call	442f4 <__subdf3>
   412c4:	100d883a 	mov	r6,r2
   412c8:	180f883a 	mov	r7,r3
   412cc:	9009883a 	mov	r4,r18
   412d0:	880b883a 	mov	r5,r17
   412d4:	80800015 	stw	r2,0(r16)
   412d8:	80c00115 	stw	r3,4(r16)
   412dc:	00442f40 	call	442f4 <__subdf3>
   412e0:	018b80f4 	movhi	r6,11779
   412e4:	01cee8f4 	movhi	r7,15267
   412e8:	319c1cc4 	addi	r6,r6,28787
   412ec:	39c66284 	addi	r7,r7,6538
   412f0:	003f7306 	br	410c0 <__alt_data_end+0xfffc10c0>
   412f4:	0042c600 	call	42c60 <fabs>
   412f8:	019b72b4 	movhi	r6,28106
   412fc:	01cff934 	movhi	r7,16356
   41300:	31b220c4 	addi	r6,r6,-14205
   41304:	39d7cc04 	addi	r7,r7,24368
   41308:	1009883a 	mov	r4,r2
   4130c:	180b883a 	mov	r5,r3
   41310:	102d883a 	mov	r22,r2
   41314:	182b883a 	mov	r21,r3
   41318:	0043bdc0 	call	43bdc <__muldf3>
   4131c:	000d883a 	mov	r6,zero
   41320:	01cff834 	movhi	r7,16352
   41324:	1009883a 	mov	r4,r2
   41328:	180b883a 	mov	r5,r3
   4132c:	00431cc0 	call	431cc <__adddf3>
   41330:	180b883a 	mov	r5,r3
   41334:	1009883a 	mov	r4,r2
   41338:	0044bf00 	call	44bf0 <__fixdfsi>
   4133c:	1009883a 	mov	r4,r2
   41340:	1025883a 	mov	r18,r2
   41344:	0044c700 	call	44c70 <__floatsidf>
   41348:	01cffe74 	movhi	r7,16377
   4134c:	39c87ec4 	addi	r7,r7,8699
   41350:	01951034 	movhi	r6,21568
   41354:	1009883a 	mov	r4,r2
   41358:	180b883a 	mov	r5,r3
   4135c:	1029883a 	mov	r20,r2
   41360:	1827883a 	mov	r19,r3
   41364:	0043bdc0 	call	43bdc <__muldf3>
   41368:	b009883a 	mov	r4,r22
   4136c:	a80b883a 	mov	r5,r21
   41370:	100d883a 	mov	r6,r2
   41374:	180f883a 	mov	r7,r3
   41378:	00442f40 	call	442f4 <__subdf3>
   4137c:	018698b4 	movhi	r6,6754
   41380:	01cf7474 	movhi	r7,15825
   41384:	a009883a 	mov	r4,r20
   41388:	3198cc44 	addi	r6,r6,25393
   4138c:	39ed1844 	addi	r7,r7,-19359
   41390:	980b883a 	mov	r5,r19
   41394:	1039883a 	mov	fp,r2
   41398:	d8c00815 	stw	r3,32(sp)
   4139c:	0043bdc0 	call	43bdc <__muldf3>
   413a0:	010007c4 	movi	r4,31
   413a4:	e017883a 	mov	r11,fp
   413a8:	da800817 	ldw	r10,32(sp)
   413ac:	102d883a 	mov	r22,r2
   413b0:	182b883a 	mov	r21,r3
   413b4:	24802816 	blt	r4,r18,41458 <__ieee754_rem_pio2+0x464>
   413b8:	913fffc4 	addi	r4,r18,-1
   413bc:	2109883a 	add	r4,r4,r4
   413c0:	01400174 	movhi	r5,5
   413c4:	2109883a 	add	r4,r4,r4
   413c8:	29497404 	addi	r5,r5,9680
   413cc:	2909883a 	add	r4,r5,r4
   413d0:	21000017 	ldw	r4,0(r4)
   413d4:	b9002026 	beq	r23,r4,41458 <__ieee754_rem_pio2+0x464>
   413d8:	100d883a 	mov	r6,r2
   413dc:	180f883a 	mov	r7,r3
   413e0:	e009883a 	mov	r4,fp
   413e4:	500b883a 	mov	r5,r10
   413e8:	da800b15 	stw	r10,44(sp)
   413ec:	df000a15 	stw	fp,40(sp)
   413f0:	00442f40 	call	442f4 <__subdf3>
   413f4:	da800b17 	ldw	r10,44(sp)
   413f8:	dac00a17 	ldw	r11,40(sp)
   413fc:	1019883a 	mov	r12,r2
   41400:	1813883a 	mov	r9,r3
   41404:	80800015 	stw	r2,0(r16)
   41408:	80c00115 	stw	r3,4(r16)
   4140c:	600d883a 	mov	r6,r12
   41410:	480f883a 	mov	r7,r9
   41414:	5809883a 	mov	r4,r11
   41418:	500b883a 	mov	r5,r10
   4141c:	da400b15 	stw	r9,44(sp)
   41420:	db000a15 	stw	r12,40(sp)
   41424:	00442f40 	call	442f4 <__subdf3>
   41428:	b00d883a 	mov	r6,r22
   4142c:	a80f883a 	mov	r7,r21
   41430:	1009883a 	mov	r4,r2
   41434:	180b883a 	mov	r5,r3
   41438:	00442f40 	call	442f4 <__subdf3>
   4143c:	80800215 	stw	r2,8(r16)
   41440:	80c00315 	stw	r3,12(r16)
   41444:	da400b17 	ldw	r9,44(sp)
   41448:	db000a17 	ldw	r12,40(sp)
   4144c:	88009f16 	blt	r17,zero,416cc <__ieee754_rem_pio2+0x6d8>
   41450:	9005883a 	mov	r2,r18
   41454:	003f7706 	br	41234 <__alt_data_end+0xfffc1234>
   41458:	d9400817 	ldw	r5,32(sp)
   4145c:	100d883a 	mov	r6,r2
   41460:	180f883a 	mov	r7,r3
   41464:	e009883a 	mov	r4,fp
   41468:	da800b15 	stw	r10,44(sp)
   4146c:	dac00a15 	stw	r11,40(sp)
   41470:	00442f40 	call	442f4 <__subdf3>
   41474:	1019883a 	mov	r12,r2
   41478:	1804d53a 	srli	r2,r3,20
   4147c:	b811d53a 	srai	r8,r23,20
   41480:	1813883a 	mov	r9,r3
   41484:	1081ffcc 	andi	r2,r2,2047
   41488:	80c00115 	stw	r3,4(r16)
   4148c:	83000015 	stw	r12,0(r16)
   41490:	4085c83a 	sub	r2,r8,r2
   41494:	00c00404 	movi	r3,16
   41498:	da800b17 	ldw	r10,44(sp)
   4149c:	dac00a17 	ldw	r11,40(sp)
   414a0:	18bfda0e 	bge	r3,r2,4140c <__alt_data_end+0xfffc140c>
   414a4:	01cf7474 	movhi	r7,15825
   414a8:	39ed1844 	addi	r7,r7,-19359
   414ac:	01869834 	movhi	r6,6752
   414b0:	a009883a 	mov	r4,r20
   414b4:	980b883a 	mov	r5,r19
   414b8:	da000a15 	stw	r8,40(sp)
   414bc:	0043bdc0 	call	43bdc <__muldf3>
   414c0:	d9400817 	ldw	r5,32(sp)
   414c4:	100d883a 	mov	r6,r2
   414c8:	180f883a 	mov	r7,r3
   414cc:	e009883a 	mov	r4,fp
   414d0:	102d883a 	mov	r22,r2
   414d4:	182b883a 	mov	r21,r3
   414d8:	00442f40 	call	442f4 <__subdf3>
   414dc:	d9400817 	ldw	r5,32(sp)
   414e0:	100d883a 	mov	r6,r2
   414e4:	180f883a 	mov	r7,r3
   414e8:	e009883a 	mov	r4,fp
   414ec:	182f883a 	mov	r23,r3
   414f0:	d8800915 	stw	r2,36(sp)
   414f4:	00442f40 	call	442f4 <__subdf3>
   414f8:	b00d883a 	mov	r6,r22
   414fc:	a80f883a 	mov	r7,r21
   41500:	1009883a 	mov	r4,r2
   41504:	180b883a 	mov	r5,r3
   41508:	00442f40 	call	442f4 <__subdf3>
   4150c:	018b80f4 	movhi	r6,11779
   41510:	01cee8f4 	movhi	r7,15267
   41514:	319c1cc4 	addi	r6,r6,28787
   41518:	39c66284 	addi	r7,r7,6538
   4151c:	a009883a 	mov	r4,r20
   41520:	980b883a 	mov	r5,r19
   41524:	102d883a 	mov	r22,r2
   41528:	182b883a 	mov	r21,r3
   4152c:	0043bdc0 	call	43bdc <__muldf3>
   41530:	b00d883a 	mov	r6,r22
   41534:	a80f883a 	mov	r7,r21
   41538:	1009883a 	mov	r4,r2
   4153c:	180b883a 	mov	r5,r3
   41540:	00442f40 	call	442f4 <__subdf3>
   41544:	d9000917 	ldw	r4,36(sp)
   41548:	100d883a 	mov	r6,r2
   4154c:	180f883a 	mov	r7,r3
   41550:	b80b883a 	mov	r5,r23
   41554:	102d883a 	mov	r22,r2
   41558:	182b883a 	mov	r21,r3
   4155c:	00442f40 	call	442f4 <__subdf3>
   41560:	1019883a 	mov	r12,r2
   41564:	1804d53a 	srli	r2,r3,20
   41568:	da000a17 	ldw	r8,40(sp)
   4156c:	83000015 	stw	r12,0(r16)
   41570:	1081ffcc 	andi	r2,r2,2047
   41574:	4091c83a 	sub	r8,r8,r2
   41578:	80c00115 	stw	r3,4(r16)
   4157c:	00800c44 	movi	r2,49
   41580:	1813883a 	mov	r9,r3
   41584:	1200730e 	bge	r2,r8,41754 <__ieee754_rem_pio2+0x760>
   41588:	01cee8f4 	movhi	r7,15267
   4158c:	39c66284 	addi	r7,r7,6538
   41590:	018b8034 	movhi	r6,11776
   41594:	a009883a 	mov	r4,r20
   41598:	980b883a 	mov	r5,r19
   4159c:	0043bdc0 	call	43bdc <__muldf3>
   415a0:	d9000917 	ldw	r4,36(sp)
   415a4:	100d883a 	mov	r6,r2
   415a8:	180f883a 	mov	r7,r3
   415ac:	b80b883a 	mov	r5,r23
   415b0:	102d883a 	mov	r22,r2
   415b4:	182b883a 	mov	r21,r3
   415b8:	00442f40 	call	442f4 <__subdf3>
   415bc:	d9000917 	ldw	r4,36(sp)
   415c0:	100d883a 	mov	r6,r2
   415c4:	180f883a 	mov	r7,r3
   415c8:	b80b883a 	mov	r5,r23
   415cc:	d8c00b15 	stw	r3,44(sp)
   415d0:	d8800a15 	stw	r2,40(sp)
   415d4:	00442f40 	call	442f4 <__subdf3>
   415d8:	b00d883a 	mov	r6,r22
   415dc:	a80f883a 	mov	r7,r21
   415e0:	1009883a 	mov	r4,r2
   415e4:	180b883a 	mov	r5,r3
   415e8:	00442f40 	call	442f4 <__subdf3>
   415ec:	01894834 	movhi	r6,9504
   415f0:	01ce5f34 	movhi	r7,14716
   415f4:	31927044 	addi	r6,r6,18881
   415f8:	39e0e684 	addi	r7,r7,-31846
   415fc:	a009883a 	mov	r4,r20
   41600:	980b883a 	mov	r5,r19
   41604:	102d883a 	mov	r22,r2
   41608:	182b883a 	mov	r21,r3
   4160c:	0043bdc0 	call	43bdc <__muldf3>
   41610:	b00d883a 	mov	r6,r22
   41614:	a80f883a 	mov	r7,r21
   41618:	1009883a 	mov	r4,r2
   4161c:	180b883a 	mov	r5,r3
   41620:	00442f40 	call	442f4 <__subdf3>
   41624:	dac00a17 	ldw	r11,40(sp)
   41628:	da800b17 	ldw	r10,44(sp)
   4162c:	102d883a 	mov	r22,r2
   41630:	182b883a 	mov	r21,r3
   41634:	100d883a 	mov	r6,r2
   41638:	180f883a 	mov	r7,r3
   4163c:	5809883a 	mov	r4,r11
   41640:	500b883a 	mov	r5,r10
   41644:	003f6a06 	br	413f0 <__alt_data_end+0xfffc13f0>
   41648:	00431cc0 	call	431cc <__adddf3>
   4164c:	1025883a 	mov	r18,r2
   41650:	008ffe74 	movhi	r2,16377
   41654:	10887ec4 	addi	r2,r2,8699
   41658:	1823883a 	mov	r17,r3
   4165c:	b8802226 	beq	r23,r2,416e8 <__ieee754_rem_pio2+0x6f4>
   41660:	018698b4 	movhi	r6,6754
   41664:	01cf7474 	movhi	r7,15825
   41668:	3198cc44 	addi	r6,r6,25393
   4166c:	39ed1844 	addi	r7,r7,-19359
   41670:	9009883a 	mov	r4,r18
   41674:	180b883a 	mov	r5,r3
   41678:	00431cc0 	call	431cc <__adddf3>
   4167c:	100d883a 	mov	r6,r2
   41680:	180f883a 	mov	r7,r3
   41684:	9009883a 	mov	r4,r18
   41688:	880b883a 	mov	r5,r17
   4168c:	80800015 	stw	r2,0(r16)
   41690:	80c00115 	stw	r3,4(r16)
   41694:	00442f40 	call	442f4 <__subdf3>
   41698:	018698b4 	movhi	r6,6754
   4169c:	01cf7474 	movhi	r7,15825
   416a0:	3198cc44 	addi	r6,r6,25393
   416a4:	39ed1844 	addi	r7,r7,-19359
   416a8:	1009883a 	mov	r4,r2
   416ac:	180b883a 	mov	r5,r3
   416b0:	00431cc0 	call	431cc <__adddf3>
   416b4:	80800215 	stw	r2,8(r16)
   416b8:	80c00315 	stw	r3,12(r16)
   416bc:	00bfffc4 	movi	r2,-1
   416c0:	003edc06 	br	41234 <__alt_data_end+0xfffc1234>
   416c4:	01c000c4 	movi	r7,3
   416c8:	003ec306 	br	411d8 <__alt_data_end+0xfffc11d8>
   416cc:	4a60003c 	xorhi	r9,r9,32768
   416d0:	18e0003c 	xorhi	r3,r3,32768
   416d4:	83000015 	stw	r12,0(r16)
   416d8:	82400115 	stw	r9,4(r16)
   416dc:	80c00315 	stw	r3,12(r16)
   416e0:	0485c83a 	sub	r2,zero,r18
   416e4:	003ed306 	br	41234 <__alt_data_end+0xfffc1234>
   416e8:	01cf7474 	movhi	r7,15825
   416ec:	9009883a 	mov	r4,r18
   416f0:	39ed1844 	addi	r7,r7,-19359
   416f4:	01869834 	movhi	r6,6752
   416f8:	180b883a 	mov	r5,r3
   416fc:	00431cc0 	call	431cc <__adddf3>
   41700:	018b80f4 	movhi	r6,11779
   41704:	01cee8f4 	movhi	r7,15267
   41708:	319c1cc4 	addi	r6,r6,28787
   4170c:	39c66284 	addi	r7,r7,6538
   41710:	1009883a 	mov	r4,r2
   41714:	180b883a 	mov	r5,r3
   41718:	1025883a 	mov	r18,r2
   4171c:	1823883a 	mov	r17,r3
   41720:	00431cc0 	call	431cc <__adddf3>
   41724:	100d883a 	mov	r6,r2
   41728:	180f883a 	mov	r7,r3
   4172c:	9009883a 	mov	r4,r18
   41730:	880b883a 	mov	r5,r17
   41734:	80800015 	stw	r2,0(r16)
   41738:	80c00115 	stw	r3,4(r16)
   4173c:	00442f40 	call	442f4 <__subdf3>
   41740:	018b80f4 	movhi	r6,11779
   41744:	01cee8f4 	movhi	r7,15267
   41748:	319c1cc4 	addi	r6,r6,28787
   4174c:	39c66284 	addi	r7,r7,6538
   41750:	003fd506 	br	416a8 <__alt_data_end+0xfffc16a8>
   41754:	dac00917 	ldw	r11,36(sp)
   41758:	b815883a 	mov	r10,r23
   4175c:	003f2b06 	br	4140c <__alt_data_end+0xfffc140c>

00041760 <__kernel_cos>:
   41760:	defff304 	addi	sp,sp,-52
   41764:	dc000315 	stw	r16,12(sp)
   41768:	04200034 	movhi	r16,32768
   4176c:	843fffc4 	addi	r16,r16,-1
   41770:	008f9034 	movhi	r2,15936
   41774:	df000b15 	stw	fp,44(sp)
   41778:	ddc00a15 	stw	r23,40(sp)
   4177c:	dd800915 	stw	r22,36(sp)
   41780:	dcc00615 	stw	r19,24(sp)
   41784:	dfc00c15 	stw	ra,48(sp)
   41788:	dd400815 	stw	r21,32(sp)
   4178c:	dd000715 	stw	r20,28(sp)
   41790:	dc800515 	stw	r18,20(sp)
   41794:	dc400415 	stw	r17,16(sp)
   41798:	2c20703a 	and	r16,r5,r16
   4179c:	10bfffc4 	addi	r2,r2,-1
   417a0:	2827883a 	mov	r19,r5
   417a4:	202d883a 	mov	r22,r4
   417a8:	302f883a 	mov	r23,r6
   417ac:	3839883a 	mov	fp,r7
   417b0:	14007516 	blt	r2,r16,41988 <__kernel_cos+0x228>
   417b4:	0044bf00 	call	44bf0 <__fixdfsi>
   417b8:	10010f26 	beq	r2,zero,41bf8 <__kernel_cos+0x498>
   417bc:	b00d883a 	mov	r6,r22
   417c0:	980f883a 	mov	r7,r19
   417c4:	b009883a 	mov	r4,r22
   417c8:	980b883a 	mov	r5,r19
   417cc:	0043bdc0 	call	43bdc <__muldf3>
   417d0:	01afa234 	movhi	r6,48776
   417d4:	01ef6a74 	movhi	r7,48553
   417d8:	318e3504 	addi	r6,r6,14548
   417dc:	39feba44 	addi	r7,r7,-1303
   417e0:	1009883a 	mov	r4,r2
   417e4:	180b883a 	mov	r5,r3
   417e8:	102b883a 	mov	r21,r2
   417ec:	1829883a 	mov	r20,r3
   417f0:	0043bdc0 	call	43bdc <__muldf3>
   417f4:	01af6d74 	movhi	r6,48565
   417f8:	01cf88b4 	movhi	r7,15906
   417fc:	31ac7104 	addi	r6,r6,-20028
   41800:	39fba784 	addi	r7,r7,-4450
   41804:	1009883a 	mov	r4,r2
   41808:	180b883a 	mov	r5,r3
   4180c:	00431cc0 	call	431cc <__adddf3>
   41810:	a80d883a 	mov	r6,r21
   41814:	a00f883a 	mov	r7,r20
   41818:	1009883a 	mov	r4,r2
   4181c:	180b883a 	mov	r5,r3
   41820:	0043bdc0 	call	43bdc <__muldf3>
   41824:	01a02734 	movhi	r6,32924
   41828:	01cfa4b4 	movhi	r7,16018
   4182c:	3194ab44 	addi	r6,r6,21165
   41830:	39df93c4 	addi	r7,r7,32335
   41834:	1009883a 	mov	r4,r2
   41838:	180b883a 	mov	r5,r3
   4183c:	00442f40 	call	442f4 <__subdf3>
   41840:	a80d883a 	mov	r6,r21
   41844:	a00f883a 	mov	r7,r20
   41848:	1009883a 	mov	r4,r2
   4184c:	180b883a 	mov	r5,r3
   41850:	0043bdc0 	call	43bdc <__muldf3>
   41854:	018672f4 	movhi	r6,6603
   41858:	01cfbeb4 	movhi	r7,16122
   4185c:	31856404 	addi	r6,r6,5520
   41860:	39c06804 	addi	r7,r7,416
   41864:	1009883a 	mov	r4,r2
   41868:	180b883a 	mov	r5,r3
   4186c:	00431cc0 	call	431cc <__adddf3>
   41870:	a80d883a 	mov	r6,r21
   41874:	a00f883a 	mov	r7,r20
   41878:	1009883a 	mov	r4,r2
   4187c:	180b883a 	mov	r5,r3
   41880:	0043bdc0 	call	43bdc <__muldf3>
   41884:	0185b074 	movhi	r6,5825
   41888:	01cfd5f4 	movhi	r7,16215
   4188c:	31945dc4 	addi	r6,r6,20855
   41890:	39f05b04 	addi	r7,r7,-16020
   41894:	1009883a 	mov	r4,r2
   41898:	180b883a 	mov	r5,r3
   4189c:	00442f40 	call	442f4 <__subdf3>
   418a0:	a80d883a 	mov	r6,r21
   418a4:	a00f883a 	mov	r7,r20
   418a8:	1009883a 	mov	r4,r2
   418ac:	180b883a 	mov	r5,r3
   418b0:	0043bdc0 	call	43bdc <__muldf3>
   418b4:	01955574 	movhi	r6,21845
   418b8:	01cfe974 	movhi	r7,16293
   418bc:	31955304 	addi	r6,r6,21836
   418c0:	39d55544 	addi	r7,r7,21845
   418c4:	1009883a 	mov	r4,r2
   418c8:	180b883a 	mov	r5,r3
   418cc:	00431cc0 	call	431cc <__adddf3>
   418d0:	a80d883a 	mov	r6,r21
   418d4:	a00f883a 	mov	r7,r20
   418d8:	1009883a 	mov	r4,r2
   418dc:	180b883a 	mov	r5,r3
   418e0:	0043bdc0 	call	43bdc <__muldf3>
   418e4:	1017883a 	mov	r11,r2
   418e8:	1815883a 	mov	r10,r3
   418ec:	a809883a 	mov	r4,r21
   418f0:	a00b883a 	mov	r5,r20
   418f4:	000d883a 	mov	r6,zero
   418f8:	01cff834 	movhi	r7,16352
   418fc:	da800215 	stw	r10,8(sp)
   41900:	dac00115 	stw	r11,4(sp)
   41904:	0043bdc0 	call	43bdc <__muldf3>
   41908:	dac00117 	ldw	r11,4(sp)
   4190c:	da800217 	ldw	r10,8(sp)
   41910:	a809883a 	mov	r4,r21
   41914:	580d883a 	mov	r6,r11
   41918:	500f883a 	mov	r7,r10
   4191c:	a00b883a 	mov	r5,r20
   41920:	1023883a 	mov	r17,r2
   41924:	1821883a 	mov	r16,r3
   41928:	0043bdc0 	call	43bdc <__muldf3>
   4192c:	b80d883a 	mov	r6,r23
   41930:	e00f883a 	mov	r7,fp
   41934:	b009883a 	mov	r4,r22
   41938:	980b883a 	mov	r5,r19
   4193c:	1029883a 	mov	r20,r2
   41940:	1825883a 	mov	r18,r3
   41944:	0043bdc0 	call	43bdc <__muldf3>
   41948:	a009883a 	mov	r4,r20
   4194c:	900b883a 	mov	r5,r18
   41950:	100d883a 	mov	r6,r2
   41954:	180f883a 	mov	r7,r3
   41958:	00442f40 	call	442f4 <__subdf3>
   4195c:	8809883a 	mov	r4,r17
   41960:	800b883a 	mov	r5,r16
   41964:	100d883a 	mov	r6,r2
   41968:	180f883a 	mov	r7,r3
   4196c:	00442f40 	call	442f4 <__subdf3>
   41970:	100d883a 	mov	r6,r2
   41974:	180f883a 	mov	r7,r3
   41978:	0009883a 	mov	r4,zero
   4197c:	014ffc34 	movhi	r5,16368
   41980:	00442f40 	call	442f4 <__subdf3>
   41984:	00008b06 	br	41bb4 <__kernel_cos+0x454>
   41988:	200d883a 	mov	r6,r4
   4198c:	280f883a 	mov	r7,r5
   41990:	0043bdc0 	call	43bdc <__muldf3>
   41994:	01afa234 	movhi	r6,48776
   41998:	01ef6a74 	movhi	r7,48553
   4199c:	318e3504 	addi	r6,r6,14548
   419a0:	39feba44 	addi	r7,r7,-1303
   419a4:	1009883a 	mov	r4,r2
   419a8:	180b883a 	mov	r5,r3
   419ac:	1025883a 	mov	r18,r2
   419b0:	1823883a 	mov	r17,r3
   419b4:	0043bdc0 	call	43bdc <__muldf3>
   419b8:	01af6d74 	movhi	r6,48565
   419bc:	01cf88b4 	movhi	r7,15906
   419c0:	31ac7104 	addi	r6,r6,-20028
   419c4:	39fba784 	addi	r7,r7,-4450
   419c8:	1009883a 	mov	r4,r2
   419cc:	180b883a 	mov	r5,r3
   419d0:	00431cc0 	call	431cc <__adddf3>
   419d4:	900d883a 	mov	r6,r18
   419d8:	880f883a 	mov	r7,r17
   419dc:	1009883a 	mov	r4,r2
   419e0:	180b883a 	mov	r5,r3
   419e4:	0043bdc0 	call	43bdc <__muldf3>
   419e8:	01a02734 	movhi	r6,32924
   419ec:	01cfa4b4 	movhi	r7,16018
   419f0:	3194ab44 	addi	r6,r6,21165
   419f4:	39df93c4 	addi	r7,r7,32335
   419f8:	1009883a 	mov	r4,r2
   419fc:	180b883a 	mov	r5,r3
   41a00:	00442f40 	call	442f4 <__subdf3>
   41a04:	900d883a 	mov	r6,r18
   41a08:	880f883a 	mov	r7,r17
   41a0c:	1009883a 	mov	r4,r2
   41a10:	180b883a 	mov	r5,r3
   41a14:	0043bdc0 	call	43bdc <__muldf3>
   41a18:	018672f4 	movhi	r6,6603
   41a1c:	01cfbeb4 	movhi	r7,16122
   41a20:	31856404 	addi	r6,r6,5520
   41a24:	39c06804 	addi	r7,r7,416
   41a28:	1009883a 	mov	r4,r2
   41a2c:	180b883a 	mov	r5,r3
   41a30:	00431cc0 	call	431cc <__adddf3>
   41a34:	900d883a 	mov	r6,r18
   41a38:	880f883a 	mov	r7,r17
   41a3c:	1009883a 	mov	r4,r2
   41a40:	180b883a 	mov	r5,r3
   41a44:	0043bdc0 	call	43bdc <__muldf3>
   41a48:	0185b074 	movhi	r6,5825
   41a4c:	01cfd5f4 	movhi	r7,16215
   41a50:	31945dc4 	addi	r6,r6,20855
   41a54:	39f05b04 	addi	r7,r7,-16020
   41a58:	1009883a 	mov	r4,r2
   41a5c:	180b883a 	mov	r5,r3
   41a60:	00442f40 	call	442f4 <__subdf3>
   41a64:	900d883a 	mov	r6,r18
   41a68:	880f883a 	mov	r7,r17
   41a6c:	1009883a 	mov	r4,r2
   41a70:	180b883a 	mov	r5,r3
   41a74:	0043bdc0 	call	43bdc <__muldf3>
   41a78:	01955574 	movhi	r6,21845
   41a7c:	01cfe974 	movhi	r7,16293
   41a80:	31955304 	addi	r6,r6,21836
   41a84:	39d55544 	addi	r7,r7,21845
   41a88:	1009883a 	mov	r4,r2
   41a8c:	180b883a 	mov	r5,r3
   41a90:	00431cc0 	call	431cc <__adddf3>
   41a94:	900d883a 	mov	r6,r18
   41a98:	880f883a 	mov	r7,r17
   41a9c:	1009883a 	mov	r4,r2
   41aa0:	180b883a 	mov	r5,r3
   41aa4:	0043bdc0 	call	43bdc <__muldf3>
   41aa8:	1013883a 	mov	r9,r2
   41aac:	1017883a 	mov	r11,r2
   41ab0:	008ff4f4 	movhi	r2,16339
   41ab4:	108ccc84 	addi	r2,r2,13106
   41ab8:	1811883a 	mov	r8,r3
   41abc:	902b883a 	mov	r21,r18
   41ac0:	8829883a 	mov	r20,r17
   41ac4:	1815883a 	mov	r10,r3
   41ac8:	143f880e 	bge	r2,r16,418ec <__alt_data_end+0xfffc18ec>
   41acc:	008ffa74 	movhi	r2,16361
   41ad0:	14004416 	blt	r2,r16,41be4 <__kernel_cos+0x484>
   41ad4:	00bff834 	movhi	r2,65504
   41ad8:	80a1883a 	add	r16,r16,r2
   41adc:	000d883a 	mov	r6,zero
   41ae0:	800f883a 	mov	r7,r16
   41ae4:	0009883a 	mov	r4,zero
   41ae8:	014ffc34 	movhi	r5,16368
   41aec:	da400115 	stw	r9,4(sp)
   41af0:	d8c00215 	stw	r3,8(sp)
   41af4:	00442f40 	call	442f4 <__subdf3>
   41af8:	da000217 	ldw	r8,8(sp)
   41afc:	da400117 	ldw	r9,4(sp)
   41b00:	102b883a 	mov	r21,r2
   41b04:	d8c00015 	stw	r3,0(sp)
   41b08:	9009883a 	mov	r4,r18
   41b0c:	880b883a 	mov	r5,r17
   41b10:	000d883a 	mov	r6,zero
   41b14:	01cff834 	movhi	r7,16352
   41b18:	da000215 	stw	r8,8(sp)
   41b1c:	da400115 	stw	r9,4(sp)
   41b20:	0043bdc0 	call	43bdc <__muldf3>
   41b24:	800f883a 	mov	r7,r16
   41b28:	000d883a 	mov	r6,zero
   41b2c:	1009883a 	mov	r4,r2
   41b30:	180b883a 	mov	r5,r3
   41b34:	00442f40 	call	442f4 <__subdf3>
   41b38:	da400117 	ldw	r9,4(sp)
   41b3c:	da000217 	ldw	r8,8(sp)
   41b40:	9009883a 	mov	r4,r18
   41b44:	480d883a 	mov	r6,r9
   41b48:	400f883a 	mov	r7,r8
   41b4c:	880b883a 	mov	r5,r17
   41b50:	1029883a 	mov	r20,r2
   41b54:	1821883a 	mov	r16,r3
   41b58:	0043bdc0 	call	43bdc <__muldf3>
   41b5c:	b80d883a 	mov	r6,r23
   41b60:	e00f883a 	mov	r7,fp
   41b64:	b009883a 	mov	r4,r22
   41b68:	980b883a 	mov	r5,r19
   41b6c:	1025883a 	mov	r18,r2
   41b70:	1823883a 	mov	r17,r3
   41b74:	0043bdc0 	call	43bdc <__muldf3>
   41b78:	100d883a 	mov	r6,r2
   41b7c:	180f883a 	mov	r7,r3
   41b80:	9009883a 	mov	r4,r18
   41b84:	880b883a 	mov	r5,r17
   41b88:	00442f40 	call	442f4 <__subdf3>
   41b8c:	100d883a 	mov	r6,r2
   41b90:	180f883a 	mov	r7,r3
   41b94:	a009883a 	mov	r4,r20
   41b98:	800b883a 	mov	r5,r16
   41b9c:	00442f40 	call	442f4 <__subdf3>
   41ba0:	d9400017 	ldw	r5,0(sp)
   41ba4:	100d883a 	mov	r6,r2
   41ba8:	180f883a 	mov	r7,r3
   41bac:	a809883a 	mov	r4,r21
   41bb0:	00442f40 	call	442f4 <__subdf3>
   41bb4:	dfc00c17 	ldw	ra,48(sp)
   41bb8:	df000b17 	ldw	fp,44(sp)
   41bbc:	ddc00a17 	ldw	r23,40(sp)
   41bc0:	dd800917 	ldw	r22,36(sp)
   41bc4:	dd400817 	ldw	r21,32(sp)
   41bc8:	dd000717 	ldw	r20,28(sp)
   41bcc:	dcc00617 	ldw	r19,24(sp)
   41bd0:	dc800517 	ldw	r18,20(sp)
   41bd4:	dc400417 	ldw	r17,16(sp)
   41bd8:	dc000317 	ldw	r16,12(sp)
   41bdc:	dec00d04 	addi	sp,sp,52
   41be0:	f800283a 	ret
   41be4:	008ff9f4 	movhi	r2,16359
   41be8:	002b883a 	mov	r21,zero
   41bec:	d8800015 	stw	r2,0(sp)
   41bf0:	040ff4b4 	movhi	r16,16338
   41bf4:	003fc406 	br	41b08 <__alt_data_end+0xfffc1b08>
   41bf8:	0005883a 	mov	r2,zero
   41bfc:	00cffc34 	movhi	r3,16368
   41c00:	003fec06 	br	41bb4 <__alt_data_end+0xfffc1bb4>

00041c04 <__kernel_rem_pio2>:
   41c04:	deff5a04 	addi	sp,sp,-664
   41c08:	da00a617 	ldw	r8,664(sp)
   41c0c:	00c00174 	movhi	r3,5
   41c10:	18c9e604 	addi	r3,r3,10136
   41c14:	4205883a 	add	r2,r8,r8
   41c18:	1085883a 	add	r2,r2,r2
   41c1c:	1885883a 	add	r2,r3,r2
   41c20:	d9008e15 	stw	r4,568(sp)
   41c24:	d9408f15 	stw	r5,572(sp)
   41c28:	313fff44 	addi	r4,r6,-3
   41c2c:	01400604 	movi	r5,24
   41c30:	dd80a215 	stw	r22,648(sp)
   41c34:	dc009c15 	stw	r16,624(sp)
   41c38:	dfc0a515 	stw	ra,660(sp)
   41c3c:	df00a415 	stw	fp,656(sp)
   41c40:	ddc0a315 	stw	r23,652(sp)
   41c44:	dd40a115 	stw	r21,644(sp)
   41c48:	dd00a015 	stw	r20,640(sp)
   41c4c:	dcc09f15 	stw	r19,636(sp)
   41c50:	dc809e15 	stw	r18,632(sp)
   41c54:	dc409d15 	stw	r17,628(sp)
   41c58:	3021883a 	mov	r16,r6
   41c5c:	d9c09315 	stw	r7,588(sp)
   41c60:	15800017 	ldw	r22,0(r2)
   41c64:	00430180 	call	43018 <__divsi3>
   41c68:	da009317 	ldw	r8,588(sp)
   41c6c:	d8809215 	stw	r2,584(sp)
   41c70:	423fffc4 	addi	r8,r8,-1
   41c74:	da008d15 	stw	r8,564(sp)
   41c78:	10033b16 	blt	r2,zero,42968 <__kernel_rem_pio2+0xd64>
   41c7c:	da009217 	ldw	r8,584(sp)
   41c80:	d9009217 	ldw	r4,584(sp)
   41c84:	42000044 	addi	r8,r8,1
   41c88:	40fffa24 	muli	r3,r8,-24
   41c8c:	da009515 	stw	r8,596(sp)
   41c90:	da008d17 	ldw	r8,564(sp)
   41c94:	1c07883a 	add	r3,r3,r16
   41c98:	d8c09015 	stw	r3,576(sp)
   41c9c:	b205883a 	add	r2,r22,r8
   41ca0:	2223c83a 	sub	r17,r4,r8
   41ca4:	10001016 	blt	r2,zero,41ce8 <__kernel_rem_pio2+0xe4>
   41ca8:	da00a717 	ldw	r8,668(sp)
   41cac:	8c65883a 	add	r18,r17,r17
   41cb0:	94a5883a 	add	r18,r18,r18
   41cb4:	1445883a 	add	r2,r2,r17
   41cb8:	dcc05004 	addi	r19,sp,320
   41cbc:	44a5883a 	add	r18,r8,r18
   41cc0:	14000044 	addi	r16,r2,1
   41cc4:	88015316 	blt	r17,zero,42214 <__kernel_rem_pio2+0x610>
   41cc8:	91000017 	ldw	r4,0(r18)
   41ccc:	0044c700 	call	44c70 <__floatsidf>
   41cd0:	98800015 	stw	r2,0(r19)
   41cd4:	98c00115 	stw	r3,4(r19)
   41cd8:	8c400044 	addi	r17,r17,1
   41cdc:	9cc00204 	addi	r19,r19,8
   41ce0:	94800104 	addi	r18,r18,4
   41ce4:	8c3ff71e 	bne	r17,r16,41cc4 <__alt_data_end+0xfffc1cc4>
   41ce8:	b0002816 	blt	r22,zero,41d8c <__kernel_rem_pio2+0x188>
   41cec:	da008d17 	ldw	r8,564(sp)
   41cf0:	b4c00044 	addi	r19,r22,1
   41cf4:	982690fa 	slli	r19,r19,3
   41cf8:	402490fa 	slli	r18,r8,3
   41cfc:	da008e17 	ldw	r8,568(sp)
   41d00:	d8805004 	addi	r2,sp,320
   41d04:	94000204 	addi	r16,r18,8
   41d08:	d823883a 	mov	r17,sp
   41d0c:	14a5883a 	add	r18,r2,r18
   41d10:	dcef883a 	add	r23,sp,r19
   41d14:	4421883a 	add	r16,r8,r16
   41d18:	dd809115 	stw	r22,580(sp)
   41d1c:	4039883a 	mov	fp,r8
   41d20:	da008d17 	ldw	r8,564(sp)
   41d24:	40016016 	blt	r8,zero,422a8 <__kernel_rem_pio2+0x6a4>
   41d28:	e027883a 	mov	r19,fp
   41d2c:	9029883a 	mov	r20,r18
   41d30:	002d883a 	mov	r22,zero
   41d34:	002b883a 	mov	r21,zero
   41d38:	a1800017 	ldw	r6,0(r20)
   41d3c:	a1c00117 	ldw	r7,4(r20)
   41d40:	99000017 	ldw	r4,0(r19)
   41d44:	99400117 	ldw	r5,4(r19)
   41d48:	9cc00204 	addi	r19,r19,8
   41d4c:	a53ffe04 	addi	r20,r20,-8
   41d50:	0043bdc0 	call	43bdc <__muldf3>
   41d54:	b009883a 	mov	r4,r22
   41d58:	a80b883a 	mov	r5,r21
   41d5c:	100d883a 	mov	r6,r2
   41d60:	180f883a 	mov	r7,r3
   41d64:	00431cc0 	call	431cc <__adddf3>
   41d68:	102d883a 	mov	r22,r2
   41d6c:	182b883a 	mov	r21,r3
   41d70:	9c3ff11e 	bne	r19,r16,41d38 <__alt_data_end+0xfffc1d38>
   41d74:	8d800015 	stw	r22,0(r17)
   41d78:	8d400115 	stw	r21,4(r17)
   41d7c:	8c400204 	addi	r17,r17,8
   41d80:	94800204 	addi	r18,r18,8
   41d84:	8dffe61e 	bne	r17,r23,41d20 <__alt_data_end+0xfffc1d20>
   41d88:	dd809117 	ldw	r22,580(sp)
   41d8c:	00d00034 	movhi	r3,16384
   41d90:	da009317 	ldw	r8,588(sp)
   41d94:	18ffff84 	addi	r3,r3,-2
   41d98:	b0c7883a 	add	r3,r22,r3
   41d9c:	18c7883a 	add	r3,r3,r3
   41da0:	402090fa 	slli	r16,r8,3
   41da4:	18c7883a 	add	r3,r3,r3
   41da8:	da007804 	addi	r8,sp,480
   41dac:	40d1883a 	add	r8,r8,r3
   41db0:	b0bfffc4 	addi	r2,r22,-1
   41db4:	da009615 	stw	r8,600(sp)
   41db8:	da008e17 	ldw	r8,568(sp)
   41dbc:	1085883a 	add	r2,r2,r2
   41dc0:	1085883a 	add	r2,r2,r2
   41dc4:	19000104 	addi	r4,r3,4
   41dc8:	d885883a 	add	r2,sp,r2
   41dcc:	4421883a 	add	r16,r8,r16
   41dd0:	da007804 	addi	r8,sp,480
   41dd4:	4111883a 	add	r8,r8,r4
   41dd8:	10807804 	addi	r2,r2,480
   41ddc:	da009715 	stw	r8,604(sp)
   41de0:	b025883a 	mov	r18,r22
   41de4:	d8809815 	stw	r2,608(sp)
   41de8:	dd809415 	stw	r22,592(sp)
   41dec:	900490fa 	slli	r2,r18,3
   41df0:	d885883a 	add	r2,sp,r2
   41df4:	17000017 	ldw	fp,0(r2)
   41df8:	15400117 	ldw	r21,4(r2)
   41dfc:	04802b0e 	bge	zero,r18,41eac <__kernel_rem_pio2+0x2a8>
   41e00:	00880034 	movhi	r2,8192
   41e04:	10bfffc4 	addi	r2,r2,-1
   41e08:	90a9883a 	add	r20,r18,r2
   41e0c:	a02890fa 	slli	r20,r20,3
   41e10:	dc407804 	addi	r17,sp,480
   41e14:	dcfffe04 	addi	r19,sp,-8
   41e18:	dd29883a 	add	r20,sp,r20
   41e1c:	000d883a 	mov	r6,zero
   41e20:	01cf9c34 	movhi	r7,15984
   41e24:	e009883a 	mov	r4,fp
   41e28:	a80b883a 	mov	r5,r21
   41e2c:	0043bdc0 	call	43bdc <__muldf3>
   41e30:	180b883a 	mov	r5,r3
   41e34:	1009883a 	mov	r4,r2
   41e38:	0044bf00 	call	44bf0 <__fixdfsi>
   41e3c:	1009883a 	mov	r4,r2
   41e40:	0044c700 	call	44c70 <__floatsidf>
   41e44:	000d883a 	mov	r6,zero
   41e48:	01d05c34 	movhi	r7,16752
   41e4c:	1009883a 	mov	r4,r2
   41e50:	180b883a 	mov	r5,r3
   41e54:	102f883a 	mov	r23,r2
   41e58:	182d883a 	mov	r22,r3
   41e5c:	0043bdc0 	call	43bdc <__muldf3>
   41e60:	100d883a 	mov	r6,r2
   41e64:	180f883a 	mov	r7,r3
   41e68:	e009883a 	mov	r4,fp
   41e6c:	a80b883a 	mov	r5,r21
   41e70:	00442f40 	call	442f4 <__subdf3>
   41e74:	180b883a 	mov	r5,r3
   41e78:	1009883a 	mov	r4,r2
   41e7c:	0044bf00 	call	44bf0 <__fixdfsi>
   41e80:	a1800017 	ldw	r6,0(r20)
   41e84:	a1c00117 	ldw	r7,4(r20)
   41e88:	88800015 	stw	r2,0(r17)
   41e8c:	b809883a 	mov	r4,r23
   41e90:	b00b883a 	mov	r5,r22
   41e94:	00431cc0 	call	431cc <__adddf3>
   41e98:	a53ffe04 	addi	r20,r20,-8
   41e9c:	1039883a 	mov	fp,r2
   41ea0:	182b883a 	mov	r21,r3
   41ea4:	8c400104 	addi	r17,r17,4
   41ea8:	a4ffdc1e 	bne	r20,r19,41e1c <__alt_data_end+0xfffc1e1c>
   41eac:	d9809017 	ldw	r6,576(sp)
   41eb0:	a80b883a 	mov	r5,r21
   41eb4:	e009883a 	mov	r4,fp
   41eb8:	0042e600 	call	42e60 <scalbn>
   41ebc:	000d883a 	mov	r6,zero
   41ec0:	01cff034 	movhi	r7,16320
   41ec4:	1009883a 	mov	r4,r2
   41ec8:	180b883a 	mov	r5,r3
   41ecc:	1027883a 	mov	r19,r2
   41ed0:	1823883a 	mov	r17,r3
   41ed4:	0043bdc0 	call	43bdc <__muldf3>
   41ed8:	1009883a 	mov	r4,r2
   41edc:	180b883a 	mov	r5,r3
   41ee0:	0042c740 	call	42c74 <floor>
   41ee4:	000d883a 	mov	r6,zero
   41ee8:	01d00834 	movhi	r7,16416
   41eec:	1009883a 	mov	r4,r2
   41ef0:	180b883a 	mov	r5,r3
   41ef4:	0043bdc0 	call	43bdc <__muldf3>
   41ef8:	100d883a 	mov	r6,r2
   41efc:	180f883a 	mov	r7,r3
   41f00:	9809883a 	mov	r4,r19
   41f04:	880b883a 	mov	r5,r17
   41f08:	00442f40 	call	442f4 <__subdf3>
   41f0c:	180b883a 	mov	r5,r3
   41f10:	1009883a 	mov	r4,r2
   41f14:	1827883a 	mov	r19,r3
   41f18:	1029883a 	mov	r20,r2
   41f1c:	0044bf00 	call	44bf0 <__fixdfsi>
   41f20:	1009883a 	mov	r4,r2
   41f24:	1023883a 	mov	r17,r2
   41f28:	0044c700 	call	44c70 <__floatsidf>
   41f2c:	a009883a 	mov	r4,r20
   41f30:	100d883a 	mov	r6,r2
   41f34:	180f883a 	mov	r7,r3
   41f38:	980b883a 	mov	r5,r19
   41f3c:	00442f40 	call	442f4 <__subdf3>
   41f40:	d9009017 	ldw	r4,576(sp)
   41f44:	1013883a 	mov	r9,r2
   41f48:	102b883a 	mov	r21,r2
   41f4c:	1811883a 	mov	r8,r3
   41f50:	0100b30e 	bge	zero,r4,42220 <__kernel_rem_pio2+0x61c>
   41f54:	90bfffc4 	addi	r2,r18,-1
   41f58:	1085883a 	add	r2,r2,r2
   41f5c:	1085883a 	add	r2,r2,r2
   41f60:	d885883a 	add	r2,sp,r2
   41f64:	10807804 	addi	r2,r2,480
   41f68:	d9809017 	ldw	r6,576(sp)
   41f6c:	11400017 	ldw	r5,0(r2)
   41f70:	01000604 	movi	r4,24
   41f74:	2189c83a 	sub	r4,r4,r6
   41f78:	290dd83a 	sra	r6,r5,r4
   41f7c:	d9c09017 	ldw	r7,576(sp)
   41f80:	04c005c4 	movi	r19,23
   41f84:	3108983a 	sll	r4,r6,r4
   41f88:	99e7c83a 	sub	r19,r19,r7
   41f8c:	89a3883a 	add	r17,r17,r6
   41f90:	2909c83a 	sub	r4,r5,r4
   41f94:	24e7d83a 	sra	r19,r4,r19
   41f98:	11000015 	stw	r4,0(r2)
   41f9c:	04c02a0e 	bge	zero,r19,42048 <__kernel_rem_pio2+0x444>
   41fa0:	8c400044 	addi	r17,r17,1
   41fa4:	0481570e 	bge	zero,r18,42504 <__kernel_rem_pio2+0x900>
   41fa8:	02804034 	movhi	r10,256
   41fac:	52bfffc4 	addi	r10,r10,-1
   41fb0:	d8807804 	addi	r2,sp,480
   41fb4:	000b883a 	mov	r5,zero
   41fb8:	0029883a 	mov	r20,zero
   41fbc:	01c04034 	movhi	r7,256
   41fc0:	00000706 	br	41fe0 <__kernel_rem_pio2+0x3dc>
   41fc4:	390dc83a 	sub	r6,r7,r4
   41fc8:	20000226 	beq	r4,zero,41fd4 <__kernel_rem_pio2+0x3d0>
   41fcc:	11800015 	stw	r6,0(r2)
   41fd0:	05000044 	movi	r20,1
   41fd4:	29400044 	addi	r5,r5,1
   41fd8:	10800104 	addi	r2,r2,4
   41fdc:	2c80080e 	bge	r5,r18,42000 <__kernel_rem_pio2+0x3fc>
   41fe0:	11000017 	ldw	r4,0(r2)
   41fe4:	a03ff726 	beq	r20,zero,41fc4 <__alt_data_end+0xfffc1fc4>
   41fe8:	5109c83a 	sub	r4,r10,r4
   41fec:	11000015 	stw	r4,0(r2)
   41ff0:	29400044 	addi	r5,r5,1
   41ff4:	05000044 	movi	r20,1
   41ff8:	10800104 	addi	r2,r2,4
   41ffc:	2cbff816 	blt	r5,r18,41fe0 <__alt_data_end+0xfffc1fe0>
   42000:	d9009017 	ldw	r4,576(sp)
   42004:	01000e0e 	bge	zero,r4,42040 <__kernel_rem_pio2+0x43c>
   42008:	00800044 	movi	r2,1
   4200c:	20808d26 	beq	r4,r2,42244 <__kernel_rem_pio2+0x640>
   42010:	00800084 	movi	r2,2
   42014:	20800a1e 	bne	r4,r2,42040 <__kernel_rem_pio2+0x43c>
   42018:	90bfffc4 	addi	r2,r18,-1
   4201c:	1085883a 	add	r2,r2,r2
   42020:	1085883a 	add	r2,r2,r2
   42024:	d885883a 	add	r2,sp,r2
   42028:	10807804 	addi	r2,r2,480
   4202c:	11400017 	ldw	r5,0(r2)
   42030:	01001034 	movhi	r4,64
   42034:	213fffc4 	addi	r4,r4,-1
   42038:	2908703a 	and	r4,r5,r4
   4203c:	11000015 	stw	r4,0(r2)
   42040:	00800084 	movi	r2,2
   42044:	98805d26 	beq	r19,r2,421bc <__kernel_rem_pio2+0x5b8>
   42048:	400b883a 	mov	r5,r8
   4204c:	000d883a 	mov	r6,zero
   42050:	000f883a 	mov	r7,zero
   42054:	a809883a 	mov	r4,r21
   42058:	da009b15 	stw	r8,620(sp)
   4205c:	0043a780 	call	43a78 <__eqdf2>
   42060:	da009b17 	ldw	r8,620(sp)
   42064:	10012b1e 	bne	r2,zero,42514 <__kernel_rem_pio2+0x910>
   42068:	da009417 	ldw	r8,592(sp)
   4206c:	917fffc4 	addi	r5,r18,-1
   42070:	2a000e16 	blt	r5,r8,420ac <__kernel_rem_pio2+0x4a8>
   42074:	00900034 	movhi	r2,16384
   42078:	10bfffc4 	addi	r2,r2,-1
   4207c:	9085883a 	add	r2,r18,r2
   42080:	1085883a 	add	r2,r2,r2
   42084:	d9809717 	ldw	r6,604(sp)
   42088:	1085883a 	add	r2,r2,r2
   4208c:	d9007804 	addi	r4,sp,480
   42090:	0007883a 	mov	r3,zero
   42094:	2085883a 	add	r2,r4,r2
   42098:	11000017 	ldw	r4,0(r2)
   4209c:	10bfff04 	addi	r2,r2,-4
   420a0:	1906b03a 	or	r3,r3,r4
   420a4:	11bffc1e 	bne	r2,r6,42098 <__alt_data_end+0xfffc2098>
   420a8:	1800821e 	bne	r3,zero,422b4 <__kernel_rem_pio2+0x6b0>
   420ac:	da009817 	ldw	r8,608(sp)
   420b0:	40800017 	ldw	r2,0(r8)
   420b4:	1001151e 	bne	r2,zero,4250c <__kernel_rem_pio2+0x908>
   420b8:	d8809617 	ldw	r2,600(sp)
   420bc:	05000044 	movi	r20,1
   420c0:	10bfff04 	addi	r2,r2,-4
   420c4:	10c00117 	ldw	r3,4(r2)
   420c8:	a5000044 	addi	r20,r20,1
   420cc:	183ffc26 	beq	r3,zero,420c0 <__alt_data_end+0xfffc20c0>
   420d0:	9529883a 	add	r20,r18,r20
   420d4:	90800044 	addi	r2,r18,1
   420d8:	dd009115 	stw	r20,580(sp)
   420dc:	a0803216 	blt	r20,r2,421a8 <__kernel_rem_pio2+0x5a4>
   420e0:	da009317 	ldw	r8,588(sp)
   420e4:	d8c09117 	ldw	r3,580(sp)
   420e8:	44a3883a 	add	r17,r8,r18
   420ec:	da009217 	ldw	r8,584(sp)
   420f0:	882290fa 	slli	r17,r17,3
   420f4:	40a5883a 	add	r18,r8,r2
   420f8:	da009517 	ldw	r8,596(sp)
   420fc:	100490fa 	slli	r2,r2,3
   42100:	94a5883a 	add	r18,r18,r18
   42104:	40eb883a 	add	r21,r8,r3
   42108:	da00a717 	ldw	r8,668(sp)
   4210c:	ad6b883a 	add	r21,r21,r21
   42110:	94a5883a 	add	r18,r18,r18
   42114:	ad6b883a 	add	r21,r21,r21
   42118:	d8c05004 	addi	r3,sp,320
   4211c:	44a5883a 	add	r18,r8,r18
   42120:	1c63883a 	add	r17,r3,r17
   42124:	d8a7883a 	add	r19,sp,r2
   42128:	456b883a 	add	r21,r8,r21
   4212c:	91000017 	ldw	r4,0(r18)
   42130:	0044c700 	call	44c70 <__floatsidf>
   42134:	da008d17 	ldw	r8,564(sp)
   42138:	88800015 	stw	r2,0(r17)
   4213c:	88c00115 	stw	r3,4(r17)
   42140:	40001b16 	blt	r8,zero,421b0 <__kernel_rem_pio2+0x5ac>
   42144:	dd008e17 	ldw	r20,568(sp)
   42148:	882d883a 	mov	r22,r17
   4214c:	002f883a 	mov	r23,zero
   42150:	0039883a 	mov	fp,zero
   42154:	b1800017 	ldw	r6,0(r22)
   42158:	b1c00117 	ldw	r7,4(r22)
   4215c:	a1000017 	ldw	r4,0(r20)
   42160:	a1400117 	ldw	r5,4(r20)
   42164:	a5000204 	addi	r20,r20,8
   42168:	b5bffe04 	addi	r22,r22,-8
   4216c:	0043bdc0 	call	43bdc <__muldf3>
   42170:	b809883a 	mov	r4,r23
   42174:	e00b883a 	mov	r5,fp
   42178:	100d883a 	mov	r6,r2
   4217c:	180f883a 	mov	r7,r3
   42180:	00431cc0 	call	431cc <__adddf3>
   42184:	102f883a 	mov	r23,r2
   42188:	1839883a 	mov	fp,r3
   4218c:	a43ff11e 	bne	r20,r16,42154 <__alt_data_end+0xfffc2154>
   42190:	9dc00015 	stw	r23,0(r19)
   42194:	9f000115 	stw	fp,4(r19)
   42198:	94800104 	addi	r18,r18,4
   4219c:	8c400204 	addi	r17,r17,8
   421a0:	9cc00204 	addi	r19,r19,8
   421a4:	957fe11e 	bne	r18,r21,4212c <__alt_data_end+0xfffc212c>
   421a8:	dc809117 	ldw	r18,580(sp)
   421ac:	003f0f06 	br	41dec <__alt_data_end+0xfffc1dec>
   421b0:	002f883a 	mov	r23,zero
   421b4:	0039883a 	mov	fp,zero
   421b8:	003ff506 	br	42190 <__alt_data_end+0xfffc2190>
   421bc:	480d883a 	mov	r6,r9
   421c0:	180f883a 	mov	r7,r3
   421c4:	0009883a 	mov	r4,zero
   421c8:	014ffc34 	movhi	r5,16368
   421cc:	00442f40 	call	442f4 <__subdf3>
   421d0:	102b883a 	mov	r21,r2
   421d4:	1811883a 	mov	r8,r3
   421d8:	a03f9b26 	beq	r20,zero,42048 <__alt_data_end+0xfffc2048>
   421dc:	d9809017 	ldw	r6,576(sp)
   421e0:	0009883a 	mov	r4,zero
   421e4:	014ffc34 	movhi	r5,16368
   421e8:	d8c09b15 	stw	r3,620(sp)
   421ec:	0042e600 	call	42e60 <scalbn>
   421f0:	da009b17 	ldw	r8,620(sp)
   421f4:	a809883a 	mov	r4,r21
   421f8:	100d883a 	mov	r6,r2
   421fc:	400b883a 	mov	r5,r8
   42200:	180f883a 	mov	r7,r3
   42204:	00442f40 	call	442f4 <__subdf3>
   42208:	102b883a 	mov	r21,r2
   4220c:	1811883a 	mov	r8,r3
   42210:	003f8d06 	br	42048 <__alt_data_end+0xfffc2048>
   42214:	0005883a 	mov	r2,zero
   42218:	0007883a 	mov	r3,zero
   4221c:	003eac06 	br	41cd0 <__alt_data_end+0xfffc1cd0>
   42220:	d8809017 	ldw	r2,576(sp)
   42224:	1000121e 	bne	r2,zero,42270 <__kernel_rem_pio2+0x66c>
   42228:	90bfffc4 	addi	r2,r18,-1
   4222c:	1085883a 	add	r2,r2,r2
   42230:	1085883a 	add	r2,r2,r2
   42234:	d885883a 	add	r2,sp,r2
   42238:	14c07817 	ldw	r19,480(r2)
   4223c:	9827d5fa 	srai	r19,r19,23
   42240:	003f5606 	br	41f9c <__alt_data_end+0xfffc1f9c>
   42244:	90bfffc4 	addi	r2,r18,-1
   42248:	1085883a 	add	r2,r2,r2
   4224c:	1085883a 	add	r2,r2,r2
   42250:	d885883a 	add	r2,sp,r2
   42254:	10807804 	addi	r2,r2,480
   42258:	11000017 	ldw	r4,0(r2)
   4225c:	01402034 	movhi	r5,128
   42260:	297fffc4 	addi	r5,r5,-1
   42264:	2148703a 	and	r4,r4,r5
   42268:	11000015 	stw	r4,0(r2)
   4226c:	003f7406 	br	42040 <__alt_data_end+0xfffc2040>
   42270:	4809883a 	mov	r4,r9
   42274:	180b883a 	mov	r5,r3
   42278:	000d883a 	mov	r6,zero
   4227c:	01cff834 	movhi	r7,16352
   42280:	d8c09a15 	stw	r3,616(sp)
   42284:	d8c09b15 	stw	r3,620(sp)
   42288:	da409915 	stw	r9,612(sp)
   4228c:	0043b000 	call	43b00 <__gedf2>
   42290:	d8c09a17 	ldw	r3,616(sp)
   42294:	da009b17 	ldw	r8,620(sp)
   42298:	da409917 	ldw	r9,612(sp)
   4229c:	1000920e 	bge	r2,zero,424e8 <__kernel_rem_pio2+0x8e4>
   422a0:	0027883a 	mov	r19,zero
   422a4:	003f6806 	br	42048 <__alt_data_end+0xfffc2048>
   422a8:	002d883a 	mov	r22,zero
   422ac:	002b883a 	mov	r21,zero
   422b0:	003eb006 	br	41d74 <__alt_data_end+0xfffc1d74>
   422b4:	2945883a 	add	r2,r5,r5
   422b8:	da009017 	ldw	r8,576(sp)
   422bc:	1085883a 	add	r2,r2,r2
   422c0:	d885883a 	add	r2,sp,r2
   422c4:	10807817 	ldw	r2,480(r2)
   422c8:	423ffa04 	addi	r8,r8,-24
   422cc:	dc409115 	stw	r17,580(sp)
   422d0:	dcc08d15 	stw	r19,564(sp)
   422d4:	da009015 	stw	r8,576(sp)
   422d8:	dd809417 	ldw	r22,592(sp)
   422dc:	2823883a 	mov	r17,r5
   422e0:	10000e1e 	bne	r2,zero,4231c <__kernel_rem_pio2+0x718>
   422e4:	00900034 	movhi	r2,16384
   422e8:	10bfffc4 	addi	r2,r2,-1
   422ec:	2885883a 	add	r2,r5,r2
   422f0:	1085883a 	add	r2,r2,r2
   422f4:	d8c07804 	addi	r3,sp,480
   422f8:	1085883a 	add	r2,r2,r2
   422fc:	1885883a 	add	r2,r3,r2
   42300:	4007883a 	mov	r3,r8
   42304:	10bfff04 	addi	r2,r2,-4
   42308:	11000117 	ldw	r4,4(r2)
   4230c:	8c7fffc4 	addi	r17,r17,-1
   42310:	18fffa04 	addi	r3,r3,-24
   42314:	203ffb26 	beq	r4,zero,42304 <__alt_data_end+0xfffc2304>
   42318:	d8c09015 	stw	r3,576(sp)
   4231c:	d9809017 	ldw	r6,576(sp)
   42320:	0009883a 	mov	r4,zero
   42324:	014ffc34 	movhi	r5,16368
   42328:	0042e600 	call	42e60 <scalbn>
   4232c:	1029883a 	mov	r20,r2
   42330:	182b883a 	mov	r21,r3
   42334:	88018416 	blt	r17,zero,42948 <__kernel_rem_pio2+0xd44>
   42338:	881090fa 	slli	r8,r17,3
   4233c:	d8c07804 	addi	r3,sp,480
   42340:	da008e15 	stw	r8,568(sp)
   42344:	d8808e17 	ldw	r2,568(sp)
   42348:	8c51883a 	add	r8,r17,r17
   4234c:	4211883a 	add	r8,r8,r8
   42350:	d8a1883a 	add	r16,sp,r2
   42354:	1a25883a 	add	r18,r3,r8
   42358:	da3ffe04 	addi	r8,sp,-8
   4235c:	da008c15 	stw	r8,560(sp)
   42360:	8039883a 	mov	fp,r16
   42364:	91000017 	ldw	r4,0(r18)
   42368:	e73ffe04 	addi	fp,fp,-8
   4236c:	94bfff04 	addi	r18,r18,-4
   42370:	0044c700 	call	44c70 <__floatsidf>
   42374:	a00d883a 	mov	r6,r20
   42378:	a80f883a 	mov	r7,r21
   4237c:	1009883a 	mov	r4,r2
   42380:	180b883a 	mov	r5,r3
   42384:	0043bdc0 	call	43bdc <__muldf3>
   42388:	a009883a 	mov	r4,r20
   4238c:	a80b883a 	mov	r5,r21
   42390:	e0800215 	stw	r2,8(fp)
   42394:	e0c00315 	stw	r3,12(fp)
   42398:	000d883a 	mov	r6,zero
   4239c:	01cf9c34 	movhi	r7,15984
   423a0:	0043bdc0 	call	43bdc <__muldf3>
   423a4:	da008c17 	ldw	r8,560(sp)
   423a8:	1029883a 	mov	r20,r2
   423ac:	182b883a 	mov	r21,r3
   423b0:	e23fec1e 	bne	fp,r8,42364 <__alt_data_end+0xfffc2364>
   423b4:	0029883a 	mov	r20,zero
   423b8:	b0004f16 	blt	r22,zero,424f8 <__kernel_rem_pio2+0x8f4>
   423bc:	05400174 	movhi	r21,5
   423c0:	014ffe74 	movhi	r5,16377
   423c4:	ad49d804 	addi	r21,r21,10080
   423c8:	8027883a 	mov	r19,r16
   423cc:	01100034 	movhi	r4,16384
   423d0:	29487ec4 	addi	r5,r5,8699
   423d4:	0039883a 	mov	fp,zero
   423d8:	002f883a 	mov	r23,zero
   423dc:	0025883a 	mov	r18,zero
   423e0:	00000506 	br	423f8 <__kernel_rem_pio2+0x7f4>
   423e4:	9cc00204 	addi	r19,r19,8
   423e8:	a4800f16 	blt	r20,r18,42428 <__kernel_rem_pio2+0x824>
   423ec:	a9000017 	ldw	r4,0(r21)
   423f0:	a9400117 	ldw	r5,4(r21)
   423f4:	ad400204 	addi	r21,r21,8
   423f8:	99800017 	ldw	r6,0(r19)
   423fc:	99c00117 	ldw	r7,4(r19)
   42400:	94800044 	addi	r18,r18,1
   42404:	0043bdc0 	call	43bdc <__muldf3>
   42408:	e009883a 	mov	r4,fp
   4240c:	b80b883a 	mov	r5,r23
   42410:	100d883a 	mov	r6,r2
   42414:	180f883a 	mov	r7,r3
   42418:	00431cc0 	call	431cc <__adddf3>
   4241c:	1039883a 	mov	fp,r2
   42420:	182f883a 	mov	r23,r3
   42424:	b4bfef0e 	bge	r22,r18,423e4 <__alt_data_end+0xfffc23e4>
   42428:	a00490fa 	slli	r2,r20,3
   4242c:	da008c17 	ldw	r8,560(sp)
   42430:	843ffe04 	addi	r16,r16,-8
   42434:	d885883a 	add	r2,sp,r2
   42438:	10802804 	addi	r2,r2,160
   4243c:	17000015 	stw	fp,0(r2)
   42440:	15c00115 	stw	r23,4(r2)
   42444:	a5000044 	addi	r20,r20,1
   42448:	823fdb1e 	bne	r16,r8,423b8 <__alt_data_end+0xfffc23b8>
   4244c:	da00a617 	ldw	r8,664(sp)
   42450:	00800084 	movi	r2,2
   42454:	12006616 	blt	r2,r8,425f0 <__kernel_rem_pio2+0x9ec>
   42458:	0200de16 	blt	zero,r8,427d4 <__kernel_rem_pio2+0xbd0>
   4245c:	4000141e 	bne	r8,zero,424b0 <__kernel_rem_pio2+0x8ac>
   42460:	da008e17 	ldw	r8,568(sp)
   42464:	d8802804 	addi	r2,sp,160
   42468:	0007883a 	mov	r3,zero
   4246c:	1225883a 	add	r18,r2,r8
   42470:	043fffc4 	movi	r16,-1
   42474:	0005883a 	mov	r2,zero
   42478:	91800017 	ldw	r6,0(r18)
   4247c:	91c00117 	ldw	r7,4(r18)
   42480:	1009883a 	mov	r4,r2
   42484:	180b883a 	mov	r5,r3
   42488:	8c7fffc4 	addi	r17,r17,-1
   4248c:	00431cc0 	call	431cc <__adddf3>
   42490:	94bffe04 	addi	r18,r18,-8
   42494:	8c3ff81e 	bne	r17,r16,42478 <__alt_data_end+0xfffc2478>
   42498:	da008d17 	ldw	r8,564(sp)
   4249c:	40000126 	beq	r8,zero,424a4 <__kernel_rem_pio2+0x8a0>
   424a0:	18e0003c 	xorhi	r3,r3,32768
   424a4:	da008f17 	ldw	r8,572(sp)
   424a8:	40800015 	stw	r2,0(r8)
   424ac:	40c00115 	stw	r3,4(r8)
   424b0:	da009117 	ldw	r8,580(sp)
   424b4:	408001cc 	andi	r2,r8,7
   424b8:	dfc0a517 	ldw	ra,660(sp)
   424bc:	df00a417 	ldw	fp,656(sp)
   424c0:	ddc0a317 	ldw	r23,652(sp)
   424c4:	dd80a217 	ldw	r22,648(sp)
   424c8:	dd40a117 	ldw	r21,644(sp)
   424cc:	dd00a017 	ldw	r20,640(sp)
   424d0:	dcc09f17 	ldw	r19,636(sp)
   424d4:	dc809e17 	ldw	r18,632(sp)
   424d8:	dc409d17 	ldw	r17,628(sp)
   424dc:	dc009c17 	ldw	r16,624(sp)
   424e0:	dec0a604 	addi	sp,sp,664
   424e4:	f800283a 	ret
   424e8:	8c400044 	addi	r17,r17,1
   424ec:	04810d0e 	bge	zero,r18,42924 <__kernel_rem_pio2+0xd20>
   424f0:	04c00084 	movi	r19,2
   424f4:	003eac06 	br	41fa8 <__alt_data_end+0xfffc1fa8>
   424f8:	0039883a 	mov	fp,zero
   424fc:	002f883a 	mov	r23,zero
   42500:	003fc906 	br	42428 <__alt_data_end+0xfffc2428>
   42504:	0029883a 	mov	r20,zero
   42508:	003ebd06 	br	42000 <__alt_data_end+0xfffc2000>
   4250c:	05000044 	movi	r20,1
   42510:	003eef06 	br	420d0 <__alt_data_end+0xfffc20d0>
   42514:	4029883a 	mov	r20,r8
   42518:	da009017 	ldw	r8,576(sp)
   4251c:	a809883a 	mov	r4,r21
   42520:	a00b883a 	mov	r5,r20
   42524:	020dc83a 	sub	r6,zero,r8
   42528:	dc409115 	stw	r17,580(sp)
   4252c:	dd809417 	ldw	r22,592(sp)
   42530:	dcc08d15 	stw	r19,564(sp)
   42534:	0042e600 	call	42e60 <scalbn>
   42538:	000d883a 	mov	r6,zero
   4253c:	01d05c34 	movhi	r7,16752
   42540:	1009883a 	mov	r4,r2
   42544:	180b883a 	mov	r5,r3
   42548:	102b883a 	mov	r21,r2
   4254c:	1823883a 	mov	r17,r3
   42550:	0043b000 	call	43b00 <__gedf2>
   42554:	1000e916 	blt	r2,zero,428fc <__kernel_rem_pio2+0xcf8>
   42558:	000d883a 	mov	r6,zero
   4255c:	01cf9c34 	movhi	r7,15984
   42560:	880b883a 	mov	r5,r17
   42564:	a809883a 	mov	r4,r21
   42568:	0043bdc0 	call	43bdc <__muldf3>
   4256c:	180b883a 	mov	r5,r3
   42570:	1009883a 	mov	r4,r2
   42574:	0044bf00 	call	44bf0 <__fixdfsi>
   42578:	1029883a 	mov	r20,r2
   4257c:	9485883a 	add	r2,r18,r18
   42580:	1085883a 	add	r2,r2,r2
   42584:	a009883a 	mov	r4,r20
   42588:	d8a1883a 	add	r16,sp,r2
   4258c:	0044c700 	call	44c70 <__floatsidf>
   42590:	000d883a 	mov	r6,zero
   42594:	01d05c34 	movhi	r7,16752
   42598:	1009883a 	mov	r4,r2
   4259c:	180b883a 	mov	r5,r3
   425a0:	0043bdc0 	call	43bdc <__muldf3>
   425a4:	880b883a 	mov	r5,r17
   425a8:	100d883a 	mov	r6,r2
   425ac:	180f883a 	mov	r7,r3
   425b0:	a809883a 	mov	r4,r21
   425b4:	00442f40 	call	442f4 <__subdf3>
   425b8:	180b883a 	mov	r5,r3
   425bc:	1009883a 	mov	r4,r2
   425c0:	0044bf00 	call	44bf0 <__fixdfsi>
   425c4:	da009017 	ldw	r8,576(sp)
   425c8:	94400044 	addi	r17,r18,1
   425cc:	8c47883a 	add	r3,r17,r17
   425d0:	84007804 	addi	r16,r16,480
   425d4:	18c7883a 	add	r3,r3,r3
   425d8:	80800015 	stw	r2,0(r16)
   425dc:	d8c7883a 	add	r3,sp,r3
   425e0:	42000604 	addi	r8,r8,24
   425e4:	da009015 	stw	r8,576(sp)
   425e8:	1d007815 	stw	r20,480(r3)
   425ec:	003f4b06 	br	4231c <__alt_data_end+0xfffc231c>
   425f0:	da00a617 	ldw	r8,664(sp)
   425f4:	008000c4 	movi	r2,3
   425f8:	40bfad1e 	bne	r8,r2,424b0 <__alt_data_end+0xfffc24b0>
   425fc:	0440bc0e 	bge	zero,r17,428f0 <__kernel_rem_pio2+0xcec>
   42600:	da008e17 	ldw	r8,568(sp)
   42604:	882090fa 	slli	r16,r17,3
   42608:	dd402804 	addi	r21,sp,160
   4260c:	da05883a 	add	r2,sp,r8
   42610:	10802804 	addi	r2,r2,160
   42614:	15c00017 	ldw	r23,0(r2)
   42618:	15800117 	ldw	r22,4(r2)
   4261c:	8029883a 	mov	r20,r16
   42620:	843ffe04 	addi	r16,r16,-8
   42624:	ac21883a 	add	r16,r21,r16
   42628:	ad29883a 	add	r20,r21,r20
   4262c:	dac02604 	addi	r11,sp,152
   42630:	8811883a 	mov	r8,r17
   42634:	84400017 	ldw	r17,0(r16)
   42638:	87000117 	ldw	fp,4(r16)
   4263c:	b80d883a 	mov	r6,r23
   42640:	b00f883a 	mov	r7,r22
   42644:	8809883a 	mov	r4,r17
   42648:	e00b883a 	mov	r5,fp
   4264c:	da009b15 	stw	r8,620(sp)
   42650:	dac09915 	stw	r11,612(sp)
   42654:	00431cc0 	call	431cc <__adddf3>
   42658:	100d883a 	mov	r6,r2
   4265c:	180f883a 	mov	r7,r3
   42660:	8809883a 	mov	r4,r17
   42664:	e00b883a 	mov	r5,fp
   42668:	1027883a 	mov	r19,r2
   4266c:	1825883a 	mov	r18,r3
   42670:	00442f40 	call	442f4 <__subdf3>
   42674:	b80d883a 	mov	r6,r23
   42678:	b00f883a 	mov	r7,r22
   4267c:	1009883a 	mov	r4,r2
   42680:	180b883a 	mov	r5,r3
   42684:	00431cc0 	call	431cc <__adddf3>
   42688:	dac09917 	ldw	r11,612(sp)
   4268c:	a0800015 	stw	r2,0(r20)
   42690:	a0c00115 	stw	r3,4(r20)
   42694:	84c00015 	stw	r19,0(r16)
   42698:	84800115 	stw	r18,4(r16)
   4269c:	843ffe04 	addi	r16,r16,-8
   426a0:	a53ffe04 	addi	r20,r20,-8
   426a4:	982f883a 	mov	r23,r19
   426a8:	902d883a 	mov	r22,r18
   426ac:	da009b17 	ldw	r8,620(sp)
   426b0:	5c3fe01e 	bne	r11,r16,42634 <__alt_data_end+0xfffc2634>
   426b4:	00800044 	movi	r2,1
   426b8:	12008d0e 	bge	r2,r8,428f0 <__kernel_rem_pio2+0xcec>
   426bc:	402090fa 	slli	r16,r8,3
   426c0:	da008e17 	ldw	r8,568(sp)
   426c4:	8023883a 	mov	r17,r16
   426c8:	da05883a 	add	r2,sp,r8
   426cc:	10802804 	addi	r2,r2,160
   426d0:	15800017 	ldw	r22,0(r2)
   426d4:	15000117 	ldw	r20,4(r2)
   426d8:	ac63883a 	add	r17,r21,r17
   426dc:	843ffe04 	addi	r16,r16,-8
   426e0:	ac21883a 	add	r16,r21,r16
   426e4:	8825883a 	mov	r18,r17
   426e8:	8811883a 	mov	r8,r17
   426ec:	84400017 	ldw	r17,0(r16)
   426f0:	87000117 	ldw	fp,4(r16)
   426f4:	b009883a 	mov	r4,r22
   426f8:	a00b883a 	mov	r5,r20
   426fc:	880d883a 	mov	r6,r17
   42700:	e00f883a 	mov	r7,fp
   42704:	da009b15 	stw	r8,620(sp)
   42708:	00431cc0 	call	431cc <__adddf3>
   4270c:	100d883a 	mov	r6,r2
   42710:	180f883a 	mov	r7,r3
   42714:	8809883a 	mov	r4,r17
   42718:	e00b883a 	mov	r5,fp
   4271c:	102f883a 	mov	r23,r2
   42720:	1827883a 	mov	r19,r3
   42724:	00442f40 	call	442f4 <__subdf3>
   42728:	b00d883a 	mov	r6,r22
   4272c:	a00f883a 	mov	r7,r20
   42730:	1009883a 	mov	r4,r2
   42734:	180b883a 	mov	r5,r3
   42738:	00431cc0 	call	431cc <__adddf3>
   4273c:	90800015 	stw	r2,0(r18)
   42740:	90c00115 	stw	r3,4(r18)
   42744:	85c00015 	stw	r23,0(r16)
   42748:	84c00115 	stw	r19,4(r16)
   4274c:	843ffe04 	addi	r16,r16,-8
   42750:	94bffe04 	addi	r18,r18,-8
   42754:	b82d883a 	mov	r22,r23
   42758:	9829883a 	mov	r20,r19
   4275c:	da009b17 	ldw	r8,620(sp)
   42760:	ac3fe21e 	bne	r21,r16,426ec <__alt_data_end+0xfffc26ec>
   42764:	4023883a 	mov	r17,r8
   42768:	dc002a04 	addi	r16,sp,168
   4276c:	0005883a 	mov	r2,zero
   42770:	0007883a 	mov	r3,zero
   42774:	89800017 	ldw	r6,0(r17)
   42778:	89c00117 	ldw	r7,4(r17)
   4277c:	1009883a 	mov	r4,r2
   42780:	8c7ffe04 	addi	r17,r17,-8
   42784:	180b883a 	mov	r5,r3
   42788:	00431cc0 	call	431cc <__adddf3>
   4278c:	847ff91e 	bne	r16,r17,42774 <__alt_data_end+0xfffc2774>
   42790:	da008d17 	ldw	r8,564(sp)
   42794:	40004726 	beq	r8,zero,428b4 <__kernel_rem_pio2+0xcb0>
   42798:	d9002b17 	ldw	r4,172(sp)
   4279c:	d9402917 	ldw	r5,164(sp)
   427a0:	d9802a17 	ldw	r6,168(sp)
   427a4:	da008f17 	ldw	r8,572(sp)
   427a8:	d9c02817 	ldw	r7,160(sp)
   427ac:	2960003c 	xorhi	r5,r5,32768
   427b0:	2120003c 	xorhi	r4,r4,32768
   427b4:	18e0003c 	xorhi	r3,r3,32768
   427b8:	41c00015 	stw	r7,0(r8)
   427bc:	41400115 	stw	r5,4(r8)
   427c0:	41800215 	stw	r6,8(r8)
   427c4:	41000315 	stw	r4,12(r8)
   427c8:	40800415 	stw	r2,16(r8)
   427cc:	40c00515 	stw	r3,20(r8)
   427d0:	003f3706 	br	424b0 <__alt_data_end+0xfffc24b0>
   427d4:	da008e17 	ldw	r8,568(sp)
   427d8:	d8802804 	addi	r2,sp,160
   427dc:	dc002604 	addi	r16,sp,152
   427e0:	1225883a 	add	r18,r2,r8
   427e4:	0007883a 	mov	r3,zero
   427e8:	0005883a 	mov	r2,zero
   427ec:	91800017 	ldw	r6,0(r18)
   427f0:	91c00117 	ldw	r7,4(r18)
   427f4:	1009883a 	mov	r4,r2
   427f8:	94bffe04 	addi	r18,r18,-8
   427fc:	180b883a 	mov	r5,r3
   42800:	00431cc0 	call	431cc <__adddf3>
   42804:	943ff91e 	bne	r18,r16,427ec <__alt_data_end+0xfffc27ec>
   42808:	da008d17 	ldw	r8,564(sp)
   4280c:	d9002817 	ldw	r4,160(sp)
   42810:	d9402917 	ldw	r5,164(sp)
   42814:	40001a26 	beq	r8,zero,42880 <__kernel_rem_pio2+0xc7c>
   42818:	da008f17 	ldw	r8,572(sp)
   4281c:	19a0003c 	xorhi	r6,r3,32768
   42820:	180f883a 	mov	r7,r3
   42824:	41800115 	stw	r6,4(r8)
   42828:	40800015 	stw	r2,0(r8)
   4282c:	100d883a 	mov	r6,r2
   42830:	00442f40 	call	442f4 <__subdf3>
   42834:	04400c0e 	bge	zero,r17,42868 <__kernel_rem_pio2+0xc64>
   42838:	dc002a04 	addi	r16,sp,168
   4283c:	04800044 	movi	r18,1
   42840:	81800017 	ldw	r6,0(r16)
   42844:	81c00117 	ldw	r7,4(r16)
   42848:	1009883a 	mov	r4,r2
   4284c:	180b883a 	mov	r5,r3
   42850:	94800044 	addi	r18,r18,1
   42854:	00431cc0 	call	431cc <__adddf3>
   42858:	84000204 	addi	r16,r16,8
   4285c:	8cbff80e 	bge	r17,r18,42840 <__alt_data_end+0xfffc2840>
   42860:	da008d17 	ldw	r8,564(sp)
   42864:	40004226 	beq	r8,zero,42970 <__kernel_rem_pio2+0xd6c>
   42868:	da008f17 	ldw	r8,572(sp)
   4286c:	1009883a 	mov	r4,r2
   42870:	18a0003c 	xorhi	r2,r3,32768
   42874:	41000215 	stw	r4,8(r8)
   42878:	40800315 	stw	r2,12(r8)
   4287c:	003f0c06 	br	424b0 <__alt_data_end+0xfffc24b0>
   42880:	da008f17 	ldw	r8,572(sp)
   42884:	100d883a 	mov	r6,r2
   42888:	180f883a 	mov	r7,r3
   4288c:	40800015 	stw	r2,0(r8)
   42890:	40c00115 	stw	r3,4(r8)
   42894:	00442f40 	call	442f4 <__subdf3>
   42898:	047fe716 	blt	zero,r17,42838 <__alt_data_end+0xfffc2838>
   4289c:	da008f17 	ldw	r8,572(sp)
   428a0:	1009883a 	mov	r4,r2
   428a4:	1805883a 	mov	r2,r3
   428a8:	41000215 	stw	r4,8(r8)
   428ac:	40800315 	stw	r2,12(r8)
   428b0:	003eff06 	br	424b0 <__alt_data_end+0xfffc24b0>
   428b4:	da008f17 	ldw	r8,572(sp)
   428b8:	d9802817 	ldw	r6,160(sp)
   428bc:	d9402a17 	ldw	r5,168(sp)
   428c0:	d9002b17 	ldw	r4,172(sp)
   428c4:	41800015 	stw	r6,0(r8)
   428c8:	d9802917 	ldw	r6,164(sp)
   428cc:	41400215 	stw	r5,8(r8)
   428d0:	41000315 	stw	r4,12(r8)
   428d4:	41800115 	stw	r6,4(r8)
   428d8:	40800415 	stw	r2,16(r8)
   428dc:	40c00515 	stw	r3,20(r8)
   428e0:	003ef306 	br	424b0 <__alt_data_end+0xfffc24b0>
   428e4:	da00a617 	ldw	r8,664(sp)
   428e8:	008000c4 	movi	r2,3
   428ec:	40bef01e 	bne	r8,r2,424b0 <__alt_data_end+0xfffc24b0>
   428f0:	0005883a 	mov	r2,zero
   428f4:	0007883a 	mov	r3,zero
   428f8:	003fa506 	br	42790 <__alt_data_end+0xfffc2790>
   428fc:	9485883a 	add	r2,r18,r18
   42900:	1085883a 	add	r2,r2,r2
   42904:	d8a1883a 	add	r16,sp,r2
   42908:	880b883a 	mov	r5,r17
   4290c:	a809883a 	mov	r4,r21
   42910:	84007804 	addi	r16,r16,480
   42914:	0044bf00 	call	44bf0 <__fixdfsi>
   42918:	80800015 	stw	r2,0(r16)
   4291c:	9023883a 	mov	r17,r18
   42920:	003e7e06 	br	4231c <__alt_data_end+0xfffc231c>
   42924:	a80d883a 	mov	r6,r21
   42928:	400f883a 	mov	r7,r8
   4292c:	0009883a 	mov	r4,zero
   42930:	014ffc34 	movhi	r5,16368
   42934:	00442f40 	call	442f4 <__subdf3>
   42938:	102b883a 	mov	r21,r2
   4293c:	1811883a 	mov	r8,r3
   42940:	04c00084 	movi	r19,2
   42944:	003dc006 	br	42048 <__alt_data_end+0xfffc2048>
   42948:	da00a617 	ldw	r8,664(sp)
   4294c:	00800084 	movi	r2,2
   42950:	123fe416 	blt	r2,r8,428e4 <__alt_data_end+0xfffc28e4>
   42954:	02000c16 	blt	zero,r8,42988 <__kernel_rem_pio2+0xd84>
   42958:	403ed51e 	bne	r8,zero,424b0 <__alt_data_end+0xfffc24b0>
   4295c:	0005883a 	mov	r2,zero
   42960:	0007883a 	mov	r3,zero
   42964:	003ecc06 	br	42498 <__alt_data_end+0xfffc2498>
   42968:	d8009215 	stw	zero,584(sp)
   4296c:	003cc306 	br	41c7c <__alt_data_end+0xfffc1c7c>
   42970:	da008f17 	ldw	r8,572(sp)
   42974:	1009883a 	mov	r4,r2
   42978:	1805883a 	mov	r2,r3
   4297c:	41000215 	stw	r4,8(r8)
   42980:	40800315 	stw	r2,12(r8)
   42984:	003eca06 	br	424b0 <__alt_data_end+0xfffc24b0>
   42988:	0005883a 	mov	r2,zero
   4298c:	0007883a 	mov	r3,zero
   42990:	003f9d06 	br	42808 <__alt_data_end+0xfffc2808>

00042994 <__kernel_sin>:
   42994:	00a00034 	movhi	r2,32768
   42998:	defff404 	addi	sp,sp,-48
   4299c:	10bfffc4 	addi	r2,r2,-1
   429a0:	00cf9034 	movhi	r3,15936
   429a4:	ddc00915 	stw	r23,36(sp)
   429a8:	dd800815 	stw	r22,32(sp)
   429ac:	dc400315 	stw	r17,12(sp)
   429b0:	dc000215 	stw	r16,8(sp)
   429b4:	dfc00b15 	stw	ra,44(sp)
   429b8:	df000a15 	stw	fp,40(sp)
   429bc:	dd400715 	stw	r21,28(sp)
   429c0:	dd000615 	stw	r20,24(sp)
   429c4:	dcc00515 	stw	r19,20(sp)
   429c8:	dc800415 	stw	r18,16(sp)
   429cc:	2884703a 	and	r2,r5,r2
   429d0:	18ffffc4 	addi	r3,r3,-1
   429d4:	2821883a 	mov	r16,r5
   429d8:	2023883a 	mov	r17,r4
   429dc:	302f883a 	mov	r23,r6
   429e0:	382d883a 	mov	r22,r7
   429e4:	18800216 	blt	r3,r2,429f0 <__kernel_sin+0x5c>
   429e8:	0044bf00 	call	44bf0 <__fixdfsi>
   429ec:	10009926 	beq	r2,zero,42c54 <__kernel_sin+0x2c0>
   429f0:	880d883a 	mov	r6,r17
   429f4:	800f883a 	mov	r7,r16
   429f8:	8809883a 	mov	r4,r17
   429fc:	800b883a 	mov	r5,r16
   42a00:	0043bdc0 	call	43bdc <__muldf3>
   42a04:	100d883a 	mov	r6,r2
   42a08:	180f883a 	mov	r7,r3
   42a0c:	8809883a 	mov	r4,r17
   42a10:	800b883a 	mov	r5,r16
   42a14:	1027883a 	mov	r19,r2
   42a18:	1825883a 	mov	r18,r3
   42a1c:	0043bdc0 	call	43bdc <__muldf3>
   42a20:	0196b434 	movhi	r6,23248
   42a24:	01cf79b4 	movhi	r7,15846
   42a28:	31b55f04 	addi	r6,r6,-10884
   42a2c:	39f64e84 	addi	r7,r7,-9926
   42a30:	9809883a 	mov	r4,r19
   42a34:	900b883a 	mov	r5,r18
   42a38:	102b883a 	mov	r21,r2
   42a3c:	1829883a 	mov	r20,r3
   42a40:	0043bdc0 	call	43bdc <__muldf3>
   42a44:	01a28b34 	movhi	r6,35372
   42a48:	01cf96f4 	movhi	r7,15963
   42a4c:	31a73ac4 	addi	r6,r6,-25365
   42a50:	39f97984 	addi	r7,r7,-6682
   42a54:	1009883a 	mov	r4,r2
   42a58:	180b883a 	mov	r5,r3
   42a5c:	00442f40 	call	442f4 <__subdf3>
   42a60:	980d883a 	mov	r6,r19
   42a64:	900f883a 	mov	r7,r18
   42a68:	1009883a 	mov	r4,r2
   42a6c:	180b883a 	mov	r5,r3
   42a70:	0043bdc0 	call	43bdc <__muldf3>
   42a74:	0195ecb4 	movhi	r6,22450
   42a78:	01cfb1f4 	movhi	r7,16071
   42a7c:	31bf9f44 	addi	r6,r6,-387
   42a80:	39c778c4 	addi	r7,r7,7651
   42a84:	1009883a 	mov	r4,r2
   42a88:	180b883a 	mov	r5,r3
   42a8c:	00431cc0 	call	431cc <__adddf3>
   42a90:	980d883a 	mov	r6,r19
   42a94:	900f883a 	mov	r7,r18
   42a98:	1009883a 	mov	r4,r2
   42a9c:	180b883a 	mov	r5,r3
   42aa0:	0043bdc0 	call	43bdc <__muldf3>
   42aa4:	01867074 	movhi	r6,6593
   42aa8:	01cfcab4 	movhi	r7,16170
   42aac:	31987544 	addi	r6,r6,25045
   42ab0:	39c06804 	addi	r7,r7,416
   42ab4:	1009883a 	mov	r4,r2
   42ab8:	180b883a 	mov	r5,r3
   42abc:	00442f40 	call	442f4 <__subdf3>
   42ac0:	980d883a 	mov	r6,r19
   42ac4:	900f883a 	mov	r7,r18
   42ac8:	1009883a 	mov	r4,r2
   42acc:	180b883a 	mov	r5,r3
   42ad0:	0043bdc0 	call	43bdc <__muldf3>
   42ad4:	01844474 	movhi	r6,4369
   42ad8:	01cfe074 	movhi	r7,16257
   42adc:	31be2984 	addi	r6,r6,-1882
   42ae0:	39c44444 	addi	r7,r7,4369
   42ae4:	1009883a 	mov	r4,r2
   42ae8:	180b883a 	mov	r5,r3
   42aec:	00431cc0 	call	431cc <__adddf3>
   42af0:	1011883a 	mov	r8,r2
   42af4:	d8800c17 	ldw	r2,48(sp)
   42af8:	1839883a 	mov	fp,r3
   42afc:	10003e26 	beq	r2,zero,42bf8 <__kernel_sin+0x264>
   42b00:	000d883a 	mov	r6,zero
   42b04:	01cff834 	movhi	r7,16352
   42b08:	b809883a 	mov	r4,r23
   42b0c:	b00b883a 	mov	r5,r22
   42b10:	da000015 	stw	r8,0(sp)
   42b14:	0043bdc0 	call	43bdc <__muldf3>
   42b18:	da000017 	ldw	r8,0(sp)
   42b1c:	e00f883a 	mov	r7,fp
   42b20:	a809883a 	mov	r4,r21
   42b24:	400d883a 	mov	r6,r8
   42b28:	a00b883a 	mov	r5,r20
   42b2c:	d8c00115 	stw	r3,4(sp)
   42b30:	d8800015 	stw	r2,0(sp)
   42b34:	0043bdc0 	call	43bdc <__muldf3>
   42b38:	da800017 	ldw	r10,0(sp)
   42b3c:	da400117 	ldw	r9,4(sp)
   42b40:	100d883a 	mov	r6,r2
   42b44:	5009883a 	mov	r4,r10
   42b48:	480b883a 	mov	r5,r9
   42b4c:	180f883a 	mov	r7,r3
   42b50:	00442f40 	call	442f4 <__subdf3>
   42b54:	980d883a 	mov	r6,r19
   42b58:	900f883a 	mov	r7,r18
   42b5c:	1009883a 	mov	r4,r2
   42b60:	180b883a 	mov	r5,r3
   42b64:	0043bdc0 	call	43bdc <__muldf3>
   42b68:	b80d883a 	mov	r6,r23
   42b6c:	b00f883a 	mov	r7,r22
   42b70:	1009883a 	mov	r4,r2
   42b74:	180b883a 	mov	r5,r3
   42b78:	00442f40 	call	442f4 <__subdf3>
   42b7c:	01955574 	movhi	r6,21845
   42b80:	01cff174 	movhi	r7,16325
   42b84:	31955244 	addi	r6,r6,21833
   42b88:	39d55544 	addi	r7,r7,21845
   42b8c:	a809883a 	mov	r4,r21
   42b90:	a00b883a 	mov	r5,r20
   42b94:	1027883a 	mov	r19,r2
   42b98:	1825883a 	mov	r18,r3
   42b9c:	0043bdc0 	call	43bdc <__muldf3>
   42ba0:	100d883a 	mov	r6,r2
   42ba4:	180f883a 	mov	r7,r3
   42ba8:	9809883a 	mov	r4,r19
   42bac:	900b883a 	mov	r5,r18
   42bb0:	00431cc0 	call	431cc <__adddf3>
   42bb4:	100d883a 	mov	r6,r2
   42bb8:	180f883a 	mov	r7,r3
   42bbc:	8809883a 	mov	r4,r17
   42bc0:	800b883a 	mov	r5,r16
   42bc4:	00442f40 	call	442f4 <__subdf3>
   42bc8:	dfc00b17 	ldw	ra,44(sp)
   42bcc:	df000a17 	ldw	fp,40(sp)
   42bd0:	ddc00917 	ldw	r23,36(sp)
   42bd4:	dd800817 	ldw	r22,32(sp)
   42bd8:	dd400717 	ldw	r21,28(sp)
   42bdc:	dd000617 	ldw	r20,24(sp)
   42be0:	dcc00517 	ldw	r19,20(sp)
   42be4:	dc800417 	ldw	r18,16(sp)
   42be8:	dc400317 	ldw	r17,12(sp)
   42bec:	dc000217 	ldw	r16,8(sp)
   42bf0:	dec00c04 	addi	sp,sp,48
   42bf4:	f800283a 	ret
   42bf8:	400d883a 	mov	r6,r8
   42bfc:	9809883a 	mov	r4,r19
   42c00:	900b883a 	mov	r5,r18
   42c04:	180f883a 	mov	r7,r3
   42c08:	0043bdc0 	call	43bdc <__muldf3>
   42c0c:	01955574 	movhi	r6,21845
   42c10:	01cff174 	movhi	r7,16325
   42c14:	31955244 	addi	r6,r6,21833
   42c18:	39d55544 	addi	r7,r7,21845
   42c1c:	1009883a 	mov	r4,r2
   42c20:	180b883a 	mov	r5,r3
   42c24:	00442f40 	call	442f4 <__subdf3>
   42c28:	a80d883a 	mov	r6,r21
   42c2c:	a00f883a 	mov	r7,r20
   42c30:	1009883a 	mov	r4,r2
   42c34:	180b883a 	mov	r5,r3
   42c38:	0043bdc0 	call	43bdc <__muldf3>
   42c3c:	880d883a 	mov	r6,r17
   42c40:	800f883a 	mov	r7,r16
   42c44:	1009883a 	mov	r4,r2
   42c48:	180b883a 	mov	r5,r3
   42c4c:	00431cc0 	call	431cc <__adddf3>
   42c50:	003fdd06 	br	42bc8 <__alt_data_end+0xfffc2bc8>
   42c54:	8805883a 	mov	r2,r17
   42c58:	8007883a 	mov	r3,r16
   42c5c:	003fda06 	br	42bc8 <__alt_data_end+0xfffc2bc8>

00042c60 <fabs>:
   42c60:	00e00034 	movhi	r3,32768
   42c64:	18ffffc4 	addi	r3,r3,-1
   42c68:	2005883a 	mov	r2,r4
   42c6c:	28c6703a 	and	r3,r5,r3
   42c70:	f800283a 	ret

00042c74 <floor>:
   42c74:	2811d53a 	srai	r8,r5,20
   42c78:	defffa04 	addi	sp,sp,-24
   42c7c:	dcc00315 	stw	r19,12(sp)
   42c80:	4201ffcc 	andi	r8,r8,2047
   42c84:	dc800215 	stw	r18,8(sp)
   42c88:	dc400115 	stw	r17,4(sp)
   42c8c:	dc000015 	stw	r16,0(sp)
   42c90:	dfc00515 	stw	ra,20(sp)
   42c94:	dd000415 	stw	r20,16(sp)
   42c98:	44bf0044 	addi	r18,r8,-1023
   42c9c:	018004c4 	movi	r6,19
   42ca0:	2821883a 	mov	r16,r5
   42ca4:	2005883a 	mov	r2,r4
   42ca8:	280f883a 	mov	r7,r5
   42cac:	2827883a 	mov	r19,r5
   42cb0:	2023883a 	mov	r17,r4
   42cb4:	34801916 	blt	r6,r18,42d1c <floor+0xa8>
   42cb8:	90003c16 	blt	r18,zero,42dac <floor+0x138>
   42cbc:	05000434 	movhi	r20,16
   42cc0:	a53fffc4 	addi	r20,r20,-1
   42cc4:	a4a9d83a 	sra	r20,r20,r18
   42cc8:	2d0c703a 	and	r6,r5,r20
   42ccc:	310cb03a 	or	r6,r6,r4
   42cd0:	30001626 	beq	r6,zero,42d2c <floor+0xb8>
   42cd4:	01a20034 	movhi	r6,34816
   42cd8:	01df8e34 	movhi	r7,32312
   42cdc:	319d6704 	addi	r6,r6,30108
   42ce0:	39f90f04 	addi	r7,r7,-7108
   42ce4:	00431cc0 	call	431cc <__adddf3>
   42ce8:	000d883a 	mov	r6,zero
   42cec:	000f883a 	mov	r7,zero
   42cf0:	1009883a 	mov	r4,r2
   42cf4:	180b883a 	mov	r5,r3
   42cf8:	0043b000 	call	43b00 <__gedf2>
   42cfc:	0080040e 	bge	zero,r2,42d10 <floor+0x9c>
   42d00:	80003c16 	blt	r16,zero,42df4 <floor+0x180>
   42d04:	0520303a 	nor	r16,zero,r20
   42d08:	84e0703a 	and	r16,r16,r19
   42d0c:	0023883a 	mov	r17,zero
   42d10:	8805883a 	mov	r2,r17
   42d14:	8007883a 	mov	r3,r16
   42d18:	00000506 	br	42d30 <floor+0xbc>
   42d1c:	01800cc4 	movi	r6,51
   42d20:	34800b0e 	bge	r6,r18,42d50 <floor+0xdc>
   42d24:	01810004 	movi	r6,1024
   42d28:	91802f26 	beq	r18,r6,42de8 <floor+0x174>
   42d2c:	3807883a 	mov	r3,r7
   42d30:	dfc00517 	ldw	ra,20(sp)
   42d34:	dd000417 	ldw	r20,16(sp)
   42d38:	dcc00317 	ldw	r19,12(sp)
   42d3c:	dc800217 	ldw	r18,8(sp)
   42d40:	dc400117 	ldw	r17,4(sp)
   42d44:	dc000017 	ldw	r16,0(sp)
   42d48:	dec00604 	addi	sp,sp,24
   42d4c:	f800283a 	ret
   42d50:	423efb44 	addi	r8,r8,-1043
   42d54:	053fffc4 	movi	r20,-1
   42d58:	a228d83a 	srl	r20,r20,r8
   42d5c:	250c703a 	and	r6,r4,r20
   42d60:	303ff226 	beq	r6,zero,42d2c <__alt_data_end+0xfffc2d2c>
   42d64:	01a20034 	movhi	r6,34816
   42d68:	01df8e34 	movhi	r7,32312
   42d6c:	319d6704 	addi	r6,r6,30108
   42d70:	39f90f04 	addi	r7,r7,-7108
   42d74:	00431cc0 	call	431cc <__adddf3>
   42d78:	000d883a 	mov	r6,zero
   42d7c:	000f883a 	mov	r7,zero
   42d80:	1009883a 	mov	r4,r2
   42d84:	180b883a 	mov	r5,r3
   42d88:	0043b000 	call	43b00 <__gedf2>
   42d8c:	00bfe00e 	bge	zero,r2,42d10 <__alt_data_end+0xfffc2d10>
   42d90:	80001c16 	blt	r16,zero,42e04 <floor+0x190>
   42d94:	0510303a 	nor	r8,zero,r20
   42d98:	9821883a 	mov	r16,r19
   42d9c:	8a22703a 	and	r17,r17,r8
   42da0:	8805883a 	mov	r2,r17
   42da4:	8007883a 	mov	r3,r16
   42da8:	003fe106 	br	42d30 <__alt_data_end+0xfffc2d30>
   42dac:	01a20034 	movhi	r6,34816
   42db0:	01df8e34 	movhi	r7,32312
   42db4:	319d6704 	addi	r6,r6,30108
   42db8:	39f90f04 	addi	r7,r7,-7108
   42dbc:	00431cc0 	call	431cc <__adddf3>
   42dc0:	000d883a 	mov	r6,zero
   42dc4:	000f883a 	mov	r7,zero
   42dc8:	1009883a 	mov	r4,r2
   42dcc:	180b883a 	mov	r5,r3
   42dd0:	0043b000 	call	43b00 <__gedf2>
   42dd4:	00bfce0e 	bge	zero,r2,42d10 <__alt_data_end+0xfffc2d10>
   42dd8:	80001516 	blt	r16,zero,42e30 <floor+0x1bc>
   42ddc:	0023883a 	mov	r17,zero
   42de0:	0021883a 	mov	r16,zero
   42de4:	003fca06 	br	42d10 <__alt_data_end+0xfffc2d10>
   42de8:	200d883a 	mov	r6,r4
   42dec:	00431cc0 	call	431cc <__adddf3>
   42df0:	003fcf06 	br	42d30 <__alt_data_end+0xfffc2d30>
   42df4:	00800434 	movhi	r2,16
   42df8:	14a5d83a 	sra	r18,r2,r18
   42dfc:	84a7883a 	add	r19,r16,r18
   42e00:	003fc006 	br	42d04 <__alt_data_end+0xfffc2d04>
   42e04:	00800504 	movi	r2,20
   42e08:	90801326 	beq	r18,r2,42e58 <floor+0x1e4>
   42e0c:	00800d04 	movi	r2,52
   42e10:	14a5c83a 	sub	r18,r2,r18
   42e14:	00800044 	movi	r2,1
   42e18:	1484983a 	sll	r2,r2,r18
   42e1c:	1445883a 	add	r2,r2,r17
   42e20:	14400b2e 	bgeu	r2,r17,42e50 <floor+0x1dc>
   42e24:	84c00044 	addi	r19,r16,1
   42e28:	1023883a 	mov	r17,r2
   42e2c:	003fd906 	br	42d94 <__alt_data_end+0xfffc2d94>
   42e30:	00a00034 	movhi	r2,32768
   42e34:	10bfffc4 	addi	r2,r2,-1
   42e38:	8084703a 	and	r2,r16,r2
   42e3c:	1462b03a 	or	r17,r2,r17
   42e40:	883fb326 	beq	r17,zero,42d10 <__alt_data_end+0xfffc2d10>
   42e44:	0023883a 	mov	r17,zero
   42e48:	042ffc34 	movhi	r16,49136
   42e4c:	003fb006 	br	42d10 <__alt_data_end+0xfffc2d10>
   42e50:	1023883a 	mov	r17,r2
   42e54:	003fcf06 	br	42d94 <__alt_data_end+0xfffc2d94>
   42e58:	84c00044 	addi	r19,r16,1
   42e5c:	003fcd06 	br	42d94 <__alt_data_end+0xfffc2d94>

00042e60 <scalbn>:
   42e60:	2a1ffc2c 	andhi	r8,r5,32752
   42e64:	4011d53a 	srai	r8,r8,20
   42e68:	defffe04 	addi	sp,sp,-8
   42e6c:	dc000015 	stw	r16,0(sp)
   42e70:	dfc00115 	stw	ra,4(sp)
   42e74:	280f883a 	mov	r7,r5
   42e78:	2015883a 	mov	r10,r4
   42e7c:	3021883a 	mov	r16,r6
   42e80:	40001e1e 	bne	r8,zero,42efc <scalbn+0x9c>
   42e84:	00a00034 	movhi	r2,32768
   42e88:	10bfffc4 	addi	r2,r2,-1
   42e8c:	2884703a 	and	r2,r5,r2
   42e90:	1104b03a 	or	r2,r2,r4
   42e94:	10002226 	beq	r2,zero,42f20 <scalbn+0xc0>
   42e98:	01d0d434 	movhi	r7,17232
   42e9c:	000d883a 	mov	r6,zero
   42ea0:	0043bdc0 	call	43bdc <__muldf3>
   42ea4:	013ffff4 	movhi	r4,65535
   42ea8:	210f2c04 	addi	r4,r4,15536
   42eac:	1015883a 	mov	r10,r2
   42eb0:	180f883a 	mov	r7,r3
   42eb4:	81002a16 	blt	r16,r4,42f60 <scalbn+0x100>
   42eb8:	191ffc2c 	andhi	r4,r3,32752
   42ebc:	2009d53a 	srai	r4,r4,20
   42ec0:	223ff284 	addi	r8,r4,-54
   42ec4:	8211883a 	add	r8,r16,r8
   42ec8:	0081ff84 	movi	r2,2046
   42ecc:	12002f16 	blt	r2,r8,42f8c <scalbn+0x12c>
   42ed0:	0200190e 	bge	zero,r8,42f38 <scalbn+0xd8>
   42ed4:	4010953a 	slli	r8,r8,20
   42ed8:	01600434 	movhi	r5,32784
   42edc:	297fffc4 	addi	r5,r5,-1
   42ee0:	194e703a 	and	r7,r3,r5
   42ee4:	5005883a 	mov	r2,r10
   42ee8:	3a06b03a 	or	r3,r7,r8
   42eec:	dfc00117 	ldw	ra,4(sp)
   42ef0:	dc000017 	ldw	r16,0(sp)
   42ef4:	dec00204 	addi	sp,sp,8
   42ef8:	f800283a 	ret
   42efc:	0081ffc4 	movi	r2,2047
   42f00:	2807883a 	mov	r3,r5
   42f04:	40bfef1e 	bne	r8,r2,42ec4 <__alt_data_end+0xfffc2ec4>
   42f08:	200d883a 	mov	r6,r4
   42f0c:	00431cc0 	call	431cc <__adddf3>
   42f10:	dfc00117 	ldw	ra,4(sp)
   42f14:	dc000017 	ldw	r16,0(sp)
   42f18:	dec00204 	addi	sp,sp,8
   42f1c:	f800283a 	ret
   42f20:	2005883a 	mov	r2,r4
   42f24:	2807883a 	mov	r3,r5
   42f28:	dfc00117 	ldw	ra,4(sp)
   42f2c:	dc000017 	ldw	r16,0(sp)
   42f30:	dec00204 	addi	sp,sp,8
   42f34:	f800283a 	ret
   42f38:	00bff2c4 	movi	r2,-53
   42f3c:	4080240e 	bge	r8,r2,42fd0 <scalbn+0x170>
   42f40:	00b0d414 	movui	r2,50000
   42f44:	14001116 	blt	r2,r16,42f8c <scalbn+0x12c>
   42f48:	0130be74 	movhi	r4,49913
   42f4c:	01406974 	movhi	r5,421
   42f50:	213cd644 	addi	r4,r4,-3239
   42f54:	295b87c4 	addi	r5,r5,28191
   42f58:	500d883a 	mov	r6,r10
   42f5c:	0042ffc0 	call	42ffc <copysign>
   42f60:	01b0be74 	movhi	r6,49913
   42f64:	01c06974 	movhi	r7,421
   42f68:	31bcd644 	addi	r6,r6,-3239
   42f6c:	39db87c4 	addi	r7,r7,28191
   42f70:	1009883a 	mov	r4,r2
   42f74:	180b883a 	mov	r5,r3
   42f78:	0043bdc0 	call	43bdc <__muldf3>
   42f7c:	dfc00117 	ldw	ra,4(sp)
   42f80:	dc000017 	ldw	r16,0(sp)
   42f84:	dec00204 	addi	sp,sp,8
   42f88:	f800283a 	ret
   42f8c:	01220034 	movhi	r4,34816
   42f90:	015f8e34 	movhi	r5,32312
   42f94:	500d883a 	mov	r6,r10
   42f98:	211d6704 	addi	r4,r4,30108
   42f9c:	29790f04 	addi	r5,r5,-7108
   42fa0:	0042ffc0 	call	42ffc <copysign>
   42fa4:	01a20034 	movhi	r6,34816
   42fa8:	01df8e34 	movhi	r7,32312
   42fac:	319d6704 	addi	r6,r6,30108
   42fb0:	39f90f04 	addi	r7,r7,-7108
   42fb4:	1009883a 	mov	r4,r2
   42fb8:	180b883a 	mov	r5,r3
   42fbc:	0043bdc0 	call	43bdc <__muldf3>
   42fc0:	dfc00117 	ldw	ra,4(sp)
   42fc4:	dc000017 	ldw	r16,0(sp)
   42fc8:	dec00204 	addi	sp,sp,8
   42fcc:	f800283a 	ret
   42fd0:	42000d84 	addi	r8,r8,54
   42fd4:	4012953a 	slli	r9,r8,20
   42fd8:	01e00434 	movhi	r7,32784
   42fdc:	39ffffc4 	addi	r7,r7,-1
   42fe0:	19ca703a 	and	r5,r3,r7
   42fe4:	000d883a 	mov	r6,zero
   42fe8:	01cf2434 	movhi	r7,15504
   42fec:	5009883a 	mov	r4,r10
   42ff0:	494ab03a 	or	r5,r9,r5
   42ff4:	0043bdc0 	call	43bdc <__muldf3>
   42ff8:	003fbc06 	br	42eec <__alt_data_end+0xfffc2eec>

00042ffc <copysign>:
   42ffc:	2005883a 	mov	r2,r4
   43000:	01200034 	movhi	r4,32768
   43004:	213fffc4 	addi	r4,r4,-1
   43008:	38e0002c 	andhi	r3,r7,32768
   4300c:	290a703a 	and	r5,r5,r4
   43010:	28c6b03a 	or	r3,r5,r3
   43014:	f800283a 	ret

00043018 <__divsi3>:
   43018:	20001b16 	blt	r4,zero,43088 <__divsi3+0x70>
   4301c:	000f883a 	mov	r7,zero
   43020:	28001616 	blt	r5,zero,4307c <__divsi3+0x64>
   43024:	200d883a 	mov	r6,r4
   43028:	29001a2e 	bgeu	r5,r4,43094 <__divsi3+0x7c>
   4302c:	00800804 	movi	r2,32
   43030:	00c00044 	movi	r3,1
   43034:	00000106 	br	4303c <__divsi3+0x24>
   43038:	10000d26 	beq	r2,zero,43070 <__divsi3+0x58>
   4303c:	294b883a 	add	r5,r5,r5
   43040:	10bfffc4 	addi	r2,r2,-1
   43044:	18c7883a 	add	r3,r3,r3
   43048:	293ffb36 	bltu	r5,r4,43038 <__alt_data_end+0xfffc3038>
   4304c:	0005883a 	mov	r2,zero
   43050:	18000726 	beq	r3,zero,43070 <__divsi3+0x58>
   43054:	0005883a 	mov	r2,zero
   43058:	31400236 	bltu	r6,r5,43064 <__divsi3+0x4c>
   4305c:	314dc83a 	sub	r6,r6,r5
   43060:	10c4b03a 	or	r2,r2,r3
   43064:	1806d07a 	srli	r3,r3,1
   43068:	280ad07a 	srli	r5,r5,1
   4306c:	183ffa1e 	bne	r3,zero,43058 <__alt_data_end+0xfffc3058>
   43070:	38000126 	beq	r7,zero,43078 <__divsi3+0x60>
   43074:	0085c83a 	sub	r2,zero,r2
   43078:	f800283a 	ret
   4307c:	014bc83a 	sub	r5,zero,r5
   43080:	39c0005c 	xori	r7,r7,1
   43084:	003fe706 	br	43024 <__alt_data_end+0xfffc3024>
   43088:	0109c83a 	sub	r4,zero,r4
   4308c:	01c00044 	movi	r7,1
   43090:	003fe306 	br	43020 <__alt_data_end+0xfffc3020>
   43094:	00c00044 	movi	r3,1
   43098:	003fee06 	br	43054 <__alt_data_end+0xfffc3054>

0004309c <__modsi3>:
   4309c:	20001716 	blt	r4,zero,430fc <__modsi3+0x60>
   430a0:	000f883a 	mov	r7,zero
   430a4:	2005883a 	mov	r2,r4
   430a8:	28001216 	blt	r5,zero,430f4 <__modsi3+0x58>
   430ac:	2900162e 	bgeu	r5,r4,43108 <__modsi3+0x6c>
   430b0:	01800804 	movi	r6,32
   430b4:	00c00044 	movi	r3,1
   430b8:	00000106 	br	430c0 <__modsi3+0x24>
   430bc:	30000a26 	beq	r6,zero,430e8 <__modsi3+0x4c>
   430c0:	294b883a 	add	r5,r5,r5
   430c4:	31bfffc4 	addi	r6,r6,-1
   430c8:	18c7883a 	add	r3,r3,r3
   430cc:	293ffb36 	bltu	r5,r4,430bc <__alt_data_end+0xfffc30bc>
   430d0:	18000526 	beq	r3,zero,430e8 <__modsi3+0x4c>
   430d4:	1806d07a 	srli	r3,r3,1
   430d8:	11400136 	bltu	r2,r5,430e0 <__modsi3+0x44>
   430dc:	1145c83a 	sub	r2,r2,r5
   430e0:	280ad07a 	srli	r5,r5,1
   430e4:	183ffb1e 	bne	r3,zero,430d4 <__alt_data_end+0xfffc30d4>
   430e8:	38000126 	beq	r7,zero,430f0 <__modsi3+0x54>
   430ec:	0085c83a 	sub	r2,zero,r2
   430f0:	f800283a 	ret
   430f4:	014bc83a 	sub	r5,zero,r5
   430f8:	003fec06 	br	430ac <__alt_data_end+0xfffc30ac>
   430fc:	0109c83a 	sub	r4,zero,r4
   43100:	01c00044 	movi	r7,1
   43104:	003fe706 	br	430a4 <__alt_data_end+0xfffc30a4>
   43108:	00c00044 	movi	r3,1
   4310c:	003ff106 	br	430d4 <__alt_data_end+0xfffc30d4>

00043110 <__udivsi3>:
   43110:	200d883a 	mov	r6,r4
   43114:	2900152e 	bgeu	r5,r4,4316c <__udivsi3+0x5c>
   43118:	28001416 	blt	r5,zero,4316c <__udivsi3+0x5c>
   4311c:	00800804 	movi	r2,32
   43120:	00c00044 	movi	r3,1
   43124:	00000206 	br	43130 <__udivsi3+0x20>
   43128:	10000e26 	beq	r2,zero,43164 <__udivsi3+0x54>
   4312c:	28000516 	blt	r5,zero,43144 <__udivsi3+0x34>
   43130:	294b883a 	add	r5,r5,r5
   43134:	10bfffc4 	addi	r2,r2,-1
   43138:	18c7883a 	add	r3,r3,r3
   4313c:	293ffa36 	bltu	r5,r4,43128 <__alt_data_end+0xfffc3128>
   43140:	18000826 	beq	r3,zero,43164 <__udivsi3+0x54>
   43144:	0005883a 	mov	r2,zero
   43148:	31400236 	bltu	r6,r5,43154 <__udivsi3+0x44>
   4314c:	314dc83a 	sub	r6,r6,r5
   43150:	10c4b03a 	or	r2,r2,r3
   43154:	1806d07a 	srli	r3,r3,1
   43158:	280ad07a 	srli	r5,r5,1
   4315c:	183ffa1e 	bne	r3,zero,43148 <__alt_data_end+0xfffc3148>
   43160:	f800283a 	ret
   43164:	0005883a 	mov	r2,zero
   43168:	f800283a 	ret
   4316c:	00c00044 	movi	r3,1
   43170:	003ff406 	br	43144 <__alt_data_end+0xfffc3144>

00043174 <__umodsi3>:
   43174:	2005883a 	mov	r2,r4
   43178:	2900122e 	bgeu	r5,r4,431c4 <__umodsi3+0x50>
   4317c:	28001116 	blt	r5,zero,431c4 <__umodsi3+0x50>
   43180:	01800804 	movi	r6,32
   43184:	00c00044 	movi	r3,1
   43188:	00000206 	br	43194 <__umodsi3+0x20>
   4318c:	30000c26 	beq	r6,zero,431c0 <__umodsi3+0x4c>
   43190:	28000516 	blt	r5,zero,431a8 <__umodsi3+0x34>
   43194:	294b883a 	add	r5,r5,r5
   43198:	31bfffc4 	addi	r6,r6,-1
   4319c:	18c7883a 	add	r3,r3,r3
   431a0:	293ffa36 	bltu	r5,r4,4318c <__alt_data_end+0xfffc318c>
   431a4:	18000626 	beq	r3,zero,431c0 <__umodsi3+0x4c>
   431a8:	1806d07a 	srli	r3,r3,1
   431ac:	11400136 	bltu	r2,r5,431b4 <__umodsi3+0x40>
   431b0:	1145c83a 	sub	r2,r2,r5
   431b4:	280ad07a 	srli	r5,r5,1
   431b8:	183ffb1e 	bne	r3,zero,431a8 <__alt_data_end+0xfffc31a8>
   431bc:	f800283a 	ret
   431c0:	f800283a 	ret
   431c4:	00c00044 	movi	r3,1
   431c8:	003ff706 	br	431a8 <__alt_data_end+0xfffc31a8>

000431cc <__adddf3>:
   431cc:	02c00434 	movhi	r11,16
   431d0:	5affffc4 	addi	r11,r11,-1
   431d4:	2806d7fa 	srli	r3,r5,31
   431d8:	2ad4703a 	and	r10,r5,r11
   431dc:	3ad2703a 	and	r9,r7,r11
   431e0:	3804d53a 	srli	r2,r7,20
   431e4:	3018d77a 	srli	r12,r6,29
   431e8:	280ad53a 	srli	r5,r5,20
   431ec:	501490fa 	slli	r10,r10,3
   431f0:	2010d77a 	srli	r8,r4,29
   431f4:	481290fa 	slli	r9,r9,3
   431f8:	380ed7fa 	srli	r7,r7,31
   431fc:	defffb04 	addi	sp,sp,-20
   43200:	dc800215 	stw	r18,8(sp)
   43204:	dc400115 	stw	r17,4(sp)
   43208:	dc000015 	stw	r16,0(sp)
   4320c:	dfc00415 	stw	ra,16(sp)
   43210:	dcc00315 	stw	r19,12(sp)
   43214:	1c803fcc 	andi	r18,r3,255
   43218:	2c01ffcc 	andi	r16,r5,2047
   4321c:	5210b03a 	or	r8,r10,r8
   43220:	202290fa 	slli	r17,r4,3
   43224:	1081ffcc 	andi	r2,r2,2047
   43228:	4b12b03a 	or	r9,r9,r12
   4322c:	300c90fa 	slli	r6,r6,3
   43230:	91c07526 	beq	r18,r7,43408 <__adddf3+0x23c>
   43234:	8087c83a 	sub	r3,r16,r2
   43238:	00c0ab0e 	bge	zero,r3,434e8 <__adddf3+0x31c>
   4323c:	10002a1e 	bne	r2,zero,432e8 <__adddf3+0x11c>
   43240:	4984b03a 	or	r2,r9,r6
   43244:	1000961e 	bne	r2,zero,434a0 <__adddf3+0x2d4>
   43248:	888001cc 	andi	r2,r17,7
   4324c:	10000726 	beq	r2,zero,4326c <__adddf3+0xa0>
   43250:	888003cc 	andi	r2,r17,15
   43254:	00c00104 	movi	r3,4
   43258:	10c00426 	beq	r2,r3,4326c <__adddf3+0xa0>
   4325c:	88c7883a 	add	r3,r17,r3
   43260:	1c63803a 	cmpltu	r17,r3,r17
   43264:	4451883a 	add	r8,r8,r17
   43268:	1823883a 	mov	r17,r3
   4326c:	4080202c 	andhi	r2,r8,128
   43270:	10005926 	beq	r2,zero,433d8 <__adddf3+0x20c>
   43274:	84000044 	addi	r16,r16,1
   43278:	0081ffc4 	movi	r2,2047
   4327c:	8080ba26 	beq	r16,r2,43568 <__adddf3+0x39c>
   43280:	00bfe034 	movhi	r2,65408
   43284:	10bfffc4 	addi	r2,r2,-1
   43288:	4090703a 	and	r8,r8,r2
   4328c:	4004977a 	slli	r2,r8,29
   43290:	4010927a 	slli	r8,r8,9
   43294:	8822d0fa 	srli	r17,r17,3
   43298:	8401ffcc 	andi	r16,r16,2047
   4329c:	4010d33a 	srli	r8,r8,12
   432a0:	9007883a 	mov	r3,r18
   432a4:	1444b03a 	or	r2,r2,r17
   432a8:	8401ffcc 	andi	r16,r16,2047
   432ac:	8020953a 	slli	r16,r16,20
   432b0:	18c03fcc 	andi	r3,r3,255
   432b4:	01000434 	movhi	r4,16
   432b8:	213fffc4 	addi	r4,r4,-1
   432bc:	180697fa 	slli	r3,r3,31
   432c0:	4110703a 	and	r8,r8,r4
   432c4:	4410b03a 	or	r8,r8,r16
   432c8:	40c6b03a 	or	r3,r8,r3
   432cc:	dfc00417 	ldw	ra,16(sp)
   432d0:	dcc00317 	ldw	r19,12(sp)
   432d4:	dc800217 	ldw	r18,8(sp)
   432d8:	dc400117 	ldw	r17,4(sp)
   432dc:	dc000017 	ldw	r16,0(sp)
   432e0:	dec00504 	addi	sp,sp,20
   432e4:	f800283a 	ret
   432e8:	0081ffc4 	movi	r2,2047
   432ec:	80bfd626 	beq	r16,r2,43248 <__alt_data_end+0xfffc3248>
   432f0:	4a402034 	orhi	r9,r9,128
   432f4:	00800e04 	movi	r2,56
   432f8:	10c09f16 	blt	r2,r3,43578 <__adddf3+0x3ac>
   432fc:	008007c4 	movi	r2,31
   43300:	10c0c216 	blt	r2,r3,4360c <__adddf3+0x440>
   43304:	00800804 	movi	r2,32
   43308:	10c5c83a 	sub	r2,r2,r3
   4330c:	488a983a 	sll	r5,r9,r2
   43310:	30c8d83a 	srl	r4,r6,r3
   43314:	3084983a 	sll	r2,r6,r2
   43318:	48c6d83a 	srl	r3,r9,r3
   4331c:	290cb03a 	or	r6,r5,r4
   43320:	1004c03a 	cmpne	r2,r2,zero
   43324:	308cb03a 	or	r6,r6,r2
   43328:	898dc83a 	sub	r6,r17,r6
   4332c:	89a3803a 	cmpltu	r17,r17,r6
   43330:	40d1c83a 	sub	r8,r8,r3
   43334:	4451c83a 	sub	r8,r8,r17
   43338:	3023883a 	mov	r17,r6
   4333c:	4080202c 	andhi	r2,r8,128
   43340:	10002326 	beq	r2,zero,433d0 <__adddf3+0x204>
   43344:	04c02034 	movhi	r19,128
   43348:	9cffffc4 	addi	r19,r19,-1
   4334c:	44e6703a 	and	r19,r8,r19
   43350:	98007626 	beq	r19,zero,4352c <__adddf3+0x360>
   43354:	9809883a 	mov	r4,r19
   43358:	00450040 	call	45004 <__clzsi2>
   4335c:	10fffe04 	addi	r3,r2,-8
   43360:	010007c4 	movi	r4,31
   43364:	20c07716 	blt	r4,r3,43544 <__adddf3+0x378>
   43368:	00800804 	movi	r2,32
   4336c:	10c5c83a 	sub	r2,r2,r3
   43370:	8884d83a 	srl	r2,r17,r2
   43374:	98d0983a 	sll	r8,r19,r3
   43378:	88e2983a 	sll	r17,r17,r3
   4337c:	1204b03a 	or	r2,r2,r8
   43380:	1c007416 	blt	r3,r16,43554 <__adddf3+0x388>
   43384:	1c21c83a 	sub	r16,r3,r16
   43388:	82000044 	addi	r8,r16,1
   4338c:	00c007c4 	movi	r3,31
   43390:	1a009116 	blt	r3,r8,435d8 <__adddf3+0x40c>
   43394:	00c00804 	movi	r3,32
   43398:	1a07c83a 	sub	r3,r3,r8
   4339c:	8a08d83a 	srl	r4,r17,r8
   433a0:	88e2983a 	sll	r17,r17,r3
   433a4:	10c6983a 	sll	r3,r2,r3
   433a8:	1210d83a 	srl	r8,r2,r8
   433ac:	8804c03a 	cmpne	r2,r17,zero
   433b0:	1906b03a 	or	r3,r3,r4
   433b4:	18a2b03a 	or	r17,r3,r2
   433b8:	0021883a 	mov	r16,zero
   433bc:	003fa206 	br	43248 <__alt_data_end+0xfffc3248>
   433c0:	1890b03a 	or	r8,r3,r2
   433c4:	40017d26 	beq	r8,zero,439bc <__adddf3+0x7f0>
   433c8:	1011883a 	mov	r8,r2
   433cc:	1823883a 	mov	r17,r3
   433d0:	888001cc 	andi	r2,r17,7
   433d4:	103f9e1e 	bne	r2,zero,43250 <__alt_data_end+0xfffc3250>
   433d8:	4004977a 	slli	r2,r8,29
   433dc:	8822d0fa 	srli	r17,r17,3
   433e0:	4010d0fa 	srli	r8,r8,3
   433e4:	9007883a 	mov	r3,r18
   433e8:	1444b03a 	or	r2,r2,r17
   433ec:	0101ffc4 	movi	r4,2047
   433f0:	81002426 	beq	r16,r4,43484 <__adddf3+0x2b8>
   433f4:	8120703a 	and	r16,r16,r4
   433f8:	01000434 	movhi	r4,16
   433fc:	213fffc4 	addi	r4,r4,-1
   43400:	4110703a 	and	r8,r8,r4
   43404:	003fa806 	br	432a8 <__alt_data_end+0xfffc32a8>
   43408:	8089c83a 	sub	r4,r16,r2
   4340c:	01005e0e 	bge	zero,r4,43588 <__adddf3+0x3bc>
   43410:	10002b26 	beq	r2,zero,434c0 <__adddf3+0x2f4>
   43414:	0081ffc4 	movi	r2,2047
   43418:	80bf8b26 	beq	r16,r2,43248 <__alt_data_end+0xfffc3248>
   4341c:	4a402034 	orhi	r9,r9,128
   43420:	00800e04 	movi	r2,56
   43424:	1100a40e 	bge	r2,r4,436b8 <__adddf3+0x4ec>
   43428:	498cb03a 	or	r6,r9,r6
   4342c:	300ac03a 	cmpne	r5,r6,zero
   43430:	0013883a 	mov	r9,zero
   43434:	2c4b883a 	add	r5,r5,r17
   43438:	2c63803a 	cmpltu	r17,r5,r17
   4343c:	4a11883a 	add	r8,r9,r8
   43440:	8a11883a 	add	r8,r17,r8
   43444:	2823883a 	mov	r17,r5
   43448:	4080202c 	andhi	r2,r8,128
   4344c:	103fe026 	beq	r2,zero,433d0 <__alt_data_end+0xfffc33d0>
   43450:	84000044 	addi	r16,r16,1
   43454:	0081ffc4 	movi	r2,2047
   43458:	8080d226 	beq	r16,r2,437a4 <__adddf3+0x5d8>
   4345c:	00bfe034 	movhi	r2,65408
   43460:	10bfffc4 	addi	r2,r2,-1
   43464:	4090703a 	and	r8,r8,r2
   43468:	880ad07a 	srli	r5,r17,1
   4346c:	400897fa 	slli	r4,r8,31
   43470:	88c0004c 	andi	r3,r17,1
   43474:	28e2b03a 	or	r17,r5,r3
   43478:	4010d07a 	srli	r8,r8,1
   4347c:	2462b03a 	or	r17,r4,r17
   43480:	003f7106 	br	43248 <__alt_data_end+0xfffc3248>
   43484:	4088b03a 	or	r4,r8,r2
   43488:	20014526 	beq	r4,zero,439a0 <__adddf3+0x7d4>
   4348c:	01000434 	movhi	r4,16
   43490:	42000234 	orhi	r8,r8,8
   43494:	213fffc4 	addi	r4,r4,-1
   43498:	4110703a 	and	r8,r8,r4
   4349c:	003f8206 	br	432a8 <__alt_data_end+0xfffc32a8>
   434a0:	18ffffc4 	addi	r3,r3,-1
   434a4:	1800491e 	bne	r3,zero,435cc <__adddf3+0x400>
   434a8:	898bc83a 	sub	r5,r17,r6
   434ac:	8963803a 	cmpltu	r17,r17,r5
   434b0:	4251c83a 	sub	r8,r8,r9
   434b4:	4451c83a 	sub	r8,r8,r17
   434b8:	2823883a 	mov	r17,r5
   434bc:	003f9f06 	br	4333c <__alt_data_end+0xfffc333c>
   434c0:	4984b03a 	or	r2,r9,r6
   434c4:	103f6026 	beq	r2,zero,43248 <__alt_data_end+0xfffc3248>
   434c8:	213fffc4 	addi	r4,r4,-1
   434cc:	2000931e 	bne	r4,zero,4371c <__adddf3+0x550>
   434d0:	898d883a 	add	r6,r17,r6
   434d4:	3463803a 	cmpltu	r17,r6,r17
   434d8:	4251883a 	add	r8,r8,r9
   434dc:	8a11883a 	add	r8,r17,r8
   434e0:	3023883a 	mov	r17,r6
   434e4:	003fd806 	br	43448 <__alt_data_end+0xfffc3448>
   434e8:	1800541e 	bne	r3,zero,4363c <__adddf3+0x470>
   434ec:	80800044 	addi	r2,r16,1
   434f0:	1081ffcc 	andi	r2,r2,2047
   434f4:	00c00044 	movi	r3,1
   434f8:	1880a00e 	bge	r3,r2,4377c <__adddf3+0x5b0>
   434fc:	8989c83a 	sub	r4,r17,r6
   43500:	8905803a 	cmpltu	r2,r17,r4
   43504:	4267c83a 	sub	r19,r8,r9
   43508:	98a7c83a 	sub	r19,r19,r2
   4350c:	9880202c 	andhi	r2,r19,128
   43510:	10006326 	beq	r2,zero,436a0 <__adddf3+0x4d4>
   43514:	3463c83a 	sub	r17,r6,r17
   43518:	4a07c83a 	sub	r3,r9,r8
   4351c:	344d803a 	cmpltu	r6,r6,r17
   43520:	19a7c83a 	sub	r19,r3,r6
   43524:	3825883a 	mov	r18,r7
   43528:	983f8a1e 	bne	r19,zero,43354 <__alt_data_end+0xfffc3354>
   4352c:	8809883a 	mov	r4,r17
   43530:	00450040 	call	45004 <__clzsi2>
   43534:	10800804 	addi	r2,r2,32
   43538:	10fffe04 	addi	r3,r2,-8
   4353c:	010007c4 	movi	r4,31
   43540:	20ff890e 	bge	r4,r3,43368 <__alt_data_end+0xfffc3368>
   43544:	10bff604 	addi	r2,r2,-40
   43548:	8884983a 	sll	r2,r17,r2
   4354c:	0023883a 	mov	r17,zero
   43550:	1c3f8c0e 	bge	r3,r16,43384 <__alt_data_end+0xfffc3384>
   43554:	023fe034 	movhi	r8,65408
   43558:	423fffc4 	addi	r8,r8,-1
   4355c:	80e1c83a 	sub	r16,r16,r3
   43560:	1210703a 	and	r8,r2,r8
   43564:	003f3806 	br	43248 <__alt_data_end+0xfffc3248>
   43568:	9007883a 	mov	r3,r18
   4356c:	0011883a 	mov	r8,zero
   43570:	0005883a 	mov	r2,zero
   43574:	003f4c06 	br	432a8 <__alt_data_end+0xfffc32a8>
   43578:	498cb03a 	or	r6,r9,r6
   4357c:	300cc03a 	cmpne	r6,r6,zero
   43580:	0007883a 	mov	r3,zero
   43584:	003f6806 	br	43328 <__alt_data_end+0xfffc3328>
   43588:	20009c1e 	bne	r4,zero,437fc <__adddf3+0x630>
   4358c:	80800044 	addi	r2,r16,1
   43590:	1141ffcc 	andi	r5,r2,2047
   43594:	01000044 	movi	r4,1
   43598:	2140670e 	bge	r4,r5,43738 <__adddf3+0x56c>
   4359c:	0101ffc4 	movi	r4,2047
   435a0:	11007f26 	beq	r2,r4,437a0 <__adddf3+0x5d4>
   435a4:	898d883a 	add	r6,r17,r6
   435a8:	4247883a 	add	r3,r8,r9
   435ac:	3451803a 	cmpltu	r8,r6,r17
   435b0:	40d1883a 	add	r8,r8,r3
   435b4:	402297fa 	slli	r17,r8,31
   435b8:	300cd07a 	srli	r6,r6,1
   435bc:	4010d07a 	srli	r8,r8,1
   435c0:	1021883a 	mov	r16,r2
   435c4:	89a2b03a 	or	r17,r17,r6
   435c8:	003f1f06 	br	43248 <__alt_data_end+0xfffc3248>
   435cc:	0081ffc4 	movi	r2,2047
   435d0:	80bf481e 	bne	r16,r2,432f4 <__alt_data_end+0xfffc32f4>
   435d4:	003f1c06 	br	43248 <__alt_data_end+0xfffc3248>
   435d8:	843ff844 	addi	r16,r16,-31
   435dc:	01000804 	movi	r4,32
   435e0:	1406d83a 	srl	r3,r2,r16
   435e4:	41005026 	beq	r8,r4,43728 <__adddf3+0x55c>
   435e8:	01001004 	movi	r4,64
   435ec:	2211c83a 	sub	r8,r4,r8
   435f0:	1204983a 	sll	r2,r2,r8
   435f4:	88a2b03a 	or	r17,r17,r2
   435f8:	8822c03a 	cmpne	r17,r17,zero
   435fc:	1c62b03a 	or	r17,r3,r17
   43600:	0011883a 	mov	r8,zero
   43604:	0021883a 	mov	r16,zero
   43608:	003f7106 	br	433d0 <__alt_data_end+0xfffc33d0>
   4360c:	193ff804 	addi	r4,r3,-32
   43610:	00800804 	movi	r2,32
   43614:	4908d83a 	srl	r4,r9,r4
   43618:	18804526 	beq	r3,r2,43730 <__adddf3+0x564>
   4361c:	00801004 	movi	r2,64
   43620:	10c5c83a 	sub	r2,r2,r3
   43624:	4886983a 	sll	r3,r9,r2
   43628:	198cb03a 	or	r6,r3,r6
   4362c:	300cc03a 	cmpne	r6,r6,zero
   43630:	218cb03a 	or	r6,r4,r6
   43634:	0007883a 	mov	r3,zero
   43638:	003f3b06 	br	43328 <__alt_data_end+0xfffc3328>
   4363c:	80002a26 	beq	r16,zero,436e8 <__adddf3+0x51c>
   43640:	0101ffc4 	movi	r4,2047
   43644:	11006826 	beq	r2,r4,437e8 <__adddf3+0x61c>
   43648:	00c7c83a 	sub	r3,zero,r3
   4364c:	42002034 	orhi	r8,r8,128
   43650:	01000e04 	movi	r4,56
   43654:	20c07c16 	blt	r4,r3,43848 <__adddf3+0x67c>
   43658:	010007c4 	movi	r4,31
   4365c:	20c0da16 	blt	r4,r3,439c8 <__adddf3+0x7fc>
   43660:	01000804 	movi	r4,32
   43664:	20c9c83a 	sub	r4,r4,r3
   43668:	4114983a 	sll	r10,r8,r4
   4366c:	88cad83a 	srl	r5,r17,r3
   43670:	8908983a 	sll	r4,r17,r4
   43674:	40c6d83a 	srl	r3,r8,r3
   43678:	5162b03a 	or	r17,r10,r5
   4367c:	2008c03a 	cmpne	r4,r4,zero
   43680:	8922b03a 	or	r17,r17,r4
   43684:	3463c83a 	sub	r17,r6,r17
   43688:	48c7c83a 	sub	r3,r9,r3
   4368c:	344d803a 	cmpltu	r6,r6,r17
   43690:	1991c83a 	sub	r8,r3,r6
   43694:	1021883a 	mov	r16,r2
   43698:	3825883a 	mov	r18,r7
   4369c:	003f2706 	br	4333c <__alt_data_end+0xfffc333c>
   436a0:	24d0b03a 	or	r8,r4,r19
   436a4:	40001b1e 	bne	r8,zero,43714 <__adddf3+0x548>
   436a8:	0005883a 	mov	r2,zero
   436ac:	0007883a 	mov	r3,zero
   436b0:	0021883a 	mov	r16,zero
   436b4:	003f4d06 	br	433ec <__alt_data_end+0xfffc33ec>
   436b8:	008007c4 	movi	r2,31
   436bc:	11003c16 	blt	r2,r4,437b0 <__adddf3+0x5e4>
   436c0:	00800804 	movi	r2,32
   436c4:	1105c83a 	sub	r2,r2,r4
   436c8:	488e983a 	sll	r7,r9,r2
   436cc:	310ad83a 	srl	r5,r6,r4
   436d0:	3084983a 	sll	r2,r6,r2
   436d4:	4912d83a 	srl	r9,r9,r4
   436d8:	394ab03a 	or	r5,r7,r5
   436dc:	1004c03a 	cmpne	r2,r2,zero
   436e0:	288ab03a 	or	r5,r5,r2
   436e4:	003f5306 	br	43434 <__alt_data_end+0xfffc3434>
   436e8:	4448b03a 	or	r4,r8,r17
   436ec:	20003e26 	beq	r4,zero,437e8 <__adddf3+0x61c>
   436f0:	00c6303a 	nor	r3,zero,r3
   436f4:	18003a1e 	bne	r3,zero,437e0 <__adddf3+0x614>
   436f8:	3463c83a 	sub	r17,r6,r17
   436fc:	4a07c83a 	sub	r3,r9,r8
   43700:	344d803a 	cmpltu	r6,r6,r17
   43704:	1991c83a 	sub	r8,r3,r6
   43708:	1021883a 	mov	r16,r2
   4370c:	3825883a 	mov	r18,r7
   43710:	003f0a06 	br	4333c <__alt_data_end+0xfffc333c>
   43714:	2023883a 	mov	r17,r4
   43718:	003f0d06 	br	43350 <__alt_data_end+0xfffc3350>
   4371c:	0081ffc4 	movi	r2,2047
   43720:	80bf3f1e 	bne	r16,r2,43420 <__alt_data_end+0xfffc3420>
   43724:	003ec806 	br	43248 <__alt_data_end+0xfffc3248>
   43728:	0005883a 	mov	r2,zero
   4372c:	003fb106 	br	435f4 <__alt_data_end+0xfffc35f4>
   43730:	0007883a 	mov	r3,zero
   43734:	003fbc06 	br	43628 <__alt_data_end+0xfffc3628>
   43738:	4444b03a 	or	r2,r8,r17
   4373c:	8000871e 	bne	r16,zero,4395c <__adddf3+0x790>
   43740:	1000ba26 	beq	r2,zero,43a2c <__adddf3+0x860>
   43744:	4984b03a 	or	r2,r9,r6
   43748:	103ebf26 	beq	r2,zero,43248 <__alt_data_end+0xfffc3248>
   4374c:	8985883a 	add	r2,r17,r6
   43750:	4247883a 	add	r3,r8,r9
   43754:	1451803a 	cmpltu	r8,r2,r17
   43758:	40d1883a 	add	r8,r8,r3
   4375c:	40c0202c 	andhi	r3,r8,128
   43760:	1023883a 	mov	r17,r2
   43764:	183f1a26 	beq	r3,zero,433d0 <__alt_data_end+0xfffc33d0>
   43768:	00bfe034 	movhi	r2,65408
   4376c:	10bfffc4 	addi	r2,r2,-1
   43770:	2021883a 	mov	r16,r4
   43774:	4090703a 	and	r8,r8,r2
   43778:	003eb306 	br	43248 <__alt_data_end+0xfffc3248>
   4377c:	4444b03a 	or	r2,r8,r17
   43780:	8000291e 	bne	r16,zero,43828 <__adddf3+0x65c>
   43784:	10004b1e 	bne	r2,zero,438b4 <__adddf3+0x6e8>
   43788:	4990b03a 	or	r8,r9,r6
   4378c:	40008b26 	beq	r8,zero,439bc <__adddf3+0x7f0>
   43790:	4811883a 	mov	r8,r9
   43794:	3023883a 	mov	r17,r6
   43798:	3825883a 	mov	r18,r7
   4379c:	003eaa06 	br	43248 <__alt_data_end+0xfffc3248>
   437a0:	1021883a 	mov	r16,r2
   437a4:	0011883a 	mov	r8,zero
   437a8:	0005883a 	mov	r2,zero
   437ac:	003f0f06 	br	433ec <__alt_data_end+0xfffc33ec>
   437b0:	217ff804 	addi	r5,r4,-32
   437b4:	00800804 	movi	r2,32
   437b8:	494ad83a 	srl	r5,r9,r5
   437bc:	20807d26 	beq	r4,r2,439b4 <__adddf3+0x7e8>
   437c0:	00801004 	movi	r2,64
   437c4:	1109c83a 	sub	r4,r2,r4
   437c8:	4912983a 	sll	r9,r9,r4
   437cc:	498cb03a 	or	r6,r9,r6
   437d0:	300cc03a 	cmpne	r6,r6,zero
   437d4:	298ab03a 	or	r5,r5,r6
   437d8:	0013883a 	mov	r9,zero
   437dc:	003f1506 	br	43434 <__alt_data_end+0xfffc3434>
   437e0:	0101ffc4 	movi	r4,2047
   437e4:	113f9a1e 	bne	r2,r4,43650 <__alt_data_end+0xfffc3650>
   437e8:	4811883a 	mov	r8,r9
   437ec:	3023883a 	mov	r17,r6
   437f0:	1021883a 	mov	r16,r2
   437f4:	3825883a 	mov	r18,r7
   437f8:	003e9306 	br	43248 <__alt_data_end+0xfffc3248>
   437fc:	8000161e 	bne	r16,zero,43858 <__adddf3+0x68c>
   43800:	444ab03a 	or	r5,r8,r17
   43804:	28005126 	beq	r5,zero,4394c <__adddf3+0x780>
   43808:	0108303a 	nor	r4,zero,r4
   4380c:	20004d1e 	bne	r4,zero,43944 <__adddf3+0x778>
   43810:	89a3883a 	add	r17,r17,r6
   43814:	4253883a 	add	r9,r8,r9
   43818:	898d803a 	cmpltu	r6,r17,r6
   4381c:	3251883a 	add	r8,r6,r9
   43820:	1021883a 	mov	r16,r2
   43824:	003f0806 	br	43448 <__alt_data_end+0xfffc3448>
   43828:	1000301e 	bne	r2,zero,438ec <__adddf3+0x720>
   4382c:	4984b03a 	or	r2,r9,r6
   43830:	10007126 	beq	r2,zero,439f8 <__adddf3+0x82c>
   43834:	4811883a 	mov	r8,r9
   43838:	3023883a 	mov	r17,r6
   4383c:	3825883a 	mov	r18,r7
   43840:	0401ffc4 	movi	r16,2047
   43844:	003e8006 	br	43248 <__alt_data_end+0xfffc3248>
   43848:	4462b03a 	or	r17,r8,r17
   4384c:	8822c03a 	cmpne	r17,r17,zero
   43850:	0007883a 	mov	r3,zero
   43854:	003f8b06 	br	43684 <__alt_data_end+0xfffc3684>
   43858:	0141ffc4 	movi	r5,2047
   4385c:	11403b26 	beq	r2,r5,4394c <__adddf3+0x780>
   43860:	0109c83a 	sub	r4,zero,r4
   43864:	42002034 	orhi	r8,r8,128
   43868:	01400e04 	movi	r5,56
   4386c:	29006716 	blt	r5,r4,43a0c <__adddf3+0x840>
   43870:	014007c4 	movi	r5,31
   43874:	29007016 	blt	r5,r4,43a38 <__adddf3+0x86c>
   43878:	01400804 	movi	r5,32
   4387c:	290bc83a 	sub	r5,r5,r4
   43880:	4154983a 	sll	r10,r8,r5
   43884:	890ed83a 	srl	r7,r17,r4
   43888:	894a983a 	sll	r5,r17,r5
   4388c:	4108d83a 	srl	r4,r8,r4
   43890:	51e2b03a 	or	r17,r10,r7
   43894:	280ac03a 	cmpne	r5,r5,zero
   43898:	8962b03a 	or	r17,r17,r5
   4389c:	89a3883a 	add	r17,r17,r6
   438a0:	2253883a 	add	r9,r4,r9
   438a4:	898d803a 	cmpltu	r6,r17,r6
   438a8:	3251883a 	add	r8,r6,r9
   438ac:	1021883a 	mov	r16,r2
   438b0:	003ee506 	br	43448 <__alt_data_end+0xfffc3448>
   438b4:	4984b03a 	or	r2,r9,r6
   438b8:	103e6326 	beq	r2,zero,43248 <__alt_data_end+0xfffc3248>
   438bc:	8987c83a 	sub	r3,r17,r6
   438c0:	88c9803a 	cmpltu	r4,r17,r3
   438c4:	4245c83a 	sub	r2,r8,r9
   438c8:	1105c83a 	sub	r2,r2,r4
   438cc:	1100202c 	andhi	r4,r2,128
   438d0:	203ebb26 	beq	r4,zero,433c0 <__alt_data_end+0xfffc33c0>
   438d4:	3463c83a 	sub	r17,r6,r17
   438d8:	4a07c83a 	sub	r3,r9,r8
   438dc:	344d803a 	cmpltu	r6,r6,r17
   438e0:	1991c83a 	sub	r8,r3,r6
   438e4:	3825883a 	mov	r18,r7
   438e8:	003e5706 	br	43248 <__alt_data_end+0xfffc3248>
   438ec:	4984b03a 	or	r2,r9,r6
   438f0:	10002e26 	beq	r2,zero,439ac <__adddf3+0x7e0>
   438f4:	4004d0fa 	srli	r2,r8,3
   438f8:	8822d0fa 	srli	r17,r17,3
   438fc:	4010977a 	slli	r8,r8,29
   43900:	10c0022c 	andhi	r3,r2,8
   43904:	4462b03a 	or	r17,r8,r17
   43908:	18000826 	beq	r3,zero,4392c <__adddf3+0x760>
   4390c:	4808d0fa 	srli	r4,r9,3
   43910:	20c0022c 	andhi	r3,r4,8
   43914:	1800051e 	bne	r3,zero,4392c <__adddf3+0x760>
   43918:	300cd0fa 	srli	r6,r6,3
   4391c:	4806977a 	slli	r3,r9,29
   43920:	2005883a 	mov	r2,r4
   43924:	3825883a 	mov	r18,r7
   43928:	19a2b03a 	or	r17,r3,r6
   4392c:	8810d77a 	srli	r8,r17,29
   43930:	100490fa 	slli	r2,r2,3
   43934:	882290fa 	slli	r17,r17,3
   43938:	0401ffc4 	movi	r16,2047
   4393c:	4090b03a 	or	r8,r8,r2
   43940:	003e4106 	br	43248 <__alt_data_end+0xfffc3248>
   43944:	0141ffc4 	movi	r5,2047
   43948:	117fc71e 	bne	r2,r5,43868 <__alt_data_end+0xfffc3868>
   4394c:	4811883a 	mov	r8,r9
   43950:	3023883a 	mov	r17,r6
   43954:	1021883a 	mov	r16,r2
   43958:	003e3b06 	br	43248 <__alt_data_end+0xfffc3248>
   4395c:	10002f26 	beq	r2,zero,43a1c <__adddf3+0x850>
   43960:	4984b03a 	or	r2,r9,r6
   43964:	10001126 	beq	r2,zero,439ac <__adddf3+0x7e0>
   43968:	4004d0fa 	srli	r2,r8,3
   4396c:	8822d0fa 	srli	r17,r17,3
   43970:	4010977a 	slli	r8,r8,29
   43974:	10c0022c 	andhi	r3,r2,8
   43978:	4462b03a 	or	r17,r8,r17
   4397c:	183feb26 	beq	r3,zero,4392c <__alt_data_end+0xfffc392c>
   43980:	4808d0fa 	srli	r4,r9,3
   43984:	20c0022c 	andhi	r3,r4,8
   43988:	183fe81e 	bne	r3,zero,4392c <__alt_data_end+0xfffc392c>
   4398c:	300cd0fa 	srli	r6,r6,3
   43990:	4806977a 	slli	r3,r9,29
   43994:	2005883a 	mov	r2,r4
   43998:	19a2b03a 	or	r17,r3,r6
   4399c:	003fe306 	br	4392c <__alt_data_end+0xfffc392c>
   439a0:	0011883a 	mov	r8,zero
   439a4:	0005883a 	mov	r2,zero
   439a8:	003e3f06 	br	432a8 <__alt_data_end+0xfffc32a8>
   439ac:	0401ffc4 	movi	r16,2047
   439b0:	003e2506 	br	43248 <__alt_data_end+0xfffc3248>
   439b4:	0013883a 	mov	r9,zero
   439b8:	003f8406 	br	437cc <__alt_data_end+0xfffc37cc>
   439bc:	0005883a 	mov	r2,zero
   439c0:	0007883a 	mov	r3,zero
   439c4:	003e8906 	br	433ec <__alt_data_end+0xfffc33ec>
   439c8:	197ff804 	addi	r5,r3,-32
   439cc:	01000804 	movi	r4,32
   439d0:	414ad83a 	srl	r5,r8,r5
   439d4:	19002426 	beq	r3,r4,43a68 <__adddf3+0x89c>
   439d8:	01001004 	movi	r4,64
   439dc:	20c7c83a 	sub	r3,r4,r3
   439e0:	40c6983a 	sll	r3,r8,r3
   439e4:	1c46b03a 	or	r3,r3,r17
   439e8:	1806c03a 	cmpne	r3,r3,zero
   439ec:	28e2b03a 	or	r17,r5,r3
   439f0:	0007883a 	mov	r3,zero
   439f4:	003f2306 	br	43684 <__alt_data_end+0xfffc3684>
   439f8:	0007883a 	mov	r3,zero
   439fc:	5811883a 	mov	r8,r11
   43a00:	00bfffc4 	movi	r2,-1
   43a04:	0401ffc4 	movi	r16,2047
   43a08:	003e7806 	br	433ec <__alt_data_end+0xfffc33ec>
   43a0c:	4462b03a 	or	r17,r8,r17
   43a10:	8822c03a 	cmpne	r17,r17,zero
   43a14:	0009883a 	mov	r4,zero
   43a18:	003fa006 	br	4389c <__alt_data_end+0xfffc389c>
   43a1c:	4811883a 	mov	r8,r9
   43a20:	3023883a 	mov	r17,r6
   43a24:	0401ffc4 	movi	r16,2047
   43a28:	003e0706 	br	43248 <__alt_data_end+0xfffc3248>
   43a2c:	4811883a 	mov	r8,r9
   43a30:	3023883a 	mov	r17,r6
   43a34:	003e0406 	br	43248 <__alt_data_end+0xfffc3248>
   43a38:	21fff804 	addi	r7,r4,-32
   43a3c:	01400804 	movi	r5,32
   43a40:	41ced83a 	srl	r7,r8,r7
   43a44:	21400a26 	beq	r4,r5,43a70 <__adddf3+0x8a4>
   43a48:	01401004 	movi	r5,64
   43a4c:	2909c83a 	sub	r4,r5,r4
   43a50:	4108983a 	sll	r4,r8,r4
   43a54:	2448b03a 	or	r4,r4,r17
   43a58:	2008c03a 	cmpne	r4,r4,zero
   43a5c:	3922b03a 	or	r17,r7,r4
   43a60:	0009883a 	mov	r4,zero
   43a64:	003f8d06 	br	4389c <__alt_data_end+0xfffc389c>
   43a68:	0007883a 	mov	r3,zero
   43a6c:	003fdd06 	br	439e4 <__alt_data_end+0xfffc39e4>
   43a70:	0009883a 	mov	r4,zero
   43a74:	003ff706 	br	43a54 <__alt_data_end+0xfffc3a54>

00043a78 <__eqdf2>:
   43a78:	2804d53a 	srli	r2,r5,20
   43a7c:	3806d53a 	srli	r3,r7,20
   43a80:	02000434 	movhi	r8,16
   43a84:	423fffc4 	addi	r8,r8,-1
   43a88:	1081ffcc 	andi	r2,r2,2047
   43a8c:	0281ffc4 	movi	r10,2047
   43a90:	2a12703a 	and	r9,r5,r8
   43a94:	18c1ffcc 	andi	r3,r3,2047
   43a98:	3a10703a 	and	r8,r7,r8
   43a9c:	280ad7fa 	srli	r5,r5,31
   43aa0:	380ed7fa 	srli	r7,r7,31
   43aa4:	12801026 	beq	r2,r10,43ae8 <__eqdf2+0x70>
   43aa8:	0281ffc4 	movi	r10,2047
   43aac:	1a800a26 	beq	r3,r10,43ad8 <__eqdf2+0x60>
   43ab0:	10c00226 	beq	r2,r3,43abc <__eqdf2+0x44>
   43ab4:	00800044 	movi	r2,1
   43ab8:	f800283a 	ret
   43abc:	4a3ffd1e 	bne	r9,r8,43ab4 <__alt_data_end+0xfffc3ab4>
   43ac0:	21bffc1e 	bne	r4,r6,43ab4 <__alt_data_end+0xfffc3ab4>
   43ac4:	29c00c26 	beq	r5,r7,43af8 <__eqdf2+0x80>
   43ac8:	103ffa1e 	bne	r2,zero,43ab4 <__alt_data_end+0xfffc3ab4>
   43acc:	2244b03a 	or	r2,r4,r9
   43ad0:	1004c03a 	cmpne	r2,r2,zero
   43ad4:	f800283a 	ret
   43ad8:	3214b03a 	or	r10,r6,r8
   43adc:	503ff426 	beq	r10,zero,43ab0 <__alt_data_end+0xfffc3ab0>
   43ae0:	00800044 	movi	r2,1
   43ae4:	f800283a 	ret
   43ae8:	2254b03a 	or	r10,r4,r9
   43aec:	503fee26 	beq	r10,zero,43aa8 <__alt_data_end+0xfffc3aa8>
   43af0:	00800044 	movi	r2,1
   43af4:	f800283a 	ret
   43af8:	0005883a 	mov	r2,zero
   43afc:	f800283a 	ret

00043b00 <__gedf2>:
   43b00:	2804d53a 	srli	r2,r5,20
   43b04:	3806d53a 	srli	r3,r7,20
   43b08:	02000434 	movhi	r8,16
   43b0c:	423fffc4 	addi	r8,r8,-1
   43b10:	1081ffcc 	andi	r2,r2,2047
   43b14:	0241ffc4 	movi	r9,2047
   43b18:	2a14703a 	and	r10,r5,r8
   43b1c:	18c1ffcc 	andi	r3,r3,2047
   43b20:	3a10703a 	and	r8,r7,r8
   43b24:	280ad7fa 	srli	r5,r5,31
   43b28:	380ed7fa 	srli	r7,r7,31
   43b2c:	12401d26 	beq	r2,r9,43ba4 <__gedf2+0xa4>
   43b30:	0241ffc4 	movi	r9,2047
   43b34:	1a401226 	beq	r3,r9,43b80 <__gedf2+0x80>
   43b38:	1000081e 	bne	r2,zero,43b5c <__gedf2+0x5c>
   43b3c:	2296b03a 	or	r11,r4,r10
   43b40:	5813003a 	cmpeq	r9,r11,zero
   43b44:	1800091e 	bne	r3,zero,43b6c <__gedf2+0x6c>
   43b48:	3218b03a 	or	r12,r6,r8
   43b4c:	6000071e 	bne	r12,zero,43b6c <__gedf2+0x6c>
   43b50:	0005883a 	mov	r2,zero
   43b54:	5800101e 	bne	r11,zero,43b98 <__gedf2+0x98>
   43b58:	f800283a 	ret
   43b5c:	18000c1e 	bne	r3,zero,43b90 <__gedf2+0x90>
   43b60:	3212b03a 	or	r9,r6,r8
   43b64:	48000c26 	beq	r9,zero,43b98 <__gedf2+0x98>
   43b68:	0013883a 	mov	r9,zero
   43b6c:	39c03fcc 	andi	r7,r7,255
   43b70:	48000826 	beq	r9,zero,43b94 <__gedf2+0x94>
   43b74:	38000926 	beq	r7,zero,43b9c <__gedf2+0x9c>
   43b78:	00800044 	movi	r2,1
   43b7c:	f800283a 	ret
   43b80:	3212b03a 	or	r9,r6,r8
   43b84:	483fec26 	beq	r9,zero,43b38 <__alt_data_end+0xfffc3b38>
   43b88:	00bfff84 	movi	r2,-2
   43b8c:	f800283a 	ret
   43b90:	39c03fcc 	andi	r7,r7,255
   43b94:	29c00626 	beq	r5,r7,43bb0 <__gedf2+0xb0>
   43b98:	283ff726 	beq	r5,zero,43b78 <__alt_data_end+0xfffc3b78>
   43b9c:	00bfffc4 	movi	r2,-1
   43ba0:	f800283a 	ret
   43ba4:	2292b03a 	or	r9,r4,r10
   43ba8:	483fe126 	beq	r9,zero,43b30 <__alt_data_end+0xfffc3b30>
   43bac:	003ff606 	br	43b88 <__alt_data_end+0xfffc3b88>
   43bb0:	18bff916 	blt	r3,r2,43b98 <__alt_data_end+0xfffc3b98>
   43bb4:	10c00316 	blt	r2,r3,43bc4 <__gedf2+0xc4>
   43bb8:	42bff736 	bltu	r8,r10,43b98 <__alt_data_end+0xfffc3b98>
   43bbc:	52000326 	beq	r10,r8,43bcc <__gedf2+0xcc>
   43bc0:	5200042e 	bgeu	r10,r8,43bd4 <__gedf2+0xd4>
   43bc4:	283fec1e 	bne	r5,zero,43b78 <__alt_data_end+0xfffc3b78>
   43bc8:	003ff406 	br	43b9c <__alt_data_end+0xfffc3b9c>
   43bcc:	313ff236 	bltu	r6,r4,43b98 <__alt_data_end+0xfffc3b98>
   43bd0:	21bffc36 	bltu	r4,r6,43bc4 <__alt_data_end+0xfffc3bc4>
   43bd4:	0005883a 	mov	r2,zero
   43bd8:	f800283a 	ret

00043bdc <__muldf3>:
   43bdc:	defff304 	addi	sp,sp,-52
   43be0:	2804d53a 	srli	r2,r5,20
   43be4:	dd800915 	stw	r22,36(sp)
   43be8:	282cd7fa 	srli	r22,r5,31
   43bec:	dc000315 	stw	r16,12(sp)
   43bf0:	04000434 	movhi	r16,16
   43bf4:	dd400815 	stw	r21,32(sp)
   43bf8:	dc800515 	stw	r18,20(sp)
   43bfc:	843fffc4 	addi	r16,r16,-1
   43c00:	dfc00c15 	stw	ra,48(sp)
   43c04:	df000b15 	stw	fp,44(sp)
   43c08:	ddc00a15 	stw	r23,40(sp)
   43c0c:	dd000715 	stw	r20,28(sp)
   43c10:	dcc00615 	stw	r19,24(sp)
   43c14:	dc400415 	stw	r17,16(sp)
   43c18:	1481ffcc 	andi	r18,r2,2047
   43c1c:	2c20703a 	and	r16,r5,r16
   43c20:	b02b883a 	mov	r21,r22
   43c24:	b2403fcc 	andi	r9,r22,255
   43c28:	90006026 	beq	r18,zero,43dac <__muldf3+0x1d0>
   43c2c:	0081ffc4 	movi	r2,2047
   43c30:	2029883a 	mov	r20,r4
   43c34:	90803626 	beq	r18,r2,43d10 <__muldf3+0x134>
   43c38:	80800434 	orhi	r2,r16,16
   43c3c:	100490fa 	slli	r2,r2,3
   43c40:	2020d77a 	srli	r16,r4,29
   43c44:	202890fa 	slli	r20,r4,3
   43c48:	94bf0044 	addi	r18,r18,-1023
   43c4c:	80a0b03a 	or	r16,r16,r2
   43c50:	0027883a 	mov	r19,zero
   43c54:	0039883a 	mov	fp,zero
   43c58:	3804d53a 	srli	r2,r7,20
   43c5c:	382ed7fa 	srli	r23,r7,31
   43c60:	04400434 	movhi	r17,16
   43c64:	8c7fffc4 	addi	r17,r17,-1
   43c68:	1081ffcc 	andi	r2,r2,2047
   43c6c:	3011883a 	mov	r8,r6
   43c70:	3c62703a 	and	r17,r7,r17
   43c74:	ba803fcc 	andi	r10,r23,255
   43c78:	10006d26 	beq	r2,zero,43e30 <__muldf3+0x254>
   43c7c:	00c1ffc4 	movi	r3,2047
   43c80:	10c06526 	beq	r2,r3,43e18 <__muldf3+0x23c>
   43c84:	88c00434 	orhi	r3,r17,16
   43c88:	180690fa 	slli	r3,r3,3
   43c8c:	3022d77a 	srli	r17,r6,29
   43c90:	301090fa 	slli	r8,r6,3
   43c94:	10bf0044 	addi	r2,r2,-1023
   43c98:	88e2b03a 	or	r17,r17,r3
   43c9c:	000b883a 	mov	r5,zero
   43ca0:	9085883a 	add	r2,r18,r2
   43ca4:	2cc8b03a 	or	r4,r5,r19
   43ca8:	00c003c4 	movi	r3,15
   43cac:	bdacf03a 	xor	r22,r23,r22
   43cb0:	12c00044 	addi	r11,r2,1
   43cb4:	19009936 	bltu	r3,r4,43f1c <__muldf3+0x340>
   43cb8:	200890ba 	slli	r4,r4,2
   43cbc:	00c00134 	movhi	r3,4
   43cc0:	18cf3404 	addi	r3,r3,15568
   43cc4:	20c9883a 	add	r4,r4,r3
   43cc8:	20c00017 	ldw	r3,0(r4)
   43ccc:	1800683a 	jmp	r3
   43cd0:	00043f1c 	xori	zero,zero,4348
   43cd4:	00043d30 	cmpltui	zero,zero,4340
   43cd8:	00043d30 	cmpltui	zero,zero,4340
   43cdc:	00043d2c 	andhi	zero,zero,4340
   43ce0:	00043ef8 	rdprs	zero,zero,4347
   43ce4:	00043ef8 	rdprs	zero,zero,4347
   43ce8:	00043ee0 	cmpeqi	zero,zero,4347
   43cec:	00043d2c 	andhi	zero,zero,4340
   43cf0:	00043ef8 	rdprs	zero,zero,4347
   43cf4:	00043ee0 	cmpeqi	zero,zero,4347
   43cf8:	00043ef8 	rdprs	zero,zero,4347
   43cfc:	00043d2c 	andhi	zero,zero,4340
   43d00:	00043f08 	cmpgei	zero,zero,4348
   43d04:	00043f08 	cmpgei	zero,zero,4348
   43d08:	00043f08 	cmpgei	zero,zero,4348
   43d0c:	00044124 	muli	zero,zero,4356
   43d10:	2404b03a 	or	r2,r4,r16
   43d14:	10006f1e 	bne	r2,zero,43ed4 <__muldf3+0x2f8>
   43d18:	04c00204 	movi	r19,8
   43d1c:	0021883a 	mov	r16,zero
   43d20:	0029883a 	mov	r20,zero
   43d24:	07000084 	movi	fp,2
   43d28:	003fcb06 	br	43c58 <__alt_data_end+0xfffc3c58>
   43d2c:	502d883a 	mov	r22,r10
   43d30:	00800084 	movi	r2,2
   43d34:	28805726 	beq	r5,r2,43e94 <__muldf3+0x2b8>
   43d38:	008000c4 	movi	r2,3
   43d3c:	28816626 	beq	r5,r2,442d8 <__muldf3+0x6fc>
   43d40:	00800044 	movi	r2,1
   43d44:	2881411e 	bne	r5,r2,4424c <__muldf3+0x670>
   43d48:	b02b883a 	mov	r21,r22
   43d4c:	0005883a 	mov	r2,zero
   43d50:	000b883a 	mov	r5,zero
   43d54:	0029883a 	mov	r20,zero
   43d58:	1004953a 	slli	r2,r2,20
   43d5c:	a8c03fcc 	andi	r3,r21,255
   43d60:	04400434 	movhi	r17,16
   43d64:	8c7fffc4 	addi	r17,r17,-1
   43d68:	180697fa 	slli	r3,r3,31
   43d6c:	2c4a703a 	and	r5,r5,r17
   43d70:	288ab03a 	or	r5,r5,r2
   43d74:	28c6b03a 	or	r3,r5,r3
   43d78:	a005883a 	mov	r2,r20
   43d7c:	dfc00c17 	ldw	ra,48(sp)
   43d80:	df000b17 	ldw	fp,44(sp)
   43d84:	ddc00a17 	ldw	r23,40(sp)
   43d88:	dd800917 	ldw	r22,36(sp)
   43d8c:	dd400817 	ldw	r21,32(sp)
   43d90:	dd000717 	ldw	r20,28(sp)
   43d94:	dcc00617 	ldw	r19,24(sp)
   43d98:	dc800517 	ldw	r18,20(sp)
   43d9c:	dc400417 	ldw	r17,16(sp)
   43da0:	dc000317 	ldw	r16,12(sp)
   43da4:	dec00d04 	addi	sp,sp,52
   43da8:	f800283a 	ret
   43dac:	2404b03a 	or	r2,r4,r16
   43db0:	2027883a 	mov	r19,r4
   43db4:	10004226 	beq	r2,zero,43ec0 <__muldf3+0x2e4>
   43db8:	8000fc26 	beq	r16,zero,441ac <__muldf3+0x5d0>
   43dbc:	8009883a 	mov	r4,r16
   43dc0:	d9800215 	stw	r6,8(sp)
   43dc4:	d9c00015 	stw	r7,0(sp)
   43dc8:	da400115 	stw	r9,4(sp)
   43dcc:	00450040 	call	45004 <__clzsi2>
   43dd0:	d9800217 	ldw	r6,8(sp)
   43dd4:	d9c00017 	ldw	r7,0(sp)
   43dd8:	da400117 	ldw	r9,4(sp)
   43ddc:	113ffd44 	addi	r4,r2,-11
   43de0:	00c00704 	movi	r3,28
   43de4:	1900ed16 	blt	r3,r4,4419c <__muldf3+0x5c0>
   43de8:	00c00744 	movi	r3,29
   43dec:	147ffe04 	addi	r17,r2,-8
   43df0:	1907c83a 	sub	r3,r3,r4
   43df4:	8460983a 	sll	r16,r16,r17
   43df8:	98c6d83a 	srl	r3,r19,r3
   43dfc:	9c68983a 	sll	r20,r19,r17
   43e00:	1c20b03a 	or	r16,r3,r16
   43e04:	1080fcc4 	addi	r2,r2,1011
   43e08:	00a5c83a 	sub	r18,zero,r2
   43e0c:	0027883a 	mov	r19,zero
   43e10:	0039883a 	mov	fp,zero
   43e14:	003f9006 	br	43c58 <__alt_data_end+0xfffc3c58>
   43e18:	3446b03a 	or	r3,r6,r17
   43e1c:	1800261e 	bne	r3,zero,43eb8 <__muldf3+0x2dc>
   43e20:	0023883a 	mov	r17,zero
   43e24:	0011883a 	mov	r8,zero
   43e28:	01400084 	movi	r5,2
   43e2c:	003f9c06 	br	43ca0 <__alt_data_end+0xfffc3ca0>
   43e30:	3446b03a 	or	r3,r6,r17
   43e34:	18001c26 	beq	r3,zero,43ea8 <__muldf3+0x2cc>
   43e38:	8800ce26 	beq	r17,zero,44174 <__muldf3+0x598>
   43e3c:	8809883a 	mov	r4,r17
   43e40:	d9800215 	stw	r6,8(sp)
   43e44:	da400115 	stw	r9,4(sp)
   43e48:	da800015 	stw	r10,0(sp)
   43e4c:	00450040 	call	45004 <__clzsi2>
   43e50:	d9800217 	ldw	r6,8(sp)
   43e54:	da400117 	ldw	r9,4(sp)
   43e58:	da800017 	ldw	r10,0(sp)
   43e5c:	113ffd44 	addi	r4,r2,-11
   43e60:	00c00704 	movi	r3,28
   43e64:	1900bf16 	blt	r3,r4,44164 <__muldf3+0x588>
   43e68:	00c00744 	movi	r3,29
   43e6c:	123ffe04 	addi	r8,r2,-8
   43e70:	1907c83a 	sub	r3,r3,r4
   43e74:	8a22983a 	sll	r17,r17,r8
   43e78:	30c6d83a 	srl	r3,r6,r3
   43e7c:	3210983a 	sll	r8,r6,r8
   43e80:	1c62b03a 	or	r17,r3,r17
   43e84:	1080fcc4 	addi	r2,r2,1011
   43e88:	0085c83a 	sub	r2,zero,r2
   43e8c:	000b883a 	mov	r5,zero
   43e90:	003f8306 	br	43ca0 <__alt_data_end+0xfffc3ca0>
   43e94:	b02b883a 	mov	r21,r22
   43e98:	0081ffc4 	movi	r2,2047
   43e9c:	000b883a 	mov	r5,zero
   43ea0:	0029883a 	mov	r20,zero
   43ea4:	003fac06 	br	43d58 <__alt_data_end+0xfffc3d58>
   43ea8:	0023883a 	mov	r17,zero
   43eac:	0011883a 	mov	r8,zero
   43eb0:	01400044 	movi	r5,1
   43eb4:	003f7a06 	br	43ca0 <__alt_data_end+0xfffc3ca0>
   43eb8:	014000c4 	movi	r5,3
   43ebc:	003f7806 	br	43ca0 <__alt_data_end+0xfffc3ca0>
   43ec0:	04c00104 	movi	r19,4
   43ec4:	0021883a 	mov	r16,zero
   43ec8:	0029883a 	mov	r20,zero
   43ecc:	07000044 	movi	fp,1
   43ed0:	003f6106 	br	43c58 <__alt_data_end+0xfffc3c58>
   43ed4:	04c00304 	movi	r19,12
   43ed8:	070000c4 	movi	fp,3
   43edc:	003f5e06 	br	43c58 <__alt_data_end+0xfffc3c58>
   43ee0:	01400434 	movhi	r5,16
   43ee4:	002b883a 	mov	r21,zero
   43ee8:	297fffc4 	addi	r5,r5,-1
   43eec:	053fffc4 	movi	r20,-1
   43ef0:	0081ffc4 	movi	r2,2047
   43ef4:	003f9806 	br	43d58 <__alt_data_end+0xfffc3d58>
   43ef8:	8023883a 	mov	r17,r16
   43efc:	a011883a 	mov	r8,r20
   43f00:	e00b883a 	mov	r5,fp
   43f04:	003f8a06 	br	43d30 <__alt_data_end+0xfffc3d30>
   43f08:	8023883a 	mov	r17,r16
   43f0c:	a011883a 	mov	r8,r20
   43f10:	482d883a 	mov	r22,r9
   43f14:	e00b883a 	mov	r5,fp
   43f18:	003f8506 	br	43d30 <__alt_data_end+0xfffc3d30>
   43f1c:	a00ad43a 	srli	r5,r20,16
   43f20:	401ad43a 	srli	r13,r8,16
   43f24:	a53fffcc 	andi	r20,r20,65535
   43f28:	423fffcc 	andi	r8,r8,65535
   43f2c:	4519383a 	mul	r12,r8,r20
   43f30:	4147383a 	mul	r3,r8,r5
   43f34:	6d09383a 	mul	r4,r13,r20
   43f38:	600cd43a 	srli	r6,r12,16
   43f3c:	2b5d383a 	mul	r14,r5,r13
   43f40:	20c9883a 	add	r4,r4,r3
   43f44:	310d883a 	add	r6,r6,r4
   43f48:	30c0022e 	bgeu	r6,r3,43f54 <__muldf3+0x378>
   43f4c:	00c00074 	movhi	r3,1
   43f50:	70dd883a 	add	r14,r14,r3
   43f54:	8826d43a 	srli	r19,r17,16
   43f58:	8bffffcc 	andi	r15,r17,65535
   43f5c:	7d23383a 	mul	r17,r15,r20
   43f60:	7949383a 	mul	r4,r15,r5
   43f64:	9d29383a 	mul	r20,r19,r20
   43f68:	8814d43a 	srli	r10,r17,16
   43f6c:	3012943a 	slli	r9,r6,16
   43f70:	a129883a 	add	r20,r20,r4
   43f74:	633fffcc 	andi	r12,r12,65535
   43f78:	5515883a 	add	r10,r10,r20
   43f7c:	3006d43a 	srli	r3,r6,16
   43f80:	4b13883a 	add	r9,r9,r12
   43f84:	2ccb383a 	mul	r5,r5,r19
   43f88:	5100022e 	bgeu	r10,r4,43f94 <__muldf3+0x3b8>
   43f8c:	01000074 	movhi	r4,1
   43f90:	290b883a 	add	r5,r5,r4
   43f94:	802ad43a 	srli	r21,r16,16
   43f98:	843fffcc 	andi	r16,r16,65535
   43f9c:	440d383a 	mul	r6,r8,r16
   43fa0:	4565383a 	mul	r18,r8,r21
   43fa4:	8349383a 	mul	r4,r16,r13
   43fa8:	500e943a 	slli	r7,r10,16
   43fac:	3010d43a 	srli	r8,r6,16
   43fb0:	5028d43a 	srli	r20,r10,16
   43fb4:	2489883a 	add	r4,r4,r18
   43fb8:	8abfffcc 	andi	r10,r17,65535
   43fbc:	3a95883a 	add	r10,r7,r10
   43fc0:	4119883a 	add	r12,r8,r4
   43fc4:	a169883a 	add	r20,r20,r5
   43fc8:	1a87883a 	add	r3,r3,r10
   43fcc:	6d5b383a 	mul	r13,r13,r21
   43fd0:	6480022e 	bgeu	r12,r18,43fdc <__muldf3+0x400>
   43fd4:	01000074 	movhi	r4,1
   43fd8:	691b883a 	add	r13,r13,r4
   43fdc:	7c25383a 	mul	r18,r15,r16
   43fe0:	7d4b383a 	mul	r5,r15,r21
   43fe4:	84cf383a 	mul	r7,r16,r19
   43fe8:	901ed43a 	srli	r15,r18,16
   43fec:	6008d43a 	srli	r4,r12,16
   43ff0:	6010943a 	slli	r8,r12,16
   43ff4:	394f883a 	add	r7,r7,r5
   43ff8:	333fffcc 	andi	r12,r6,65535
   43ffc:	79df883a 	add	r15,r15,r7
   44000:	235b883a 	add	r13,r4,r13
   44004:	9d63383a 	mul	r17,r19,r21
   44008:	4309883a 	add	r4,r8,r12
   4400c:	7940022e 	bgeu	r15,r5,44018 <__muldf3+0x43c>
   44010:	01400074 	movhi	r5,1
   44014:	8963883a 	add	r17,r17,r5
   44018:	780a943a 	slli	r5,r15,16
   4401c:	91bfffcc 	andi	r6,r18,65535
   44020:	70c7883a 	add	r3,r14,r3
   44024:	298d883a 	add	r6,r5,r6
   44028:	1a8f803a 	cmpltu	r7,r3,r10
   4402c:	350b883a 	add	r5,r6,r20
   44030:	20c7883a 	add	r3,r4,r3
   44034:	3955883a 	add	r10,r7,r5
   44038:	1909803a 	cmpltu	r4,r3,r4
   4403c:	6a91883a 	add	r8,r13,r10
   44040:	780cd43a 	srli	r6,r15,16
   44044:	2219883a 	add	r12,r4,r8
   44048:	2d0b803a 	cmpltu	r5,r5,r20
   4404c:	51cf803a 	cmpltu	r7,r10,r7
   44050:	29ceb03a 	or	r7,r5,r7
   44054:	4351803a 	cmpltu	r8,r8,r13
   44058:	610b803a 	cmpltu	r5,r12,r4
   4405c:	4148b03a 	or	r4,r8,r5
   44060:	398f883a 	add	r7,r7,r6
   44064:	3909883a 	add	r4,r7,r4
   44068:	1810927a 	slli	r8,r3,9
   4406c:	2449883a 	add	r4,r4,r17
   44070:	2008927a 	slli	r4,r4,9
   44074:	6022d5fa 	srli	r17,r12,23
   44078:	1806d5fa 	srli	r3,r3,23
   4407c:	4252b03a 	or	r9,r8,r9
   44080:	600a927a 	slli	r5,r12,9
   44084:	4810c03a 	cmpne	r8,r9,zero
   44088:	2462b03a 	or	r17,r4,r17
   4408c:	40c6b03a 	or	r3,r8,r3
   44090:	8900402c 	andhi	r4,r17,256
   44094:	1950b03a 	or	r8,r3,r5
   44098:	20000726 	beq	r4,zero,440b8 <__muldf3+0x4dc>
   4409c:	4006d07a 	srli	r3,r8,1
   440a0:	880497fa 	slli	r2,r17,31
   440a4:	4200004c 	andi	r8,r8,1
   440a8:	8822d07a 	srli	r17,r17,1
   440ac:	1a10b03a 	or	r8,r3,r8
   440b0:	1210b03a 	or	r8,r2,r8
   440b4:	5805883a 	mov	r2,r11
   440b8:	1140ffc4 	addi	r5,r2,1023
   440bc:	0140440e 	bge	zero,r5,441d0 <__muldf3+0x5f4>
   440c0:	40c001cc 	andi	r3,r8,7
   440c4:	18000726 	beq	r3,zero,440e4 <__muldf3+0x508>
   440c8:	40c003cc 	andi	r3,r8,15
   440cc:	01000104 	movi	r4,4
   440d0:	19000426 	beq	r3,r4,440e4 <__muldf3+0x508>
   440d4:	4107883a 	add	r3,r8,r4
   440d8:	1a11803a 	cmpltu	r8,r3,r8
   440dc:	8a23883a 	add	r17,r17,r8
   440e0:	1811883a 	mov	r8,r3
   440e4:	88c0402c 	andhi	r3,r17,256
   440e8:	18000426 	beq	r3,zero,440fc <__muldf3+0x520>
   440ec:	11410004 	addi	r5,r2,1024
   440f0:	00bfc034 	movhi	r2,65280
   440f4:	10bfffc4 	addi	r2,r2,-1
   440f8:	88a2703a 	and	r17,r17,r2
   440fc:	0081ff84 	movi	r2,2046
   44100:	117f6416 	blt	r2,r5,43e94 <__alt_data_end+0xfffc3e94>
   44104:	8828977a 	slli	r20,r17,29
   44108:	4010d0fa 	srli	r8,r8,3
   4410c:	8822927a 	slli	r17,r17,9
   44110:	2881ffcc 	andi	r2,r5,2047
   44114:	a228b03a 	or	r20,r20,r8
   44118:	880ad33a 	srli	r5,r17,12
   4411c:	b02b883a 	mov	r21,r22
   44120:	003f0d06 	br	43d58 <__alt_data_end+0xfffc3d58>
   44124:	8080022c 	andhi	r2,r16,8
   44128:	10000926 	beq	r2,zero,44150 <__muldf3+0x574>
   4412c:	8880022c 	andhi	r2,r17,8
   44130:	1000071e 	bne	r2,zero,44150 <__muldf3+0x574>
   44134:	00800434 	movhi	r2,16
   44138:	89400234 	orhi	r5,r17,8
   4413c:	10bfffc4 	addi	r2,r2,-1
   44140:	b82b883a 	mov	r21,r23
   44144:	288a703a 	and	r5,r5,r2
   44148:	4029883a 	mov	r20,r8
   4414c:	003f6806 	br	43ef0 <__alt_data_end+0xfffc3ef0>
   44150:	00800434 	movhi	r2,16
   44154:	81400234 	orhi	r5,r16,8
   44158:	10bfffc4 	addi	r2,r2,-1
   4415c:	288a703a 	and	r5,r5,r2
   44160:	003f6306 	br	43ef0 <__alt_data_end+0xfffc3ef0>
   44164:	147ff604 	addi	r17,r2,-40
   44168:	3462983a 	sll	r17,r6,r17
   4416c:	0011883a 	mov	r8,zero
   44170:	003f4406 	br	43e84 <__alt_data_end+0xfffc3e84>
   44174:	3009883a 	mov	r4,r6
   44178:	d9800215 	stw	r6,8(sp)
   4417c:	da400115 	stw	r9,4(sp)
   44180:	da800015 	stw	r10,0(sp)
   44184:	00450040 	call	45004 <__clzsi2>
   44188:	10800804 	addi	r2,r2,32
   4418c:	da800017 	ldw	r10,0(sp)
   44190:	da400117 	ldw	r9,4(sp)
   44194:	d9800217 	ldw	r6,8(sp)
   44198:	003f3006 	br	43e5c <__alt_data_end+0xfffc3e5c>
   4419c:	143ff604 	addi	r16,r2,-40
   441a0:	9c20983a 	sll	r16,r19,r16
   441a4:	0029883a 	mov	r20,zero
   441a8:	003f1606 	br	43e04 <__alt_data_end+0xfffc3e04>
   441ac:	d9800215 	stw	r6,8(sp)
   441b0:	d9c00015 	stw	r7,0(sp)
   441b4:	da400115 	stw	r9,4(sp)
   441b8:	00450040 	call	45004 <__clzsi2>
   441bc:	10800804 	addi	r2,r2,32
   441c0:	da400117 	ldw	r9,4(sp)
   441c4:	d9c00017 	ldw	r7,0(sp)
   441c8:	d9800217 	ldw	r6,8(sp)
   441cc:	003f0306 	br	43ddc <__alt_data_end+0xfffc3ddc>
   441d0:	00c00044 	movi	r3,1
   441d4:	1947c83a 	sub	r3,r3,r5
   441d8:	00800e04 	movi	r2,56
   441dc:	10feda16 	blt	r2,r3,43d48 <__alt_data_end+0xfffc3d48>
   441e0:	008007c4 	movi	r2,31
   441e4:	10c01b16 	blt	r2,r3,44254 <__muldf3+0x678>
   441e8:	00800804 	movi	r2,32
   441ec:	10c5c83a 	sub	r2,r2,r3
   441f0:	888a983a 	sll	r5,r17,r2
   441f4:	40c8d83a 	srl	r4,r8,r3
   441f8:	4084983a 	sll	r2,r8,r2
   441fc:	88e2d83a 	srl	r17,r17,r3
   44200:	2906b03a 	or	r3,r5,r4
   44204:	1004c03a 	cmpne	r2,r2,zero
   44208:	1886b03a 	or	r3,r3,r2
   4420c:	188001cc 	andi	r2,r3,7
   44210:	10000726 	beq	r2,zero,44230 <__muldf3+0x654>
   44214:	188003cc 	andi	r2,r3,15
   44218:	01000104 	movi	r4,4
   4421c:	11000426 	beq	r2,r4,44230 <__muldf3+0x654>
   44220:	1805883a 	mov	r2,r3
   44224:	10c00104 	addi	r3,r2,4
   44228:	1885803a 	cmpltu	r2,r3,r2
   4422c:	88a3883a 	add	r17,r17,r2
   44230:	8880202c 	andhi	r2,r17,128
   44234:	10001c26 	beq	r2,zero,442a8 <__muldf3+0x6cc>
   44238:	b02b883a 	mov	r21,r22
   4423c:	00800044 	movi	r2,1
   44240:	000b883a 	mov	r5,zero
   44244:	0029883a 	mov	r20,zero
   44248:	003ec306 	br	43d58 <__alt_data_end+0xfffc3d58>
   4424c:	5805883a 	mov	r2,r11
   44250:	003f9906 	br	440b8 <__alt_data_end+0xfffc40b8>
   44254:	00bff844 	movi	r2,-31
   44258:	1145c83a 	sub	r2,r2,r5
   4425c:	8888d83a 	srl	r4,r17,r2
   44260:	00800804 	movi	r2,32
   44264:	18801a26 	beq	r3,r2,442d0 <__muldf3+0x6f4>
   44268:	00801004 	movi	r2,64
   4426c:	10c5c83a 	sub	r2,r2,r3
   44270:	8884983a 	sll	r2,r17,r2
   44274:	1204b03a 	or	r2,r2,r8
   44278:	1004c03a 	cmpne	r2,r2,zero
   4427c:	2084b03a 	or	r2,r4,r2
   44280:	144001cc 	andi	r17,r2,7
   44284:	88000d1e 	bne	r17,zero,442bc <__muldf3+0x6e0>
   44288:	000b883a 	mov	r5,zero
   4428c:	1028d0fa 	srli	r20,r2,3
   44290:	b02b883a 	mov	r21,r22
   44294:	0005883a 	mov	r2,zero
   44298:	a468b03a 	or	r20,r20,r17
   4429c:	003eae06 	br	43d58 <__alt_data_end+0xfffc3d58>
   442a0:	1007883a 	mov	r3,r2
   442a4:	0023883a 	mov	r17,zero
   442a8:	880a927a 	slli	r5,r17,9
   442ac:	1805883a 	mov	r2,r3
   442b0:	8822977a 	slli	r17,r17,29
   442b4:	280ad33a 	srli	r5,r5,12
   442b8:	003ff406 	br	4428c <__alt_data_end+0xfffc428c>
   442bc:	10c003cc 	andi	r3,r2,15
   442c0:	01000104 	movi	r4,4
   442c4:	193ff626 	beq	r3,r4,442a0 <__alt_data_end+0xfffc42a0>
   442c8:	0023883a 	mov	r17,zero
   442cc:	003fd506 	br	44224 <__alt_data_end+0xfffc4224>
   442d0:	0005883a 	mov	r2,zero
   442d4:	003fe706 	br	44274 <__alt_data_end+0xfffc4274>
   442d8:	00800434 	movhi	r2,16
   442dc:	89400234 	orhi	r5,r17,8
   442e0:	10bfffc4 	addi	r2,r2,-1
   442e4:	b02b883a 	mov	r21,r22
   442e8:	288a703a 	and	r5,r5,r2
   442ec:	4029883a 	mov	r20,r8
   442f0:	003eff06 	br	43ef0 <__alt_data_end+0xfffc3ef0>

000442f4 <__subdf3>:
   442f4:	02000434 	movhi	r8,16
   442f8:	423fffc4 	addi	r8,r8,-1
   442fc:	defffb04 	addi	sp,sp,-20
   44300:	2a14703a 	and	r10,r5,r8
   44304:	3812d53a 	srli	r9,r7,20
   44308:	3a10703a 	and	r8,r7,r8
   4430c:	2006d77a 	srli	r3,r4,29
   44310:	3004d77a 	srli	r2,r6,29
   44314:	dc000015 	stw	r16,0(sp)
   44318:	501490fa 	slli	r10,r10,3
   4431c:	2820d53a 	srli	r16,r5,20
   44320:	401090fa 	slli	r8,r8,3
   44324:	dc800215 	stw	r18,8(sp)
   44328:	dc400115 	stw	r17,4(sp)
   4432c:	dfc00415 	stw	ra,16(sp)
   44330:	202290fa 	slli	r17,r4,3
   44334:	dcc00315 	stw	r19,12(sp)
   44338:	4a41ffcc 	andi	r9,r9,2047
   4433c:	0101ffc4 	movi	r4,2047
   44340:	2824d7fa 	srli	r18,r5,31
   44344:	8401ffcc 	andi	r16,r16,2047
   44348:	50c6b03a 	or	r3,r10,r3
   4434c:	380ed7fa 	srli	r7,r7,31
   44350:	408ab03a 	or	r5,r8,r2
   44354:	300c90fa 	slli	r6,r6,3
   44358:	49009626 	beq	r9,r4,445b4 <__subdf3+0x2c0>
   4435c:	39c0005c 	xori	r7,r7,1
   44360:	8245c83a 	sub	r2,r16,r9
   44364:	3c807426 	beq	r7,r18,44538 <__subdf3+0x244>
   44368:	0080af0e 	bge	zero,r2,44628 <__subdf3+0x334>
   4436c:	48002a1e 	bne	r9,zero,44418 <__subdf3+0x124>
   44370:	2988b03a 	or	r4,r5,r6
   44374:	20009a1e 	bne	r4,zero,445e0 <__subdf3+0x2ec>
   44378:	888001cc 	andi	r2,r17,7
   4437c:	10000726 	beq	r2,zero,4439c <__subdf3+0xa8>
   44380:	888003cc 	andi	r2,r17,15
   44384:	01000104 	movi	r4,4
   44388:	11000426 	beq	r2,r4,4439c <__subdf3+0xa8>
   4438c:	890b883a 	add	r5,r17,r4
   44390:	2c63803a 	cmpltu	r17,r5,r17
   44394:	1c47883a 	add	r3,r3,r17
   44398:	2823883a 	mov	r17,r5
   4439c:	1880202c 	andhi	r2,r3,128
   443a0:	10005926 	beq	r2,zero,44508 <__subdf3+0x214>
   443a4:	84000044 	addi	r16,r16,1
   443a8:	0081ffc4 	movi	r2,2047
   443ac:	8080be26 	beq	r16,r2,446a8 <__subdf3+0x3b4>
   443b0:	017fe034 	movhi	r5,65408
   443b4:	297fffc4 	addi	r5,r5,-1
   443b8:	1946703a 	and	r3,r3,r5
   443bc:	1804977a 	slli	r2,r3,29
   443c0:	1806927a 	slli	r3,r3,9
   443c4:	8822d0fa 	srli	r17,r17,3
   443c8:	8401ffcc 	andi	r16,r16,2047
   443cc:	180ad33a 	srli	r5,r3,12
   443d0:	9100004c 	andi	r4,r18,1
   443d4:	1444b03a 	or	r2,r2,r17
   443d8:	80c1ffcc 	andi	r3,r16,2047
   443dc:	1820953a 	slli	r16,r3,20
   443e0:	20c03fcc 	andi	r3,r4,255
   443e4:	180897fa 	slli	r4,r3,31
   443e8:	00c00434 	movhi	r3,16
   443ec:	18ffffc4 	addi	r3,r3,-1
   443f0:	28c6703a 	and	r3,r5,r3
   443f4:	1c06b03a 	or	r3,r3,r16
   443f8:	1906b03a 	or	r3,r3,r4
   443fc:	dfc00417 	ldw	ra,16(sp)
   44400:	dcc00317 	ldw	r19,12(sp)
   44404:	dc800217 	ldw	r18,8(sp)
   44408:	dc400117 	ldw	r17,4(sp)
   4440c:	dc000017 	ldw	r16,0(sp)
   44410:	dec00504 	addi	sp,sp,20
   44414:	f800283a 	ret
   44418:	0101ffc4 	movi	r4,2047
   4441c:	813fd626 	beq	r16,r4,44378 <__alt_data_end+0xfffc4378>
   44420:	29402034 	orhi	r5,r5,128
   44424:	01000e04 	movi	r4,56
   44428:	2080a316 	blt	r4,r2,446b8 <__subdf3+0x3c4>
   4442c:	010007c4 	movi	r4,31
   44430:	2080c616 	blt	r4,r2,4474c <__subdf3+0x458>
   44434:	01000804 	movi	r4,32
   44438:	2089c83a 	sub	r4,r4,r2
   4443c:	2910983a 	sll	r8,r5,r4
   44440:	308ed83a 	srl	r7,r6,r2
   44444:	3108983a 	sll	r4,r6,r4
   44448:	2884d83a 	srl	r2,r5,r2
   4444c:	41ccb03a 	or	r6,r8,r7
   44450:	2008c03a 	cmpne	r4,r4,zero
   44454:	310cb03a 	or	r6,r6,r4
   44458:	898dc83a 	sub	r6,r17,r6
   4445c:	89a3803a 	cmpltu	r17,r17,r6
   44460:	1887c83a 	sub	r3,r3,r2
   44464:	1c47c83a 	sub	r3,r3,r17
   44468:	3023883a 	mov	r17,r6
   4446c:	1880202c 	andhi	r2,r3,128
   44470:	10002326 	beq	r2,zero,44500 <__subdf3+0x20c>
   44474:	04c02034 	movhi	r19,128
   44478:	9cffffc4 	addi	r19,r19,-1
   4447c:	1ce6703a 	and	r19,r3,r19
   44480:	98007a26 	beq	r19,zero,4466c <__subdf3+0x378>
   44484:	9809883a 	mov	r4,r19
   44488:	00450040 	call	45004 <__clzsi2>
   4448c:	113ffe04 	addi	r4,r2,-8
   44490:	00c007c4 	movi	r3,31
   44494:	19007b16 	blt	r3,r4,44684 <__subdf3+0x390>
   44498:	00800804 	movi	r2,32
   4449c:	1105c83a 	sub	r2,r2,r4
   444a0:	8884d83a 	srl	r2,r17,r2
   444a4:	9906983a 	sll	r3,r19,r4
   444a8:	8922983a 	sll	r17,r17,r4
   444ac:	10c4b03a 	or	r2,r2,r3
   444b0:	24007816 	blt	r4,r16,44694 <__subdf3+0x3a0>
   444b4:	2421c83a 	sub	r16,r4,r16
   444b8:	80c00044 	addi	r3,r16,1
   444bc:	010007c4 	movi	r4,31
   444c0:	20c09516 	blt	r4,r3,44718 <__subdf3+0x424>
   444c4:	01400804 	movi	r5,32
   444c8:	28cbc83a 	sub	r5,r5,r3
   444cc:	88c8d83a 	srl	r4,r17,r3
   444d0:	8962983a 	sll	r17,r17,r5
   444d4:	114a983a 	sll	r5,r2,r5
   444d8:	10c6d83a 	srl	r3,r2,r3
   444dc:	8804c03a 	cmpne	r2,r17,zero
   444e0:	290ab03a 	or	r5,r5,r4
   444e4:	28a2b03a 	or	r17,r5,r2
   444e8:	0021883a 	mov	r16,zero
   444ec:	003fa206 	br	44378 <__alt_data_end+0xfffc4378>
   444f0:	2090b03a 	or	r8,r4,r2
   444f4:	40018e26 	beq	r8,zero,44b30 <__subdf3+0x83c>
   444f8:	1007883a 	mov	r3,r2
   444fc:	2023883a 	mov	r17,r4
   44500:	888001cc 	andi	r2,r17,7
   44504:	103f9e1e 	bne	r2,zero,44380 <__alt_data_end+0xfffc4380>
   44508:	1804977a 	slli	r2,r3,29
   4450c:	8822d0fa 	srli	r17,r17,3
   44510:	1810d0fa 	srli	r8,r3,3
   44514:	9100004c 	andi	r4,r18,1
   44518:	1444b03a 	or	r2,r2,r17
   4451c:	00c1ffc4 	movi	r3,2047
   44520:	80c02826 	beq	r16,r3,445c4 <__subdf3+0x2d0>
   44524:	01400434 	movhi	r5,16
   44528:	297fffc4 	addi	r5,r5,-1
   4452c:	80e0703a 	and	r16,r16,r3
   44530:	414a703a 	and	r5,r8,r5
   44534:	003fa806 	br	443d8 <__alt_data_end+0xfffc43d8>
   44538:	0080630e 	bge	zero,r2,446c8 <__subdf3+0x3d4>
   4453c:	48003026 	beq	r9,zero,44600 <__subdf3+0x30c>
   44540:	0101ffc4 	movi	r4,2047
   44544:	813f8c26 	beq	r16,r4,44378 <__alt_data_end+0xfffc4378>
   44548:	29402034 	orhi	r5,r5,128
   4454c:	01000e04 	movi	r4,56
   44550:	2080a90e 	bge	r4,r2,447f8 <__subdf3+0x504>
   44554:	298cb03a 	or	r6,r5,r6
   44558:	3012c03a 	cmpne	r9,r6,zero
   4455c:	0005883a 	mov	r2,zero
   44560:	4c53883a 	add	r9,r9,r17
   44564:	4c63803a 	cmpltu	r17,r9,r17
   44568:	10c7883a 	add	r3,r2,r3
   4456c:	88c7883a 	add	r3,r17,r3
   44570:	4823883a 	mov	r17,r9
   44574:	1880202c 	andhi	r2,r3,128
   44578:	1000d026 	beq	r2,zero,448bc <__subdf3+0x5c8>
   4457c:	84000044 	addi	r16,r16,1
   44580:	0081ffc4 	movi	r2,2047
   44584:	8080fe26 	beq	r16,r2,44980 <__subdf3+0x68c>
   44588:	00bfe034 	movhi	r2,65408
   4458c:	10bfffc4 	addi	r2,r2,-1
   44590:	1886703a 	and	r3,r3,r2
   44594:	880ad07a 	srli	r5,r17,1
   44598:	180497fa 	slli	r2,r3,31
   4459c:	8900004c 	andi	r4,r17,1
   445a0:	2922b03a 	or	r17,r5,r4
   445a4:	1806d07a 	srli	r3,r3,1
   445a8:	1462b03a 	or	r17,r2,r17
   445ac:	3825883a 	mov	r18,r7
   445b0:	003f7106 	br	44378 <__alt_data_end+0xfffc4378>
   445b4:	2984b03a 	or	r2,r5,r6
   445b8:	103f6826 	beq	r2,zero,4435c <__alt_data_end+0xfffc435c>
   445bc:	39c03fcc 	andi	r7,r7,255
   445c0:	003f6706 	br	44360 <__alt_data_end+0xfffc4360>
   445c4:	4086b03a 	or	r3,r8,r2
   445c8:	18015226 	beq	r3,zero,44b14 <__subdf3+0x820>
   445cc:	00c00434 	movhi	r3,16
   445d0:	41400234 	orhi	r5,r8,8
   445d4:	18ffffc4 	addi	r3,r3,-1
   445d8:	28ca703a 	and	r5,r5,r3
   445dc:	003f7e06 	br	443d8 <__alt_data_end+0xfffc43d8>
   445e0:	10bfffc4 	addi	r2,r2,-1
   445e4:	1000491e 	bne	r2,zero,4470c <__subdf3+0x418>
   445e8:	898fc83a 	sub	r7,r17,r6
   445ec:	89e3803a 	cmpltu	r17,r17,r7
   445f0:	1947c83a 	sub	r3,r3,r5
   445f4:	1c47c83a 	sub	r3,r3,r17
   445f8:	3823883a 	mov	r17,r7
   445fc:	003f9b06 	br	4446c <__alt_data_end+0xfffc446c>
   44600:	2988b03a 	or	r4,r5,r6
   44604:	203f5c26 	beq	r4,zero,44378 <__alt_data_end+0xfffc4378>
   44608:	10bfffc4 	addi	r2,r2,-1
   4460c:	1000931e 	bne	r2,zero,4485c <__subdf3+0x568>
   44610:	898d883a 	add	r6,r17,r6
   44614:	3463803a 	cmpltu	r17,r6,r17
   44618:	1947883a 	add	r3,r3,r5
   4461c:	88c7883a 	add	r3,r17,r3
   44620:	3023883a 	mov	r17,r6
   44624:	003fd306 	br	44574 <__alt_data_end+0xfffc4574>
   44628:	1000541e 	bne	r2,zero,4477c <__subdf3+0x488>
   4462c:	80800044 	addi	r2,r16,1
   44630:	1081ffcc 	andi	r2,r2,2047
   44634:	01000044 	movi	r4,1
   44638:	2080a20e 	bge	r4,r2,448c4 <__subdf3+0x5d0>
   4463c:	8989c83a 	sub	r4,r17,r6
   44640:	8905803a 	cmpltu	r2,r17,r4
   44644:	1967c83a 	sub	r19,r3,r5
   44648:	98a7c83a 	sub	r19,r19,r2
   4464c:	9880202c 	andhi	r2,r19,128
   44650:	10006326 	beq	r2,zero,447e0 <__subdf3+0x4ec>
   44654:	3463c83a 	sub	r17,r6,r17
   44658:	28c7c83a 	sub	r3,r5,r3
   4465c:	344d803a 	cmpltu	r6,r6,r17
   44660:	19a7c83a 	sub	r19,r3,r6
   44664:	3825883a 	mov	r18,r7
   44668:	983f861e 	bne	r19,zero,44484 <__alt_data_end+0xfffc4484>
   4466c:	8809883a 	mov	r4,r17
   44670:	00450040 	call	45004 <__clzsi2>
   44674:	10800804 	addi	r2,r2,32
   44678:	113ffe04 	addi	r4,r2,-8
   4467c:	00c007c4 	movi	r3,31
   44680:	193f850e 	bge	r3,r4,44498 <__alt_data_end+0xfffc4498>
   44684:	10bff604 	addi	r2,r2,-40
   44688:	8884983a 	sll	r2,r17,r2
   4468c:	0023883a 	mov	r17,zero
   44690:	243f880e 	bge	r4,r16,444b4 <__alt_data_end+0xfffc44b4>
   44694:	00ffe034 	movhi	r3,65408
   44698:	18ffffc4 	addi	r3,r3,-1
   4469c:	8121c83a 	sub	r16,r16,r4
   446a0:	10c6703a 	and	r3,r2,r3
   446a4:	003f3406 	br	44378 <__alt_data_end+0xfffc4378>
   446a8:	9100004c 	andi	r4,r18,1
   446ac:	000b883a 	mov	r5,zero
   446b0:	0005883a 	mov	r2,zero
   446b4:	003f4806 	br	443d8 <__alt_data_end+0xfffc43d8>
   446b8:	298cb03a 	or	r6,r5,r6
   446bc:	300cc03a 	cmpne	r6,r6,zero
   446c0:	0005883a 	mov	r2,zero
   446c4:	003f6406 	br	44458 <__alt_data_end+0xfffc4458>
   446c8:	10009a1e 	bne	r2,zero,44934 <__subdf3+0x640>
   446cc:	82400044 	addi	r9,r16,1
   446d0:	4881ffcc 	andi	r2,r9,2047
   446d4:	02800044 	movi	r10,1
   446d8:	5080670e 	bge	r10,r2,44878 <__subdf3+0x584>
   446dc:	0081ffc4 	movi	r2,2047
   446e0:	4880af26 	beq	r9,r2,449a0 <__subdf3+0x6ac>
   446e4:	898d883a 	add	r6,r17,r6
   446e8:	1945883a 	add	r2,r3,r5
   446ec:	3447803a 	cmpltu	r3,r6,r17
   446f0:	1887883a 	add	r3,r3,r2
   446f4:	182297fa 	slli	r17,r3,31
   446f8:	300cd07a 	srli	r6,r6,1
   446fc:	1806d07a 	srli	r3,r3,1
   44700:	4821883a 	mov	r16,r9
   44704:	89a2b03a 	or	r17,r17,r6
   44708:	003f1b06 	br	44378 <__alt_data_end+0xfffc4378>
   4470c:	0101ffc4 	movi	r4,2047
   44710:	813f441e 	bne	r16,r4,44424 <__alt_data_end+0xfffc4424>
   44714:	003f1806 	br	44378 <__alt_data_end+0xfffc4378>
   44718:	843ff844 	addi	r16,r16,-31
   4471c:	01400804 	movi	r5,32
   44720:	1408d83a 	srl	r4,r2,r16
   44724:	19405026 	beq	r3,r5,44868 <__subdf3+0x574>
   44728:	01401004 	movi	r5,64
   4472c:	28c7c83a 	sub	r3,r5,r3
   44730:	10c4983a 	sll	r2,r2,r3
   44734:	88a2b03a 	or	r17,r17,r2
   44738:	8822c03a 	cmpne	r17,r17,zero
   4473c:	2462b03a 	or	r17,r4,r17
   44740:	0007883a 	mov	r3,zero
   44744:	0021883a 	mov	r16,zero
   44748:	003f6d06 	br	44500 <__alt_data_end+0xfffc4500>
   4474c:	11fff804 	addi	r7,r2,-32
   44750:	01000804 	movi	r4,32
   44754:	29ced83a 	srl	r7,r5,r7
   44758:	11004526 	beq	r2,r4,44870 <__subdf3+0x57c>
   4475c:	01001004 	movi	r4,64
   44760:	2089c83a 	sub	r4,r4,r2
   44764:	2904983a 	sll	r2,r5,r4
   44768:	118cb03a 	or	r6,r2,r6
   4476c:	300cc03a 	cmpne	r6,r6,zero
   44770:	398cb03a 	or	r6,r7,r6
   44774:	0005883a 	mov	r2,zero
   44778:	003f3706 	br	44458 <__alt_data_end+0xfffc4458>
   4477c:	80002a26 	beq	r16,zero,44828 <__subdf3+0x534>
   44780:	0101ffc4 	movi	r4,2047
   44784:	49006626 	beq	r9,r4,44920 <__subdf3+0x62c>
   44788:	0085c83a 	sub	r2,zero,r2
   4478c:	18c02034 	orhi	r3,r3,128
   44790:	01000e04 	movi	r4,56
   44794:	20807e16 	blt	r4,r2,44990 <__subdf3+0x69c>
   44798:	010007c4 	movi	r4,31
   4479c:	2080e716 	blt	r4,r2,44b3c <__subdf3+0x848>
   447a0:	01000804 	movi	r4,32
   447a4:	2089c83a 	sub	r4,r4,r2
   447a8:	1914983a 	sll	r10,r3,r4
   447ac:	8890d83a 	srl	r8,r17,r2
   447b0:	8908983a 	sll	r4,r17,r4
   447b4:	1884d83a 	srl	r2,r3,r2
   447b8:	5222b03a 	or	r17,r10,r8
   447bc:	2006c03a 	cmpne	r3,r4,zero
   447c0:	88e2b03a 	or	r17,r17,r3
   447c4:	3463c83a 	sub	r17,r6,r17
   447c8:	2885c83a 	sub	r2,r5,r2
   447cc:	344d803a 	cmpltu	r6,r6,r17
   447d0:	1187c83a 	sub	r3,r2,r6
   447d4:	4821883a 	mov	r16,r9
   447d8:	3825883a 	mov	r18,r7
   447dc:	003f2306 	br	4446c <__alt_data_end+0xfffc446c>
   447e0:	24d0b03a 	or	r8,r4,r19
   447e4:	40001b1e 	bne	r8,zero,44854 <__subdf3+0x560>
   447e8:	0005883a 	mov	r2,zero
   447ec:	0009883a 	mov	r4,zero
   447f0:	0021883a 	mov	r16,zero
   447f4:	003f4906 	br	4451c <__alt_data_end+0xfffc451c>
   447f8:	010007c4 	movi	r4,31
   447fc:	20803a16 	blt	r4,r2,448e8 <__subdf3+0x5f4>
   44800:	01000804 	movi	r4,32
   44804:	2089c83a 	sub	r4,r4,r2
   44808:	2912983a 	sll	r9,r5,r4
   4480c:	3090d83a 	srl	r8,r6,r2
   44810:	3108983a 	sll	r4,r6,r4
   44814:	2884d83a 	srl	r2,r5,r2
   44818:	4a12b03a 	or	r9,r9,r8
   4481c:	2008c03a 	cmpne	r4,r4,zero
   44820:	4912b03a 	or	r9,r9,r4
   44824:	003f4e06 	br	44560 <__alt_data_end+0xfffc4560>
   44828:	1c48b03a 	or	r4,r3,r17
   4482c:	20003c26 	beq	r4,zero,44920 <__subdf3+0x62c>
   44830:	0084303a 	nor	r2,zero,r2
   44834:	1000381e 	bne	r2,zero,44918 <__subdf3+0x624>
   44838:	3463c83a 	sub	r17,r6,r17
   4483c:	28c5c83a 	sub	r2,r5,r3
   44840:	344d803a 	cmpltu	r6,r6,r17
   44844:	1187c83a 	sub	r3,r2,r6
   44848:	4821883a 	mov	r16,r9
   4484c:	3825883a 	mov	r18,r7
   44850:	003f0606 	br	4446c <__alt_data_end+0xfffc446c>
   44854:	2023883a 	mov	r17,r4
   44858:	003f0906 	br	44480 <__alt_data_end+0xfffc4480>
   4485c:	0101ffc4 	movi	r4,2047
   44860:	813f3a1e 	bne	r16,r4,4454c <__alt_data_end+0xfffc454c>
   44864:	003ec406 	br	44378 <__alt_data_end+0xfffc4378>
   44868:	0005883a 	mov	r2,zero
   4486c:	003fb106 	br	44734 <__alt_data_end+0xfffc4734>
   44870:	0005883a 	mov	r2,zero
   44874:	003fbc06 	br	44768 <__alt_data_end+0xfffc4768>
   44878:	1c44b03a 	or	r2,r3,r17
   4487c:	80008e1e 	bne	r16,zero,44ab8 <__subdf3+0x7c4>
   44880:	1000c826 	beq	r2,zero,44ba4 <__subdf3+0x8b0>
   44884:	2984b03a 	or	r2,r5,r6
   44888:	103ebb26 	beq	r2,zero,44378 <__alt_data_end+0xfffc4378>
   4488c:	8989883a 	add	r4,r17,r6
   44890:	1945883a 	add	r2,r3,r5
   44894:	2447803a 	cmpltu	r3,r4,r17
   44898:	1887883a 	add	r3,r3,r2
   4489c:	1880202c 	andhi	r2,r3,128
   448a0:	2023883a 	mov	r17,r4
   448a4:	103f1626 	beq	r2,zero,44500 <__alt_data_end+0xfffc4500>
   448a8:	00bfe034 	movhi	r2,65408
   448ac:	10bfffc4 	addi	r2,r2,-1
   448b0:	5021883a 	mov	r16,r10
   448b4:	1886703a 	and	r3,r3,r2
   448b8:	003eaf06 	br	44378 <__alt_data_end+0xfffc4378>
   448bc:	3825883a 	mov	r18,r7
   448c0:	003f0f06 	br	44500 <__alt_data_end+0xfffc4500>
   448c4:	1c44b03a 	or	r2,r3,r17
   448c8:	8000251e 	bne	r16,zero,44960 <__subdf3+0x66c>
   448cc:	1000661e 	bne	r2,zero,44a68 <__subdf3+0x774>
   448d0:	2990b03a 	or	r8,r5,r6
   448d4:	40009626 	beq	r8,zero,44b30 <__subdf3+0x83c>
   448d8:	2807883a 	mov	r3,r5
   448dc:	3023883a 	mov	r17,r6
   448e0:	3825883a 	mov	r18,r7
   448e4:	003ea406 	br	44378 <__alt_data_end+0xfffc4378>
   448e8:	127ff804 	addi	r9,r2,-32
   448ec:	01000804 	movi	r4,32
   448f0:	2a52d83a 	srl	r9,r5,r9
   448f4:	11008c26 	beq	r2,r4,44b28 <__subdf3+0x834>
   448f8:	01001004 	movi	r4,64
   448fc:	2085c83a 	sub	r2,r4,r2
   44900:	2884983a 	sll	r2,r5,r2
   44904:	118cb03a 	or	r6,r2,r6
   44908:	300cc03a 	cmpne	r6,r6,zero
   4490c:	4992b03a 	or	r9,r9,r6
   44910:	0005883a 	mov	r2,zero
   44914:	003f1206 	br	44560 <__alt_data_end+0xfffc4560>
   44918:	0101ffc4 	movi	r4,2047
   4491c:	493f9c1e 	bne	r9,r4,44790 <__alt_data_end+0xfffc4790>
   44920:	2807883a 	mov	r3,r5
   44924:	3023883a 	mov	r17,r6
   44928:	4821883a 	mov	r16,r9
   4492c:	3825883a 	mov	r18,r7
   44930:	003e9106 	br	44378 <__alt_data_end+0xfffc4378>
   44934:	80001f1e 	bne	r16,zero,449b4 <__subdf3+0x6c0>
   44938:	1c48b03a 	or	r4,r3,r17
   4493c:	20005a26 	beq	r4,zero,44aa8 <__subdf3+0x7b4>
   44940:	0084303a 	nor	r2,zero,r2
   44944:	1000561e 	bne	r2,zero,44aa0 <__subdf3+0x7ac>
   44948:	89a3883a 	add	r17,r17,r6
   4494c:	1945883a 	add	r2,r3,r5
   44950:	898d803a 	cmpltu	r6,r17,r6
   44954:	3087883a 	add	r3,r6,r2
   44958:	4821883a 	mov	r16,r9
   4495c:	003f0506 	br	44574 <__alt_data_end+0xfffc4574>
   44960:	10002b1e 	bne	r2,zero,44a10 <__subdf3+0x71c>
   44964:	2984b03a 	or	r2,r5,r6
   44968:	10008026 	beq	r2,zero,44b6c <__subdf3+0x878>
   4496c:	2807883a 	mov	r3,r5
   44970:	3023883a 	mov	r17,r6
   44974:	3825883a 	mov	r18,r7
   44978:	0401ffc4 	movi	r16,2047
   4497c:	003e7e06 	br	44378 <__alt_data_end+0xfffc4378>
   44980:	3809883a 	mov	r4,r7
   44984:	0011883a 	mov	r8,zero
   44988:	0005883a 	mov	r2,zero
   4498c:	003ee306 	br	4451c <__alt_data_end+0xfffc451c>
   44990:	1c62b03a 	or	r17,r3,r17
   44994:	8822c03a 	cmpne	r17,r17,zero
   44998:	0005883a 	mov	r2,zero
   4499c:	003f8906 	br	447c4 <__alt_data_end+0xfffc47c4>
   449a0:	3809883a 	mov	r4,r7
   449a4:	4821883a 	mov	r16,r9
   449a8:	0011883a 	mov	r8,zero
   449ac:	0005883a 	mov	r2,zero
   449b0:	003eda06 	br	4451c <__alt_data_end+0xfffc451c>
   449b4:	0101ffc4 	movi	r4,2047
   449b8:	49003b26 	beq	r9,r4,44aa8 <__subdf3+0x7b4>
   449bc:	0085c83a 	sub	r2,zero,r2
   449c0:	18c02034 	orhi	r3,r3,128
   449c4:	01000e04 	movi	r4,56
   449c8:	20806e16 	blt	r4,r2,44b84 <__subdf3+0x890>
   449cc:	010007c4 	movi	r4,31
   449d0:	20807716 	blt	r4,r2,44bb0 <__subdf3+0x8bc>
   449d4:	01000804 	movi	r4,32
   449d8:	2089c83a 	sub	r4,r4,r2
   449dc:	1914983a 	sll	r10,r3,r4
   449e0:	8890d83a 	srl	r8,r17,r2
   449e4:	8908983a 	sll	r4,r17,r4
   449e8:	1884d83a 	srl	r2,r3,r2
   449ec:	5222b03a 	or	r17,r10,r8
   449f0:	2006c03a 	cmpne	r3,r4,zero
   449f4:	88e2b03a 	or	r17,r17,r3
   449f8:	89a3883a 	add	r17,r17,r6
   449fc:	1145883a 	add	r2,r2,r5
   44a00:	898d803a 	cmpltu	r6,r17,r6
   44a04:	3087883a 	add	r3,r6,r2
   44a08:	4821883a 	mov	r16,r9
   44a0c:	003ed906 	br	44574 <__alt_data_end+0xfffc4574>
   44a10:	2984b03a 	or	r2,r5,r6
   44a14:	10004226 	beq	r2,zero,44b20 <__subdf3+0x82c>
   44a18:	1808d0fa 	srli	r4,r3,3
   44a1c:	8822d0fa 	srli	r17,r17,3
   44a20:	1806977a 	slli	r3,r3,29
   44a24:	2080022c 	andhi	r2,r4,8
   44a28:	1c62b03a 	or	r17,r3,r17
   44a2c:	10000826 	beq	r2,zero,44a50 <__subdf3+0x75c>
   44a30:	2812d0fa 	srli	r9,r5,3
   44a34:	4880022c 	andhi	r2,r9,8
   44a38:	1000051e 	bne	r2,zero,44a50 <__subdf3+0x75c>
   44a3c:	300cd0fa 	srli	r6,r6,3
   44a40:	2804977a 	slli	r2,r5,29
   44a44:	4809883a 	mov	r4,r9
   44a48:	3825883a 	mov	r18,r7
   44a4c:	11a2b03a 	or	r17,r2,r6
   44a50:	8806d77a 	srli	r3,r17,29
   44a54:	200890fa 	slli	r4,r4,3
   44a58:	882290fa 	slli	r17,r17,3
   44a5c:	0401ffc4 	movi	r16,2047
   44a60:	1906b03a 	or	r3,r3,r4
   44a64:	003e4406 	br	44378 <__alt_data_end+0xfffc4378>
   44a68:	2984b03a 	or	r2,r5,r6
   44a6c:	103e4226 	beq	r2,zero,44378 <__alt_data_end+0xfffc4378>
   44a70:	8989c83a 	sub	r4,r17,r6
   44a74:	8911803a 	cmpltu	r8,r17,r4
   44a78:	1945c83a 	sub	r2,r3,r5
   44a7c:	1205c83a 	sub	r2,r2,r8
   44a80:	1200202c 	andhi	r8,r2,128
   44a84:	403e9a26 	beq	r8,zero,444f0 <__alt_data_end+0xfffc44f0>
   44a88:	3463c83a 	sub	r17,r6,r17
   44a8c:	28c5c83a 	sub	r2,r5,r3
   44a90:	344d803a 	cmpltu	r6,r6,r17
   44a94:	1187c83a 	sub	r3,r2,r6
   44a98:	3825883a 	mov	r18,r7
   44a9c:	003e3606 	br	44378 <__alt_data_end+0xfffc4378>
   44aa0:	0101ffc4 	movi	r4,2047
   44aa4:	493fc71e 	bne	r9,r4,449c4 <__alt_data_end+0xfffc49c4>
   44aa8:	2807883a 	mov	r3,r5
   44aac:	3023883a 	mov	r17,r6
   44ab0:	4821883a 	mov	r16,r9
   44ab4:	003e3006 	br	44378 <__alt_data_end+0xfffc4378>
   44ab8:	10003626 	beq	r2,zero,44b94 <__subdf3+0x8a0>
   44abc:	2984b03a 	or	r2,r5,r6
   44ac0:	10001726 	beq	r2,zero,44b20 <__subdf3+0x82c>
   44ac4:	1808d0fa 	srli	r4,r3,3
   44ac8:	8822d0fa 	srli	r17,r17,3
   44acc:	1806977a 	slli	r3,r3,29
   44ad0:	2080022c 	andhi	r2,r4,8
   44ad4:	1c62b03a 	or	r17,r3,r17
   44ad8:	10000726 	beq	r2,zero,44af8 <__subdf3+0x804>
   44adc:	2812d0fa 	srli	r9,r5,3
   44ae0:	4880022c 	andhi	r2,r9,8
   44ae4:	1000041e 	bne	r2,zero,44af8 <__subdf3+0x804>
   44ae8:	300cd0fa 	srli	r6,r6,3
   44aec:	2804977a 	slli	r2,r5,29
   44af0:	4809883a 	mov	r4,r9
   44af4:	11a2b03a 	or	r17,r2,r6
   44af8:	8806d77a 	srli	r3,r17,29
   44afc:	200890fa 	slli	r4,r4,3
   44b00:	882290fa 	slli	r17,r17,3
   44b04:	3825883a 	mov	r18,r7
   44b08:	1906b03a 	or	r3,r3,r4
   44b0c:	0401ffc4 	movi	r16,2047
   44b10:	003e1906 	br	44378 <__alt_data_end+0xfffc4378>
   44b14:	000b883a 	mov	r5,zero
   44b18:	0005883a 	mov	r2,zero
   44b1c:	003e2e06 	br	443d8 <__alt_data_end+0xfffc43d8>
   44b20:	0401ffc4 	movi	r16,2047
   44b24:	003e1406 	br	44378 <__alt_data_end+0xfffc4378>
   44b28:	0005883a 	mov	r2,zero
   44b2c:	003f7506 	br	44904 <__alt_data_end+0xfffc4904>
   44b30:	0005883a 	mov	r2,zero
   44b34:	0009883a 	mov	r4,zero
   44b38:	003e7806 	br	4451c <__alt_data_end+0xfffc451c>
   44b3c:	123ff804 	addi	r8,r2,-32
   44b40:	01000804 	movi	r4,32
   44b44:	1a10d83a 	srl	r8,r3,r8
   44b48:	11002526 	beq	r2,r4,44be0 <__subdf3+0x8ec>
   44b4c:	01001004 	movi	r4,64
   44b50:	2085c83a 	sub	r2,r4,r2
   44b54:	1884983a 	sll	r2,r3,r2
   44b58:	1444b03a 	or	r2,r2,r17
   44b5c:	1004c03a 	cmpne	r2,r2,zero
   44b60:	40a2b03a 	or	r17,r8,r2
   44b64:	0005883a 	mov	r2,zero
   44b68:	003f1606 	br	447c4 <__alt_data_end+0xfffc47c4>
   44b6c:	02000434 	movhi	r8,16
   44b70:	0009883a 	mov	r4,zero
   44b74:	423fffc4 	addi	r8,r8,-1
   44b78:	00bfffc4 	movi	r2,-1
   44b7c:	0401ffc4 	movi	r16,2047
   44b80:	003e6606 	br	4451c <__alt_data_end+0xfffc451c>
   44b84:	1c62b03a 	or	r17,r3,r17
   44b88:	8822c03a 	cmpne	r17,r17,zero
   44b8c:	0005883a 	mov	r2,zero
   44b90:	003f9906 	br	449f8 <__alt_data_end+0xfffc49f8>
   44b94:	2807883a 	mov	r3,r5
   44b98:	3023883a 	mov	r17,r6
   44b9c:	0401ffc4 	movi	r16,2047
   44ba0:	003df506 	br	44378 <__alt_data_end+0xfffc4378>
   44ba4:	2807883a 	mov	r3,r5
   44ba8:	3023883a 	mov	r17,r6
   44bac:	003df206 	br	44378 <__alt_data_end+0xfffc4378>
   44bb0:	123ff804 	addi	r8,r2,-32
   44bb4:	01000804 	movi	r4,32
   44bb8:	1a10d83a 	srl	r8,r3,r8
   44bbc:	11000a26 	beq	r2,r4,44be8 <__subdf3+0x8f4>
   44bc0:	01001004 	movi	r4,64
   44bc4:	2085c83a 	sub	r2,r4,r2
   44bc8:	1884983a 	sll	r2,r3,r2
   44bcc:	1444b03a 	or	r2,r2,r17
   44bd0:	1004c03a 	cmpne	r2,r2,zero
   44bd4:	40a2b03a 	or	r17,r8,r2
   44bd8:	0005883a 	mov	r2,zero
   44bdc:	003f8606 	br	449f8 <__alt_data_end+0xfffc49f8>
   44be0:	0005883a 	mov	r2,zero
   44be4:	003fdc06 	br	44b58 <__alt_data_end+0xfffc4b58>
   44be8:	0005883a 	mov	r2,zero
   44bec:	003ff706 	br	44bcc <__alt_data_end+0xfffc4bcc>

00044bf0 <__fixdfsi>:
   44bf0:	280cd53a 	srli	r6,r5,20
   44bf4:	00c00434 	movhi	r3,16
   44bf8:	18ffffc4 	addi	r3,r3,-1
   44bfc:	3181ffcc 	andi	r6,r6,2047
   44c00:	01c0ff84 	movi	r7,1022
   44c04:	28c6703a 	and	r3,r5,r3
   44c08:	280ad7fa 	srli	r5,r5,31
   44c0c:	3980120e 	bge	r7,r6,44c58 <__fixdfsi+0x68>
   44c10:	00810744 	movi	r2,1053
   44c14:	11800c16 	blt	r2,r6,44c48 <__fixdfsi+0x58>
   44c18:	00810cc4 	movi	r2,1075
   44c1c:	1185c83a 	sub	r2,r2,r6
   44c20:	01c007c4 	movi	r7,31
   44c24:	18c00434 	orhi	r3,r3,16
   44c28:	38800d16 	blt	r7,r2,44c60 <__fixdfsi+0x70>
   44c2c:	31befb44 	addi	r6,r6,-1043
   44c30:	2084d83a 	srl	r2,r4,r2
   44c34:	1986983a 	sll	r3,r3,r6
   44c38:	1884b03a 	or	r2,r3,r2
   44c3c:	28000726 	beq	r5,zero,44c5c <__fixdfsi+0x6c>
   44c40:	0085c83a 	sub	r2,zero,r2
   44c44:	f800283a 	ret
   44c48:	00a00034 	movhi	r2,32768
   44c4c:	10bfffc4 	addi	r2,r2,-1
   44c50:	2885883a 	add	r2,r5,r2
   44c54:	f800283a 	ret
   44c58:	0005883a 	mov	r2,zero
   44c5c:	f800283a 	ret
   44c60:	008104c4 	movi	r2,1043
   44c64:	1185c83a 	sub	r2,r2,r6
   44c68:	1884d83a 	srl	r2,r3,r2
   44c6c:	003ff306 	br	44c3c <__alt_data_end+0xfffc4c3c>

00044c70 <__floatsidf>:
   44c70:	defffd04 	addi	sp,sp,-12
   44c74:	dfc00215 	stw	ra,8(sp)
   44c78:	dc400115 	stw	r17,4(sp)
   44c7c:	dc000015 	stw	r16,0(sp)
   44c80:	20002b26 	beq	r4,zero,44d30 <__floatsidf+0xc0>
   44c84:	2023883a 	mov	r17,r4
   44c88:	2020d7fa 	srli	r16,r4,31
   44c8c:	20002d16 	blt	r4,zero,44d44 <__floatsidf+0xd4>
   44c90:	8809883a 	mov	r4,r17
   44c94:	00450040 	call	45004 <__clzsi2>
   44c98:	01410784 	movi	r5,1054
   44c9c:	288bc83a 	sub	r5,r5,r2
   44ca0:	01010cc4 	movi	r4,1075
   44ca4:	2149c83a 	sub	r4,r4,r5
   44ca8:	00c007c4 	movi	r3,31
   44cac:	1900160e 	bge	r3,r4,44d08 <__floatsidf+0x98>
   44cb0:	00c104c4 	movi	r3,1043
   44cb4:	1947c83a 	sub	r3,r3,r5
   44cb8:	88c6983a 	sll	r3,r17,r3
   44cbc:	00800434 	movhi	r2,16
   44cc0:	10bfffc4 	addi	r2,r2,-1
   44cc4:	1886703a 	and	r3,r3,r2
   44cc8:	2941ffcc 	andi	r5,r5,2047
   44ccc:	800d883a 	mov	r6,r16
   44cd0:	0005883a 	mov	r2,zero
   44cd4:	280a953a 	slli	r5,r5,20
   44cd8:	31803fcc 	andi	r6,r6,255
   44cdc:	01000434 	movhi	r4,16
   44ce0:	300c97fa 	slli	r6,r6,31
   44ce4:	213fffc4 	addi	r4,r4,-1
   44ce8:	1906703a 	and	r3,r3,r4
   44cec:	1946b03a 	or	r3,r3,r5
   44cf0:	1986b03a 	or	r3,r3,r6
   44cf4:	dfc00217 	ldw	ra,8(sp)
   44cf8:	dc400117 	ldw	r17,4(sp)
   44cfc:	dc000017 	ldw	r16,0(sp)
   44d00:	dec00304 	addi	sp,sp,12
   44d04:	f800283a 	ret
   44d08:	00c002c4 	movi	r3,11
   44d0c:	1887c83a 	sub	r3,r3,r2
   44d10:	88c6d83a 	srl	r3,r17,r3
   44d14:	8904983a 	sll	r2,r17,r4
   44d18:	01000434 	movhi	r4,16
   44d1c:	213fffc4 	addi	r4,r4,-1
   44d20:	2941ffcc 	andi	r5,r5,2047
   44d24:	1906703a 	and	r3,r3,r4
   44d28:	800d883a 	mov	r6,r16
   44d2c:	003fe906 	br	44cd4 <__alt_data_end+0xfffc4cd4>
   44d30:	000d883a 	mov	r6,zero
   44d34:	000b883a 	mov	r5,zero
   44d38:	0007883a 	mov	r3,zero
   44d3c:	0005883a 	mov	r2,zero
   44d40:	003fe406 	br	44cd4 <__alt_data_end+0xfffc4cd4>
   44d44:	0123c83a 	sub	r17,zero,r4
   44d48:	003fd106 	br	44c90 <__alt_data_end+0xfffc4c90>

00044d4c <__extendsfdf2>:
   44d4c:	200ad5fa 	srli	r5,r4,23
   44d50:	defffd04 	addi	sp,sp,-12
   44d54:	dc400115 	stw	r17,4(sp)
   44d58:	29403fcc 	andi	r5,r5,255
   44d5c:	29800044 	addi	r6,r5,1
   44d60:	04402034 	movhi	r17,128
   44d64:	dc000015 	stw	r16,0(sp)
   44d68:	8c7fffc4 	addi	r17,r17,-1
   44d6c:	dfc00215 	stw	ra,8(sp)
   44d70:	31803fcc 	andi	r6,r6,255
   44d74:	00800044 	movi	r2,1
   44d78:	8922703a 	and	r17,r17,r4
   44d7c:	2020d7fa 	srli	r16,r4,31
   44d80:	1180110e 	bge	r2,r6,44dc8 <__extendsfdf2+0x7c>
   44d84:	880cd0fa 	srli	r6,r17,3
   44d88:	8822977a 	slli	r17,r17,29
   44d8c:	2940e004 	addi	r5,r5,896
   44d90:	2941ffcc 	andi	r5,r5,2047
   44d94:	2804953a 	slli	r2,r5,20
   44d98:	01400434 	movhi	r5,16
   44d9c:	800697fa 	slli	r3,r16,31
   44da0:	297fffc4 	addi	r5,r5,-1
   44da4:	314a703a 	and	r5,r6,r5
   44da8:	288ab03a 	or	r5,r5,r2
   44dac:	28c6b03a 	or	r3,r5,r3
   44db0:	8805883a 	mov	r2,r17
   44db4:	dfc00217 	ldw	ra,8(sp)
   44db8:	dc400117 	ldw	r17,4(sp)
   44dbc:	dc000017 	ldw	r16,0(sp)
   44dc0:	dec00304 	addi	sp,sp,12
   44dc4:	f800283a 	ret
   44dc8:	2800111e 	bne	r5,zero,44e10 <__extendsfdf2+0xc4>
   44dcc:	88001c26 	beq	r17,zero,44e40 <__extendsfdf2+0xf4>
   44dd0:	8809883a 	mov	r4,r17
   44dd4:	00450040 	call	45004 <__clzsi2>
   44dd8:	00c00284 	movi	r3,10
   44ddc:	18801b16 	blt	r3,r2,44e4c <__extendsfdf2+0x100>
   44de0:	018002c4 	movi	r6,11
   44de4:	308dc83a 	sub	r6,r6,r2
   44de8:	11000544 	addi	r4,r2,21
   44dec:	8986d83a 	srl	r3,r17,r6
   44df0:	8922983a 	sll	r17,r17,r4
   44df4:	0180e244 	movi	r6,905
   44df8:	01400434 	movhi	r5,16
   44dfc:	3085c83a 	sub	r2,r6,r2
   44e00:	297fffc4 	addi	r5,r5,-1
   44e04:	194c703a 	and	r6,r3,r5
   44e08:	1141ffcc 	andi	r5,r2,2047
   44e0c:	003fe006 	br	44d90 <__alt_data_end+0xfffc4d90>
   44e10:	88000826 	beq	r17,zero,44e34 <__extendsfdf2+0xe8>
   44e14:	880cd0fa 	srli	r6,r17,3
   44e18:	00800434 	movhi	r2,16
   44e1c:	10bfffc4 	addi	r2,r2,-1
   44e20:	31800234 	orhi	r6,r6,8
   44e24:	8822977a 	slli	r17,r17,29
   44e28:	308c703a 	and	r6,r6,r2
   44e2c:	0141ffc4 	movi	r5,2047
   44e30:	003fd706 	br	44d90 <__alt_data_end+0xfffc4d90>
   44e34:	0141ffc4 	movi	r5,2047
   44e38:	000d883a 	mov	r6,zero
   44e3c:	003fd406 	br	44d90 <__alt_data_end+0xfffc4d90>
   44e40:	000b883a 	mov	r5,zero
   44e44:	000d883a 	mov	r6,zero
   44e48:	003fd106 	br	44d90 <__alt_data_end+0xfffc4d90>
   44e4c:	11bffd44 	addi	r6,r2,-11
   44e50:	8986983a 	sll	r3,r17,r6
   44e54:	0023883a 	mov	r17,zero
   44e58:	003fe606 	br	44df4 <__alt_data_end+0xfffc4df4>

00044e5c <__truncdfsf2>:
   44e5c:	2810d53a 	srli	r8,r5,20
   44e60:	01c00434 	movhi	r7,16
   44e64:	39ffffc4 	addi	r7,r7,-1
   44e68:	29ce703a 	and	r7,r5,r7
   44e6c:	4201ffcc 	andi	r8,r8,2047
   44e70:	380e90fa 	slli	r7,r7,3
   44e74:	200cd77a 	srli	r6,r4,29
   44e78:	42400044 	addi	r9,r8,1
   44e7c:	4a41ffcc 	andi	r9,r9,2047
   44e80:	00c00044 	movi	r3,1
   44e84:	280ad7fa 	srli	r5,r5,31
   44e88:	31ceb03a 	or	r7,r6,r7
   44e8c:	200490fa 	slli	r2,r4,3
   44e90:	1a40230e 	bge	r3,r9,44f20 <__truncdfsf2+0xc4>
   44e94:	40ff2004 	addi	r3,r8,-896
   44e98:	01803f84 	movi	r6,254
   44e9c:	30c01516 	blt	r6,r3,44ef4 <__truncdfsf2+0x98>
   44ea0:	00c0380e 	bge	zero,r3,44f84 <__truncdfsf2+0x128>
   44ea4:	200c91ba 	slli	r6,r4,6
   44ea8:	380e90fa 	slli	r7,r7,3
   44eac:	1004d77a 	srli	r2,r2,29
   44eb0:	300cc03a 	cmpne	r6,r6,zero
   44eb4:	31ccb03a 	or	r6,r6,r7
   44eb8:	308cb03a 	or	r6,r6,r2
   44ebc:	308001cc 	andi	r2,r6,7
   44ec0:	10000426 	beq	r2,zero,44ed4 <__truncdfsf2+0x78>
   44ec4:	308003cc 	andi	r2,r6,15
   44ec8:	01000104 	movi	r4,4
   44ecc:	11000126 	beq	r2,r4,44ed4 <__truncdfsf2+0x78>
   44ed0:	31800104 	addi	r6,r6,4
   44ed4:	3081002c 	andhi	r2,r6,1024
   44ed8:	10001626 	beq	r2,zero,44f34 <__truncdfsf2+0xd8>
   44edc:	18c00044 	addi	r3,r3,1
   44ee0:	00803fc4 	movi	r2,255
   44ee4:	18800326 	beq	r3,r2,44ef4 <__truncdfsf2+0x98>
   44ee8:	300c91ba 	slli	r6,r6,6
   44eec:	300cd27a 	srli	r6,r6,9
   44ef0:	00000206 	br	44efc <__truncdfsf2+0xa0>
   44ef4:	00ffffc4 	movi	r3,-1
   44ef8:	000d883a 	mov	r6,zero
   44efc:	18c03fcc 	andi	r3,r3,255
   44f00:	180895fa 	slli	r4,r3,23
   44f04:	00c02034 	movhi	r3,128
   44f08:	280a97fa 	slli	r5,r5,31
   44f0c:	18ffffc4 	addi	r3,r3,-1
   44f10:	30c6703a 	and	r3,r6,r3
   44f14:	1906b03a 	or	r3,r3,r4
   44f18:	1944b03a 	or	r2,r3,r5
   44f1c:	f800283a 	ret
   44f20:	40000b1e 	bne	r8,zero,44f50 <__truncdfsf2+0xf4>
   44f24:	388cb03a 	or	r6,r7,r2
   44f28:	0007883a 	mov	r3,zero
   44f2c:	30000426 	beq	r6,zero,44f40 <__truncdfsf2+0xe4>
   44f30:	01800144 	movi	r6,5
   44f34:	00803fc4 	movi	r2,255
   44f38:	300cd0fa 	srli	r6,r6,3
   44f3c:	18800a26 	beq	r3,r2,44f68 <__truncdfsf2+0x10c>
   44f40:	00802034 	movhi	r2,128
   44f44:	10bfffc4 	addi	r2,r2,-1
   44f48:	308c703a 	and	r6,r6,r2
   44f4c:	003feb06 	br	44efc <__alt_data_end+0xfffc4efc>
   44f50:	3888b03a 	or	r4,r7,r2
   44f54:	203fe726 	beq	r4,zero,44ef4 <__alt_data_end+0xfffc4ef4>
   44f58:	380c90fa 	slli	r6,r7,3
   44f5c:	00c03fc4 	movi	r3,255
   44f60:	31808034 	orhi	r6,r6,512
   44f64:	003fd506 	br	44ebc <__alt_data_end+0xfffc4ebc>
   44f68:	303fe226 	beq	r6,zero,44ef4 <__alt_data_end+0xfffc4ef4>
   44f6c:	00802034 	movhi	r2,128
   44f70:	31801034 	orhi	r6,r6,64
   44f74:	10bfffc4 	addi	r2,r2,-1
   44f78:	00ffffc4 	movi	r3,-1
   44f7c:	308c703a 	and	r6,r6,r2
   44f80:	003fde06 	br	44efc <__alt_data_end+0xfffc4efc>
   44f84:	013ffa44 	movi	r4,-23
   44f88:	19000e16 	blt	r3,r4,44fc4 <__truncdfsf2+0x168>
   44f8c:	01000784 	movi	r4,30
   44f90:	20c9c83a 	sub	r4,r4,r3
   44f94:	018007c4 	movi	r6,31
   44f98:	39c02034 	orhi	r7,r7,128
   44f9c:	31000b16 	blt	r6,r4,44fcc <__truncdfsf2+0x170>
   44fa0:	423f2084 	addi	r8,r8,-894
   44fa4:	120c983a 	sll	r6,r2,r8
   44fa8:	3a0e983a 	sll	r7,r7,r8
   44fac:	1104d83a 	srl	r2,r2,r4
   44fb0:	300cc03a 	cmpne	r6,r6,zero
   44fb4:	31ceb03a 	or	r7,r6,r7
   44fb8:	388cb03a 	or	r6,r7,r2
   44fbc:	0007883a 	mov	r3,zero
   44fc0:	003fbe06 	br	44ebc <__alt_data_end+0xfffc4ebc>
   44fc4:	0007883a 	mov	r3,zero
   44fc8:	003fd906 	br	44f30 <__alt_data_end+0xfffc4f30>
   44fcc:	01bfff84 	movi	r6,-2
   44fd0:	30cdc83a 	sub	r6,r6,r3
   44fd4:	00c00804 	movi	r3,32
   44fd8:	398cd83a 	srl	r6,r7,r6
   44fdc:	20c00726 	beq	r4,r3,44ffc <__truncdfsf2+0x1a0>
   44fe0:	423f2884 	addi	r8,r8,-862
   44fe4:	3a0e983a 	sll	r7,r7,r8
   44fe8:	3884b03a 	or	r2,r7,r2
   44fec:	1004c03a 	cmpne	r2,r2,zero
   44ff0:	118cb03a 	or	r6,r2,r6
   44ff4:	0007883a 	mov	r3,zero
   44ff8:	003fb006 	br	44ebc <__alt_data_end+0xfffc4ebc>
   44ffc:	000f883a 	mov	r7,zero
   45000:	003ff906 	br	44fe8 <__alt_data_end+0xfffc4fe8>

00045004 <__clzsi2>:
   45004:	00bfffd4 	movui	r2,65535
   45008:	11000536 	bltu	r2,r4,45020 <__clzsi2+0x1c>
   4500c:	00803fc4 	movi	r2,255
   45010:	11000f36 	bltu	r2,r4,45050 <__clzsi2+0x4c>
   45014:	00800804 	movi	r2,32
   45018:	0007883a 	mov	r3,zero
   4501c:	00000506 	br	45034 <__clzsi2+0x30>
   45020:	00804034 	movhi	r2,256
   45024:	10bfffc4 	addi	r2,r2,-1
   45028:	11000c2e 	bgeu	r2,r4,4505c <__clzsi2+0x58>
   4502c:	00800204 	movi	r2,8
   45030:	00c00604 	movi	r3,24
   45034:	20c8d83a 	srl	r4,r4,r3
   45038:	00c00174 	movhi	r3,5
   4503c:	18c9ea04 	addi	r3,r3,10152
   45040:	1909883a 	add	r4,r3,r4
   45044:	20c00003 	ldbu	r3,0(r4)
   45048:	10c5c83a 	sub	r2,r2,r3
   4504c:	f800283a 	ret
   45050:	00800604 	movi	r2,24
   45054:	00c00204 	movi	r3,8
   45058:	003ff606 	br	45034 <__alt_data_end+0xfffc5034>
   4505c:	00800404 	movi	r2,16
   45060:	1007883a 	mov	r3,r2
   45064:	003ff306 	br	45034 <__alt_data_end+0xfffc5034>

00045068 <_printf_r>:
   45068:	defffd04 	addi	sp,sp,-12
   4506c:	2805883a 	mov	r2,r5
   45070:	dfc00015 	stw	ra,0(sp)
   45074:	d9800115 	stw	r6,4(sp)
   45078:	d9c00215 	stw	r7,8(sp)
   4507c:	21400217 	ldw	r5,8(r4)
   45080:	d9c00104 	addi	r7,sp,4
   45084:	100d883a 	mov	r6,r2
   45088:	00452400 	call	45240 <___vfprintf_internal_r>
   4508c:	dfc00017 	ldw	ra,0(sp)
   45090:	dec00304 	addi	sp,sp,12
   45094:	f800283a 	ret

00045098 <printf>:
   45098:	defffc04 	addi	sp,sp,-16
   4509c:	dfc00015 	stw	ra,0(sp)
   450a0:	d9400115 	stw	r5,4(sp)
   450a4:	d9800215 	stw	r6,8(sp)
   450a8:	d9c00315 	stw	r7,12(sp)
   450ac:	00800174 	movhi	r2,5
   450b0:	10915604 	addi	r2,r2,17752
   450b4:	10800017 	ldw	r2,0(r2)
   450b8:	200b883a 	mov	r5,r4
   450bc:	d9800104 	addi	r6,sp,4
   450c0:	11000217 	ldw	r4,8(r2)
   450c4:	00474380 	call	47438 <__vfprintf_internal>
   450c8:	dfc00017 	ldw	ra,0(sp)
   450cc:	dec00404 	addi	sp,sp,16
   450d0:	f800283a 	ret

000450d4 <_puts_r>:
   450d4:	defff604 	addi	sp,sp,-40
   450d8:	dc000715 	stw	r16,28(sp)
   450dc:	2021883a 	mov	r16,r4
   450e0:	2809883a 	mov	r4,r5
   450e4:	dc400815 	stw	r17,32(sp)
   450e8:	dfc00915 	stw	ra,36(sp)
   450ec:	2823883a 	mov	r17,r5
   450f0:	00451a80 	call	451a8 <strlen>
   450f4:	10c00044 	addi	r3,r2,1
   450f8:	d8800115 	stw	r2,4(sp)
   450fc:	00800174 	movhi	r2,5
   45100:	108a2a04 	addi	r2,r2,10408
   45104:	d8800215 	stw	r2,8(sp)
   45108:	00800044 	movi	r2,1
   4510c:	d8800315 	stw	r2,12(sp)
   45110:	00800084 	movi	r2,2
   45114:	dc400015 	stw	r17,0(sp)
   45118:	d8c00615 	stw	r3,24(sp)
   4511c:	dec00415 	stw	sp,16(sp)
   45120:	d8800515 	stw	r2,20(sp)
   45124:	80000226 	beq	r16,zero,45130 <_puts_r+0x5c>
   45128:	80800e17 	ldw	r2,56(r16)
   4512c:	10001426 	beq	r2,zero,45180 <_puts_r+0xac>
   45130:	81400217 	ldw	r5,8(r16)
   45134:	2880030b 	ldhu	r2,12(r5)
   45138:	10c8000c 	andi	r3,r2,8192
   4513c:	1800061e 	bne	r3,zero,45158 <_puts_r+0x84>
   45140:	29001917 	ldw	r4,100(r5)
   45144:	00f7ffc4 	movi	r3,-8193
   45148:	10880014 	ori	r2,r2,8192
   4514c:	20c6703a 	and	r3,r4,r3
   45150:	2880030d 	sth	r2,12(r5)
   45154:	28c01915 	stw	r3,100(r5)
   45158:	d9800404 	addi	r6,sp,16
   4515c:	8009883a 	mov	r4,r16
   45160:	00499680 	call	49968 <__sfvwrite_r>
   45164:	1000091e 	bne	r2,zero,4518c <_puts_r+0xb8>
   45168:	00800284 	movi	r2,10
   4516c:	dfc00917 	ldw	ra,36(sp)
   45170:	dc400817 	ldw	r17,32(sp)
   45174:	dc000717 	ldw	r16,28(sp)
   45178:	dec00a04 	addi	sp,sp,40
   4517c:	f800283a 	ret
   45180:	8009883a 	mov	r4,r16
   45184:	00494e40 	call	494e4 <__sinit>
   45188:	003fe906 	br	45130 <__alt_data_end+0xfffc5130>
   4518c:	00bfffc4 	movi	r2,-1
   45190:	003ff606 	br	4516c <__alt_data_end+0xfffc516c>

00045194 <puts>:
   45194:	00800174 	movhi	r2,5
   45198:	10915604 	addi	r2,r2,17752
   4519c:	200b883a 	mov	r5,r4
   451a0:	11000017 	ldw	r4,0(r2)
   451a4:	00450d41 	jmpi	450d4 <_puts_r>

000451a8 <strlen>:
   451a8:	208000cc 	andi	r2,r4,3
   451ac:	10002026 	beq	r2,zero,45230 <strlen+0x88>
   451b0:	20800007 	ldb	r2,0(r4)
   451b4:	10002026 	beq	r2,zero,45238 <strlen+0x90>
   451b8:	2005883a 	mov	r2,r4
   451bc:	00000206 	br	451c8 <strlen+0x20>
   451c0:	10c00007 	ldb	r3,0(r2)
   451c4:	18001826 	beq	r3,zero,45228 <strlen+0x80>
   451c8:	10800044 	addi	r2,r2,1
   451cc:	10c000cc 	andi	r3,r2,3
   451d0:	183ffb1e 	bne	r3,zero,451c0 <__alt_data_end+0xfffc51c0>
   451d4:	10c00017 	ldw	r3,0(r2)
   451d8:	01ffbff4 	movhi	r7,65279
   451dc:	39ffbfc4 	addi	r7,r7,-257
   451e0:	00ca303a 	nor	r5,zero,r3
   451e4:	01a02074 	movhi	r6,32897
   451e8:	19c7883a 	add	r3,r3,r7
   451ec:	31a02004 	addi	r6,r6,-32640
   451f0:	1946703a 	and	r3,r3,r5
   451f4:	1986703a 	and	r3,r3,r6
   451f8:	1800091e 	bne	r3,zero,45220 <strlen+0x78>
   451fc:	10800104 	addi	r2,r2,4
   45200:	10c00017 	ldw	r3,0(r2)
   45204:	19cb883a 	add	r5,r3,r7
   45208:	00c6303a 	nor	r3,zero,r3
   4520c:	28c6703a 	and	r3,r5,r3
   45210:	1986703a 	and	r3,r3,r6
   45214:	183ff926 	beq	r3,zero,451fc <__alt_data_end+0xfffc51fc>
   45218:	00000106 	br	45220 <strlen+0x78>
   4521c:	10800044 	addi	r2,r2,1
   45220:	10c00007 	ldb	r3,0(r2)
   45224:	183ffd1e 	bne	r3,zero,4521c <__alt_data_end+0xfffc521c>
   45228:	1105c83a 	sub	r2,r2,r4
   4522c:	f800283a 	ret
   45230:	2005883a 	mov	r2,r4
   45234:	003fe706 	br	451d4 <__alt_data_end+0xfffc51d4>
   45238:	0005883a 	mov	r2,zero
   4523c:	f800283a 	ret

00045240 <___vfprintf_internal_r>:
   45240:	deffb804 	addi	sp,sp,-288
   45244:	dfc04715 	stw	ra,284(sp)
   45248:	ddc04515 	stw	r23,276(sp)
   4524c:	dd404315 	stw	r21,268(sp)
   45250:	d9002c15 	stw	r4,176(sp)
   45254:	282f883a 	mov	r23,r5
   45258:	302b883a 	mov	r21,r6
   4525c:	d9c02d15 	stw	r7,180(sp)
   45260:	df004615 	stw	fp,280(sp)
   45264:	dd804415 	stw	r22,272(sp)
   45268:	dd004215 	stw	r20,264(sp)
   4526c:	dcc04115 	stw	r19,260(sp)
   45270:	dc804015 	stw	r18,256(sp)
   45274:	dc403f15 	stw	r17,252(sp)
   45278:	dc003e15 	stw	r16,248(sp)
   4527c:	004a0580 	call	4a058 <_localeconv_r>
   45280:	10800017 	ldw	r2,0(r2)
   45284:	1009883a 	mov	r4,r2
   45288:	d8803415 	stw	r2,208(sp)
   4528c:	00451a80 	call	451a8 <strlen>
   45290:	d8803715 	stw	r2,220(sp)
   45294:	d8802c17 	ldw	r2,176(sp)
   45298:	10000226 	beq	r2,zero,452a4 <___vfprintf_internal_r+0x64>
   4529c:	10800e17 	ldw	r2,56(r2)
   452a0:	1000f926 	beq	r2,zero,45688 <___vfprintf_internal_r+0x448>
   452a4:	b880030b 	ldhu	r2,12(r23)
   452a8:	10c8000c 	andi	r3,r2,8192
   452ac:	1800061e 	bne	r3,zero,452c8 <___vfprintf_internal_r+0x88>
   452b0:	b9001917 	ldw	r4,100(r23)
   452b4:	00f7ffc4 	movi	r3,-8193
   452b8:	10880014 	ori	r2,r2,8192
   452bc:	20c6703a 	and	r3,r4,r3
   452c0:	b880030d 	sth	r2,12(r23)
   452c4:	b8c01915 	stw	r3,100(r23)
   452c8:	10c0020c 	andi	r3,r2,8
   452cc:	1800c126 	beq	r3,zero,455d4 <___vfprintf_internal_r+0x394>
   452d0:	b8c00417 	ldw	r3,16(r23)
   452d4:	1800bf26 	beq	r3,zero,455d4 <___vfprintf_internal_r+0x394>
   452d8:	1080068c 	andi	r2,r2,26
   452dc:	00c00284 	movi	r3,10
   452e0:	10c0c426 	beq	r2,r3,455f4 <___vfprintf_internal_r+0x3b4>
   452e4:	d8c00404 	addi	r3,sp,16
   452e8:	05000174 	movhi	r20,5
   452ec:	d9001e04 	addi	r4,sp,120
   452f0:	a50a3b84 	addi	r20,r20,10478
   452f4:	d8c01e15 	stw	r3,120(sp)
   452f8:	d8002015 	stw	zero,128(sp)
   452fc:	d8001f15 	stw	zero,124(sp)
   45300:	d8003315 	stw	zero,204(sp)
   45304:	d8003615 	stw	zero,216(sp)
   45308:	d8003815 	stw	zero,224(sp)
   4530c:	1811883a 	mov	r8,r3
   45310:	d8003915 	stw	zero,228(sp)
   45314:	d8003a15 	stw	zero,232(sp)
   45318:	d8002f15 	stw	zero,188(sp)
   4531c:	d9002815 	stw	r4,160(sp)
   45320:	a8800007 	ldb	r2,0(r21)
   45324:	10027b26 	beq	r2,zero,45d14 <___vfprintf_internal_r+0xad4>
   45328:	00c00944 	movi	r3,37
   4532c:	a821883a 	mov	r16,r21
   45330:	10c0021e 	bne	r2,r3,4533c <___vfprintf_internal_r+0xfc>
   45334:	00001406 	br	45388 <___vfprintf_internal_r+0x148>
   45338:	10c00326 	beq	r2,r3,45348 <___vfprintf_internal_r+0x108>
   4533c:	84000044 	addi	r16,r16,1
   45340:	80800007 	ldb	r2,0(r16)
   45344:	103ffc1e 	bne	r2,zero,45338 <__alt_data_end+0xfffc5338>
   45348:	8563c83a 	sub	r17,r16,r21
   4534c:	88000e26 	beq	r17,zero,45388 <___vfprintf_internal_r+0x148>
   45350:	d8c02017 	ldw	r3,128(sp)
   45354:	d8801f17 	ldw	r2,124(sp)
   45358:	45400015 	stw	r21,0(r8)
   4535c:	1c47883a 	add	r3,r3,r17
   45360:	10800044 	addi	r2,r2,1
   45364:	d8c02015 	stw	r3,128(sp)
   45368:	44400115 	stw	r17,4(r8)
   4536c:	d8801f15 	stw	r2,124(sp)
   45370:	00c001c4 	movi	r3,7
   45374:	1880a716 	blt	r3,r2,45614 <___vfprintf_internal_r+0x3d4>
   45378:	42000204 	addi	r8,r8,8
   4537c:	d9402f17 	ldw	r5,188(sp)
   45380:	2c4b883a 	add	r5,r5,r17
   45384:	d9402f15 	stw	r5,188(sp)
   45388:	80800007 	ldb	r2,0(r16)
   4538c:	1000a826 	beq	r2,zero,45630 <___vfprintf_internal_r+0x3f0>
   45390:	84400047 	ldb	r17,1(r16)
   45394:	00bfffc4 	movi	r2,-1
   45398:	85400044 	addi	r21,r16,1
   4539c:	d8002785 	stb	zero,158(sp)
   453a0:	0007883a 	mov	r3,zero
   453a4:	000f883a 	mov	r7,zero
   453a8:	d8802915 	stw	r2,164(sp)
   453ac:	d8003115 	stw	zero,196(sp)
   453b0:	0025883a 	mov	r18,zero
   453b4:	01401604 	movi	r5,88
   453b8:	01800244 	movi	r6,9
   453bc:	02800a84 	movi	r10,42
   453c0:	02401b04 	movi	r9,108
   453c4:	ad400044 	addi	r21,r21,1
   453c8:	88bff804 	addi	r2,r17,-32
   453cc:	28830436 	bltu	r5,r2,45fe0 <___vfprintf_internal_r+0xda0>
   453d0:	100490ba 	slli	r2,r2,2
   453d4:	01000134 	movhi	r4,4
   453d8:	2114fa04 	addi	r4,r4,21480
   453dc:	1105883a 	add	r2,r2,r4
   453e0:	10800017 	ldw	r2,0(r2)
   453e4:	1000683a 	jmp	r2
   453e8:	00045f00 	call	45f0 <__reset-0x3ba10>
   453ec:	00045fe0 	cmpeqi	zero,zero,4479
   453f0:	00045fe0 	cmpeqi	zero,zero,4479
   453f4:	00045f20 	cmpeqi	zero,zero,4476
   453f8:	00045fe0 	cmpeqi	zero,zero,4479
   453fc:	00045fe0 	cmpeqi	zero,zero,4479
   45400:	00045fe0 	cmpeqi	zero,zero,4479
   45404:	00045fe0 	cmpeqi	zero,zero,4479
   45408:	00045fe0 	cmpeqi	zero,zero,4479
   4540c:	00045fe0 	cmpeqi	zero,zero,4479
   45410:	00045694 	movui	zero,4442
   45414:	00045e3c 	xorhi	zero,zero,4472
   45418:	00045fe0 	cmpeqi	zero,zero,4479
   4541c:	0004555c 	xori	zero,zero,4437
   45420:	000456bc 	xorhi	zero,zero,4442
   45424:	00045fe0 	cmpeqi	zero,zero,4479
   45428:	000456fc 	xorhi	zero,zero,4443
   4542c:	00045708 	cmpgei	zero,zero,4444
   45430:	00045708 	cmpgei	zero,zero,4444
   45434:	00045708 	cmpgei	zero,zero,4444
   45438:	00045708 	cmpgei	zero,zero,4444
   4543c:	00045708 	cmpgei	zero,zero,4444
   45440:	00045708 	cmpgei	zero,zero,4444
   45444:	00045708 	cmpgei	zero,zero,4444
   45448:	00045708 	cmpgei	zero,zero,4444
   4544c:	00045708 	cmpgei	zero,zero,4444
   45450:	00045fe0 	cmpeqi	zero,zero,4479
   45454:	00045fe0 	cmpeqi	zero,zero,4479
   45458:	00045fe0 	cmpeqi	zero,zero,4479
   4545c:	00045fe0 	cmpeqi	zero,zero,4479
   45460:	00045fe0 	cmpeqi	zero,zero,4479
   45464:	00045fe0 	cmpeqi	zero,zero,4479
   45468:	00045fe0 	cmpeqi	zero,zero,4479
   4546c:	00045fe0 	cmpeqi	zero,zero,4479
   45470:	00045fe0 	cmpeqi	zero,zero,4479
   45474:	00045fe0 	cmpeqi	zero,zero,4479
   45478:	0004573c 	xorhi	zero,zero,4444
   4547c:	000457f8 	rdprs	zero,zero,4447
   45480:	00045fe0 	cmpeqi	zero,zero,4479
   45484:	000457f8 	rdprs	zero,zero,4447
   45488:	00045fe0 	cmpeqi	zero,zero,4479
   4548c:	00045fe0 	cmpeqi	zero,zero,4479
   45490:	00045fe0 	cmpeqi	zero,zero,4479
   45494:	00045fe0 	cmpeqi	zero,zero,4479
   45498:	00045898 	cmpnei	zero,zero,4450
   4549c:	00045fe0 	cmpeqi	zero,zero,4479
   454a0:	00045fe0 	cmpeqi	zero,zero,4479
   454a4:	000458a4 	muli	zero,zero,4450
   454a8:	00045fe0 	cmpeqi	zero,zero,4479
   454ac:	00045fe0 	cmpeqi	zero,zero,4479
   454b0:	00045fe0 	cmpeqi	zero,zero,4479
   454b4:	00045fe0 	cmpeqi	zero,zero,4479
   454b8:	00045fe0 	cmpeqi	zero,zero,4479
   454bc:	00045d1c 	xori	zero,zero,4468
   454c0:	00045fe0 	cmpeqi	zero,zero,4479
   454c4:	00045fe0 	cmpeqi	zero,zero,4479
   454c8:	00045d7c 	xorhi	zero,zero,4469
   454cc:	00045fe0 	cmpeqi	zero,zero,4479
   454d0:	00045fe0 	cmpeqi	zero,zero,4479
   454d4:	00045fe0 	cmpeqi	zero,zero,4479
   454d8:	00045fe0 	cmpeqi	zero,zero,4479
   454dc:	00045fe0 	cmpeqi	zero,zero,4479
   454e0:	00045fe0 	cmpeqi	zero,zero,4479
   454e4:	00045fe0 	cmpeqi	zero,zero,4479
   454e8:	00045fe0 	cmpeqi	zero,zero,4479
   454ec:	00045fe0 	cmpeqi	zero,zero,4479
   454f0:	00045fe0 	cmpeqi	zero,zero,4479
   454f4:	00045f8c 	andi	zero,zero,4478
   454f8:	00045f2c 	andhi	zero,zero,4476
   454fc:	000457f8 	rdprs	zero,zero,4447
   45500:	000457f8 	rdprs	zero,zero,4447
   45504:	000457f8 	rdprs	zero,zero,4447
   45508:	00045f3c 	xorhi	zero,zero,4476
   4550c:	00045f2c 	andhi	zero,zero,4476
   45510:	00045fe0 	cmpeqi	zero,zero,4479
   45514:	00045fe0 	cmpeqi	zero,zero,4479
   45518:	00045f48 	cmpgei	zero,zero,4477
   4551c:	00045fe0 	cmpeqi	zero,zero,4479
   45520:	00045f58 	cmpnei	zero,zero,4477
   45524:	00045e2c 	andhi	zero,zero,4472
   45528:	00045568 	cmpgeui	zero,zero,4437
   4552c:	00045e4c 	andi	zero,zero,4473
   45530:	00045fe0 	cmpeqi	zero,zero,4479
   45534:	00045e58 	cmpnei	zero,zero,4473
   45538:	00045fe0 	cmpeqi	zero,zero,4479
   4553c:	00045eb4 	movhi	zero,4474
   45540:	00045fe0 	cmpeqi	zero,zero,4479
   45544:	00045fe0 	cmpeqi	zero,zero,4479
   45548:	00045ec4 	movi	zero,4475
   4554c:	d9003117 	ldw	r4,196(sp)
   45550:	d8802d15 	stw	r2,180(sp)
   45554:	0109c83a 	sub	r4,zero,r4
   45558:	d9003115 	stw	r4,196(sp)
   4555c:	94800114 	ori	r18,r18,4
   45560:	ac400007 	ldb	r17,0(r21)
   45564:	003f9706 	br	453c4 <__alt_data_end+0xfffc53c4>
   45568:	00800c04 	movi	r2,48
   4556c:	d9002d17 	ldw	r4,180(sp)
   45570:	d9402917 	ldw	r5,164(sp)
   45574:	d8802705 	stb	r2,156(sp)
   45578:	00801e04 	movi	r2,120
   4557c:	d8802745 	stb	r2,157(sp)
   45580:	d8002785 	stb	zero,158(sp)
   45584:	20c00104 	addi	r3,r4,4
   45588:	24c00017 	ldw	r19,0(r4)
   4558c:	002d883a 	mov	r22,zero
   45590:	90800094 	ori	r2,r18,2
   45594:	28029a16 	blt	r5,zero,46000 <___vfprintf_internal_r+0xdc0>
   45598:	00bfdfc4 	movi	r2,-129
   4559c:	90a4703a 	and	r18,r18,r2
   455a0:	d8c02d15 	stw	r3,180(sp)
   455a4:	94800094 	ori	r18,r18,2
   455a8:	9802871e 	bne	r19,zero,45fc8 <___vfprintf_internal_r+0xd88>
   455ac:	00800174 	movhi	r2,5
   455b0:	108a3404 	addi	r2,r2,10448
   455b4:	d8803915 	stw	r2,228(sp)
   455b8:	04401e04 	movi	r17,120
   455bc:	d8802917 	ldw	r2,164(sp)
   455c0:	0039883a 	mov	fp,zero
   455c4:	1001e926 	beq	r2,zero,45d6c <___vfprintf_internal_r+0xb2c>
   455c8:	0027883a 	mov	r19,zero
   455cc:	002d883a 	mov	r22,zero
   455d0:	00020506 	br	45de8 <___vfprintf_internal_r+0xba8>
   455d4:	d9002c17 	ldw	r4,176(sp)
   455d8:	b80b883a 	mov	r5,r23
   455dc:	00475100 	call	47510 <__swsetup_r>
   455e0:	1005ac1e 	bne	r2,zero,46c94 <___vfprintf_internal_r+0x1a54>
   455e4:	b880030b 	ldhu	r2,12(r23)
   455e8:	00c00284 	movi	r3,10
   455ec:	1080068c 	andi	r2,r2,26
   455f0:	10ff3c1e 	bne	r2,r3,452e4 <__alt_data_end+0xfffc52e4>
   455f4:	b880038f 	ldh	r2,14(r23)
   455f8:	103f3a16 	blt	r2,zero,452e4 <__alt_data_end+0xfffc52e4>
   455fc:	d9c02d17 	ldw	r7,180(sp)
   45600:	d9002c17 	ldw	r4,176(sp)
   45604:	a80d883a 	mov	r6,r21
   45608:	b80b883a 	mov	r5,r23
   4560c:	00474540 	call	47454 <__sbprintf>
   45610:	00001106 	br	45658 <___vfprintf_internal_r+0x418>
   45614:	d9002c17 	ldw	r4,176(sp)
   45618:	d9801e04 	addi	r6,sp,120
   4561c:	b80b883a 	mov	r5,r23
   45620:	004c83c0 	call	4c83c <__sprint_r>
   45624:	1000081e 	bne	r2,zero,45648 <___vfprintf_internal_r+0x408>
   45628:	da000404 	addi	r8,sp,16
   4562c:	003f5306 	br	4537c <__alt_data_end+0xfffc537c>
   45630:	d8802017 	ldw	r2,128(sp)
   45634:	10000426 	beq	r2,zero,45648 <___vfprintf_internal_r+0x408>
   45638:	d9002c17 	ldw	r4,176(sp)
   4563c:	d9801e04 	addi	r6,sp,120
   45640:	b80b883a 	mov	r5,r23
   45644:	004c83c0 	call	4c83c <__sprint_r>
   45648:	b880030b 	ldhu	r2,12(r23)
   4564c:	1080100c 	andi	r2,r2,64
   45650:	1005901e 	bne	r2,zero,46c94 <___vfprintf_internal_r+0x1a54>
   45654:	d8802f17 	ldw	r2,188(sp)
   45658:	dfc04717 	ldw	ra,284(sp)
   4565c:	df004617 	ldw	fp,280(sp)
   45660:	ddc04517 	ldw	r23,276(sp)
   45664:	dd804417 	ldw	r22,272(sp)
   45668:	dd404317 	ldw	r21,268(sp)
   4566c:	dd004217 	ldw	r20,264(sp)
   45670:	dcc04117 	ldw	r19,260(sp)
   45674:	dc804017 	ldw	r18,256(sp)
   45678:	dc403f17 	ldw	r17,252(sp)
   4567c:	dc003e17 	ldw	r16,248(sp)
   45680:	dec04804 	addi	sp,sp,288
   45684:	f800283a 	ret
   45688:	d9002c17 	ldw	r4,176(sp)
   4568c:	00494e40 	call	494e4 <__sinit>
   45690:	003f0406 	br	452a4 <__alt_data_end+0xfffc52a4>
   45694:	d8802d17 	ldw	r2,180(sp)
   45698:	d9002d17 	ldw	r4,180(sp)
   4569c:	10800017 	ldw	r2,0(r2)
   456a0:	d8803115 	stw	r2,196(sp)
   456a4:	20800104 	addi	r2,r4,4
   456a8:	d9003117 	ldw	r4,196(sp)
   456ac:	203fa716 	blt	r4,zero,4554c <__alt_data_end+0xfffc554c>
   456b0:	d8802d15 	stw	r2,180(sp)
   456b4:	ac400007 	ldb	r17,0(r21)
   456b8:	003f4206 	br	453c4 <__alt_data_end+0xfffc53c4>
   456bc:	ac400007 	ldb	r17,0(r21)
   456c0:	aac00044 	addi	r11,r21,1
   456c4:	8a872826 	beq	r17,r10,47368 <___vfprintf_internal_r+0x2128>
   456c8:	88bff404 	addi	r2,r17,-48
   456cc:	0009883a 	mov	r4,zero
   456d0:	30867d36 	bltu	r6,r2,470c8 <___vfprintf_internal_r+0x1e88>
   456d4:	5c400007 	ldb	r17,0(r11)
   456d8:	210002a4 	muli	r4,r4,10
   456dc:	5d400044 	addi	r21,r11,1
   456e0:	a817883a 	mov	r11,r21
   456e4:	2089883a 	add	r4,r4,r2
   456e8:	88bff404 	addi	r2,r17,-48
   456ec:	30bff92e 	bgeu	r6,r2,456d4 <__alt_data_end+0xfffc56d4>
   456f0:	2005c916 	blt	r4,zero,46e18 <___vfprintf_internal_r+0x1bd8>
   456f4:	d9002915 	stw	r4,164(sp)
   456f8:	003f3306 	br	453c8 <__alt_data_end+0xfffc53c8>
   456fc:	94802014 	ori	r18,r18,128
   45700:	ac400007 	ldb	r17,0(r21)
   45704:	003f2f06 	br	453c4 <__alt_data_end+0xfffc53c4>
   45708:	a809883a 	mov	r4,r21
   4570c:	d8003115 	stw	zero,196(sp)
   45710:	88bff404 	addi	r2,r17,-48
   45714:	0017883a 	mov	r11,zero
   45718:	24400007 	ldb	r17,0(r4)
   4571c:	5ac002a4 	muli	r11,r11,10
   45720:	ad400044 	addi	r21,r21,1
   45724:	a809883a 	mov	r4,r21
   45728:	12d7883a 	add	r11,r2,r11
   4572c:	88bff404 	addi	r2,r17,-48
   45730:	30bff92e 	bgeu	r6,r2,45718 <__alt_data_end+0xfffc5718>
   45734:	dac03115 	stw	r11,196(sp)
   45738:	003f2306 	br	453c8 <__alt_data_end+0xfffc53c8>
   4573c:	18c03fcc 	andi	r3,r3,255
   45740:	18072b1e 	bne	r3,zero,473f0 <___vfprintf_internal_r+0x21b0>
   45744:	94800414 	ori	r18,r18,16
   45748:	9080080c 	andi	r2,r18,32
   4574c:	10037b26 	beq	r2,zero,4653c <___vfprintf_internal_r+0x12fc>
   45750:	d9402d17 	ldw	r5,180(sp)
   45754:	28800117 	ldw	r2,4(r5)
   45758:	2cc00017 	ldw	r19,0(r5)
   4575c:	29400204 	addi	r5,r5,8
   45760:	d9402d15 	stw	r5,180(sp)
   45764:	102d883a 	mov	r22,r2
   45768:	10044b16 	blt	r2,zero,46898 <___vfprintf_internal_r+0x1658>
   4576c:	d9402917 	ldw	r5,164(sp)
   45770:	df002783 	ldbu	fp,158(sp)
   45774:	2803bc16 	blt	r5,zero,46668 <___vfprintf_internal_r+0x1428>
   45778:	00ffdfc4 	movi	r3,-129
   4577c:	9d84b03a 	or	r2,r19,r22
   45780:	90e4703a 	and	r18,r18,r3
   45784:	10017726 	beq	r2,zero,45d64 <___vfprintf_internal_r+0xb24>
   45788:	b0038326 	beq	r22,zero,46598 <___vfprintf_internal_r+0x1358>
   4578c:	dc402a15 	stw	r17,168(sp)
   45790:	dc001e04 	addi	r16,sp,120
   45794:	b023883a 	mov	r17,r22
   45798:	402d883a 	mov	r22,r8
   4579c:	9809883a 	mov	r4,r19
   457a0:	880b883a 	mov	r5,r17
   457a4:	01800284 	movi	r6,10
   457a8:	000f883a 	mov	r7,zero
   457ac:	004ec340 	call	4ec34 <__umoddi3>
   457b0:	10800c04 	addi	r2,r2,48
   457b4:	843fffc4 	addi	r16,r16,-1
   457b8:	9809883a 	mov	r4,r19
   457bc:	880b883a 	mov	r5,r17
   457c0:	80800005 	stb	r2,0(r16)
   457c4:	01800284 	movi	r6,10
   457c8:	000f883a 	mov	r7,zero
   457cc:	004e6bc0 	call	4e6bc <__udivdi3>
   457d0:	1027883a 	mov	r19,r2
   457d4:	10c4b03a 	or	r2,r2,r3
   457d8:	1823883a 	mov	r17,r3
   457dc:	103fef1e 	bne	r2,zero,4579c <__alt_data_end+0xfffc579c>
   457e0:	d8c02817 	ldw	r3,160(sp)
   457e4:	dc402a17 	ldw	r17,168(sp)
   457e8:	b011883a 	mov	r8,r22
   457ec:	1c07c83a 	sub	r3,r3,r16
   457f0:	d8c02e15 	stw	r3,184(sp)
   457f4:	00005906 	br	4595c <___vfprintf_internal_r+0x71c>
   457f8:	18c03fcc 	andi	r3,r3,255
   457fc:	1806fa1e 	bne	r3,zero,473e8 <___vfprintf_internal_r+0x21a8>
   45800:	9080020c 	andi	r2,r18,8
   45804:	10048a26 	beq	r2,zero,46a30 <___vfprintf_internal_r+0x17f0>
   45808:	d8c02d17 	ldw	r3,180(sp)
   4580c:	d9002d17 	ldw	r4,180(sp)
   45810:	d9402d17 	ldw	r5,180(sp)
   45814:	18c00017 	ldw	r3,0(r3)
   45818:	21000117 	ldw	r4,4(r4)
   4581c:	29400204 	addi	r5,r5,8
   45820:	d8c03615 	stw	r3,216(sp)
   45824:	d9003815 	stw	r4,224(sp)
   45828:	d9402d15 	stw	r5,180(sp)
   4582c:	d9003617 	ldw	r4,216(sp)
   45830:	d9403817 	ldw	r5,224(sp)
   45834:	da003d15 	stw	r8,244(sp)
   45838:	04000044 	movi	r16,1
   4583c:	004c4600 	call	4c460 <__fpclassifyd>
   45840:	da003d17 	ldw	r8,244(sp)
   45844:	14041f1e 	bne	r2,r16,468c4 <___vfprintf_internal_r+0x1684>
   45848:	d9003617 	ldw	r4,216(sp)
   4584c:	d9403817 	ldw	r5,224(sp)
   45850:	000d883a 	mov	r6,zero
   45854:	000f883a 	mov	r7,zero
   45858:	004fa540 	call	4fa54 <__ledf2>
   4585c:	da003d17 	ldw	r8,244(sp)
   45860:	1005be16 	blt	r2,zero,46f5c <___vfprintf_internal_r+0x1d1c>
   45864:	df002783 	ldbu	fp,158(sp)
   45868:	008011c4 	movi	r2,71
   4586c:	1445330e 	bge	r2,r17,46d3c <___vfprintf_internal_r+0x1afc>
   45870:	04000174 	movhi	r16,5
   45874:	840a2c04 	addi	r16,r16,10416
   45878:	00c000c4 	movi	r3,3
   4587c:	00bfdfc4 	movi	r2,-129
   45880:	d8c02a15 	stw	r3,168(sp)
   45884:	90a4703a 	and	r18,r18,r2
   45888:	d8c02e15 	stw	r3,184(sp)
   4588c:	d8002915 	stw	zero,164(sp)
   45890:	d8003215 	stw	zero,200(sp)
   45894:	00003706 	br	45974 <___vfprintf_internal_r+0x734>
   45898:	94800214 	ori	r18,r18,8
   4589c:	ac400007 	ldb	r17,0(r21)
   458a0:	003ec806 	br	453c4 <__alt_data_end+0xfffc53c4>
   458a4:	18c03fcc 	andi	r3,r3,255
   458a8:	1806db1e 	bne	r3,zero,47418 <___vfprintf_internal_r+0x21d8>
   458ac:	94800414 	ori	r18,r18,16
   458b0:	9080080c 	andi	r2,r18,32
   458b4:	1002d826 	beq	r2,zero,46418 <___vfprintf_internal_r+0x11d8>
   458b8:	d9402d17 	ldw	r5,180(sp)
   458bc:	d8c02917 	ldw	r3,164(sp)
   458c0:	d8002785 	stb	zero,158(sp)
   458c4:	28800204 	addi	r2,r5,8
   458c8:	2cc00017 	ldw	r19,0(r5)
   458cc:	2d800117 	ldw	r22,4(r5)
   458d0:	18048f16 	blt	r3,zero,46b10 <___vfprintf_internal_r+0x18d0>
   458d4:	013fdfc4 	movi	r4,-129
   458d8:	9d86b03a 	or	r3,r19,r22
   458dc:	d8802d15 	stw	r2,180(sp)
   458e0:	9124703a 	and	r18,r18,r4
   458e4:	1802d91e 	bne	r3,zero,4644c <___vfprintf_internal_r+0x120c>
   458e8:	d8c02917 	ldw	r3,164(sp)
   458ec:	0039883a 	mov	fp,zero
   458f0:	1805c326 	beq	r3,zero,47000 <___vfprintf_internal_r+0x1dc0>
   458f4:	0027883a 	mov	r19,zero
   458f8:	002d883a 	mov	r22,zero
   458fc:	dc001e04 	addi	r16,sp,120
   45900:	9806d0fa 	srli	r3,r19,3
   45904:	b008977a 	slli	r4,r22,29
   45908:	b02cd0fa 	srli	r22,r22,3
   4590c:	9cc001cc 	andi	r19,r19,7
   45910:	98800c04 	addi	r2,r19,48
   45914:	843fffc4 	addi	r16,r16,-1
   45918:	20e6b03a 	or	r19,r4,r3
   4591c:	80800005 	stb	r2,0(r16)
   45920:	9d86b03a 	or	r3,r19,r22
   45924:	183ff61e 	bne	r3,zero,45900 <__alt_data_end+0xfffc5900>
   45928:	90c0004c 	andi	r3,r18,1
   4592c:	18013b26 	beq	r3,zero,45e1c <___vfprintf_internal_r+0xbdc>
   45930:	10803fcc 	andi	r2,r2,255
   45934:	1080201c 	xori	r2,r2,128
   45938:	10bfe004 	addi	r2,r2,-128
   4593c:	00c00c04 	movi	r3,48
   45940:	10c13626 	beq	r2,r3,45e1c <___vfprintf_internal_r+0xbdc>
   45944:	80ffffc5 	stb	r3,-1(r16)
   45948:	d8c02817 	ldw	r3,160(sp)
   4594c:	80bfffc4 	addi	r2,r16,-1
   45950:	1021883a 	mov	r16,r2
   45954:	1887c83a 	sub	r3,r3,r2
   45958:	d8c02e15 	stw	r3,184(sp)
   4595c:	d8802e17 	ldw	r2,184(sp)
   45960:	d9002917 	ldw	r4,164(sp)
   45964:	1100010e 	bge	r2,r4,4596c <___vfprintf_internal_r+0x72c>
   45968:	2005883a 	mov	r2,r4
   4596c:	d8802a15 	stw	r2,168(sp)
   45970:	d8003215 	stw	zero,200(sp)
   45974:	e7003fcc 	andi	fp,fp,255
   45978:	e700201c 	xori	fp,fp,128
   4597c:	e73fe004 	addi	fp,fp,-128
   45980:	e0000326 	beq	fp,zero,45990 <___vfprintf_internal_r+0x750>
   45984:	d8c02a17 	ldw	r3,168(sp)
   45988:	18c00044 	addi	r3,r3,1
   4598c:	d8c02a15 	stw	r3,168(sp)
   45990:	90c0008c 	andi	r3,r18,2
   45994:	d8c02b15 	stw	r3,172(sp)
   45998:	18000326 	beq	r3,zero,459a8 <___vfprintf_internal_r+0x768>
   4599c:	d8c02a17 	ldw	r3,168(sp)
   459a0:	18c00084 	addi	r3,r3,2
   459a4:	d8c02a15 	stw	r3,168(sp)
   459a8:	90c0210c 	andi	r3,r18,132
   459ac:	d8c03015 	stw	r3,192(sp)
   459b0:	1801a31e 	bne	r3,zero,46040 <___vfprintf_internal_r+0xe00>
   459b4:	d9003117 	ldw	r4,196(sp)
   459b8:	d8c02a17 	ldw	r3,168(sp)
   459bc:	20e7c83a 	sub	r19,r4,r3
   459c0:	04c19f0e 	bge	zero,r19,46040 <___vfprintf_internal_r+0xe00>
   459c4:	02400404 	movi	r9,16
   459c8:	d8c02017 	ldw	r3,128(sp)
   459cc:	d8801f17 	ldw	r2,124(sp)
   459d0:	4cc50d0e 	bge	r9,r19,46e08 <___vfprintf_internal_r+0x1bc8>
   459d4:	01400174 	movhi	r5,5
   459d8:	294a3f84 	addi	r5,r5,10494
   459dc:	dc403b15 	stw	r17,236(sp)
   459e0:	d9403515 	stw	r5,212(sp)
   459e4:	9823883a 	mov	r17,r19
   459e8:	482d883a 	mov	r22,r9
   459ec:	9027883a 	mov	r19,r18
   459f0:	070001c4 	movi	fp,7
   459f4:	8025883a 	mov	r18,r16
   459f8:	dc002c17 	ldw	r16,176(sp)
   459fc:	00000306 	br	45a0c <___vfprintf_internal_r+0x7cc>
   45a00:	8c7ffc04 	addi	r17,r17,-16
   45a04:	42000204 	addi	r8,r8,8
   45a08:	b440130e 	bge	r22,r17,45a58 <___vfprintf_internal_r+0x818>
   45a0c:	01000174 	movhi	r4,5
   45a10:	18c00404 	addi	r3,r3,16
   45a14:	10800044 	addi	r2,r2,1
   45a18:	210a3f84 	addi	r4,r4,10494
   45a1c:	41000015 	stw	r4,0(r8)
   45a20:	45800115 	stw	r22,4(r8)
   45a24:	d8c02015 	stw	r3,128(sp)
   45a28:	d8801f15 	stw	r2,124(sp)
   45a2c:	e0bff40e 	bge	fp,r2,45a00 <__alt_data_end+0xfffc5a00>
   45a30:	d9801e04 	addi	r6,sp,120
   45a34:	b80b883a 	mov	r5,r23
   45a38:	8009883a 	mov	r4,r16
   45a3c:	004c83c0 	call	4c83c <__sprint_r>
   45a40:	103f011e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   45a44:	8c7ffc04 	addi	r17,r17,-16
   45a48:	d8c02017 	ldw	r3,128(sp)
   45a4c:	d8801f17 	ldw	r2,124(sp)
   45a50:	da000404 	addi	r8,sp,16
   45a54:	b47fed16 	blt	r22,r17,45a0c <__alt_data_end+0xfffc5a0c>
   45a58:	9021883a 	mov	r16,r18
   45a5c:	9825883a 	mov	r18,r19
   45a60:	8827883a 	mov	r19,r17
   45a64:	dc403b17 	ldw	r17,236(sp)
   45a68:	d9403517 	ldw	r5,212(sp)
   45a6c:	98c7883a 	add	r3,r19,r3
   45a70:	10800044 	addi	r2,r2,1
   45a74:	41400015 	stw	r5,0(r8)
   45a78:	44c00115 	stw	r19,4(r8)
   45a7c:	d8c02015 	stw	r3,128(sp)
   45a80:	d8801f15 	stw	r2,124(sp)
   45a84:	010001c4 	movi	r4,7
   45a88:	2082a316 	blt	r4,r2,46518 <___vfprintf_internal_r+0x12d8>
   45a8c:	df002787 	ldb	fp,158(sp)
   45a90:	42000204 	addi	r8,r8,8
   45a94:	e0000c26 	beq	fp,zero,45ac8 <___vfprintf_internal_r+0x888>
   45a98:	d8801f17 	ldw	r2,124(sp)
   45a9c:	d9002784 	addi	r4,sp,158
   45aa0:	18c00044 	addi	r3,r3,1
   45aa4:	10800044 	addi	r2,r2,1
   45aa8:	41000015 	stw	r4,0(r8)
   45aac:	01000044 	movi	r4,1
   45ab0:	41000115 	stw	r4,4(r8)
   45ab4:	d8c02015 	stw	r3,128(sp)
   45ab8:	d8801f15 	stw	r2,124(sp)
   45abc:	010001c4 	movi	r4,7
   45ac0:	20823c16 	blt	r4,r2,463b4 <___vfprintf_internal_r+0x1174>
   45ac4:	42000204 	addi	r8,r8,8
   45ac8:	d8802b17 	ldw	r2,172(sp)
   45acc:	10000c26 	beq	r2,zero,45b00 <___vfprintf_internal_r+0x8c0>
   45ad0:	d8801f17 	ldw	r2,124(sp)
   45ad4:	d9002704 	addi	r4,sp,156
   45ad8:	18c00084 	addi	r3,r3,2
   45adc:	10800044 	addi	r2,r2,1
   45ae0:	41000015 	stw	r4,0(r8)
   45ae4:	01000084 	movi	r4,2
   45ae8:	41000115 	stw	r4,4(r8)
   45aec:	d8c02015 	stw	r3,128(sp)
   45af0:	d8801f15 	stw	r2,124(sp)
   45af4:	010001c4 	movi	r4,7
   45af8:	20823616 	blt	r4,r2,463d4 <___vfprintf_internal_r+0x1194>
   45afc:	42000204 	addi	r8,r8,8
   45b00:	d9003017 	ldw	r4,192(sp)
   45b04:	00802004 	movi	r2,128
   45b08:	20819926 	beq	r4,r2,46170 <___vfprintf_internal_r+0xf30>
   45b0c:	d9402917 	ldw	r5,164(sp)
   45b10:	d8802e17 	ldw	r2,184(sp)
   45b14:	28adc83a 	sub	r22,r5,r2
   45b18:	0580310e 	bge	zero,r22,45be0 <___vfprintf_internal_r+0x9a0>
   45b1c:	07000404 	movi	fp,16
   45b20:	d8801f17 	ldw	r2,124(sp)
   45b24:	e584140e 	bge	fp,r22,46b78 <___vfprintf_internal_r+0x1938>
   45b28:	01400174 	movhi	r5,5
   45b2c:	294a3b84 	addi	r5,r5,10478
   45b30:	dc402915 	stw	r17,164(sp)
   45b34:	d9402b15 	stw	r5,172(sp)
   45b38:	b023883a 	mov	r17,r22
   45b3c:	04c001c4 	movi	r19,7
   45b40:	a82d883a 	mov	r22,r21
   45b44:	902b883a 	mov	r21,r18
   45b48:	8025883a 	mov	r18,r16
   45b4c:	dc002c17 	ldw	r16,176(sp)
   45b50:	00000306 	br	45b60 <___vfprintf_internal_r+0x920>
   45b54:	8c7ffc04 	addi	r17,r17,-16
   45b58:	42000204 	addi	r8,r8,8
   45b5c:	e440110e 	bge	fp,r17,45ba4 <___vfprintf_internal_r+0x964>
   45b60:	18c00404 	addi	r3,r3,16
   45b64:	10800044 	addi	r2,r2,1
   45b68:	45000015 	stw	r20,0(r8)
   45b6c:	47000115 	stw	fp,4(r8)
   45b70:	d8c02015 	stw	r3,128(sp)
   45b74:	d8801f15 	stw	r2,124(sp)
   45b78:	98bff60e 	bge	r19,r2,45b54 <__alt_data_end+0xfffc5b54>
   45b7c:	d9801e04 	addi	r6,sp,120
   45b80:	b80b883a 	mov	r5,r23
   45b84:	8009883a 	mov	r4,r16
   45b88:	004c83c0 	call	4c83c <__sprint_r>
   45b8c:	103eae1e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   45b90:	8c7ffc04 	addi	r17,r17,-16
   45b94:	d8c02017 	ldw	r3,128(sp)
   45b98:	d8801f17 	ldw	r2,124(sp)
   45b9c:	da000404 	addi	r8,sp,16
   45ba0:	e47fef16 	blt	fp,r17,45b60 <__alt_data_end+0xfffc5b60>
   45ba4:	9021883a 	mov	r16,r18
   45ba8:	a825883a 	mov	r18,r21
   45bac:	b02b883a 	mov	r21,r22
   45bb0:	882d883a 	mov	r22,r17
   45bb4:	dc402917 	ldw	r17,164(sp)
   45bb8:	d9002b17 	ldw	r4,172(sp)
   45bbc:	1d87883a 	add	r3,r3,r22
   45bc0:	10800044 	addi	r2,r2,1
   45bc4:	41000015 	stw	r4,0(r8)
   45bc8:	45800115 	stw	r22,4(r8)
   45bcc:	d8c02015 	stw	r3,128(sp)
   45bd0:	d8801f15 	stw	r2,124(sp)
   45bd4:	010001c4 	movi	r4,7
   45bd8:	2081ee16 	blt	r4,r2,46394 <___vfprintf_internal_r+0x1154>
   45bdc:	42000204 	addi	r8,r8,8
   45be0:	9080400c 	andi	r2,r18,256
   45be4:	1001181e 	bne	r2,zero,46048 <___vfprintf_internal_r+0xe08>
   45be8:	d9402e17 	ldw	r5,184(sp)
   45bec:	d8801f17 	ldw	r2,124(sp)
   45bf0:	44000015 	stw	r16,0(r8)
   45bf4:	1947883a 	add	r3,r3,r5
   45bf8:	10800044 	addi	r2,r2,1
   45bfc:	41400115 	stw	r5,4(r8)
   45c00:	d8c02015 	stw	r3,128(sp)
   45c04:	d8801f15 	stw	r2,124(sp)
   45c08:	010001c4 	movi	r4,7
   45c0c:	2081d316 	blt	r4,r2,4635c <___vfprintf_internal_r+0x111c>
   45c10:	42000204 	addi	r8,r8,8
   45c14:	9480010c 	andi	r18,r18,4
   45c18:	90003226 	beq	r18,zero,45ce4 <___vfprintf_internal_r+0xaa4>
   45c1c:	d9403117 	ldw	r5,196(sp)
   45c20:	d8802a17 	ldw	r2,168(sp)
   45c24:	28a1c83a 	sub	r16,r5,r2
   45c28:	04002e0e 	bge	zero,r16,45ce4 <___vfprintf_internal_r+0xaa4>
   45c2c:	04400404 	movi	r17,16
   45c30:	d8801f17 	ldw	r2,124(sp)
   45c34:	8c04a20e 	bge	r17,r16,46ec0 <___vfprintf_internal_r+0x1c80>
   45c38:	01400174 	movhi	r5,5
   45c3c:	294a3f84 	addi	r5,r5,10494
   45c40:	d9403515 	stw	r5,212(sp)
   45c44:	048001c4 	movi	r18,7
   45c48:	dcc02c17 	ldw	r19,176(sp)
   45c4c:	00000306 	br	45c5c <___vfprintf_internal_r+0xa1c>
   45c50:	843ffc04 	addi	r16,r16,-16
   45c54:	42000204 	addi	r8,r8,8
   45c58:	8c00130e 	bge	r17,r16,45ca8 <___vfprintf_internal_r+0xa68>
   45c5c:	01000174 	movhi	r4,5
   45c60:	18c00404 	addi	r3,r3,16
   45c64:	10800044 	addi	r2,r2,1
   45c68:	210a3f84 	addi	r4,r4,10494
   45c6c:	41000015 	stw	r4,0(r8)
   45c70:	44400115 	stw	r17,4(r8)
   45c74:	d8c02015 	stw	r3,128(sp)
   45c78:	d8801f15 	stw	r2,124(sp)
   45c7c:	90bff40e 	bge	r18,r2,45c50 <__alt_data_end+0xfffc5c50>
   45c80:	d9801e04 	addi	r6,sp,120
   45c84:	b80b883a 	mov	r5,r23
   45c88:	9809883a 	mov	r4,r19
   45c8c:	004c83c0 	call	4c83c <__sprint_r>
   45c90:	103e6d1e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   45c94:	843ffc04 	addi	r16,r16,-16
   45c98:	d8c02017 	ldw	r3,128(sp)
   45c9c:	d8801f17 	ldw	r2,124(sp)
   45ca0:	da000404 	addi	r8,sp,16
   45ca4:	8c3fed16 	blt	r17,r16,45c5c <__alt_data_end+0xfffc5c5c>
   45ca8:	d9403517 	ldw	r5,212(sp)
   45cac:	1c07883a 	add	r3,r3,r16
   45cb0:	10800044 	addi	r2,r2,1
   45cb4:	41400015 	stw	r5,0(r8)
   45cb8:	44000115 	stw	r16,4(r8)
   45cbc:	d8c02015 	stw	r3,128(sp)
   45cc0:	d8801f15 	stw	r2,124(sp)
   45cc4:	010001c4 	movi	r4,7
   45cc8:	2080060e 	bge	r4,r2,45ce4 <___vfprintf_internal_r+0xaa4>
   45ccc:	d9002c17 	ldw	r4,176(sp)
   45cd0:	d9801e04 	addi	r6,sp,120
   45cd4:	b80b883a 	mov	r5,r23
   45cd8:	004c83c0 	call	4c83c <__sprint_r>
   45cdc:	103e5a1e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   45ce0:	d8c02017 	ldw	r3,128(sp)
   45ce4:	d8803117 	ldw	r2,196(sp)
   45ce8:	d9002a17 	ldw	r4,168(sp)
   45cec:	1100010e 	bge	r2,r4,45cf4 <___vfprintf_internal_r+0xab4>
   45cf0:	2005883a 	mov	r2,r4
   45cf4:	d9402f17 	ldw	r5,188(sp)
   45cf8:	288b883a 	add	r5,r5,r2
   45cfc:	d9402f15 	stw	r5,188(sp)
   45d00:	18019e1e 	bne	r3,zero,4637c <___vfprintf_internal_r+0x113c>
   45d04:	a8800007 	ldb	r2,0(r21)
   45d08:	d8001f15 	stw	zero,124(sp)
   45d0c:	da000404 	addi	r8,sp,16
   45d10:	103d851e 	bne	r2,zero,45328 <__alt_data_end+0xfffc5328>
   45d14:	a821883a 	mov	r16,r21
   45d18:	003d9b06 	br	45388 <__alt_data_end+0xfffc5388>
   45d1c:	18c03fcc 	andi	r3,r3,255
   45d20:	1805c11e 	bne	r3,zero,47428 <___vfprintf_internal_r+0x21e8>
   45d24:	94800414 	ori	r18,r18,16
   45d28:	9080080c 	andi	r2,r18,32
   45d2c:	10020c26 	beq	r2,zero,46560 <___vfprintf_internal_r+0x1320>
   45d30:	d8802d17 	ldw	r2,180(sp)
   45d34:	d9002917 	ldw	r4,164(sp)
   45d38:	d8002785 	stb	zero,158(sp)
   45d3c:	10c00204 	addi	r3,r2,8
   45d40:	14c00017 	ldw	r19,0(r2)
   45d44:	15800117 	ldw	r22,4(r2)
   45d48:	20040f16 	blt	r4,zero,46d88 <___vfprintf_internal_r+0x1b48>
   45d4c:	013fdfc4 	movi	r4,-129
   45d50:	9d84b03a 	or	r2,r19,r22
   45d54:	d8c02d15 	stw	r3,180(sp)
   45d58:	9124703a 	and	r18,r18,r4
   45d5c:	0039883a 	mov	fp,zero
   45d60:	103e891e 	bne	r2,zero,45788 <__alt_data_end+0xfffc5788>
   45d64:	d9002917 	ldw	r4,164(sp)
   45d68:	2002c11e 	bne	r4,zero,46870 <___vfprintf_internal_r+0x1630>
   45d6c:	d8002915 	stw	zero,164(sp)
   45d70:	d8002e15 	stw	zero,184(sp)
   45d74:	dc001e04 	addi	r16,sp,120
   45d78:	003ef806 	br	4595c <__alt_data_end+0xfffc595c>
   45d7c:	18c03fcc 	andi	r3,r3,255
   45d80:	18059d1e 	bne	r3,zero,473f8 <___vfprintf_internal_r+0x21b8>
   45d84:	01400174 	movhi	r5,5
   45d88:	294a2f04 	addi	r5,r5,10428
   45d8c:	d9403915 	stw	r5,228(sp)
   45d90:	9080080c 	andi	r2,r18,32
   45d94:	10005226 	beq	r2,zero,45ee0 <___vfprintf_internal_r+0xca0>
   45d98:	d8802d17 	ldw	r2,180(sp)
   45d9c:	14c00017 	ldw	r19,0(r2)
   45da0:	15800117 	ldw	r22,4(r2)
   45da4:	10800204 	addi	r2,r2,8
   45da8:	d8802d15 	stw	r2,180(sp)
   45dac:	9080004c 	andi	r2,r18,1
   45db0:	10019026 	beq	r2,zero,463f4 <___vfprintf_internal_r+0x11b4>
   45db4:	9d84b03a 	or	r2,r19,r22
   45db8:	10036926 	beq	r2,zero,46b60 <___vfprintf_internal_r+0x1920>
   45dbc:	d8c02917 	ldw	r3,164(sp)
   45dc0:	00800c04 	movi	r2,48
   45dc4:	d8802705 	stb	r2,156(sp)
   45dc8:	dc402745 	stb	r17,157(sp)
   45dcc:	d8002785 	stb	zero,158(sp)
   45dd0:	90800094 	ori	r2,r18,2
   45dd4:	18045d16 	blt	r3,zero,46f4c <___vfprintf_internal_r+0x1d0c>
   45dd8:	00bfdfc4 	movi	r2,-129
   45ddc:	90a4703a 	and	r18,r18,r2
   45de0:	94800094 	ori	r18,r18,2
   45de4:	0039883a 	mov	fp,zero
   45de8:	d9003917 	ldw	r4,228(sp)
   45dec:	dc001e04 	addi	r16,sp,120
   45df0:	988003cc 	andi	r2,r19,15
   45df4:	b006973a 	slli	r3,r22,28
   45df8:	2085883a 	add	r2,r4,r2
   45dfc:	9826d13a 	srli	r19,r19,4
   45e00:	10800003 	ldbu	r2,0(r2)
   45e04:	b02cd13a 	srli	r22,r22,4
   45e08:	843fffc4 	addi	r16,r16,-1
   45e0c:	1ce6b03a 	or	r19,r3,r19
   45e10:	80800005 	stb	r2,0(r16)
   45e14:	9d84b03a 	or	r2,r19,r22
   45e18:	103ff51e 	bne	r2,zero,45df0 <__alt_data_end+0xfffc5df0>
   45e1c:	d8c02817 	ldw	r3,160(sp)
   45e20:	1c07c83a 	sub	r3,r3,r16
   45e24:	d8c02e15 	stw	r3,184(sp)
   45e28:	003ecc06 	br	4595c <__alt_data_end+0xfffc595c>
   45e2c:	18c03fcc 	andi	r3,r3,255
   45e30:	183e9f26 	beq	r3,zero,458b0 <__alt_data_end+0xfffc58b0>
   45e34:	d9c02785 	stb	r7,158(sp)
   45e38:	003e9d06 	br	458b0 <__alt_data_end+0xfffc58b0>
   45e3c:	00c00044 	movi	r3,1
   45e40:	01c00ac4 	movi	r7,43
   45e44:	ac400007 	ldb	r17,0(r21)
   45e48:	003d5e06 	br	453c4 <__alt_data_end+0xfffc53c4>
   45e4c:	94800814 	ori	r18,r18,32
   45e50:	ac400007 	ldb	r17,0(r21)
   45e54:	003d5b06 	br	453c4 <__alt_data_end+0xfffc53c4>
   45e58:	d8c02d17 	ldw	r3,180(sp)
   45e5c:	d8002785 	stb	zero,158(sp)
   45e60:	1c000017 	ldw	r16,0(r3)
   45e64:	1cc00104 	addi	r19,r3,4
   45e68:	80041926 	beq	r16,zero,46ed0 <___vfprintf_internal_r+0x1c90>
   45e6c:	d9002917 	ldw	r4,164(sp)
   45e70:	2003d016 	blt	r4,zero,46db4 <___vfprintf_internal_r+0x1b74>
   45e74:	200d883a 	mov	r6,r4
   45e78:	000b883a 	mov	r5,zero
   45e7c:	8009883a 	mov	r4,r16
   45e80:	da003d15 	stw	r8,244(sp)
   45e84:	004aa500 	call	4aa50 <memchr>
   45e88:	da003d17 	ldw	r8,244(sp)
   45e8c:	10045426 	beq	r2,zero,46fe0 <___vfprintf_internal_r+0x1da0>
   45e90:	1405c83a 	sub	r2,r2,r16
   45e94:	d8802e15 	stw	r2,184(sp)
   45e98:	1003cc16 	blt	r2,zero,46dcc <___vfprintf_internal_r+0x1b8c>
   45e9c:	df002783 	ldbu	fp,158(sp)
   45ea0:	d8802a15 	stw	r2,168(sp)
   45ea4:	dcc02d15 	stw	r19,180(sp)
   45ea8:	d8002915 	stw	zero,164(sp)
   45eac:	d8003215 	stw	zero,200(sp)
   45eb0:	003eb006 	br	45974 <__alt_data_end+0xfffc5974>
   45eb4:	18c03fcc 	andi	r3,r3,255
   45eb8:	183f9b26 	beq	r3,zero,45d28 <__alt_data_end+0xfffc5d28>
   45ebc:	d9c02785 	stb	r7,158(sp)
   45ec0:	003f9906 	br	45d28 <__alt_data_end+0xfffc5d28>
   45ec4:	18c03fcc 	andi	r3,r3,255
   45ec8:	1805551e 	bne	r3,zero,47420 <___vfprintf_internal_r+0x21e0>
   45ecc:	01400174 	movhi	r5,5
   45ed0:	294a3404 	addi	r5,r5,10448
   45ed4:	d9403915 	stw	r5,228(sp)
   45ed8:	9080080c 	andi	r2,r18,32
   45edc:	103fae1e 	bne	r2,zero,45d98 <__alt_data_end+0xfffc5d98>
   45ee0:	9080040c 	andi	r2,r18,16
   45ee4:	1002de26 	beq	r2,zero,46a60 <___vfprintf_internal_r+0x1820>
   45ee8:	d8c02d17 	ldw	r3,180(sp)
   45eec:	002d883a 	mov	r22,zero
   45ef0:	1cc00017 	ldw	r19,0(r3)
   45ef4:	18c00104 	addi	r3,r3,4
   45ef8:	d8c02d15 	stw	r3,180(sp)
   45efc:	003fab06 	br	45dac <__alt_data_end+0xfffc5dac>
   45f00:	38803fcc 	andi	r2,r7,255
   45f04:	1080201c 	xori	r2,r2,128
   45f08:	10bfe004 	addi	r2,r2,-128
   45f0c:	1002d21e 	bne	r2,zero,46a58 <___vfprintf_internal_r+0x1818>
   45f10:	00c00044 	movi	r3,1
   45f14:	01c00804 	movi	r7,32
   45f18:	ac400007 	ldb	r17,0(r21)
   45f1c:	003d2906 	br	453c4 <__alt_data_end+0xfffc53c4>
   45f20:	94800054 	ori	r18,r18,1
   45f24:	ac400007 	ldb	r17,0(r21)
   45f28:	003d2606 	br	453c4 <__alt_data_end+0xfffc53c4>
   45f2c:	18c03fcc 	andi	r3,r3,255
   45f30:	183e0526 	beq	r3,zero,45748 <__alt_data_end+0xfffc5748>
   45f34:	d9c02785 	stb	r7,158(sp)
   45f38:	003e0306 	br	45748 <__alt_data_end+0xfffc5748>
   45f3c:	94801014 	ori	r18,r18,64
   45f40:	ac400007 	ldb	r17,0(r21)
   45f44:	003d1f06 	br	453c4 <__alt_data_end+0xfffc53c4>
   45f48:	ac400007 	ldb	r17,0(r21)
   45f4c:	8a438726 	beq	r17,r9,46d6c <___vfprintf_internal_r+0x1b2c>
   45f50:	94800414 	ori	r18,r18,16
   45f54:	003d1b06 	br	453c4 <__alt_data_end+0xfffc53c4>
   45f58:	18c03fcc 	andi	r3,r3,255
   45f5c:	1805341e 	bne	r3,zero,47430 <___vfprintf_internal_r+0x21f0>
   45f60:	9080080c 	andi	r2,r18,32
   45f64:	1002cd26 	beq	r2,zero,46a9c <___vfprintf_internal_r+0x185c>
   45f68:	d9402d17 	ldw	r5,180(sp)
   45f6c:	d9002f17 	ldw	r4,188(sp)
   45f70:	28800017 	ldw	r2,0(r5)
   45f74:	2007d7fa 	srai	r3,r4,31
   45f78:	29400104 	addi	r5,r5,4
   45f7c:	d9402d15 	stw	r5,180(sp)
   45f80:	11000015 	stw	r4,0(r2)
   45f84:	10c00115 	stw	r3,4(r2)
   45f88:	003ce506 	br	45320 <__alt_data_end+0xfffc5320>
   45f8c:	d8c02d17 	ldw	r3,180(sp)
   45f90:	d9002d17 	ldw	r4,180(sp)
   45f94:	d8002785 	stb	zero,158(sp)
   45f98:	18800017 	ldw	r2,0(r3)
   45f9c:	21000104 	addi	r4,r4,4
   45fa0:	00c00044 	movi	r3,1
   45fa4:	d8c02a15 	stw	r3,168(sp)
   45fa8:	d8801405 	stb	r2,80(sp)
   45fac:	d9002d15 	stw	r4,180(sp)
   45fb0:	d8c02e15 	stw	r3,184(sp)
   45fb4:	d8002915 	stw	zero,164(sp)
   45fb8:	d8003215 	stw	zero,200(sp)
   45fbc:	dc001404 	addi	r16,sp,80
   45fc0:	0039883a 	mov	fp,zero
   45fc4:	003e7206 	br	45990 <__alt_data_end+0xfffc5990>
   45fc8:	01000174 	movhi	r4,5
   45fcc:	210a3404 	addi	r4,r4,10448
   45fd0:	0039883a 	mov	fp,zero
   45fd4:	d9003915 	stw	r4,228(sp)
   45fd8:	04401e04 	movi	r17,120
   45fdc:	003f8206 	br	45de8 <__alt_data_end+0xfffc5de8>
   45fe0:	18c03fcc 	andi	r3,r3,255
   45fe4:	1805061e 	bne	r3,zero,47400 <___vfprintf_internal_r+0x21c0>
   45fe8:	883d9126 	beq	r17,zero,45630 <__alt_data_end+0xfffc5630>
   45fec:	00c00044 	movi	r3,1
   45ff0:	d8c02a15 	stw	r3,168(sp)
   45ff4:	dc401405 	stb	r17,80(sp)
   45ff8:	d8002785 	stb	zero,158(sp)
   45ffc:	003fec06 	br	45fb0 <__alt_data_end+0xfffc5fb0>
   46000:	01400174 	movhi	r5,5
   46004:	294a3404 	addi	r5,r5,10448
   46008:	d9403915 	stw	r5,228(sp)
   4600c:	d8c02d15 	stw	r3,180(sp)
   46010:	1025883a 	mov	r18,r2
   46014:	04401e04 	movi	r17,120
   46018:	9d84b03a 	or	r2,r19,r22
   4601c:	1000fc1e 	bne	r2,zero,46410 <___vfprintf_internal_r+0x11d0>
   46020:	0039883a 	mov	fp,zero
   46024:	00800084 	movi	r2,2
   46028:	10803fcc 	andi	r2,r2,255
   4602c:	00c00044 	movi	r3,1
   46030:	10c20f26 	beq	r2,r3,46870 <___vfprintf_internal_r+0x1630>
   46034:	00c00084 	movi	r3,2
   46038:	10fd6326 	beq	r2,r3,455c8 <__alt_data_end+0xfffc55c8>
   4603c:	003e2d06 	br	458f4 <__alt_data_end+0xfffc58f4>
   46040:	d8c02017 	ldw	r3,128(sp)
   46044:	003e9306 	br	45a94 <__alt_data_end+0xfffc5a94>
   46048:	00801944 	movi	r2,101
   4604c:	14407e0e 	bge	r2,r17,46248 <___vfprintf_internal_r+0x1008>
   46050:	d9003617 	ldw	r4,216(sp)
   46054:	d9403817 	ldw	r5,224(sp)
   46058:	000d883a 	mov	r6,zero
   4605c:	000f883a 	mov	r7,zero
   46060:	d8c03c15 	stw	r3,240(sp)
   46064:	da003d15 	stw	r8,244(sp)
   46068:	0043a780 	call	43a78 <__eqdf2>
   4606c:	d8c03c17 	ldw	r3,240(sp)
   46070:	da003d17 	ldw	r8,244(sp)
   46074:	1000f71e 	bne	r2,zero,46454 <___vfprintf_internal_r+0x1214>
   46078:	d8801f17 	ldw	r2,124(sp)
   4607c:	01000174 	movhi	r4,5
   46080:	210a3b04 	addi	r4,r4,10476
   46084:	18c00044 	addi	r3,r3,1
   46088:	10800044 	addi	r2,r2,1
   4608c:	41000015 	stw	r4,0(r8)
   46090:	01000044 	movi	r4,1
   46094:	41000115 	stw	r4,4(r8)
   46098:	d8c02015 	stw	r3,128(sp)
   4609c:	d8801f15 	stw	r2,124(sp)
   460a0:	010001c4 	movi	r4,7
   460a4:	2082b816 	blt	r4,r2,46b88 <___vfprintf_internal_r+0x1948>
   460a8:	42000204 	addi	r8,r8,8
   460ac:	d8802617 	ldw	r2,152(sp)
   460b0:	d9403317 	ldw	r5,204(sp)
   460b4:	11400216 	blt	r2,r5,460c0 <___vfprintf_internal_r+0xe80>
   460b8:	9080004c 	andi	r2,r18,1
   460bc:	103ed526 	beq	r2,zero,45c14 <__alt_data_end+0xfffc5c14>
   460c0:	d8803717 	ldw	r2,220(sp)
   460c4:	d9003417 	ldw	r4,208(sp)
   460c8:	d9403717 	ldw	r5,220(sp)
   460cc:	1887883a 	add	r3,r3,r2
   460d0:	d8801f17 	ldw	r2,124(sp)
   460d4:	41000015 	stw	r4,0(r8)
   460d8:	41400115 	stw	r5,4(r8)
   460dc:	10800044 	addi	r2,r2,1
   460e0:	d8c02015 	stw	r3,128(sp)
   460e4:	d8801f15 	stw	r2,124(sp)
   460e8:	010001c4 	movi	r4,7
   460ec:	20832916 	blt	r4,r2,46d94 <___vfprintf_internal_r+0x1b54>
   460f0:	42000204 	addi	r8,r8,8
   460f4:	d8803317 	ldw	r2,204(sp)
   460f8:	143fffc4 	addi	r16,r2,-1
   460fc:	043ec50e 	bge	zero,r16,45c14 <__alt_data_end+0xfffc5c14>
   46100:	04400404 	movi	r17,16
   46104:	d8801f17 	ldw	r2,124(sp)
   46108:	8c00880e 	bge	r17,r16,4632c <___vfprintf_internal_r+0x10ec>
   4610c:	01400174 	movhi	r5,5
   46110:	294a3b84 	addi	r5,r5,10478
   46114:	d9402b15 	stw	r5,172(sp)
   46118:	058001c4 	movi	r22,7
   4611c:	dcc02c17 	ldw	r19,176(sp)
   46120:	00000306 	br	46130 <___vfprintf_internal_r+0xef0>
   46124:	42000204 	addi	r8,r8,8
   46128:	843ffc04 	addi	r16,r16,-16
   4612c:	8c00820e 	bge	r17,r16,46338 <___vfprintf_internal_r+0x10f8>
   46130:	18c00404 	addi	r3,r3,16
   46134:	10800044 	addi	r2,r2,1
   46138:	45000015 	stw	r20,0(r8)
   4613c:	44400115 	stw	r17,4(r8)
   46140:	d8c02015 	stw	r3,128(sp)
   46144:	d8801f15 	stw	r2,124(sp)
   46148:	b0bff60e 	bge	r22,r2,46124 <__alt_data_end+0xfffc6124>
   4614c:	d9801e04 	addi	r6,sp,120
   46150:	b80b883a 	mov	r5,r23
   46154:	9809883a 	mov	r4,r19
   46158:	004c83c0 	call	4c83c <__sprint_r>
   4615c:	103d3a1e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   46160:	d8c02017 	ldw	r3,128(sp)
   46164:	d8801f17 	ldw	r2,124(sp)
   46168:	da000404 	addi	r8,sp,16
   4616c:	003fee06 	br	46128 <__alt_data_end+0xfffc6128>
   46170:	d9403117 	ldw	r5,196(sp)
   46174:	d8802a17 	ldw	r2,168(sp)
   46178:	28adc83a 	sub	r22,r5,r2
   4617c:	05be630e 	bge	zero,r22,45b0c <__alt_data_end+0xfffc5b0c>
   46180:	07000404 	movi	fp,16
   46184:	d8801f17 	ldw	r2,124(sp)
   46188:	e5838f0e 	bge	fp,r22,46fc8 <___vfprintf_internal_r+0x1d88>
   4618c:	01400174 	movhi	r5,5
   46190:	294a3b84 	addi	r5,r5,10478
   46194:	dc403015 	stw	r17,192(sp)
   46198:	d9402b15 	stw	r5,172(sp)
   4619c:	b023883a 	mov	r17,r22
   461a0:	04c001c4 	movi	r19,7
   461a4:	a82d883a 	mov	r22,r21
   461a8:	902b883a 	mov	r21,r18
   461ac:	8025883a 	mov	r18,r16
   461b0:	dc002c17 	ldw	r16,176(sp)
   461b4:	00000306 	br	461c4 <___vfprintf_internal_r+0xf84>
   461b8:	8c7ffc04 	addi	r17,r17,-16
   461bc:	42000204 	addi	r8,r8,8
   461c0:	e440110e 	bge	fp,r17,46208 <___vfprintf_internal_r+0xfc8>
   461c4:	18c00404 	addi	r3,r3,16
   461c8:	10800044 	addi	r2,r2,1
   461cc:	45000015 	stw	r20,0(r8)
   461d0:	47000115 	stw	fp,4(r8)
   461d4:	d8c02015 	stw	r3,128(sp)
   461d8:	d8801f15 	stw	r2,124(sp)
   461dc:	98bff60e 	bge	r19,r2,461b8 <__alt_data_end+0xfffc61b8>
   461e0:	d9801e04 	addi	r6,sp,120
   461e4:	b80b883a 	mov	r5,r23
   461e8:	8009883a 	mov	r4,r16
   461ec:	004c83c0 	call	4c83c <__sprint_r>
   461f0:	103d151e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   461f4:	8c7ffc04 	addi	r17,r17,-16
   461f8:	d8c02017 	ldw	r3,128(sp)
   461fc:	d8801f17 	ldw	r2,124(sp)
   46200:	da000404 	addi	r8,sp,16
   46204:	e47fef16 	blt	fp,r17,461c4 <__alt_data_end+0xfffc61c4>
   46208:	9021883a 	mov	r16,r18
   4620c:	a825883a 	mov	r18,r21
   46210:	b02b883a 	mov	r21,r22
   46214:	882d883a 	mov	r22,r17
   46218:	dc403017 	ldw	r17,192(sp)
   4621c:	d9002b17 	ldw	r4,172(sp)
   46220:	1d87883a 	add	r3,r3,r22
   46224:	10800044 	addi	r2,r2,1
   46228:	41000015 	stw	r4,0(r8)
   4622c:	45800115 	stw	r22,4(r8)
   46230:	d8c02015 	stw	r3,128(sp)
   46234:	d8801f15 	stw	r2,124(sp)
   46238:	010001c4 	movi	r4,7
   4623c:	20818e16 	blt	r4,r2,46878 <___vfprintf_internal_r+0x1638>
   46240:	42000204 	addi	r8,r8,8
   46244:	003e3106 	br	45b0c <__alt_data_end+0xfffc5b0c>
   46248:	d9403317 	ldw	r5,204(sp)
   4624c:	00800044 	movi	r2,1
   46250:	18c00044 	addi	r3,r3,1
   46254:	1141530e 	bge	r2,r5,467a4 <___vfprintf_internal_r+0x1564>
   46258:	dc401f17 	ldw	r17,124(sp)
   4625c:	00800044 	movi	r2,1
   46260:	40800115 	stw	r2,4(r8)
   46264:	8c400044 	addi	r17,r17,1
   46268:	44000015 	stw	r16,0(r8)
   4626c:	d8c02015 	stw	r3,128(sp)
   46270:	dc401f15 	stw	r17,124(sp)
   46274:	008001c4 	movi	r2,7
   46278:	14416b16 	blt	r2,r17,46828 <___vfprintf_internal_r+0x15e8>
   4627c:	42000204 	addi	r8,r8,8
   46280:	d8803717 	ldw	r2,220(sp)
   46284:	d9003417 	ldw	r4,208(sp)
   46288:	8c400044 	addi	r17,r17,1
   4628c:	10c7883a 	add	r3,r2,r3
   46290:	40800115 	stw	r2,4(r8)
   46294:	41000015 	stw	r4,0(r8)
   46298:	d8c02015 	stw	r3,128(sp)
   4629c:	dc401f15 	stw	r17,124(sp)
   462a0:	008001c4 	movi	r2,7
   462a4:	14416916 	blt	r2,r17,4684c <___vfprintf_internal_r+0x160c>
   462a8:	45800204 	addi	r22,r8,8
   462ac:	d9003617 	ldw	r4,216(sp)
   462b0:	d9403817 	ldw	r5,224(sp)
   462b4:	000d883a 	mov	r6,zero
   462b8:	000f883a 	mov	r7,zero
   462bc:	d8c03c15 	stw	r3,240(sp)
   462c0:	0043a780 	call	43a78 <__eqdf2>
   462c4:	d8c03c17 	ldw	r3,240(sp)
   462c8:	1000bc26 	beq	r2,zero,465bc <___vfprintf_internal_r+0x137c>
   462cc:	d9403317 	ldw	r5,204(sp)
   462d0:	84000044 	addi	r16,r16,1
   462d4:	8c400044 	addi	r17,r17,1
   462d8:	28bfffc4 	addi	r2,r5,-1
   462dc:	1887883a 	add	r3,r3,r2
   462e0:	b0800115 	stw	r2,4(r22)
   462e4:	b4000015 	stw	r16,0(r22)
   462e8:	d8c02015 	stw	r3,128(sp)
   462ec:	dc401f15 	stw	r17,124(sp)
   462f0:	008001c4 	movi	r2,7
   462f4:	14414316 	blt	r2,r17,46804 <___vfprintf_internal_r+0x15c4>
   462f8:	b5800204 	addi	r22,r22,8
   462fc:	d9003a17 	ldw	r4,232(sp)
   46300:	df0022c4 	addi	fp,sp,139
   46304:	8c400044 	addi	r17,r17,1
   46308:	20c7883a 	add	r3,r4,r3
   4630c:	b7000015 	stw	fp,0(r22)
   46310:	b1000115 	stw	r4,4(r22)
   46314:	d8c02015 	stw	r3,128(sp)
   46318:	dc401f15 	stw	r17,124(sp)
   4631c:	008001c4 	movi	r2,7
   46320:	14400e16 	blt	r2,r17,4635c <___vfprintf_internal_r+0x111c>
   46324:	b2000204 	addi	r8,r22,8
   46328:	003e3a06 	br	45c14 <__alt_data_end+0xfffc5c14>
   4632c:	01000174 	movhi	r4,5
   46330:	210a3b84 	addi	r4,r4,10478
   46334:	d9002b15 	stw	r4,172(sp)
   46338:	d9002b17 	ldw	r4,172(sp)
   4633c:	1c07883a 	add	r3,r3,r16
   46340:	44000115 	stw	r16,4(r8)
   46344:	41000015 	stw	r4,0(r8)
   46348:	10800044 	addi	r2,r2,1
   4634c:	d8c02015 	stw	r3,128(sp)
   46350:	d8801f15 	stw	r2,124(sp)
   46354:	010001c4 	movi	r4,7
   46358:	20be2d0e 	bge	r4,r2,45c10 <__alt_data_end+0xfffc5c10>
   4635c:	d9002c17 	ldw	r4,176(sp)
   46360:	d9801e04 	addi	r6,sp,120
   46364:	b80b883a 	mov	r5,r23
   46368:	004c83c0 	call	4c83c <__sprint_r>
   4636c:	103cb61e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   46370:	d8c02017 	ldw	r3,128(sp)
   46374:	da000404 	addi	r8,sp,16
   46378:	003e2606 	br	45c14 <__alt_data_end+0xfffc5c14>
   4637c:	d9002c17 	ldw	r4,176(sp)
   46380:	d9801e04 	addi	r6,sp,120
   46384:	b80b883a 	mov	r5,r23
   46388:	004c83c0 	call	4c83c <__sprint_r>
   4638c:	103e5d26 	beq	r2,zero,45d04 <__alt_data_end+0xfffc5d04>
   46390:	003cad06 	br	45648 <__alt_data_end+0xfffc5648>
   46394:	d9002c17 	ldw	r4,176(sp)
   46398:	d9801e04 	addi	r6,sp,120
   4639c:	b80b883a 	mov	r5,r23
   463a0:	004c83c0 	call	4c83c <__sprint_r>
   463a4:	103ca81e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   463a8:	d8c02017 	ldw	r3,128(sp)
   463ac:	da000404 	addi	r8,sp,16
   463b0:	003e0b06 	br	45be0 <__alt_data_end+0xfffc5be0>
   463b4:	d9002c17 	ldw	r4,176(sp)
   463b8:	d9801e04 	addi	r6,sp,120
   463bc:	b80b883a 	mov	r5,r23
   463c0:	004c83c0 	call	4c83c <__sprint_r>
   463c4:	103ca01e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   463c8:	d8c02017 	ldw	r3,128(sp)
   463cc:	da000404 	addi	r8,sp,16
   463d0:	003dbd06 	br	45ac8 <__alt_data_end+0xfffc5ac8>
   463d4:	d9002c17 	ldw	r4,176(sp)
   463d8:	d9801e04 	addi	r6,sp,120
   463dc:	b80b883a 	mov	r5,r23
   463e0:	004c83c0 	call	4c83c <__sprint_r>
   463e4:	103c981e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   463e8:	d8c02017 	ldw	r3,128(sp)
   463ec:	da000404 	addi	r8,sp,16
   463f0:	003dc306 	br	45b00 <__alt_data_end+0xfffc5b00>
   463f4:	d8802917 	ldw	r2,164(sp)
   463f8:	d8002785 	stb	zero,158(sp)
   463fc:	103f0616 	blt	r2,zero,46018 <__alt_data_end+0xfffc6018>
   46400:	00ffdfc4 	movi	r3,-129
   46404:	9d84b03a 	or	r2,r19,r22
   46408:	90e4703a 	and	r18,r18,r3
   4640c:	103c6b26 	beq	r2,zero,455bc <__alt_data_end+0xfffc55bc>
   46410:	0039883a 	mov	fp,zero
   46414:	003e7406 	br	45de8 <__alt_data_end+0xfffc5de8>
   46418:	9080040c 	andi	r2,r18,16
   4641c:	1001b326 	beq	r2,zero,46aec <___vfprintf_internal_r+0x18ac>
   46420:	d9002d17 	ldw	r4,180(sp)
   46424:	d9402917 	ldw	r5,164(sp)
   46428:	d8002785 	stb	zero,158(sp)
   4642c:	20800104 	addi	r2,r4,4
   46430:	24c00017 	ldw	r19,0(r4)
   46434:	002d883a 	mov	r22,zero
   46438:	2801b516 	blt	r5,zero,46b10 <___vfprintf_internal_r+0x18d0>
   4643c:	00ffdfc4 	movi	r3,-129
   46440:	d8802d15 	stw	r2,180(sp)
   46444:	90e4703a 	and	r18,r18,r3
   46448:	983d2726 	beq	r19,zero,458e8 <__alt_data_end+0xfffc58e8>
   4644c:	0039883a 	mov	fp,zero
   46450:	003d2a06 	br	458fc <__alt_data_end+0xfffc58fc>
   46454:	dc402617 	ldw	r17,152(sp)
   46458:	0441d30e 	bge	zero,r17,46ba8 <___vfprintf_internal_r+0x1968>
   4645c:	dc403217 	ldw	r17,200(sp)
   46460:	d8803317 	ldw	r2,204(sp)
   46464:	1440010e 	bge	r2,r17,4646c <___vfprintf_internal_r+0x122c>
   46468:	1023883a 	mov	r17,r2
   4646c:	04400a0e 	bge	zero,r17,46498 <___vfprintf_internal_r+0x1258>
   46470:	d8801f17 	ldw	r2,124(sp)
   46474:	1c47883a 	add	r3,r3,r17
   46478:	44000015 	stw	r16,0(r8)
   4647c:	10800044 	addi	r2,r2,1
   46480:	44400115 	stw	r17,4(r8)
   46484:	d8c02015 	stw	r3,128(sp)
   46488:	d8801f15 	stw	r2,124(sp)
   4648c:	010001c4 	movi	r4,7
   46490:	20826516 	blt	r4,r2,46e28 <___vfprintf_internal_r+0x1be8>
   46494:	42000204 	addi	r8,r8,8
   46498:	88026116 	blt	r17,zero,46e20 <___vfprintf_internal_r+0x1be0>
   4649c:	d9003217 	ldw	r4,200(sp)
   464a0:	2463c83a 	sub	r17,r4,r17
   464a4:	04407b0e 	bge	zero,r17,46694 <___vfprintf_internal_r+0x1454>
   464a8:	05800404 	movi	r22,16
   464ac:	d8801f17 	ldw	r2,124(sp)
   464b0:	b4419d0e 	bge	r22,r17,46b28 <___vfprintf_internal_r+0x18e8>
   464b4:	01000174 	movhi	r4,5
   464b8:	210a3b84 	addi	r4,r4,10478
   464bc:	d9002b15 	stw	r4,172(sp)
   464c0:	070001c4 	movi	fp,7
   464c4:	dcc02c17 	ldw	r19,176(sp)
   464c8:	00000306 	br	464d8 <___vfprintf_internal_r+0x1298>
   464cc:	42000204 	addi	r8,r8,8
   464d0:	8c7ffc04 	addi	r17,r17,-16
   464d4:	b441970e 	bge	r22,r17,46b34 <___vfprintf_internal_r+0x18f4>
   464d8:	18c00404 	addi	r3,r3,16
   464dc:	10800044 	addi	r2,r2,1
   464e0:	45000015 	stw	r20,0(r8)
   464e4:	45800115 	stw	r22,4(r8)
   464e8:	d8c02015 	stw	r3,128(sp)
   464ec:	d8801f15 	stw	r2,124(sp)
   464f0:	e0bff60e 	bge	fp,r2,464cc <__alt_data_end+0xfffc64cc>
   464f4:	d9801e04 	addi	r6,sp,120
   464f8:	b80b883a 	mov	r5,r23
   464fc:	9809883a 	mov	r4,r19
   46500:	004c83c0 	call	4c83c <__sprint_r>
   46504:	103c501e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   46508:	d8c02017 	ldw	r3,128(sp)
   4650c:	d8801f17 	ldw	r2,124(sp)
   46510:	da000404 	addi	r8,sp,16
   46514:	003fee06 	br	464d0 <__alt_data_end+0xfffc64d0>
   46518:	d9002c17 	ldw	r4,176(sp)
   4651c:	d9801e04 	addi	r6,sp,120
   46520:	b80b883a 	mov	r5,r23
   46524:	004c83c0 	call	4c83c <__sprint_r>
   46528:	103c471e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   4652c:	d8c02017 	ldw	r3,128(sp)
   46530:	df002787 	ldb	fp,158(sp)
   46534:	da000404 	addi	r8,sp,16
   46538:	003d5606 	br	45a94 <__alt_data_end+0xfffc5a94>
   4653c:	9080040c 	andi	r2,r18,16
   46540:	10016126 	beq	r2,zero,46ac8 <___vfprintf_internal_r+0x1888>
   46544:	d8802d17 	ldw	r2,180(sp)
   46548:	14c00017 	ldw	r19,0(r2)
   4654c:	10800104 	addi	r2,r2,4
   46550:	d8802d15 	stw	r2,180(sp)
   46554:	982dd7fa 	srai	r22,r19,31
   46558:	b005883a 	mov	r2,r22
   4655c:	003c8206 	br	45768 <__alt_data_end+0xfffc5768>
   46560:	9080040c 	andi	r2,r18,16
   46564:	10003526 	beq	r2,zero,4663c <___vfprintf_internal_r+0x13fc>
   46568:	d9402d17 	ldw	r5,180(sp)
   4656c:	d8c02917 	ldw	r3,164(sp)
   46570:	d8002785 	stb	zero,158(sp)
   46574:	28800104 	addi	r2,r5,4
   46578:	2cc00017 	ldw	r19,0(r5)
   4657c:	002d883a 	mov	r22,zero
   46580:	18003716 	blt	r3,zero,46660 <___vfprintf_internal_r+0x1420>
   46584:	00ffdfc4 	movi	r3,-129
   46588:	d8802d15 	stw	r2,180(sp)
   4658c:	90e4703a 	and	r18,r18,r3
   46590:	0039883a 	mov	fp,zero
   46594:	983df326 	beq	r19,zero,45d64 <__alt_data_end+0xfffc5d64>
   46598:	00800244 	movi	r2,9
   4659c:	14fc7b36 	bltu	r2,r19,4578c <__alt_data_end+0xfffc578c>
   465a0:	d8c02817 	ldw	r3,160(sp)
   465a4:	dc001dc4 	addi	r16,sp,119
   465a8:	9cc00c04 	addi	r19,r19,48
   465ac:	1c07c83a 	sub	r3,r3,r16
   465b0:	dcc01dc5 	stb	r19,119(sp)
   465b4:	d8c02e15 	stw	r3,184(sp)
   465b8:	003ce806 	br	4595c <__alt_data_end+0xfffc595c>
   465bc:	d8803317 	ldw	r2,204(sp)
   465c0:	143fffc4 	addi	r16,r2,-1
   465c4:	043f4d0e 	bge	zero,r16,462fc <__alt_data_end+0xfffc62fc>
   465c8:	07000404 	movi	fp,16
   465cc:	e400810e 	bge	fp,r16,467d4 <___vfprintf_internal_r+0x1594>
   465d0:	01400174 	movhi	r5,5
   465d4:	294a3b84 	addi	r5,r5,10478
   465d8:	d9402b15 	stw	r5,172(sp)
   465dc:	01c001c4 	movi	r7,7
   465e0:	dcc02c17 	ldw	r19,176(sp)
   465e4:	00000306 	br	465f4 <___vfprintf_internal_r+0x13b4>
   465e8:	b5800204 	addi	r22,r22,8
   465ec:	843ffc04 	addi	r16,r16,-16
   465f0:	e4007b0e 	bge	fp,r16,467e0 <___vfprintf_internal_r+0x15a0>
   465f4:	18c00404 	addi	r3,r3,16
   465f8:	8c400044 	addi	r17,r17,1
   465fc:	b5000015 	stw	r20,0(r22)
   46600:	b7000115 	stw	fp,4(r22)
   46604:	d8c02015 	stw	r3,128(sp)
   46608:	dc401f15 	stw	r17,124(sp)
   4660c:	3c7ff60e 	bge	r7,r17,465e8 <__alt_data_end+0xfffc65e8>
   46610:	d9801e04 	addi	r6,sp,120
   46614:	b80b883a 	mov	r5,r23
   46618:	9809883a 	mov	r4,r19
   4661c:	d9c03c15 	stw	r7,240(sp)
   46620:	004c83c0 	call	4c83c <__sprint_r>
   46624:	d9c03c17 	ldw	r7,240(sp)
   46628:	103c071e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   4662c:	d8c02017 	ldw	r3,128(sp)
   46630:	dc401f17 	ldw	r17,124(sp)
   46634:	dd800404 	addi	r22,sp,16
   46638:	003fec06 	br	465ec <__alt_data_end+0xfffc65ec>
   4663c:	9080100c 	andi	r2,r18,64
   46640:	d8002785 	stb	zero,158(sp)
   46644:	10010e26 	beq	r2,zero,46a80 <___vfprintf_internal_r+0x1840>
   46648:	d9002d17 	ldw	r4,180(sp)
   4664c:	d9402917 	ldw	r5,164(sp)
   46650:	002d883a 	mov	r22,zero
   46654:	20800104 	addi	r2,r4,4
   46658:	24c0000b 	ldhu	r19,0(r4)
   4665c:	283fc90e 	bge	r5,zero,46584 <__alt_data_end+0xfffc6584>
   46660:	d8802d15 	stw	r2,180(sp)
   46664:	0039883a 	mov	fp,zero
   46668:	9d84b03a 	or	r2,r19,r22
   4666c:	103c461e 	bne	r2,zero,45788 <__alt_data_end+0xfffc5788>
   46670:	00800044 	movi	r2,1
   46674:	003e6c06 	br	46028 <__alt_data_end+0xfffc6028>
   46678:	d9002c17 	ldw	r4,176(sp)
   4667c:	d9801e04 	addi	r6,sp,120
   46680:	b80b883a 	mov	r5,r23
   46684:	004c83c0 	call	4c83c <__sprint_r>
   46688:	103bef1e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   4668c:	d8c02017 	ldw	r3,128(sp)
   46690:	da000404 	addi	r8,sp,16
   46694:	d9003217 	ldw	r4,200(sp)
   46698:	d8802617 	ldw	r2,152(sp)
   4669c:	d9403317 	ldw	r5,204(sp)
   466a0:	8123883a 	add	r17,r16,r4
   466a4:	11400216 	blt	r2,r5,466b0 <___vfprintf_internal_r+0x1470>
   466a8:	9100004c 	andi	r4,r18,1
   466ac:	20000d26 	beq	r4,zero,466e4 <___vfprintf_internal_r+0x14a4>
   466b0:	d9003717 	ldw	r4,220(sp)
   466b4:	d9403417 	ldw	r5,208(sp)
   466b8:	1907883a 	add	r3,r3,r4
   466bc:	d9001f17 	ldw	r4,124(sp)
   466c0:	41400015 	stw	r5,0(r8)
   466c4:	d9403717 	ldw	r5,220(sp)
   466c8:	21000044 	addi	r4,r4,1
   466cc:	d8c02015 	stw	r3,128(sp)
   466d0:	41400115 	stw	r5,4(r8)
   466d4:	d9001f15 	stw	r4,124(sp)
   466d8:	014001c4 	movi	r5,7
   466dc:	2901e816 	blt	r5,r4,46e80 <___vfprintf_internal_r+0x1c40>
   466e0:	42000204 	addi	r8,r8,8
   466e4:	d9003317 	ldw	r4,204(sp)
   466e8:	8121883a 	add	r16,r16,r4
   466ec:	2085c83a 	sub	r2,r4,r2
   466f0:	8461c83a 	sub	r16,r16,r17
   466f4:	1400010e 	bge	r2,r16,466fc <___vfprintf_internal_r+0x14bc>
   466f8:	1021883a 	mov	r16,r2
   466fc:	04000a0e 	bge	zero,r16,46728 <___vfprintf_internal_r+0x14e8>
   46700:	d9001f17 	ldw	r4,124(sp)
   46704:	1c07883a 	add	r3,r3,r16
   46708:	44400015 	stw	r17,0(r8)
   4670c:	21000044 	addi	r4,r4,1
   46710:	44000115 	stw	r16,4(r8)
   46714:	d8c02015 	stw	r3,128(sp)
   46718:	d9001f15 	stw	r4,124(sp)
   4671c:	014001c4 	movi	r5,7
   46720:	2901fb16 	blt	r5,r4,46f10 <___vfprintf_internal_r+0x1cd0>
   46724:	42000204 	addi	r8,r8,8
   46728:	8001f716 	blt	r16,zero,46f08 <___vfprintf_internal_r+0x1cc8>
   4672c:	1421c83a 	sub	r16,r2,r16
   46730:	043d380e 	bge	zero,r16,45c14 <__alt_data_end+0xfffc5c14>
   46734:	04400404 	movi	r17,16
   46738:	d8801f17 	ldw	r2,124(sp)
   4673c:	8c3efb0e 	bge	r17,r16,4632c <__alt_data_end+0xfffc632c>
   46740:	01400174 	movhi	r5,5
   46744:	294a3b84 	addi	r5,r5,10478
   46748:	d9402b15 	stw	r5,172(sp)
   4674c:	058001c4 	movi	r22,7
   46750:	dcc02c17 	ldw	r19,176(sp)
   46754:	00000306 	br	46764 <___vfprintf_internal_r+0x1524>
   46758:	42000204 	addi	r8,r8,8
   4675c:	843ffc04 	addi	r16,r16,-16
   46760:	8c3ef50e 	bge	r17,r16,46338 <__alt_data_end+0xfffc6338>
   46764:	18c00404 	addi	r3,r3,16
   46768:	10800044 	addi	r2,r2,1
   4676c:	45000015 	stw	r20,0(r8)
   46770:	44400115 	stw	r17,4(r8)
   46774:	d8c02015 	stw	r3,128(sp)
   46778:	d8801f15 	stw	r2,124(sp)
   4677c:	b0bff60e 	bge	r22,r2,46758 <__alt_data_end+0xfffc6758>
   46780:	d9801e04 	addi	r6,sp,120
   46784:	b80b883a 	mov	r5,r23
   46788:	9809883a 	mov	r4,r19
   4678c:	004c83c0 	call	4c83c <__sprint_r>
   46790:	103bad1e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   46794:	d8c02017 	ldw	r3,128(sp)
   46798:	d8801f17 	ldw	r2,124(sp)
   4679c:	da000404 	addi	r8,sp,16
   467a0:	003fee06 	br	4675c <__alt_data_end+0xfffc675c>
   467a4:	9088703a 	and	r4,r18,r2
   467a8:	203eab1e 	bne	r4,zero,46258 <__alt_data_end+0xfffc6258>
   467ac:	dc401f17 	ldw	r17,124(sp)
   467b0:	40800115 	stw	r2,4(r8)
   467b4:	44000015 	stw	r16,0(r8)
   467b8:	8c400044 	addi	r17,r17,1
   467bc:	d8c02015 	stw	r3,128(sp)
   467c0:	dc401f15 	stw	r17,124(sp)
   467c4:	008001c4 	movi	r2,7
   467c8:	14400e16 	blt	r2,r17,46804 <___vfprintf_internal_r+0x15c4>
   467cc:	45800204 	addi	r22,r8,8
   467d0:	003eca06 	br	462fc <__alt_data_end+0xfffc62fc>
   467d4:	01000174 	movhi	r4,5
   467d8:	210a3b84 	addi	r4,r4,10478
   467dc:	d9002b15 	stw	r4,172(sp)
   467e0:	d8802b17 	ldw	r2,172(sp)
   467e4:	1c07883a 	add	r3,r3,r16
   467e8:	8c400044 	addi	r17,r17,1
   467ec:	b0800015 	stw	r2,0(r22)
   467f0:	b4000115 	stw	r16,4(r22)
   467f4:	d8c02015 	stw	r3,128(sp)
   467f8:	dc401f15 	stw	r17,124(sp)
   467fc:	008001c4 	movi	r2,7
   46800:	147ebd0e 	bge	r2,r17,462f8 <__alt_data_end+0xfffc62f8>
   46804:	d9002c17 	ldw	r4,176(sp)
   46808:	d9801e04 	addi	r6,sp,120
   4680c:	b80b883a 	mov	r5,r23
   46810:	004c83c0 	call	4c83c <__sprint_r>
   46814:	103b8c1e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   46818:	d8c02017 	ldw	r3,128(sp)
   4681c:	dc401f17 	ldw	r17,124(sp)
   46820:	dd800404 	addi	r22,sp,16
   46824:	003eb506 	br	462fc <__alt_data_end+0xfffc62fc>
   46828:	d9002c17 	ldw	r4,176(sp)
   4682c:	d9801e04 	addi	r6,sp,120
   46830:	b80b883a 	mov	r5,r23
   46834:	004c83c0 	call	4c83c <__sprint_r>
   46838:	103b831e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   4683c:	d8c02017 	ldw	r3,128(sp)
   46840:	dc401f17 	ldw	r17,124(sp)
   46844:	da000404 	addi	r8,sp,16
   46848:	003e8d06 	br	46280 <__alt_data_end+0xfffc6280>
   4684c:	d9002c17 	ldw	r4,176(sp)
   46850:	d9801e04 	addi	r6,sp,120
   46854:	b80b883a 	mov	r5,r23
   46858:	004c83c0 	call	4c83c <__sprint_r>
   4685c:	103b7a1e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   46860:	d8c02017 	ldw	r3,128(sp)
   46864:	dc401f17 	ldw	r17,124(sp)
   46868:	dd800404 	addi	r22,sp,16
   4686c:	003e8f06 	br	462ac <__alt_data_end+0xfffc62ac>
   46870:	0027883a 	mov	r19,zero
   46874:	003f4a06 	br	465a0 <__alt_data_end+0xfffc65a0>
   46878:	d9002c17 	ldw	r4,176(sp)
   4687c:	d9801e04 	addi	r6,sp,120
   46880:	b80b883a 	mov	r5,r23
   46884:	004c83c0 	call	4c83c <__sprint_r>
   46888:	103b6f1e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   4688c:	d8c02017 	ldw	r3,128(sp)
   46890:	da000404 	addi	r8,sp,16
   46894:	003c9d06 	br	45b0c <__alt_data_end+0xfffc5b0c>
   46898:	04e7c83a 	sub	r19,zero,r19
   4689c:	9804c03a 	cmpne	r2,r19,zero
   468a0:	05adc83a 	sub	r22,zero,r22
   468a4:	b0adc83a 	sub	r22,r22,r2
   468a8:	d8802917 	ldw	r2,164(sp)
   468ac:	07000b44 	movi	fp,45
   468b0:	df002785 	stb	fp,158(sp)
   468b4:	10017b16 	blt	r2,zero,46ea4 <___vfprintf_internal_r+0x1c64>
   468b8:	00bfdfc4 	movi	r2,-129
   468bc:	90a4703a 	and	r18,r18,r2
   468c0:	003bb106 	br	45788 <__alt_data_end+0xfffc5788>
   468c4:	d9003617 	ldw	r4,216(sp)
   468c8:	d9403817 	ldw	r5,224(sp)
   468cc:	da003d15 	stw	r8,244(sp)
   468d0:	004c4600 	call	4c460 <__fpclassifyd>
   468d4:	da003d17 	ldw	r8,244(sp)
   468d8:	1000f026 	beq	r2,zero,46c9c <___vfprintf_internal_r+0x1a5c>
   468dc:	d9002917 	ldw	r4,164(sp)
   468e0:	05bff7c4 	movi	r22,-33
   468e4:	00bfffc4 	movi	r2,-1
   468e8:	8dac703a 	and	r22,r17,r22
   468ec:	20820026 	beq	r4,r2,470f0 <___vfprintf_internal_r+0x1eb0>
   468f0:	008011c4 	movi	r2,71
   468f4:	b081f726 	beq	r22,r2,470d4 <___vfprintf_internal_r+0x1e94>
   468f8:	d9003817 	ldw	r4,224(sp)
   468fc:	90c04014 	ori	r3,r18,256
   46900:	d8c02b15 	stw	r3,172(sp)
   46904:	20021516 	blt	r4,zero,4715c <___vfprintf_internal_r+0x1f1c>
   46908:	dcc03817 	ldw	r19,224(sp)
   4690c:	d8002a05 	stb	zero,168(sp)
   46910:	00801984 	movi	r2,102
   46914:	8881f926 	beq	r17,r2,470fc <___vfprintf_internal_r+0x1ebc>
   46918:	00801184 	movi	r2,70
   4691c:	88821c26 	beq	r17,r2,47190 <___vfprintf_internal_r+0x1f50>
   46920:	00801144 	movi	r2,69
   46924:	b081ef26 	beq	r22,r2,470e4 <___vfprintf_internal_r+0x1ea4>
   46928:	d8c02917 	ldw	r3,164(sp)
   4692c:	d8802104 	addi	r2,sp,132
   46930:	d8800315 	stw	r2,12(sp)
   46934:	d9403617 	ldw	r5,216(sp)
   46938:	d8802504 	addi	r2,sp,148
   4693c:	d9002c17 	ldw	r4,176(sp)
   46940:	d8800215 	stw	r2,8(sp)
   46944:	d8802604 	addi	r2,sp,152
   46948:	d8c00015 	stw	r3,0(sp)
   4694c:	d8800115 	stw	r2,4(sp)
   46950:	01c00084 	movi	r7,2
   46954:	980d883a 	mov	r6,r19
   46958:	d8c03c15 	stw	r3,240(sp)
   4695c:	da003d15 	stw	r8,244(sp)
   46960:	00478640 	call	47864 <_dtoa_r>
   46964:	1021883a 	mov	r16,r2
   46968:	008019c4 	movi	r2,103
   4696c:	d8c03c17 	ldw	r3,240(sp)
   46970:	da003d17 	ldw	r8,244(sp)
   46974:	88817126 	beq	r17,r2,46f3c <___vfprintf_internal_r+0x1cfc>
   46978:	008011c4 	movi	r2,71
   4697c:	88829226 	beq	r17,r2,473c8 <___vfprintf_internal_r+0x2188>
   46980:	80f9883a 	add	fp,r16,r3
   46984:	d9003617 	ldw	r4,216(sp)
   46988:	000d883a 	mov	r6,zero
   4698c:	000f883a 	mov	r7,zero
   46990:	980b883a 	mov	r5,r19
   46994:	da003d15 	stw	r8,244(sp)
   46998:	0043a780 	call	43a78 <__eqdf2>
   4699c:	da003d17 	ldw	r8,244(sp)
   469a0:	10018d26 	beq	r2,zero,46fd8 <___vfprintf_internal_r+0x1d98>
   469a4:	d8802117 	ldw	r2,132(sp)
   469a8:	1700062e 	bgeu	r2,fp,469c4 <___vfprintf_internal_r+0x1784>
   469ac:	01000c04 	movi	r4,48
   469b0:	10c00044 	addi	r3,r2,1
   469b4:	d8c02115 	stw	r3,132(sp)
   469b8:	11000005 	stb	r4,0(r2)
   469bc:	d8802117 	ldw	r2,132(sp)
   469c0:	173ffb36 	bltu	r2,fp,469b0 <__alt_data_end+0xfffc69b0>
   469c4:	1405c83a 	sub	r2,r2,r16
   469c8:	d8803315 	stw	r2,204(sp)
   469cc:	008011c4 	movi	r2,71
   469d0:	b0817626 	beq	r22,r2,46fac <___vfprintf_internal_r+0x1d6c>
   469d4:	00801944 	movi	r2,101
   469d8:	1442810e 	bge	r2,r17,473e0 <___vfprintf_internal_r+0x21a0>
   469dc:	d8c02617 	ldw	r3,152(sp)
   469e0:	00801984 	movi	r2,102
   469e4:	d8c03215 	stw	r3,200(sp)
   469e8:	8881fe26 	beq	r17,r2,471e4 <___vfprintf_internal_r+0x1fa4>
   469ec:	d8c03217 	ldw	r3,200(sp)
   469f0:	d9003317 	ldw	r4,204(sp)
   469f4:	1901dd16 	blt	r3,r4,4716c <___vfprintf_internal_r+0x1f2c>
   469f8:	9480004c 	andi	r18,r18,1
   469fc:	90022b1e 	bne	r18,zero,472ac <___vfprintf_internal_r+0x206c>
   46a00:	1805883a 	mov	r2,r3
   46a04:	18028016 	blt	r3,zero,47408 <___vfprintf_internal_r+0x21c8>
   46a08:	d8c03217 	ldw	r3,200(sp)
   46a0c:	044019c4 	movi	r17,103
   46a10:	d8c02e15 	stw	r3,184(sp)
   46a14:	df002a07 	ldb	fp,168(sp)
   46a18:	e001531e 	bne	fp,zero,46f68 <___vfprintf_internal_r+0x1d28>
   46a1c:	df002783 	ldbu	fp,158(sp)
   46a20:	d8802a15 	stw	r2,168(sp)
   46a24:	dc802b17 	ldw	r18,172(sp)
   46a28:	d8002915 	stw	zero,164(sp)
   46a2c:	003bd106 	br	45974 <__alt_data_end+0xfffc5974>
   46a30:	d8802d17 	ldw	r2,180(sp)
   46a34:	d8c02d17 	ldw	r3,180(sp)
   46a38:	d9002d17 	ldw	r4,180(sp)
   46a3c:	10800017 	ldw	r2,0(r2)
   46a40:	18c00117 	ldw	r3,4(r3)
   46a44:	21000204 	addi	r4,r4,8
   46a48:	d8803615 	stw	r2,216(sp)
   46a4c:	d8c03815 	stw	r3,224(sp)
   46a50:	d9002d15 	stw	r4,180(sp)
   46a54:	003b7506 	br	4582c <__alt_data_end+0xfffc582c>
   46a58:	ac400007 	ldb	r17,0(r21)
   46a5c:	003a5906 	br	453c4 <__alt_data_end+0xfffc53c4>
   46a60:	9080100c 	andi	r2,r18,64
   46a64:	1000a826 	beq	r2,zero,46d08 <___vfprintf_internal_r+0x1ac8>
   46a68:	d9002d17 	ldw	r4,180(sp)
   46a6c:	002d883a 	mov	r22,zero
   46a70:	24c0000b 	ldhu	r19,0(r4)
   46a74:	21000104 	addi	r4,r4,4
   46a78:	d9002d15 	stw	r4,180(sp)
   46a7c:	003ccb06 	br	45dac <__alt_data_end+0xfffc5dac>
   46a80:	d8c02d17 	ldw	r3,180(sp)
   46a84:	d9002917 	ldw	r4,164(sp)
   46a88:	002d883a 	mov	r22,zero
   46a8c:	18800104 	addi	r2,r3,4
   46a90:	1cc00017 	ldw	r19,0(r3)
   46a94:	203ebb0e 	bge	r4,zero,46584 <__alt_data_end+0xfffc6584>
   46a98:	003ef106 	br	46660 <__alt_data_end+0xfffc6660>
   46a9c:	9080040c 	andi	r2,r18,16
   46aa0:	1000921e 	bne	r2,zero,46cec <___vfprintf_internal_r+0x1aac>
   46aa4:	9480100c 	andi	r18,r18,64
   46aa8:	90013926 	beq	r18,zero,46f90 <___vfprintf_internal_r+0x1d50>
   46aac:	d9002d17 	ldw	r4,180(sp)
   46ab0:	d9402f17 	ldw	r5,188(sp)
   46ab4:	20800017 	ldw	r2,0(r4)
   46ab8:	21000104 	addi	r4,r4,4
   46abc:	d9002d15 	stw	r4,180(sp)
   46ac0:	1140000d 	sth	r5,0(r2)
   46ac4:	003a1606 	br	45320 <__alt_data_end+0xfffc5320>
   46ac8:	9080100c 	andi	r2,r18,64
   46acc:	10008026 	beq	r2,zero,46cd0 <___vfprintf_internal_r+0x1a90>
   46ad0:	d8c02d17 	ldw	r3,180(sp)
   46ad4:	1cc0000f 	ldh	r19,0(r3)
   46ad8:	18c00104 	addi	r3,r3,4
   46adc:	d8c02d15 	stw	r3,180(sp)
   46ae0:	982dd7fa 	srai	r22,r19,31
   46ae4:	b005883a 	mov	r2,r22
   46ae8:	003b1f06 	br	45768 <__alt_data_end+0xfffc5768>
   46aec:	9080100c 	andi	r2,r18,64
   46af0:	d8002785 	stb	zero,158(sp)
   46af4:	10008a1e 	bne	r2,zero,46d20 <___vfprintf_internal_r+0x1ae0>
   46af8:	d9402d17 	ldw	r5,180(sp)
   46afc:	d8c02917 	ldw	r3,164(sp)
   46b00:	002d883a 	mov	r22,zero
   46b04:	28800104 	addi	r2,r5,4
   46b08:	2cc00017 	ldw	r19,0(r5)
   46b0c:	183e4b0e 	bge	r3,zero,4643c <__alt_data_end+0xfffc643c>
   46b10:	9d86b03a 	or	r3,r19,r22
   46b14:	d8802d15 	stw	r2,180(sp)
   46b18:	183e4c1e 	bne	r3,zero,4644c <__alt_data_end+0xfffc644c>
   46b1c:	0039883a 	mov	fp,zero
   46b20:	0005883a 	mov	r2,zero
   46b24:	003d4006 	br	46028 <__alt_data_end+0xfffc6028>
   46b28:	01400174 	movhi	r5,5
   46b2c:	294a3b84 	addi	r5,r5,10478
   46b30:	d9402b15 	stw	r5,172(sp)
   46b34:	d9402b17 	ldw	r5,172(sp)
   46b38:	1c47883a 	add	r3,r3,r17
   46b3c:	10800044 	addi	r2,r2,1
   46b40:	41400015 	stw	r5,0(r8)
   46b44:	44400115 	stw	r17,4(r8)
   46b48:	d8c02015 	stw	r3,128(sp)
   46b4c:	d8801f15 	stw	r2,124(sp)
   46b50:	010001c4 	movi	r4,7
   46b54:	20bec816 	blt	r4,r2,46678 <__alt_data_end+0xfffc6678>
   46b58:	42000204 	addi	r8,r8,8
   46b5c:	003ecd06 	br	46694 <__alt_data_end+0xfffc6694>
   46b60:	d9002917 	ldw	r4,164(sp)
   46b64:	d8002785 	stb	zero,158(sp)
   46b68:	203d2d16 	blt	r4,zero,46020 <__alt_data_end+0xfffc6020>
   46b6c:	00bfdfc4 	movi	r2,-129
   46b70:	90a4703a 	and	r18,r18,r2
   46b74:	003a9106 	br	455bc <__alt_data_end+0xfffc55bc>
   46b78:	01000174 	movhi	r4,5
   46b7c:	210a3b84 	addi	r4,r4,10478
   46b80:	d9002b15 	stw	r4,172(sp)
   46b84:	003c0c06 	br	45bb8 <__alt_data_end+0xfffc5bb8>
   46b88:	d9002c17 	ldw	r4,176(sp)
   46b8c:	d9801e04 	addi	r6,sp,120
   46b90:	b80b883a 	mov	r5,r23
   46b94:	004c83c0 	call	4c83c <__sprint_r>
   46b98:	103aab1e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   46b9c:	d8c02017 	ldw	r3,128(sp)
   46ba0:	da000404 	addi	r8,sp,16
   46ba4:	003d4106 	br	460ac <__alt_data_end+0xfffc60ac>
   46ba8:	d8801f17 	ldw	r2,124(sp)
   46bac:	01400174 	movhi	r5,5
   46bb0:	01000044 	movi	r4,1
   46bb4:	18c00044 	addi	r3,r3,1
   46bb8:	10800044 	addi	r2,r2,1
   46bbc:	294a3b04 	addi	r5,r5,10476
   46bc0:	41000115 	stw	r4,4(r8)
   46bc4:	41400015 	stw	r5,0(r8)
   46bc8:	d8c02015 	stw	r3,128(sp)
   46bcc:	d8801f15 	stw	r2,124(sp)
   46bd0:	010001c4 	movi	r4,7
   46bd4:	20805c16 	blt	r4,r2,46d48 <___vfprintf_internal_r+0x1b08>
   46bd8:	42000204 	addi	r8,r8,8
   46bdc:	8800041e 	bne	r17,zero,46bf0 <___vfprintf_internal_r+0x19b0>
   46be0:	d8803317 	ldw	r2,204(sp)
   46be4:	1000021e 	bne	r2,zero,46bf0 <___vfprintf_internal_r+0x19b0>
   46be8:	9080004c 	andi	r2,r18,1
   46bec:	103c0926 	beq	r2,zero,45c14 <__alt_data_end+0xfffc5c14>
   46bf0:	d9003717 	ldw	r4,220(sp)
   46bf4:	d8801f17 	ldw	r2,124(sp)
   46bf8:	d9403417 	ldw	r5,208(sp)
   46bfc:	20c7883a 	add	r3,r4,r3
   46c00:	10800044 	addi	r2,r2,1
   46c04:	41000115 	stw	r4,4(r8)
   46c08:	41400015 	stw	r5,0(r8)
   46c0c:	d8c02015 	stw	r3,128(sp)
   46c10:	d8801f15 	stw	r2,124(sp)
   46c14:	010001c4 	movi	r4,7
   46c18:	20812116 	blt	r4,r2,470a0 <___vfprintf_internal_r+0x1e60>
   46c1c:	42000204 	addi	r8,r8,8
   46c20:	0463c83a 	sub	r17,zero,r17
   46c24:	0440730e 	bge	zero,r17,46df4 <___vfprintf_internal_r+0x1bb4>
   46c28:	05800404 	movi	r22,16
   46c2c:	b440860e 	bge	r22,r17,46e48 <___vfprintf_internal_r+0x1c08>
   46c30:	01400174 	movhi	r5,5
   46c34:	294a3b84 	addi	r5,r5,10478
   46c38:	d9402b15 	stw	r5,172(sp)
   46c3c:	070001c4 	movi	fp,7
   46c40:	dcc02c17 	ldw	r19,176(sp)
   46c44:	00000306 	br	46c54 <___vfprintf_internal_r+0x1a14>
   46c48:	42000204 	addi	r8,r8,8
   46c4c:	8c7ffc04 	addi	r17,r17,-16
   46c50:	b440800e 	bge	r22,r17,46e54 <___vfprintf_internal_r+0x1c14>
   46c54:	18c00404 	addi	r3,r3,16
   46c58:	10800044 	addi	r2,r2,1
   46c5c:	45000015 	stw	r20,0(r8)
   46c60:	45800115 	stw	r22,4(r8)
   46c64:	d8c02015 	stw	r3,128(sp)
   46c68:	d8801f15 	stw	r2,124(sp)
   46c6c:	e0bff60e 	bge	fp,r2,46c48 <__alt_data_end+0xfffc6c48>
   46c70:	d9801e04 	addi	r6,sp,120
   46c74:	b80b883a 	mov	r5,r23
   46c78:	9809883a 	mov	r4,r19
   46c7c:	004c83c0 	call	4c83c <__sprint_r>
   46c80:	103a711e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   46c84:	d8c02017 	ldw	r3,128(sp)
   46c88:	d8801f17 	ldw	r2,124(sp)
   46c8c:	da000404 	addi	r8,sp,16
   46c90:	003fee06 	br	46c4c <__alt_data_end+0xfffc6c4c>
   46c94:	00bfffc4 	movi	r2,-1
   46c98:	003a6f06 	br	45658 <__alt_data_end+0xfffc5658>
   46c9c:	008011c4 	movi	r2,71
   46ca0:	1440b816 	blt	r2,r17,46f84 <___vfprintf_internal_r+0x1d44>
   46ca4:	04000174 	movhi	r16,5
   46ca8:	840a2d04 	addi	r16,r16,10420
   46cac:	00c000c4 	movi	r3,3
   46cb0:	00bfdfc4 	movi	r2,-129
   46cb4:	d8c02a15 	stw	r3,168(sp)
   46cb8:	90a4703a 	and	r18,r18,r2
   46cbc:	df002783 	ldbu	fp,158(sp)
   46cc0:	d8c02e15 	stw	r3,184(sp)
   46cc4:	d8002915 	stw	zero,164(sp)
   46cc8:	d8003215 	stw	zero,200(sp)
   46ccc:	003b2906 	br	45974 <__alt_data_end+0xfffc5974>
   46cd0:	d9002d17 	ldw	r4,180(sp)
   46cd4:	24c00017 	ldw	r19,0(r4)
   46cd8:	21000104 	addi	r4,r4,4
   46cdc:	d9002d15 	stw	r4,180(sp)
   46ce0:	982dd7fa 	srai	r22,r19,31
   46ce4:	b005883a 	mov	r2,r22
   46ce8:	003a9f06 	br	45768 <__alt_data_end+0xfffc5768>
   46cec:	d9402d17 	ldw	r5,180(sp)
   46cf0:	d8c02f17 	ldw	r3,188(sp)
   46cf4:	28800017 	ldw	r2,0(r5)
   46cf8:	29400104 	addi	r5,r5,4
   46cfc:	d9402d15 	stw	r5,180(sp)
   46d00:	10c00015 	stw	r3,0(r2)
   46d04:	00398606 	br	45320 <__alt_data_end+0xfffc5320>
   46d08:	d9402d17 	ldw	r5,180(sp)
   46d0c:	002d883a 	mov	r22,zero
   46d10:	2cc00017 	ldw	r19,0(r5)
   46d14:	29400104 	addi	r5,r5,4
   46d18:	d9402d15 	stw	r5,180(sp)
   46d1c:	003c2306 	br	45dac <__alt_data_end+0xfffc5dac>
   46d20:	d8c02d17 	ldw	r3,180(sp)
   46d24:	d9002917 	ldw	r4,164(sp)
   46d28:	002d883a 	mov	r22,zero
   46d2c:	18800104 	addi	r2,r3,4
   46d30:	1cc0000b 	ldhu	r19,0(r3)
   46d34:	203dc10e 	bge	r4,zero,4643c <__alt_data_end+0xfffc643c>
   46d38:	003f7506 	br	46b10 <__alt_data_end+0xfffc6b10>
   46d3c:	04000174 	movhi	r16,5
   46d40:	840a2b04 	addi	r16,r16,10412
   46d44:	003acc06 	br	45878 <__alt_data_end+0xfffc5878>
   46d48:	d9002c17 	ldw	r4,176(sp)
   46d4c:	d9801e04 	addi	r6,sp,120
   46d50:	b80b883a 	mov	r5,r23
   46d54:	004c83c0 	call	4c83c <__sprint_r>
   46d58:	103a3b1e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   46d5c:	dc402617 	ldw	r17,152(sp)
   46d60:	d8c02017 	ldw	r3,128(sp)
   46d64:	da000404 	addi	r8,sp,16
   46d68:	003f9c06 	br	46bdc <__alt_data_end+0xfffc6bdc>
   46d6c:	ac400043 	ldbu	r17,1(r21)
   46d70:	94800814 	ori	r18,r18,32
   46d74:	ad400044 	addi	r21,r21,1
   46d78:	8c403fcc 	andi	r17,r17,255
   46d7c:	8c40201c 	xori	r17,r17,128
   46d80:	8c7fe004 	addi	r17,r17,-128
   46d84:	00398f06 	br	453c4 <__alt_data_end+0xfffc53c4>
   46d88:	d8c02d15 	stw	r3,180(sp)
   46d8c:	0039883a 	mov	fp,zero
   46d90:	003e3506 	br	46668 <__alt_data_end+0xfffc6668>
   46d94:	d9002c17 	ldw	r4,176(sp)
   46d98:	d9801e04 	addi	r6,sp,120
   46d9c:	b80b883a 	mov	r5,r23
   46da0:	004c83c0 	call	4c83c <__sprint_r>
   46da4:	103a281e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   46da8:	d8c02017 	ldw	r3,128(sp)
   46dac:	da000404 	addi	r8,sp,16
   46db0:	003cd006 	br	460f4 <__alt_data_end+0xfffc60f4>
   46db4:	8009883a 	mov	r4,r16
   46db8:	da003d15 	stw	r8,244(sp)
   46dbc:	00451a80 	call	451a8 <strlen>
   46dc0:	d8802e15 	stw	r2,184(sp)
   46dc4:	da003d17 	ldw	r8,244(sp)
   46dc8:	103c340e 	bge	r2,zero,45e9c <__alt_data_end+0xfffc5e9c>
   46dcc:	0005883a 	mov	r2,zero
   46dd0:	003c3206 	br	45e9c <__alt_data_end+0xfffc5e9c>
   46dd4:	d9002c17 	ldw	r4,176(sp)
   46dd8:	d9801e04 	addi	r6,sp,120
   46ddc:	b80b883a 	mov	r5,r23
   46de0:	004c83c0 	call	4c83c <__sprint_r>
   46de4:	103a181e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   46de8:	d8c02017 	ldw	r3,128(sp)
   46dec:	d8801f17 	ldw	r2,124(sp)
   46df0:	da000404 	addi	r8,sp,16
   46df4:	d9403317 	ldw	r5,204(sp)
   46df8:	10800044 	addi	r2,r2,1
   46dfc:	44000015 	stw	r16,0(r8)
   46e00:	28c7883a 	add	r3,r5,r3
   46e04:	003b7d06 	br	45bfc <__alt_data_end+0xfffc5bfc>
   46e08:	01000174 	movhi	r4,5
   46e0c:	210a3f84 	addi	r4,r4,10494
   46e10:	d9003515 	stw	r4,212(sp)
   46e14:	003b1406 	br	45a68 <__alt_data_end+0xfffc5a68>
   46e18:	013fffc4 	movi	r4,-1
   46e1c:	003a3506 	br	456f4 <__alt_data_end+0xfffc56f4>
   46e20:	0023883a 	mov	r17,zero
   46e24:	003d9d06 	br	4649c <__alt_data_end+0xfffc649c>
   46e28:	d9002c17 	ldw	r4,176(sp)
   46e2c:	d9801e04 	addi	r6,sp,120
   46e30:	b80b883a 	mov	r5,r23
   46e34:	004c83c0 	call	4c83c <__sprint_r>
   46e38:	103a031e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   46e3c:	d8c02017 	ldw	r3,128(sp)
   46e40:	da000404 	addi	r8,sp,16
   46e44:	003d9406 	br	46498 <__alt_data_end+0xfffc6498>
   46e48:	01000174 	movhi	r4,5
   46e4c:	210a3b84 	addi	r4,r4,10478
   46e50:	d9002b15 	stw	r4,172(sp)
   46e54:	d9002b17 	ldw	r4,172(sp)
   46e58:	1c47883a 	add	r3,r3,r17
   46e5c:	10800044 	addi	r2,r2,1
   46e60:	41000015 	stw	r4,0(r8)
   46e64:	44400115 	stw	r17,4(r8)
   46e68:	d8c02015 	stw	r3,128(sp)
   46e6c:	d8801f15 	stw	r2,124(sp)
   46e70:	010001c4 	movi	r4,7
   46e74:	20bfd716 	blt	r4,r2,46dd4 <__alt_data_end+0xfffc6dd4>
   46e78:	42000204 	addi	r8,r8,8
   46e7c:	003fdd06 	br	46df4 <__alt_data_end+0xfffc6df4>
   46e80:	d9002c17 	ldw	r4,176(sp)
   46e84:	d9801e04 	addi	r6,sp,120
   46e88:	b80b883a 	mov	r5,r23
   46e8c:	004c83c0 	call	4c83c <__sprint_r>
   46e90:	1039ed1e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   46e94:	d8802617 	ldw	r2,152(sp)
   46e98:	d8c02017 	ldw	r3,128(sp)
   46e9c:	da000404 	addi	r8,sp,16
   46ea0:	003e1006 	br	466e4 <__alt_data_end+0xfffc66e4>
   46ea4:	00800044 	movi	r2,1
   46ea8:	10803fcc 	andi	r2,r2,255
   46eac:	00c00044 	movi	r3,1
   46eb0:	10fa3526 	beq	r2,r3,45788 <__alt_data_end+0xfffc5788>
   46eb4:	00c00084 	movi	r3,2
   46eb8:	10fbcb26 	beq	r2,r3,45de8 <__alt_data_end+0xfffc5de8>
   46ebc:	003a8f06 	br	458fc <__alt_data_end+0xfffc58fc>
   46ec0:	01000174 	movhi	r4,5
   46ec4:	210a3f84 	addi	r4,r4,10494
   46ec8:	d9003515 	stw	r4,212(sp)
   46ecc:	003b7606 	br	45ca8 <__alt_data_end+0xfffc5ca8>
   46ed0:	d8802917 	ldw	r2,164(sp)
   46ed4:	00c00184 	movi	r3,6
   46ed8:	1880012e 	bgeu	r3,r2,46ee0 <___vfprintf_internal_r+0x1ca0>
   46edc:	1805883a 	mov	r2,r3
   46ee0:	d8802e15 	stw	r2,184(sp)
   46ee4:	1000ef16 	blt	r2,zero,472a4 <___vfprintf_internal_r+0x2064>
   46ee8:	04000174 	movhi	r16,5
   46eec:	d8802a15 	stw	r2,168(sp)
   46ef0:	dcc02d15 	stw	r19,180(sp)
   46ef4:	d8002915 	stw	zero,164(sp)
   46ef8:	d8003215 	stw	zero,200(sp)
   46efc:	840a3904 	addi	r16,r16,10468
   46f00:	0039883a 	mov	fp,zero
   46f04:	003aa206 	br	45990 <__alt_data_end+0xfffc5990>
   46f08:	0021883a 	mov	r16,zero
   46f0c:	003e0706 	br	4672c <__alt_data_end+0xfffc672c>
   46f10:	d9002c17 	ldw	r4,176(sp)
   46f14:	d9801e04 	addi	r6,sp,120
   46f18:	b80b883a 	mov	r5,r23
   46f1c:	004c83c0 	call	4c83c <__sprint_r>
   46f20:	1039c91e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   46f24:	d8802617 	ldw	r2,152(sp)
   46f28:	d9403317 	ldw	r5,204(sp)
   46f2c:	d8c02017 	ldw	r3,128(sp)
   46f30:	da000404 	addi	r8,sp,16
   46f34:	2885c83a 	sub	r2,r5,r2
   46f38:	003dfb06 	br	46728 <__alt_data_end+0xfffc6728>
   46f3c:	9080004c 	andi	r2,r18,1
   46f40:	103e8f1e 	bne	r2,zero,46980 <__alt_data_end+0xfffc6980>
   46f44:	d8802117 	ldw	r2,132(sp)
   46f48:	003e9e06 	br	469c4 <__alt_data_end+0xfffc69c4>
   46f4c:	1025883a 	mov	r18,r2
   46f50:	0039883a 	mov	fp,zero
   46f54:	00800084 	movi	r2,2
   46f58:	003fd306 	br	46ea8 <__alt_data_end+0xfffc6ea8>
   46f5c:	07000b44 	movi	fp,45
   46f60:	df002785 	stb	fp,158(sp)
   46f64:	003a4006 	br	45868 <__alt_data_end+0xfffc5868>
   46f68:	00c00b44 	movi	r3,45
   46f6c:	d8c02785 	stb	r3,158(sp)
   46f70:	d8802a15 	stw	r2,168(sp)
   46f74:	dc802b17 	ldw	r18,172(sp)
   46f78:	d8002915 	stw	zero,164(sp)
   46f7c:	07000b44 	movi	fp,45
   46f80:	003a8006 	br	45984 <__alt_data_end+0xfffc5984>
   46f84:	04000174 	movhi	r16,5
   46f88:	840a2e04 	addi	r16,r16,10424
   46f8c:	003f4706 	br	46cac <__alt_data_end+0xfffc6cac>
   46f90:	d8c02d17 	ldw	r3,180(sp)
   46f94:	d9002f17 	ldw	r4,188(sp)
   46f98:	18800017 	ldw	r2,0(r3)
   46f9c:	18c00104 	addi	r3,r3,4
   46fa0:	d8c02d15 	stw	r3,180(sp)
   46fa4:	11000015 	stw	r4,0(r2)
   46fa8:	0038dd06 	br	45320 <__alt_data_end+0xfffc5320>
   46fac:	dd802617 	ldw	r22,152(sp)
   46fb0:	00bfff44 	movi	r2,-3
   46fb4:	b0801c16 	blt	r22,r2,47028 <___vfprintf_internal_r+0x1de8>
   46fb8:	d9402917 	ldw	r5,164(sp)
   46fbc:	2d801a16 	blt	r5,r22,47028 <___vfprintf_internal_r+0x1de8>
   46fc0:	dd803215 	stw	r22,200(sp)
   46fc4:	003e8906 	br	469ec <__alt_data_end+0xfffc69ec>
   46fc8:	01000174 	movhi	r4,5
   46fcc:	210a3b84 	addi	r4,r4,10478
   46fd0:	d9002b15 	stw	r4,172(sp)
   46fd4:	003c9106 	br	4621c <__alt_data_end+0xfffc621c>
   46fd8:	e005883a 	mov	r2,fp
   46fdc:	003e7906 	br	469c4 <__alt_data_end+0xfffc69c4>
   46fe0:	d9402917 	ldw	r5,164(sp)
   46fe4:	df002783 	ldbu	fp,158(sp)
   46fe8:	dcc02d15 	stw	r19,180(sp)
   46fec:	d9402a15 	stw	r5,168(sp)
   46ff0:	d9402e15 	stw	r5,184(sp)
   46ff4:	d8002915 	stw	zero,164(sp)
   46ff8:	d8003215 	stw	zero,200(sp)
   46ffc:	003a5d06 	br	45974 <__alt_data_end+0xfffc5974>
   47000:	9080004c 	andi	r2,r18,1
   47004:	0039883a 	mov	fp,zero
   47008:	10000426 	beq	r2,zero,4701c <___vfprintf_internal_r+0x1ddc>
   4700c:	00800c04 	movi	r2,48
   47010:	dc001dc4 	addi	r16,sp,119
   47014:	d8801dc5 	stb	r2,119(sp)
   47018:	003b8006 	br	45e1c <__alt_data_end+0xfffc5e1c>
   4701c:	d8002e15 	stw	zero,184(sp)
   47020:	dc001e04 	addi	r16,sp,120
   47024:	003a4d06 	br	4595c <__alt_data_end+0xfffc595c>
   47028:	8c7fff84 	addi	r17,r17,-2
   4702c:	b5bfffc4 	addi	r22,r22,-1
   47030:	dd802615 	stw	r22,152(sp)
   47034:	dc4022c5 	stb	r17,139(sp)
   47038:	b000bf16 	blt	r22,zero,47338 <___vfprintf_internal_r+0x20f8>
   4703c:	00800ac4 	movi	r2,43
   47040:	d8802305 	stb	r2,140(sp)
   47044:	00800244 	movi	r2,9
   47048:	15807016 	blt	r2,r22,4720c <___vfprintf_internal_r+0x1fcc>
   4704c:	00800c04 	movi	r2,48
   47050:	b5800c04 	addi	r22,r22,48
   47054:	d8802345 	stb	r2,141(sp)
   47058:	dd802385 	stb	r22,142(sp)
   4705c:	d88023c4 	addi	r2,sp,143
   47060:	df0022c4 	addi	fp,sp,139
   47064:	d8c03317 	ldw	r3,204(sp)
   47068:	1739c83a 	sub	fp,r2,fp
   4706c:	d9003317 	ldw	r4,204(sp)
   47070:	e0c7883a 	add	r3,fp,r3
   47074:	df003a15 	stw	fp,232(sp)
   47078:	d8c02e15 	stw	r3,184(sp)
   4707c:	00800044 	movi	r2,1
   47080:	1100b30e 	bge	r2,r4,47350 <___vfprintf_internal_r+0x2110>
   47084:	d8c02e17 	ldw	r3,184(sp)
   47088:	18c00044 	addi	r3,r3,1
   4708c:	d8c02e15 	stw	r3,184(sp)
   47090:	1805883a 	mov	r2,r3
   47094:	1800ac16 	blt	r3,zero,47348 <___vfprintf_internal_r+0x2108>
   47098:	d8003215 	stw	zero,200(sp)
   4709c:	003e5d06 	br	46a14 <__alt_data_end+0xfffc6a14>
   470a0:	d9002c17 	ldw	r4,176(sp)
   470a4:	d9801e04 	addi	r6,sp,120
   470a8:	b80b883a 	mov	r5,r23
   470ac:	004c83c0 	call	4c83c <__sprint_r>
   470b0:	1039651e 	bne	r2,zero,45648 <__alt_data_end+0xfffc5648>
   470b4:	dc402617 	ldw	r17,152(sp)
   470b8:	d8c02017 	ldw	r3,128(sp)
   470bc:	d8801f17 	ldw	r2,124(sp)
   470c0:	da000404 	addi	r8,sp,16
   470c4:	003ed606 	br	46c20 <__alt_data_end+0xfffc6c20>
   470c8:	582b883a 	mov	r21,r11
   470cc:	d8002915 	stw	zero,164(sp)
   470d0:	0038bd06 	br	453c8 <__alt_data_end+0xfffc53c8>
   470d4:	d8802917 	ldw	r2,164(sp)
   470d8:	103e071e 	bne	r2,zero,468f8 <__alt_data_end+0xfffc68f8>
   470dc:	dc002915 	stw	r16,164(sp)
   470e0:	003e0506 	br	468f8 <__alt_data_end+0xfffc68f8>
   470e4:	d9002917 	ldw	r4,164(sp)
   470e8:	20c00044 	addi	r3,r4,1
   470ec:	003e0f06 	br	4692c <__alt_data_end+0xfffc692c>
   470f0:	01400184 	movi	r5,6
   470f4:	d9402915 	stw	r5,164(sp)
   470f8:	003dff06 	br	468f8 <__alt_data_end+0xfffc68f8>
   470fc:	d8802104 	addi	r2,sp,132
   47100:	d8800315 	stw	r2,12(sp)
   47104:	d8802504 	addi	r2,sp,148
   47108:	d8800215 	stw	r2,8(sp)
   4710c:	d8802604 	addi	r2,sp,152
   47110:	d8800115 	stw	r2,4(sp)
   47114:	d8802917 	ldw	r2,164(sp)
   47118:	d9403617 	ldw	r5,216(sp)
   4711c:	d9002c17 	ldw	r4,176(sp)
   47120:	d8800015 	stw	r2,0(sp)
   47124:	01c000c4 	movi	r7,3
   47128:	980d883a 	mov	r6,r19
   4712c:	da003d15 	stw	r8,244(sp)
   47130:	00478640 	call	47864 <_dtoa_r>
   47134:	d8c02917 	ldw	r3,164(sp)
   47138:	da003d17 	ldw	r8,244(sp)
   4713c:	1021883a 	mov	r16,r2
   47140:	10f9883a 	add	fp,r2,r3
   47144:	81000007 	ldb	r4,0(r16)
   47148:	00800c04 	movi	r2,48
   4714c:	20805e26 	beq	r4,r2,472c8 <___vfprintf_internal_r+0x2088>
   47150:	d8c02617 	ldw	r3,152(sp)
   47154:	e0f9883a 	add	fp,fp,r3
   47158:	003e0a06 	br	46984 <__alt_data_end+0xfffc6984>
   4715c:	00c00b44 	movi	r3,45
   47160:	24e0003c 	xorhi	r19,r4,32768
   47164:	d8c02a05 	stb	r3,168(sp)
   47168:	003de906 	br	46910 <__alt_data_end+0xfffc6910>
   4716c:	d8c03217 	ldw	r3,200(sp)
   47170:	00c07a0e 	bge	zero,r3,4735c <___vfprintf_internal_r+0x211c>
   47174:	00800044 	movi	r2,1
   47178:	d9003317 	ldw	r4,204(sp)
   4717c:	1105883a 	add	r2,r2,r4
   47180:	d8802e15 	stw	r2,184(sp)
   47184:	10004e16 	blt	r2,zero,472c0 <___vfprintf_internal_r+0x2080>
   47188:	044019c4 	movi	r17,103
   4718c:	003e2106 	br	46a14 <__alt_data_end+0xfffc6a14>
   47190:	d9002917 	ldw	r4,164(sp)
   47194:	d8802104 	addi	r2,sp,132
   47198:	d8800315 	stw	r2,12(sp)
   4719c:	d9000015 	stw	r4,0(sp)
   471a0:	d8802504 	addi	r2,sp,148
   471a4:	d9403617 	ldw	r5,216(sp)
   471a8:	d9002c17 	ldw	r4,176(sp)
   471ac:	d8800215 	stw	r2,8(sp)
   471b0:	d8802604 	addi	r2,sp,152
   471b4:	d8800115 	stw	r2,4(sp)
   471b8:	01c000c4 	movi	r7,3
   471bc:	980d883a 	mov	r6,r19
   471c0:	da003d15 	stw	r8,244(sp)
   471c4:	00478640 	call	47864 <_dtoa_r>
   471c8:	d8c02917 	ldw	r3,164(sp)
   471cc:	da003d17 	ldw	r8,244(sp)
   471d0:	1021883a 	mov	r16,r2
   471d4:	00801184 	movi	r2,70
   471d8:	80f9883a 	add	fp,r16,r3
   471dc:	88bfd926 	beq	r17,r2,47144 <__alt_data_end+0xfffc7144>
   471e0:	003de806 	br	46984 <__alt_data_end+0xfffc6984>
   471e4:	d9002917 	ldw	r4,164(sp)
   471e8:	00c04d0e 	bge	zero,r3,47320 <___vfprintf_internal_r+0x20e0>
   471ec:	2000441e 	bne	r4,zero,47300 <___vfprintf_internal_r+0x20c0>
   471f0:	9480004c 	andi	r18,r18,1
   471f4:	9000421e 	bne	r18,zero,47300 <___vfprintf_internal_r+0x20c0>
   471f8:	1805883a 	mov	r2,r3
   471fc:	18007016 	blt	r3,zero,473c0 <___vfprintf_internal_r+0x2180>
   47200:	d8c03217 	ldw	r3,200(sp)
   47204:	d8c02e15 	stw	r3,184(sp)
   47208:	003e0206 	br	46a14 <__alt_data_end+0xfffc6a14>
   4720c:	df0022c4 	addi	fp,sp,139
   47210:	dc002915 	stw	r16,164(sp)
   47214:	4027883a 	mov	r19,r8
   47218:	e021883a 	mov	r16,fp
   4721c:	b009883a 	mov	r4,r22
   47220:	01400284 	movi	r5,10
   47224:	004309c0 	call	4309c <__modsi3>
   47228:	10800c04 	addi	r2,r2,48
   4722c:	843fffc4 	addi	r16,r16,-1
   47230:	b009883a 	mov	r4,r22
   47234:	01400284 	movi	r5,10
   47238:	80800005 	stb	r2,0(r16)
   4723c:	00430180 	call	43018 <__divsi3>
   47240:	102d883a 	mov	r22,r2
   47244:	00800244 	movi	r2,9
   47248:	15bff416 	blt	r2,r22,4721c <__alt_data_end+0xfffc721c>
   4724c:	9811883a 	mov	r8,r19
   47250:	b0800c04 	addi	r2,r22,48
   47254:	8027883a 	mov	r19,r16
   47258:	997fffc4 	addi	r5,r19,-1
   4725c:	98bfffc5 	stb	r2,-1(r19)
   47260:	dc002917 	ldw	r16,164(sp)
   47264:	2f006a2e 	bgeu	r5,fp,47410 <___vfprintf_internal_r+0x21d0>
   47268:	d9c02384 	addi	r7,sp,142
   4726c:	3ccfc83a 	sub	r7,r7,r19
   47270:	d9002344 	addi	r4,sp,141
   47274:	e1cf883a 	add	r7,fp,r7
   47278:	00000106 	br	47280 <___vfprintf_internal_r+0x2040>
   4727c:	28800003 	ldbu	r2,0(r5)
   47280:	20800005 	stb	r2,0(r4)
   47284:	21000044 	addi	r4,r4,1
   47288:	29400044 	addi	r5,r5,1
   4728c:	393ffb1e 	bne	r7,r4,4727c <__alt_data_end+0xfffc727c>
   47290:	d8802304 	addi	r2,sp,140
   47294:	14c5c83a 	sub	r2,r2,r19
   47298:	d8c02344 	addi	r3,sp,141
   4729c:	1885883a 	add	r2,r3,r2
   472a0:	003f7006 	br	47064 <__alt_data_end+0xfffc7064>
   472a4:	0005883a 	mov	r2,zero
   472a8:	003f0f06 	br	46ee8 <__alt_data_end+0xfffc6ee8>
   472ac:	d8c03217 	ldw	r3,200(sp)
   472b0:	18c00044 	addi	r3,r3,1
   472b4:	d8c02e15 	stw	r3,184(sp)
   472b8:	1805883a 	mov	r2,r3
   472bc:	183fb20e 	bge	r3,zero,47188 <__alt_data_end+0xfffc7188>
   472c0:	0005883a 	mov	r2,zero
   472c4:	003fb006 	br	47188 <__alt_data_end+0xfffc7188>
   472c8:	d9003617 	ldw	r4,216(sp)
   472cc:	000d883a 	mov	r6,zero
   472d0:	000f883a 	mov	r7,zero
   472d4:	980b883a 	mov	r5,r19
   472d8:	d8c03c15 	stw	r3,240(sp)
   472dc:	da003d15 	stw	r8,244(sp)
   472e0:	0043a780 	call	43a78 <__eqdf2>
   472e4:	d8c03c17 	ldw	r3,240(sp)
   472e8:	da003d17 	ldw	r8,244(sp)
   472ec:	103f9826 	beq	r2,zero,47150 <__alt_data_end+0xfffc7150>
   472f0:	00800044 	movi	r2,1
   472f4:	10c7c83a 	sub	r3,r2,r3
   472f8:	d8c02615 	stw	r3,152(sp)
   472fc:	003f9506 	br	47154 <__alt_data_end+0xfffc7154>
   47300:	d9002917 	ldw	r4,164(sp)
   47304:	d8c03217 	ldw	r3,200(sp)
   47308:	20800044 	addi	r2,r4,1
   4730c:	1885883a 	add	r2,r3,r2
   47310:	d8802e15 	stw	r2,184(sp)
   47314:	103dbf0e 	bge	r2,zero,46a14 <__alt_data_end+0xfffc6a14>
   47318:	0005883a 	mov	r2,zero
   4731c:	003dbd06 	br	46a14 <__alt_data_end+0xfffc6a14>
   47320:	2000211e 	bne	r4,zero,473a8 <___vfprintf_internal_r+0x2168>
   47324:	9480004c 	andi	r18,r18,1
   47328:	90001f1e 	bne	r18,zero,473a8 <___vfprintf_internal_r+0x2168>
   4732c:	00800044 	movi	r2,1
   47330:	d8802e15 	stw	r2,184(sp)
   47334:	003db706 	br	46a14 <__alt_data_end+0xfffc6a14>
   47338:	00800b44 	movi	r2,45
   4733c:	05adc83a 	sub	r22,zero,r22
   47340:	d8802305 	stb	r2,140(sp)
   47344:	003f3f06 	br	47044 <__alt_data_end+0xfffc7044>
   47348:	0005883a 	mov	r2,zero
   4734c:	003f5206 	br	47098 <__alt_data_end+0xfffc7098>
   47350:	90a4703a 	and	r18,r18,r2
   47354:	903f4e26 	beq	r18,zero,47090 <__alt_data_end+0xfffc7090>
   47358:	003f4a06 	br	47084 <__alt_data_end+0xfffc7084>
   4735c:	00800084 	movi	r2,2
   47360:	10c5c83a 	sub	r2,r2,r3
   47364:	003f8406 	br	47178 <__alt_data_end+0xfffc7178>
   47368:	d8802d17 	ldw	r2,180(sp)
   4736c:	d9002d17 	ldw	r4,180(sp)
   47370:	ac400043 	ldbu	r17,1(r21)
   47374:	10800017 	ldw	r2,0(r2)
   47378:	582b883a 	mov	r21,r11
   4737c:	d8802915 	stw	r2,164(sp)
   47380:	20800104 	addi	r2,r4,4
   47384:	d9002917 	ldw	r4,164(sp)
   47388:	d8802d15 	stw	r2,180(sp)
   4738c:	203e7a0e 	bge	r4,zero,46d78 <__alt_data_end+0xfffc6d78>
   47390:	8c403fcc 	andi	r17,r17,255
   47394:	00bfffc4 	movi	r2,-1
   47398:	8c40201c 	xori	r17,r17,128
   4739c:	d8802915 	stw	r2,164(sp)
   473a0:	8c7fe004 	addi	r17,r17,-128
   473a4:	00380706 	br	453c4 <__alt_data_end+0xfffc53c4>
   473a8:	d8c02917 	ldw	r3,164(sp)
   473ac:	18c00084 	addi	r3,r3,2
   473b0:	d8c02e15 	stw	r3,184(sp)
   473b4:	1805883a 	mov	r2,r3
   473b8:	183d960e 	bge	r3,zero,46a14 <__alt_data_end+0xfffc6a14>
   473bc:	003fd606 	br	47318 <__alt_data_end+0xfffc7318>
   473c0:	0005883a 	mov	r2,zero
   473c4:	003f8e06 	br	47200 <__alt_data_end+0xfffc7200>
   473c8:	9080004c 	andi	r2,r18,1
   473cc:	103f811e 	bne	r2,zero,471d4 <__alt_data_end+0xfffc71d4>
   473d0:	d8802117 	ldw	r2,132(sp)
   473d4:	1405c83a 	sub	r2,r2,r16
   473d8:	d8803315 	stw	r2,204(sp)
   473dc:	b47ef326 	beq	r22,r17,46fac <__alt_data_end+0xfffc6fac>
   473e0:	dd802617 	ldw	r22,152(sp)
   473e4:	003f1106 	br	4702c <__alt_data_end+0xfffc702c>
   473e8:	d9c02785 	stb	r7,158(sp)
   473ec:	00390406 	br	45800 <__alt_data_end+0xfffc5800>
   473f0:	d9c02785 	stb	r7,158(sp)
   473f4:	0038d306 	br	45744 <__alt_data_end+0xfffc5744>
   473f8:	d9c02785 	stb	r7,158(sp)
   473fc:	003a6106 	br	45d84 <__alt_data_end+0xfffc5d84>
   47400:	d9c02785 	stb	r7,158(sp)
   47404:	003af806 	br	45fe8 <__alt_data_end+0xfffc5fe8>
   47408:	0005883a 	mov	r2,zero
   4740c:	003d7e06 	br	46a08 <__alt_data_end+0xfffc6a08>
   47410:	d8802344 	addi	r2,sp,141
   47414:	003f1306 	br	47064 <__alt_data_end+0xfffc7064>
   47418:	d9c02785 	stb	r7,158(sp)
   4741c:	00392306 	br	458ac <__alt_data_end+0xfffc58ac>
   47420:	d9c02785 	stb	r7,158(sp)
   47424:	003aa906 	br	45ecc <__alt_data_end+0xfffc5ecc>
   47428:	d9c02785 	stb	r7,158(sp)
   4742c:	003a3d06 	br	45d24 <__alt_data_end+0xfffc5d24>
   47430:	d9c02785 	stb	r7,158(sp)
   47434:	003aca06 	br	45f60 <__alt_data_end+0xfffc5f60>

00047438 <__vfprintf_internal>:
   47438:	00800174 	movhi	r2,5
   4743c:	10915604 	addi	r2,r2,17752
   47440:	300f883a 	mov	r7,r6
   47444:	280d883a 	mov	r6,r5
   47448:	200b883a 	mov	r5,r4
   4744c:	11000017 	ldw	r4,0(r2)
   47450:	00452401 	jmpi	45240 <___vfprintf_internal_r>

00047454 <__sbprintf>:
   47454:	2880030b 	ldhu	r2,12(r5)
   47458:	2ac01917 	ldw	r11,100(r5)
   4745c:	2a80038b 	ldhu	r10,14(r5)
   47460:	2a400717 	ldw	r9,28(r5)
   47464:	2a000917 	ldw	r8,36(r5)
   47468:	defee204 	addi	sp,sp,-1144
   4746c:	00c10004 	movi	r3,1024
   47470:	dc011a15 	stw	r16,1128(sp)
   47474:	10bfff4c 	andi	r2,r2,65533
   47478:	2821883a 	mov	r16,r5
   4747c:	d8cb883a 	add	r5,sp,r3
   47480:	dc811c15 	stw	r18,1136(sp)
   47484:	dc411b15 	stw	r17,1132(sp)
   47488:	dfc11d15 	stw	ra,1140(sp)
   4748c:	2025883a 	mov	r18,r4
   47490:	d881030d 	sth	r2,1036(sp)
   47494:	dac11915 	stw	r11,1124(sp)
   47498:	da81038d 	sth	r10,1038(sp)
   4749c:	da410715 	stw	r9,1052(sp)
   474a0:	da010915 	stw	r8,1060(sp)
   474a4:	dec10015 	stw	sp,1024(sp)
   474a8:	dec10415 	stw	sp,1040(sp)
   474ac:	d8c10215 	stw	r3,1032(sp)
   474b0:	d8c10515 	stw	r3,1044(sp)
   474b4:	d8010615 	stw	zero,1048(sp)
   474b8:	00452400 	call	45240 <___vfprintf_internal_r>
   474bc:	1023883a 	mov	r17,r2
   474c0:	10000416 	blt	r2,zero,474d4 <__sbprintf+0x80>
   474c4:	d9410004 	addi	r5,sp,1024
   474c8:	9009883a 	mov	r4,r18
   474cc:	00491080 	call	49108 <_fflush_r>
   474d0:	10000d1e 	bne	r2,zero,47508 <__sbprintf+0xb4>
   474d4:	d881030b 	ldhu	r2,1036(sp)
   474d8:	1080100c 	andi	r2,r2,64
   474dc:	10000326 	beq	r2,zero,474ec <__sbprintf+0x98>
   474e0:	8080030b 	ldhu	r2,12(r16)
   474e4:	10801014 	ori	r2,r2,64
   474e8:	8080030d 	sth	r2,12(r16)
   474ec:	8805883a 	mov	r2,r17
   474f0:	dfc11d17 	ldw	ra,1140(sp)
   474f4:	dc811c17 	ldw	r18,1136(sp)
   474f8:	dc411b17 	ldw	r17,1132(sp)
   474fc:	dc011a17 	ldw	r16,1128(sp)
   47500:	dec11e04 	addi	sp,sp,1144
   47504:	f800283a 	ret
   47508:	047fffc4 	movi	r17,-1
   4750c:	003ff106 	br	474d4 <__alt_data_end+0xfffc74d4>

00047510 <__swsetup_r>:
   47510:	00800174 	movhi	r2,5
   47514:	defffd04 	addi	sp,sp,-12
   47518:	10915604 	addi	r2,r2,17752
   4751c:	dc400115 	stw	r17,4(sp)
   47520:	2023883a 	mov	r17,r4
   47524:	11000017 	ldw	r4,0(r2)
   47528:	dc000015 	stw	r16,0(sp)
   4752c:	dfc00215 	stw	ra,8(sp)
   47530:	2821883a 	mov	r16,r5
   47534:	20000226 	beq	r4,zero,47540 <__swsetup_r+0x30>
   47538:	20800e17 	ldw	r2,56(r4)
   4753c:	10003126 	beq	r2,zero,47604 <__swsetup_r+0xf4>
   47540:	8080030b 	ldhu	r2,12(r16)
   47544:	10c0020c 	andi	r3,r2,8
   47548:	1009883a 	mov	r4,r2
   4754c:	18000f26 	beq	r3,zero,4758c <__swsetup_r+0x7c>
   47550:	80c00417 	ldw	r3,16(r16)
   47554:	18001526 	beq	r3,zero,475ac <__swsetup_r+0x9c>
   47558:	1100004c 	andi	r4,r2,1
   4755c:	20001c1e 	bne	r4,zero,475d0 <__swsetup_r+0xc0>
   47560:	1080008c 	andi	r2,r2,2
   47564:	1000291e 	bne	r2,zero,4760c <__swsetup_r+0xfc>
   47568:	80800517 	ldw	r2,20(r16)
   4756c:	80800215 	stw	r2,8(r16)
   47570:	18001c26 	beq	r3,zero,475e4 <__swsetup_r+0xd4>
   47574:	0005883a 	mov	r2,zero
   47578:	dfc00217 	ldw	ra,8(sp)
   4757c:	dc400117 	ldw	r17,4(sp)
   47580:	dc000017 	ldw	r16,0(sp)
   47584:	dec00304 	addi	sp,sp,12
   47588:	f800283a 	ret
   4758c:	2080040c 	andi	r2,r4,16
   47590:	10002e26 	beq	r2,zero,4764c <__swsetup_r+0x13c>
   47594:	2080010c 	andi	r2,r4,4
   47598:	10001e1e 	bne	r2,zero,47614 <__swsetup_r+0x104>
   4759c:	80c00417 	ldw	r3,16(r16)
   475a0:	20800214 	ori	r2,r4,8
   475a4:	8080030d 	sth	r2,12(r16)
   475a8:	183feb1e 	bne	r3,zero,47558 <__alt_data_end+0xfffc7558>
   475ac:	1100a00c 	andi	r4,r2,640
   475b0:	01408004 	movi	r5,512
   475b4:	217fe826 	beq	r4,r5,47558 <__alt_data_end+0xfffc7558>
   475b8:	800b883a 	mov	r5,r16
   475bc:	8809883a 	mov	r4,r17
   475c0:	004a0880 	call	4a088 <__smakebuf_r>
   475c4:	8080030b 	ldhu	r2,12(r16)
   475c8:	80c00417 	ldw	r3,16(r16)
   475cc:	003fe206 	br	47558 <__alt_data_end+0xfffc7558>
   475d0:	80800517 	ldw	r2,20(r16)
   475d4:	80000215 	stw	zero,8(r16)
   475d8:	0085c83a 	sub	r2,zero,r2
   475dc:	80800615 	stw	r2,24(r16)
   475e0:	183fe41e 	bne	r3,zero,47574 <__alt_data_end+0xfffc7574>
   475e4:	80c0030b 	ldhu	r3,12(r16)
   475e8:	0005883a 	mov	r2,zero
   475ec:	1900200c 	andi	r4,r3,128
   475f0:	203fe126 	beq	r4,zero,47578 <__alt_data_end+0xfffc7578>
   475f4:	18c01014 	ori	r3,r3,64
   475f8:	80c0030d 	sth	r3,12(r16)
   475fc:	00bfffc4 	movi	r2,-1
   47600:	003fdd06 	br	47578 <__alt_data_end+0xfffc7578>
   47604:	00494e40 	call	494e4 <__sinit>
   47608:	003fcd06 	br	47540 <__alt_data_end+0xfffc7540>
   4760c:	0005883a 	mov	r2,zero
   47610:	003fd606 	br	4756c <__alt_data_end+0xfffc756c>
   47614:	81400c17 	ldw	r5,48(r16)
   47618:	28000626 	beq	r5,zero,47634 <__swsetup_r+0x124>
   4761c:	80801004 	addi	r2,r16,64
   47620:	28800326 	beq	r5,r2,47630 <__swsetup_r+0x120>
   47624:	8809883a 	mov	r4,r17
   47628:	00496580 	call	49658 <_free_r>
   4762c:	8100030b 	ldhu	r4,12(r16)
   47630:	80000c15 	stw	zero,48(r16)
   47634:	80c00417 	ldw	r3,16(r16)
   47638:	00bff6c4 	movi	r2,-37
   4763c:	1108703a 	and	r4,r2,r4
   47640:	80000115 	stw	zero,4(r16)
   47644:	80c00015 	stw	r3,0(r16)
   47648:	003fd506 	br	475a0 <__alt_data_end+0xfffc75a0>
   4764c:	00800244 	movi	r2,9
   47650:	88800015 	stw	r2,0(r17)
   47654:	20801014 	ori	r2,r4,64
   47658:	8080030d 	sth	r2,12(r16)
   4765c:	00bfffc4 	movi	r2,-1
   47660:	003fc506 	br	47578 <__alt_data_end+0xfffc7578>

00047664 <quorem>:
   47664:	defff704 	addi	sp,sp,-36
   47668:	dc800215 	stw	r18,8(sp)
   4766c:	20800417 	ldw	r2,16(r4)
   47670:	2c800417 	ldw	r18,16(r5)
   47674:	dfc00815 	stw	ra,32(sp)
   47678:	ddc00715 	stw	r23,28(sp)
   4767c:	dd800615 	stw	r22,24(sp)
   47680:	dd400515 	stw	r21,20(sp)
   47684:	dd000415 	stw	r20,16(sp)
   47688:	dcc00315 	stw	r19,12(sp)
   4768c:	dc400115 	stw	r17,4(sp)
   47690:	dc000015 	stw	r16,0(sp)
   47694:	14807116 	blt	r2,r18,4785c <quorem+0x1f8>
   47698:	94bfffc4 	addi	r18,r18,-1
   4769c:	94ad883a 	add	r22,r18,r18
   476a0:	b5ad883a 	add	r22,r22,r22
   476a4:	2c400504 	addi	r17,r5,20
   476a8:	8da9883a 	add	r20,r17,r22
   476ac:	25400504 	addi	r21,r4,20
   476b0:	282f883a 	mov	r23,r5
   476b4:	adad883a 	add	r22,r21,r22
   476b8:	a1400017 	ldw	r5,0(r20)
   476bc:	2021883a 	mov	r16,r4
   476c0:	b1000017 	ldw	r4,0(r22)
   476c4:	29400044 	addi	r5,r5,1
   476c8:	00431100 	call	43110 <__udivsi3>
   476cc:	1027883a 	mov	r19,r2
   476d0:	10002c26 	beq	r2,zero,47784 <quorem+0x120>
   476d4:	a813883a 	mov	r9,r21
   476d8:	880b883a 	mov	r5,r17
   476dc:	0009883a 	mov	r4,zero
   476e0:	000d883a 	mov	r6,zero
   476e4:	2a000017 	ldw	r8,0(r5)
   476e8:	49c00017 	ldw	r7,0(r9)
   476ec:	29400104 	addi	r5,r5,4
   476f0:	40bfffcc 	andi	r2,r8,65535
   476f4:	14c5383a 	mul	r2,r2,r19
   476f8:	4010d43a 	srli	r8,r8,16
   476fc:	38ffffcc 	andi	r3,r7,65535
   47700:	1105883a 	add	r2,r2,r4
   47704:	1008d43a 	srli	r4,r2,16
   47708:	44d1383a 	mul	r8,r8,r19
   4770c:	198d883a 	add	r6,r3,r6
   47710:	10ffffcc 	andi	r3,r2,65535
   47714:	30c7c83a 	sub	r3,r6,r3
   47718:	380ed43a 	srli	r7,r7,16
   4771c:	4105883a 	add	r2,r8,r4
   47720:	180dd43a 	srai	r6,r3,16
   47724:	113fffcc 	andi	r4,r2,65535
   47728:	390fc83a 	sub	r7,r7,r4
   4772c:	398d883a 	add	r6,r7,r6
   47730:	300e943a 	slli	r7,r6,16
   47734:	18ffffcc 	andi	r3,r3,65535
   47738:	1008d43a 	srli	r4,r2,16
   4773c:	38ceb03a 	or	r7,r7,r3
   47740:	49c00015 	stw	r7,0(r9)
   47744:	300dd43a 	srai	r6,r6,16
   47748:	4a400104 	addi	r9,r9,4
   4774c:	a17fe52e 	bgeu	r20,r5,476e4 <__alt_data_end+0xfffc76e4>
   47750:	b0800017 	ldw	r2,0(r22)
   47754:	10000b1e 	bne	r2,zero,47784 <quorem+0x120>
   47758:	b0bfff04 	addi	r2,r22,-4
   4775c:	a880082e 	bgeu	r21,r2,47780 <quorem+0x11c>
   47760:	b0ffff17 	ldw	r3,-4(r22)
   47764:	18000326 	beq	r3,zero,47774 <quorem+0x110>
   47768:	00000506 	br	47780 <quorem+0x11c>
   4776c:	10c00017 	ldw	r3,0(r2)
   47770:	1800031e 	bne	r3,zero,47780 <quorem+0x11c>
   47774:	10bfff04 	addi	r2,r2,-4
   47778:	94bfffc4 	addi	r18,r18,-1
   4777c:	a8bffb36 	bltu	r21,r2,4776c <__alt_data_end+0xfffc776c>
   47780:	84800415 	stw	r18,16(r16)
   47784:	b80b883a 	mov	r5,r23
   47788:	8009883a 	mov	r4,r16
   4778c:	004b7c80 	call	4b7c8 <__mcmp>
   47790:	10002616 	blt	r2,zero,4782c <quorem+0x1c8>
   47794:	9cc00044 	addi	r19,r19,1
   47798:	a805883a 	mov	r2,r21
   4779c:	000b883a 	mov	r5,zero
   477a0:	11000017 	ldw	r4,0(r2)
   477a4:	89800017 	ldw	r6,0(r17)
   477a8:	10800104 	addi	r2,r2,4
   477ac:	20ffffcc 	andi	r3,r4,65535
   477b0:	194b883a 	add	r5,r3,r5
   477b4:	30ffffcc 	andi	r3,r6,65535
   477b8:	28c7c83a 	sub	r3,r5,r3
   477bc:	300cd43a 	srli	r6,r6,16
   477c0:	2008d43a 	srli	r4,r4,16
   477c4:	180bd43a 	srai	r5,r3,16
   477c8:	18ffffcc 	andi	r3,r3,65535
   477cc:	2189c83a 	sub	r4,r4,r6
   477d0:	2149883a 	add	r4,r4,r5
   477d4:	200c943a 	slli	r6,r4,16
   477d8:	8c400104 	addi	r17,r17,4
   477dc:	200bd43a 	srai	r5,r4,16
   477e0:	30c6b03a 	or	r3,r6,r3
   477e4:	10ffff15 	stw	r3,-4(r2)
   477e8:	a47fed2e 	bgeu	r20,r17,477a0 <__alt_data_end+0xfffc77a0>
   477ec:	9485883a 	add	r2,r18,r18
   477f0:	1085883a 	add	r2,r2,r2
   477f4:	a887883a 	add	r3,r21,r2
   477f8:	18800017 	ldw	r2,0(r3)
   477fc:	10000b1e 	bne	r2,zero,4782c <quorem+0x1c8>
   47800:	18bfff04 	addi	r2,r3,-4
   47804:	a880082e 	bgeu	r21,r2,47828 <quorem+0x1c4>
   47808:	18ffff17 	ldw	r3,-4(r3)
   4780c:	18000326 	beq	r3,zero,4781c <quorem+0x1b8>
   47810:	00000506 	br	47828 <quorem+0x1c4>
   47814:	10c00017 	ldw	r3,0(r2)
   47818:	1800031e 	bne	r3,zero,47828 <quorem+0x1c4>
   4781c:	10bfff04 	addi	r2,r2,-4
   47820:	94bfffc4 	addi	r18,r18,-1
   47824:	a8bffb36 	bltu	r21,r2,47814 <__alt_data_end+0xfffc7814>
   47828:	84800415 	stw	r18,16(r16)
   4782c:	9805883a 	mov	r2,r19
   47830:	dfc00817 	ldw	ra,32(sp)
   47834:	ddc00717 	ldw	r23,28(sp)
   47838:	dd800617 	ldw	r22,24(sp)
   4783c:	dd400517 	ldw	r21,20(sp)
   47840:	dd000417 	ldw	r20,16(sp)
   47844:	dcc00317 	ldw	r19,12(sp)
   47848:	dc800217 	ldw	r18,8(sp)
   4784c:	dc400117 	ldw	r17,4(sp)
   47850:	dc000017 	ldw	r16,0(sp)
   47854:	dec00904 	addi	sp,sp,36
   47858:	f800283a 	ret
   4785c:	0005883a 	mov	r2,zero
   47860:	003ff306 	br	47830 <__alt_data_end+0xfffc7830>

00047864 <_dtoa_r>:
   47864:	20801017 	ldw	r2,64(r4)
   47868:	deffde04 	addi	sp,sp,-136
   4786c:	df002015 	stw	fp,128(sp)
   47870:	dcc01b15 	stw	r19,108(sp)
   47874:	dc801a15 	stw	r18,104(sp)
   47878:	dc401915 	stw	r17,100(sp)
   4787c:	dc001815 	stw	r16,96(sp)
   47880:	dfc02115 	stw	ra,132(sp)
   47884:	ddc01f15 	stw	r23,124(sp)
   47888:	dd801e15 	stw	r22,120(sp)
   4788c:	dd401d15 	stw	r21,116(sp)
   47890:	dd001c15 	stw	r20,112(sp)
   47894:	d9c00315 	stw	r7,12(sp)
   47898:	2039883a 	mov	fp,r4
   4789c:	3023883a 	mov	r17,r6
   478a0:	2825883a 	mov	r18,r5
   478a4:	dc002417 	ldw	r16,144(sp)
   478a8:	3027883a 	mov	r19,r6
   478ac:	10000826 	beq	r2,zero,478d0 <_dtoa_r+0x6c>
   478b0:	21801117 	ldw	r6,68(r4)
   478b4:	00c00044 	movi	r3,1
   478b8:	100b883a 	mov	r5,r2
   478bc:	1986983a 	sll	r3,r3,r6
   478c0:	11800115 	stw	r6,4(r2)
   478c4:	10c00215 	stw	r3,8(r2)
   478c8:	004afa80 	call	4afa8 <_Bfree>
   478cc:	e0001015 	stw	zero,64(fp)
   478d0:	88002e16 	blt	r17,zero,4798c <_dtoa_r+0x128>
   478d4:	80000015 	stw	zero,0(r16)
   478d8:	889ffc2c 	andhi	r2,r17,32752
   478dc:	00dffc34 	movhi	r3,32752
   478e0:	10c01c26 	beq	r2,r3,47954 <_dtoa_r+0xf0>
   478e4:	000d883a 	mov	r6,zero
   478e8:	000f883a 	mov	r7,zero
   478ec:	9009883a 	mov	r4,r18
   478f0:	980b883a 	mov	r5,r19
   478f4:	0043a780 	call	43a78 <__eqdf2>
   478f8:	10002b1e 	bne	r2,zero,479a8 <_dtoa_r+0x144>
   478fc:	d9c02317 	ldw	r7,140(sp)
   47900:	00800044 	movi	r2,1
   47904:	38800015 	stw	r2,0(r7)
   47908:	d8802517 	ldw	r2,148(sp)
   4790c:	10019e26 	beq	r2,zero,47f88 <_dtoa_r+0x724>
   47910:	d8c02517 	ldw	r3,148(sp)
   47914:	00800174 	movhi	r2,5
   47918:	108a3b44 	addi	r2,r2,10477
   4791c:	18800015 	stw	r2,0(r3)
   47920:	10bfffc4 	addi	r2,r2,-1
   47924:	dfc02117 	ldw	ra,132(sp)
   47928:	df002017 	ldw	fp,128(sp)
   4792c:	ddc01f17 	ldw	r23,124(sp)
   47930:	dd801e17 	ldw	r22,120(sp)
   47934:	dd401d17 	ldw	r21,116(sp)
   47938:	dd001c17 	ldw	r20,112(sp)
   4793c:	dcc01b17 	ldw	r19,108(sp)
   47940:	dc801a17 	ldw	r18,104(sp)
   47944:	dc401917 	ldw	r17,100(sp)
   47948:	dc001817 	ldw	r16,96(sp)
   4794c:	dec02204 	addi	sp,sp,136
   47950:	f800283a 	ret
   47954:	d8c02317 	ldw	r3,140(sp)
   47958:	0089c3c4 	movi	r2,9999
   4795c:	18800015 	stw	r2,0(r3)
   47960:	90017726 	beq	r18,zero,47f40 <_dtoa_r+0x6dc>
   47964:	00800174 	movhi	r2,5
   47968:	108a4704 	addi	r2,r2,10524
   4796c:	d9002517 	ldw	r4,148(sp)
   47970:	203fec26 	beq	r4,zero,47924 <__alt_data_end+0xfffc7924>
   47974:	10c000c7 	ldb	r3,3(r2)
   47978:	1801781e 	bne	r3,zero,47f5c <_dtoa_r+0x6f8>
   4797c:	10c000c4 	addi	r3,r2,3
   47980:	d9802517 	ldw	r6,148(sp)
   47984:	30c00015 	stw	r3,0(r6)
   47988:	003fe606 	br	47924 <__alt_data_end+0xfffc7924>
   4798c:	04e00034 	movhi	r19,32768
   47990:	9cffffc4 	addi	r19,r19,-1
   47994:	00800044 	movi	r2,1
   47998:	8ce6703a 	and	r19,r17,r19
   4799c:	80800015 	stw	r2,0(r16)
   479a0:	9823883a 	mov	r17,r19
   479a4:	003fcc06 	br	478d8 <__alt_data_end+0xfffc78d8>
   479a8:	d8800204 	addi	r2,sp,8
   479ac:	d8800015 	stw	r2,0(sp)
   479b0:	d9c00104 	addi	r7,sp,4
   479b4:	900b883a 	mov	r5,r18
   479b8:	980d883a 	mov	r6,r19
   479bc:	e009883a 	mov	r4,fp
   479c0:	8820d53a 	srli	r16,r17,20
   479c4:	004bb940 	call	4bb94 <__d2b>
   479c8:	d8800915 	stw	r2,36(sp)
   479cc:	8001651e 	bne	r16,zero,47f64 <_dtoa_r+0x700>
   479d0:	dd800217 	ldw	r22,8(sp)
   479d4:	dc000117 	ldw	r16,4(sp)
   479d8:	00800804 	movi	r2,32
   479dc:	b421883a 	add	r16,r22,r16
   479e0:	80c10c84 	addi	r3,r16,1074
   479e4:	10c2d10e 	bge	r2,r3,4852c <_dtoa_r+0xcc8>
   479e8:	00801004 	movi	r2,64
   479ec:	81010484 	addi	r4,r16,1042
   479f0:	10c7c83a 	sub	r3,r2,r3
   479f4:	9108d83a 	srl	r4,r18,r4
   479f8:	88e2983a 	sll	r17,r17,r3
   479fc:	2448b03a 	or	r4,r4,r17
   47a00:	004fb480 	call	4fb48 <__floatunsidf>
   47a04:	017f8434 	movhi	r5,65040
   47a08:	01800044 	movi	r6,1
   47a0c:	1009883a 	mov	r4,r2
   47a10:	194b883a 	add	r5,r3,r5
   47a14:	843fffc4 	addi	r16,r16,-1
   47a18:	d9801115 	stw	r6,68(sp)
   47a1c:	000d883a 	mov	r6,zero
   47a20:	01cffe34 	movhi	r7,16376
   47a24:	00442f40 	call	442f4 <__subdf3>
   47a28:	0198dbf4 	movhi	r6,25455
   47a2c:	01cff4f4 	movhi	r7,16339
   47a30:	3190d844 	addi	r6,r6,17249
   47a34:	39e1e9c4 	addi	r7,r7,-30809
   47a38:	1009883a 	mov	r4,r2
   47a3c:	180b883a 	mov	r5,r3
   47a40:	0043bdc0 	call	43bdc <__muldf3>
   47a44:	01a2d874 	movhi	r6,35681
   47a48:	01cff1f4 	movhi	r7,16327
   47a4c:	31b22cc4 	addi	r6,r6,-14157
   47a50:	39e28a04 	addi	r7,r7,-30168
   47a54:	180b883a 	mov	r5,r3
   47a58:	1009883a 	mov	r4,r2
   47a5c:	00431cc0 	call	431cc <__adddf3>
   47a60:	8009883a 	mov	r4,r16
   47a64:	1029883a 	mov	r20,r2
   47a68:	1823883a 	mov	r17,r3
   47a6c:	0044c700 	call	44c70 <__floatsidf>
   47a70:	019427f4 	movhi	r6,20639
   47a74:	01cff4f4 	movhi	r7,16339
   47a78:	319e7ec4 	addi	r6,r6,31227
   47a7c:	39d104c4 	addi	r7,r7,17427
   47a80:	1009883a 	mov	r4,r2
   47a84:	180b883a 	mov	r5,r3
   47a88:	0043bdc0 	call	43bdc <__muldf3>
   47a8c:	100d883a 	mov	r6,r2
   47a90:	180f883a 	mov	r7,r3
   47a94:	a009883a 	mov	r4,r20
   47a98:	880b883a 	mov	r5,r17
   47a9c:	00431cc0 	call	431cc <__adddf3>
   47aa0:	1009883a 	mov	r4,r2
   47aa4:	180b883a 	mov	r5,r3
   47aa8:	1029883a 	mov	r20,r2
   47aac:	1823883a 	mov	r17,r3
   47ab0:	0044bf00 	call	44bf0 <__fixdfsi>
   47ab4:	000d883a 	mov	r6,zero
   47ab8:	000f883a 	mov	r7,zero
   47abc:	a009883a 	mov	r4,r20
   47ac0:	880b883a 	mov	r5,r17
   47ac4:	d8800515 	stw	r2,20(sp)
   47ac8:	004fa540 	call	4fa54 <__ledf2>
   47acc:	10028716 	blt	r2,zero,484ec <_dtoa_r+0xc88>
   47ad0:	d8c00517 	ldw	r3,20(sp)
   47ad4:	00800584 	movi	r2,22
   47ad8:	10c27536 	bltu	r2,r3,484b0 <_dtoa_r+0xc4c>
   47adc:	180490fa 	slli	r2,r3,3
   47ae0:	00c00174 	movhi	r3,5
   47ae4:	18ca6304 	addi	r3,r3,10636
   47ae8:	1885883a 	add	r2,r3,r2
   47aec:	11000017 	ldw	r4,0(r2)
   47af0:	11400117 	ldw	r5,4(r2)
   47af4:	900d883a 	mov	r6,r18
   47af8:	980f883a 	mov	r7,r19
   47afc:	0043b000 	call	43b00 <__gedf2>
   47b00:	00828d0e 	bge	zero,r2,48538 <_dtoa_r+0xcd4>
   47b04:	d9000517 	ldw	r4,20(sp)
   47b08:	d8000e15 	stw	zero,56(sp)
   47b0c:	213fffc4 	addi	r4,r4,-1
   47b10:	d9000515 	stw	r4,20(sp)
   47b14:	b42dc83a 	sub	r22,r22,r16
   47b18:	b5bfffc4 	addi	r22,r22,-1
   47b1c:	b0026f16 	blt	r22,zero,484dc <_dtoa_r+0xc78>
   47b20:	d8000815 	stw	zero,32(sp)
   47b24:	d9c00517 	ldw	r7,20(sp)
   47b28:	38026416 	blt	r7,zero,484bc <_dtoa_r+0xc58>
   47b2c:	b1ed883a 	add	r22,r22,r7
   47b30:	d9c00d15 	stw	r7,52(sp)
   47b34:	d8000a15 	stw	zero,40(sp)
   47b38:	d9800317 	ldw	r6,12(sp)
   47b3c:	00800244 	movi	r2,9
   47b40:	11811436 	bltu	r2,r6,47f94 <_dtoa_r+0x730>
   47b44:	00800144 	movi	r2,5
   47b48:	1184e10e 	bge	r2,r6,48ed0 <_dtoa_r+0x166c>
   47b4c:	31bfff04 	addi	r6,r6,-4
   47b50:	d9800315 	stw	r6,12(sp)
   47b54:	0023883a 	mov	r17,zero
   47b58:	d9800317 	ldw	r6,12(sp)
   47b5c:	008000c4 	movi	r2,3
   47b60:	30836726 	beq	r6,r2,48900 <_dtoa_r+0x109c>
   47b64:	1183410e 	bge	r2,r6,4886c <_dtoa_r+0x1008>
   47b68:	d9c00317 	ldw	r7,12(sp)
   47b6c:	00800104 	movi	r2,4
   47b70:	38827c26 	beq	r7,r2,48564 <_dtoa_r+0xd00>
   47b74:	00800144 	movi	r2,5
   47b78:	3884c41e 	bne	r7,r2,48e8c <_dtoa_r+0x1628>
   47b7c:	00800044 	movi	r2,1
   47b80:	d8800b15 	stw	r2,44(sp)
   47b84:	d8c00517 	ldw	r3,20(sp)
   47b88:	d9002217 	ldw	r4,136(sp)
   47b8c:	1907883a 	add	r3,r3,r4
   47b90:	19800044 	addi	r6,r3,1
   47b94:	d8c00c15 	stw	r3,48(sp)
   47b98:	d9800615 	stw	r6,24(sp)
   47b9c:	0183a40e 	bge	zero,r6,48a30 <_dtoa_r+0x11cc>
   47ba0:	d9800617 	ldw	r6,24(sp)
   47ba4:	3021883a 	mov	r16,r6
   47ba8:	e0001115 	stw	zero,68(fp)
   47bac:	008005c4 	movi	r2,23
   47bb0:	1184c92e 	bgeu	r2,r6,48ed8 <_dtoa_r+0x1674>
   47bb4:	00c00044 	movi	r3,1
   47bb8:	00800104 	movi	r2,4
   47bbc:	1085883a 	add	r2,r2,r2
   47bc0:	11000504 	addi	r4,r2,20
   47bc4:	180b883a 	mov	r5,r3
   47bc8:	18c00044 	addi	r3,r3,1
   47bcc:	313ffb2e 	bgeu	r6,r4,47bbc <__alt_data_end+0xfffc7bbc>
   47bd0:	e1401115 	stw	r5,68(fp)
   47bd4:	e009883a 	mov	r4,fp
   47bd8:	004af000 	call	4af00 <_Balloc>
   47bdc:	d8800715 	stw	r2,28(sp)
   47be0:	e0801015 	stw	r2,64(fp)
   47be4:	00800384 	movi	r2,14
   47be8:	1400f736 	bltu	r2,r16,47fc8 <_dtoa_r+0x764>
   47bec:	8800f626 	beq	r17,zero,47fc8 <_dtoa_r+0x764>
   47bf0:	d9c00517 	ldw	r7,20(sp)
   47bf4:	01c39a0e 	bge	zero,r7,48a60 <_dtoa_r+0x11fc>
   47bf8:	388003cc 	andi	r2,r7,15
   47bfc:	100490fa 	slli	r2,r2,3
   47c00:	382bd13a 	srai	r21,r7,4
   47c04:	00c00174 	movhi	r3,5
   47c08:	18ca6304 	addi	r3,r3,10636
   47c0c:	1885883a 	add	r2,r3,r2
   47c10:	a8c0040c 	andi	r3,r21,16
   47c14:	12400017 	ldw	r9,0(r2)
   47c18:	12000117 	ldw	r8,4(r2)
   47c1c:	18037926 	beq	r3,zero,48a04 <_dtoa_r+0x11a0>
   47c20:	00800174 	movhi	r2,5
   47c24:	108a5904 	addi	r2,r2,10596
   47c28:	11800817 	ldw	r6,32(r2)
   47c2c:	11c00917 	ldw	r7,36(r2)
   47c30:	9009883a 	mov	r4,r18
   47c34:	980b883a 	mov	r5,r19
   47c38:	da001715 	stw	r8,92(sp)
   47c3c:	da401615 	stw	r9,88(sp)
   47c40:	004f16c0 	call	4f16c <__divdf3>
   47c44:	da001717 	ldw	r8,92(sp)
   47c48:	da401617 	ldw	r9,88(sp)
   47c4c:	ad4003cc 	andi	r21,r21,15
   47c50:	040000c4 	movi	r16,3
   47c54:	1023883a 	mov	r17,r2
   47c58:	1829883a 	mov	r20,r3
   47c5c:	a8001126 	beq	r21,zero,47ca4 <_dtoa_r+0x440>
   47c60:	05c00174 	movhi	r23,5
   47c64:	bdca5904 	addi	r23,r23,10596
   47c68:	4805883a 	mov	r2,r9
   47c6c:	4007883a 	mov	r3,r8
   47c70:	a980004c 	andi	r6,r21,1
   47c74:	1009883a 	mov	r4,r2
   47c78:	a82bd07a 	srai	r21,r21,1
   47c7c:	180b883a 	mov	r5,r3
   47c80:	30000426 	beq	r6,zero,47c94 <_dtoa_r+0x430>
   47c84:	b9800017 	ldw	r6,0(r23)
   47c88:	b9c00117 	ldw	r7,4(r23)
   47c8c:	84000044 	addi	r16,r16,1
   47c90:	0043bdc0 	call	43bdc <__muldf3>
   47c94:	bdc00204 	addi	r23,r23,8
   47c98:	a83ff51e 	bne	r21,zero,47c70 <__alt_data_end+0xfffc7c70>
   47c9c:	1013883a 	mov	r9,r2
   47ca0:	1811883a 	mov	r8,r3
   47ca4:	480d883a 	mov	r6,r9
   47ca8:	400f883a 	mov	r7,r8
   47cac:	8809883a 	mov	r4,r17
   47cb0:	a00b883a 	mov	r5,r20
   47cb4:	004f16c0 	call	4f16c <__divdf3>
   47cb8:	d8800f15 	stw	r2,60(sp)
   47cbc:	d8c01015 	stw	r3,64(sp)
   47cc0:	d8c00e17 	ldw	r3,56(sp)
   47cc4:	18000626 	beq	r3,zero,47ce0 <_dtoa_r+0x47c>
   47cc8:	d9000f17 	ldw	r4,60(sp)
   47ccc:	d9401017 	ldw	r5,64(sp)
   47cd0:	000d883a 	mov	r6,zero
   47cd4:	01cffc34 	movhi	r7,16368
   47cd8:	004fa540 	call	4fa54 <__ledf2>
   47cdc:	10040b16 	blt	r2,zero,48d0c <_dtoa_r+0x14a8>
   47ce0:	8009883a 	mov	r4,r16
   47ce4:	0044c700 	call	44c70 <__floatsidf>
   47ce8:	d9800f17 	ldw	r6,60(sp)
   47cec:	d9c01017 	ldw	r7,64(sp)
   47cf0:	1009883a 	mov	r4,r2
   47cf4:	180b883a 	mov	r5,r3
   47cf8:	0043bdc0 	call	43bdc <__muldf3>
   47cfc:	000d883a 	mov	r6,zero
   47d00:	01d00734 	movhi	r7,16412
   47d04:	1009883a 	mov	r4,r2
   47d08:	180b883a 	mov	r5,r3
   47d0c:	00431cc0 	call	431cc <__adddf3>
   47d10:	1021883a 	mov	r16,r2
   47d14:	d8800617 	ldw	r2,24(sp)
   47d18:	047f3034 	movhi	r17,64704
   47d1c:	1c63883a 	add	r17,r3,r17
   47d20:	10031826 	beq	r2,zero,48984 <_dtoa_r+0x1120>
   47d24:	d8c00517 	ldw	r3,20(sp)
   47d28:	db000617 	ldw	r12,24(sp)
   47d2c:	d8c01315 	stw	r3,76(sp)
   47d30:	d9000b17 	ldw	r4,44(sp)
   47d34:	20038f26 	beq	r4,zero,48b74 <_dtoa_r+0x1310>
   47d38:	60bfffc4 	addi	r2,r12,-1
   47d3c:	100490fa 	slli	r2,r2,3
   47d40:	00c00174 	movhi	r3,5
   47d44:	18ca6304 	addi	r3,r3,10636
   47d48:	1885883a 	add	r2,r3,r2
   47d4c:	11800017 	ldw	r6,0(r2)
   47d50:	11c00117 	ldw	r7,4(r2)
   47d54:	d8800717 	ldw	r2,28(sp)
   47d58:	0009883a 	mov	r4,zero
   47d5c:	014ff834 	movhi	r5,16352
   47d60:	db001615 	stw	r12,88(sp)
   47d64:	15c00044 	addi	r23,r2,1
   47d68:	004f16c0 	call	4f16c <__divdf3>
   47d6c:	800d883a 	mov	r6,r16
   47d70:	880f883a 	mov	r7,r17
   47d74:	1009883a 	mov	r4,r2
   47d78:	180b883a 	mov	r5,r3
   47d7c:	00442f40 	call	442f4 <__subdf3>
   47d80:	d9401017 	ldw	r5,64(sp)
   47d84:	d9000f17 	ldw	r4,60(sp)
   47d88:	102b883a 	mov	r21,r2
   47d8c:	d8c01215 	stw	r3,72(sp)
   47d90:	0044bf00 	call	44bf0 <__fixdfsi>
   47d94:	1009883a 	mov	r4,r2
   47d98:	1029883a 	mov	r20,r2
   47d9c:	0044c700 	call	44c70 <__floatsidf>
   47da0:	d9000f17 	ldw	r4,60(sp)
   47da4:	d9401017 	ldw	r5,64(sp)
   47da8:	100d883a 	mov	r6,r2
   47dac:	180f883a 	mov	r7,r3
   47db0:	00442f40 	call	442f4 <__subdf3>
   47db4:	1823883a 	mov	r17,r3
   47db8:	d8c00717 	ldw	r3,28(sp)
   47dbc:	d9401217 	ldw	r5,72(sp)
   47dc0:	a2000c04 	addi	r8,r20,48
   47dc4:	1021883a 	mov	r16,r2
   47dc8:	1a000005 	stb	r8,0(r3)
   47dcc:	800d883a 	mov	r6,r16
   47dd0:	880f883a 	mov	r7,r17
   47dd4:	a809883a 	mov	r4,r21
   47dd8:	4029883a 	mov	r20,r8
   47ddc:	0043b000 	call	43b00 <__gedf2>
   47de0:	00841d16 	blt	zero,r2,48e58 <_dtoa_r+0x15f4>
   47de4:	800d883a 	mov	r6,r16
   47de8:	880f883a 	mov	r7,r17
   47dec:	0009883a 	mov	r4,zero
   47df0:	014ffc34 	movhi	r5,16368
   47df4:	00442f40 	call	442f4 <__subdf3>
   47df8:	d9401217 	ldw	r5,72(sp)
   47dfc:	100d883a 	mov	r6,r2
   47e00:	180f883a 	mov	r7,r3
   47e04:	a809883a 	mov	r4,r21
   47e08:	0043b000 	call	43b00 <__gedf2>
   47e0c:	db001617 	ldw	r12,88(sp)
   47e10:	00840e16 	blt	zero,r2,48e4c <_dtoa_r+0x15e8>
   47e14:	00800044 	movi	r2,1
   47e18:	13006b0e 	bge	r2,r12,47fc8 <_dtoa_r+0x764>
   47e1c:	d9000717 	ldw	r4,28(sp)
   47e20:	dd800f15 	stw	r22,60(sp)
   47e24:	dcc01015 	stw	r19,64(sp)
   47e28:	2319883a 	add	r12,r4,r12
   47e2c:	dcc01217 	ldw	r19,72(sp)
   47e30:	602d883a 	mov	r22,r12
   47e34:	dc801215 	stw	r18,72(sp)
   47e38:	b825883a 	mov	r18,r23
   47e3c:	00000906 	br	47e64 <_dtoa_r+0x600>
   47e40:	00442f40 	call	442f4 <__subdf3>
   47e44:	a80d883a 	mov	r6,r21
   47e48:	980f883a 	mov	r7,r19
   47e4c:	1009883a 	mov	r4,r2
   47e50:	180b883a 	mov	r5,r3
   47e54:	004fa540 	call	4fa54 <__ledf2>
   47e58:	1003e816 	blt	r2,zero,48dfc <_dtoa_r+0x1598>
   47e5c:	b825883a 	mov	r18,r23
   47e60:	bd83e926 	beq	r23,r22,48e08 <_dtoa_r+0x15a4>
   47e64:	a809883a 	mov	r4,r21
   47e68:	980b883a 	mov	r5,r19
   47e6c:	000d883a 	mov	r6,zero
   47e70:	01d00934 	movhi	r7,16420
   47e74:	0043bdc0 	call	43bdc <__muldf3>
   47e78:	000d883a 	mov	r6,zero
   47e7c:	01d00934 	movhi	r7,16420
   47e80:	8009883a 	mov	r4,r16
   47e84:	880b883a 	mov	r5,r17
   47e88:	102b883a 	mov	r21,r2
   47e8c:	1827883a 	mov	r19,r3
   47e90:	0043bdc0 	call	43bdc <__muldf3>
   47e94:	180b883a 	mov	r5,r3
   47e98:	1009883a 	mov	r4,r2
   47e9c:	1821883a 	mov	r16,r3
   47ea0:	1023883a 	mov	r17,r2
   47ea4:	0044bf00 	call	44bf0 <__fixdfsi>
   47ea8:	1009883a 	mov	r4,r2
   47eac:	1029883a 	mov	r20,r2
   47eb0:	0044c700 	call	44c70 <__floatsidf>
   47eb4:	8809883a 	mov	r4,r17
   47eb8:	800b883a 	mov	r5,r16
   47ebc:	100d883a 	mov	r6,r2
   47ec0:	180f883a 	mov	r7,r3
   47ec4:	00442f40 	call	442f4 <__subdf3>
   47ec8:	a5000c04 	addi	r20,r20,48
   47ecc:	a80d883a 	mov	r6,r21
   47ed0:	980f883a 	mov	r7,r19
   47ed4:	1009883a 	mov	r4,r2
   47ed8:	180b883a 	mov	r5,r3
   47edc:	95000005 	stb	r20,0(r18)
   47ee0:	1021883a 	mov	r16,r2
   47ee4:	1823883a 	mov	r17,r3
   47ee8:	004fa540 	call	4fa54 <__ledf2>
   47eec:	bdc00044 	addi	r23,r23,1
   47ef0:	800d883a 	mov	r6,r16
   47ef4:	880f883a 	mov	r7,r17
   47ef8:	0009883a 	mov	r4,zero
   47efc:	014ffc34 	movhi	r5,16368
   47f00:	103fcf0e 	bge	r2,zero,47e40 <__alt_data_end+0xfffc7e40>
   47f04:	d8c01317 	ldw	r3,76(sp)
   47f08:	d8c00515 	stw	r3,20(sp)
   47f0c:	d9400917 	ldw	r5,36(sp)
   47f10:	e009883a 	mov	r4,fp
   47f14:	004afa80 	call	4afa8 <_Bfree>
   47f18:	d9000517 	ldw	r4,20(sp)
   47f1c:	d9802317 	ldw	r6,140(sp)
   47f20:	d9c02517 	ldw	r7,148(sp)
   47f24:	b8000005 	stb	zero,0(r23)
   47f28:	20800044 	addi	r2,r4,1
   47f2c:	30800015 	stw	r2,0(r6)
   47f30:	3802aa26 	beq	r7,zero,489dc <_dtoa_r+0x1178>
   47f34:	3dc00015 	stw	r23,0(r7)
   47f38:	d8800717 	ldw	r2,28(sp)
   47f3c:	003e7906 	br	47924 <__alt_data_end+0xfffc7924>
   47f40:	00800434 	movhi	r2,16
   47f44:	10bfffc4 	addi	r2,r2,-1
   47f48:	88a2703a 	and	r17,r17,r2
   47f4c:	883e851e 	bne	r17,zero,47964 <__alt_data_end+0xfffc7964>
   47f50:	00800174 	movhi	r2,5
   47f54:	108a4404 	addi	r2,r2,10512
   47f58:	003e8406 	br	4796c <__alt_data_end+0xfffc796c>
   47f5c:	10c00204 	addi	r3,r2,8
   47f60:	003e8706 	br	47980 <__alt_data_end+0xfffc7980>
   47f64:	01400434 	movhi	r5,16
   47f68:	297fffc4 	addi	r5,r5,-1
   47f6c:	994a703a 	and	r5,r19,r5
   47f70:	9009883a 	mov	r4,r18
   47f74:	843f0044 	addi	r16,r16,-1023
   47f78:	294ffc34 	orhi	r5,r5,16368
   47f7c:	dd800217 	ldw	r22,8(sp)
   47f80:	d8001115 	stw	zero,68(sp)
   47f84:	003ea506 	br	47a1c <__alt_data_end+0xfffc7a1c>
   47f88:	00800174 	movhi	r2,5
   47f8c:	108a3b04 	addi	r2,r2,10476
   47f90:	003e6406 	br	47924 <__alt_data_end+0xfffc7924>
   47f94:	e0001115 	stw	zero,68(fp)
   47f98:	000b883a 	mov	r5,zero
   47f9c:	e009883a 	mov	r4,fp
   47fa0:	004af000 	call	4af00 <_Balloc>
   47fa4:	01bfffc4 	movi	r6,-1
   47fa8:	01c00044 	movi	r7,1
   47fac:	d8800715 	stw	r2,28(sp)
   47fb0:	d9800c15 	stw	r6,48(sp)
   47fb4:	e0801015 	stw	r2,64(fp)
   47fb8:	d8000315 	stw	zero,12(sp)
   47fbc:	d9c00b15 	stw	r7,44(sp)
   47fc0:	d9800615 	stw	r6,24(sp)
   47fc4:	d8002215 	stw	zero,136(sp)
   47fc8:	d8800117 	ldw	r2,4(sp)
   47fcc:	10008916 	blt	r2,zero,481f4 <_dtoa_r+0x990>
   47fd0:	d9000517 	ldw	r4,20(sp)
   47fd4:	00c00384 	movi	r3,14
   47fd8:	19008616 	blt	r3,r4,481f4 <_dtoa_r+0x990>
   47fdc:	200490fa 	slli	r2,r4,3
   47fe0:	00c00174 	movhi	r3,5
   47fe4:	d9802217 	ldw	r6,136(sp)
   47fe8:	18ca6304 	addi	r3,r3,10636
   47fec:	1885883a 	add	r2,r3,r2
   47ff0:	14000017 	ldw	r16,0(r2)
   47ff4:	14400117 	ldw	r17,4(r2)
   47ff8:	30016316 	blt	r6,zero,48588 <_dtoa_r+0xd24>
   47ffc:	800d883a 	mov	r6,r16
   48000:	880f883a 	mov	r7,r17
   48004:	9009883a 	mov	r4,r18
   48008:	980b883a 	mov	r5,r19
   4800c:	004f16c0 	call	4f16c <__divdf3>
   48010:	180b883a 	mov	r5,r3
   48014:	1009883a 	mov	r4,r2
   48018:	0044bf00 	call	44bf0 <__fixdfsi>
   4801c:	1009883a 	mov	r4,r2
   48020:	102b883a 	mov	r21,r2
   48024:	0044c700 	call	44c70 <__floatsidf>
   48028:	800d883a 	mov	r6,r16
   4802c:	880f883a 	mov	r7,r17
   48030:	1009883a 	mov	r4,r2
   48034:	180b883a 	mov	r5,r3
   48038:	0043bdc0 	call	43bdc <__muldf3>
   4803c:	100d883a 	mov	r6,r2
   48040:	180f883a 	mov	r7,r3
   48044:	9009883a 	mov	r4,r18
   48048:	980b883a 	mov	r5,r19
   4804c:	00442f40 	call	442f4 <__subdf3>
   48050:	d9c00717 	ldw	r7,28(sp)
   48054:	1009883a 	mov	r4,r2
   48058:	a8800c04 	addi	r2,r21,48
   4805c:	38800005 	stb	r2,0(r7)
   48060:	3dc00044 	addi	r23,r7,1
   48064:	d9c00617 	ldw	r7,24(sp)
   48068:	01800044 	movi	r6,1
   4806c:	180b883a 	mov	r5,r3
   48070:	2005883a 	mov	r2,r4
   48074:	39803826 	beq	r7,r6,48158 <_dtoa_r+0x8f4>
   48078:	000d883a 	mov	r6,zero
   4807c:	01d00934 	movhi	r7,16420
   48080:	0043bdc0 	call	43bdc <__muldf3>
   48084:	000d883a 	mov	r6,zero
   48088:	000f883a 	mov	r7,zero
   4808c:	1009883a 	mov	r4,r2
   48090:	180b883a 	mov	r5,r3
   48094:	1025883a 	mov	r18,r2
   48098:	1827883a 	mov	r19,r3
   4809c:	0043a780 	call	43a78 <__eqdf2>
   480a0:	103f9a26 	beq	r2,zero,47f0c <__alt_data_end+0xfffc7f0c>
   480a4:	d9c00617 	ldw	r7,24(sp)
   480a8:	d8c00717 	ldw	r3,28(sp)
   480ac:	b829883a 	mov	r20,r23
   480b0:	38bfffc4 	addi	r2,r7,-1
   480b4:	18ad883a 	add	r22,r3,r2
   480b8:	00000a06 	br	480e4 <_dtoa_r+0x880>
   480bc:	0043bdc0 	call	43bdc <__muldf3>
   480c0:	000d883a 	mov	r6,zero
   480c4:	000f883a 	mov	r7,zero
   480c8:	1009883a 	mov	r4,r2
   480cc:	180b883a 	mov	r5,r3
   480d0:	1025883a 	mov	r18,r2
   480d4:	1827883a 	mov	r19,r3
   480d8:	b829883a 	mov	r20,r23
   480dc:	0043a780 	call	43a78 <__eqdf2>
   480e0:	103f8a26 	beq	r2,zero,47f0c <__alt_data_end+0xfffc7f0c>
   480e4:	800d883a 	mov	r6,r16
   480e8:	880f883a 	mov	r7,r17
   480ec:	9009883a 	mov	r4,r18
   480f0:	980b883a 	mov	r5,r19
   480f4:	004f16c0 	call	4f16c <__divdf3>
   480f8:	180b883a 	mov	r5,r3
   480fc:	1009883a 	mov	r4,r2
   48100:	0044bf00 	call	44bf0 <__fixdfsi>
   48104:	1009883a 	mov	r4,r2
   48108:	102b883a 	mov	r21,r2
   4810c:	0044c700 	call	44c70 <__floatsidf>
   48110:	800d883a 	mov	r6,r16
   48114:	880f883a 	mov	r7,r17
   48118:	1009883a 	mov	r4,r2
   4811c:	180b883a 	mov	r5,r3
   48120:	0043bdc0 	call	43bdc <__muldf3>
   48124:	100d883a 	mov	r6,r2
   48128:	180f883a 	mov	r7,r3
   4812c:	9009883a 	mov	r4,r18
   48130:	980b883a 	mov	r5,r19
   48134:	00442f40 	call	442f4 <__subdf3>
   48138:	aa000c04 	addi	r8,r21,48
   4813c:	a2000005 	stb	r8,0(r20)
   48140:	000d883a 	mov	r6,zero
   48144:	01d00934 	movhi	r7,16420
   48148:	1009883a 	mov	r4,r2
   4814c:	180b883a 	mov	r5,r3
   48150:	a5c00044 	addi	r23,r20,1
   48154:	b53fd91e 	bne	r22,r20,480bc <__alt_data_end+0xfffc80bc>
   48158:	100d883a 	mov	r6,r2
   4815c:	180f883a 	mov	r7,r3
   48160:	1009883a 	mov	r4,r2
   48164:	180b883a 	mov	r5,r3
   48168:	00431cc0 	call	431cc <__adddf3>
   4816c:	100d883a 	mov	r6,r2
   48170:	180f883a 	mov	r7,r3
   48174:	8009883a 	mov	r4,r16
   48178:	880b883a 	mov	r5,r17
   4817c:	1027883a 	mov	r19,r2
   48180:	1825883a 	mov	r18,r3
   48184:	004fa540 	call	4fa54 <__ledf2>
   48188:	10000816 	blt	r2,zero,481ac <_dtoa_r+0x948>
   4818c:	980d883a 	mov	r6,r19
   48190:	900f883a 	mov	r7,r18
   48194:	8009883a 	mov	r4,r16
   48198:	880b883a 	mov	r5,r17
   4819c:	0043a780 	call	43a78 <__eqdf2>
   481a0:	103f5a1e 	bne	r2,zero,47f0c <__alt_data_end+0xfffc7f0c>
   481a4:	ad40004c 	andi	r21,r21,1
   481a8:	a83f5826 	beq	r21,zero,47f0c <__alt_data_end+0xfffc7f0c>
   481ac:	bd3fffc3 	ldbu	r20,-1(r23)
   481b0:	b8bfffc4 	addi	r2,r23,-1
   481b4:	1007883a 	mov	r3,r2
   481b8:	01400e44 	movi	r5,57
   481bc:	d9800717 	ldw	r6,28(sp)
   481c0:	00000506 	br	481d8 <_dtoa_r+0x974>
   481c4:	18ffffc4 	addi	r3,r3,-1
   481c8:	11824726 	beq	r2,r6,48ae8 <_dtoa_r+0x1284>
   481cc:	1d000003 	ldbu	r20,0(r3)
   481d0:	102f883a 	mov	r23,r2
   481d4:	10bfffc4 	addi	r2,r2,-1
   481d8:	a1003fcc 	andi	r4,r20,255
   481dc:	2100201c 	xori	r4,r4,128
   481e0:	213fe004 	addi	r4,r4,-128
   481e4:	217ff726 	beq	r4,r5,481c4 <__alt_data_end+0xfffc81c4>
   481e8:	a2000044 	addi	r8,r20,1
   481ec:	12000005 	stb	r8,0(r2)
   481f0:	003f4606 	br	47f0c <__alt_data_end+0xfffc7f0c>
   481f4:	d9000b17 	ldw	r4,44(sp)
   481f8:	2000c826 	beq	r4,zero,4851c <_dtoa_r+0xcb8>
   481fc:	d9800317 	ldw	r6,12(sp)
   48200:	00c00044 	movi	r3,1
   48204:	1980f90e 	bge	r3,r6,485ec <_dtoa_r+0xd88>
   48208:	d8800617 	ldw	r2,24(sp)
   4820c:	d8c00a17 	ldw	r3,40(sp)
   48210:	157fffc4 	addi	r21,r2,-1
   48214:	1d41f316 	blt	r3,r21,489e4 <_dtoa_r+0x1180>
   48218:	1d6bc83a 	sub	r21,r3,r21
   4821c:	d9c00617 	ldw	r7,24(sp)
   48220:	3802aa16 	blt	r7,zero,48ccc <_dtoa_r+0x1468>
   48224:	dd000817 	ldw	r20,32(sp)
   48228:	d8800617 	ldw	r2,24(sp)
   4822c:	d8c00817 	ldw	r3,32(sp)
   48230:	01400044 	movi	r5,1
   48234:	e009883a 	mov	r4,fp
   48238:	1887883a 	add	r3,r3,r2
   4823c:	d8c00815 	stw	r3,32(sp)
   48240:	b0ad883a 	add	r22,r22,r2
   48244:	004b30c0 	call	4b30c <__i2b>
   48248:	1023883a 	mov	r17,r2
   4824c:	a0000826 	beq	r20,zero,48270 <_dtoa_r+0xa0c>
   48250:	0580070e 	bge	zero,r22,48270 <_dtoa_r+0xa0c>
   48254:	a005883a 	mov	r2,r20
   48258:	b500b916 	blt	r22,r20,48540 <_dtoa_r+0xcdc>
   4825c:	d9000817 	ldw	r4,32(sp)
   48260:	a0a9c83a 	sub	r20,r20,r2
   48264:	b0adc83a 	sub	r22,r22,r2
   48268:	2089c83a 	sub	r4,r4,r2
   4826c:	d9000815 	stw	r4,32(sp)
   48270:	d9800a17 	ldw	r6,40(sp)
   48274:	0181810e 	bge	zero,r6,4887c <_dtoa_r+0x1018>
   48278:	d9c00b17 	ldw	r7,44(sp)
   4827c:	3800b326 	beq	r7,zero,4854c <_dtoa_r+0xce8>
   48280:	a800b226 	beq	r21,zero,4854c <_dtoa_r+0xce8>
   48284:	880b883a 	mov	r5,r17
   48288:	a80d883a 	mov	r6,r21
   4828c:	e009883a 	mov	r4,fp
   48290:	004b5400 	call	4b540 <__pow5mult>
   48294:	d9800917 	ldw	r6,36(sp)
   48298:	100b883a 	mov	r5,r2
   4829c:	e009883a 	mov	r4,fp
   482a0:	1023883a 	mov	r17,r2
   482a4:	004b3480 	call	4b348 <__multiply>
   482a8:	1021883a 	mov	r16,r2
   482ac:	d8800a17 	ldw	r2,40(sp)
   482b0:	d9400917 	ldw	r5,36(sp)
   482b4:	e009883a 	mov	r4,fp
   482b8:	1545c83a 	sub	r2,r2,r21
   482bc:	d8800a15 	stw	r2,40(sp)
   482c0:	004afa80 	call	4afa8 <_Bfree>
   482c4:	d8c00a17 	ldw	r3,40(sp)
   482c8:	18009f1e 	bne	r3,zero,48548 <_dtoa_r+0xce4>
   482cc:	05c00044 	movi	r23,1
   482d0:	e009883a 	mov	r4,fp
   482d4:	b80b883a 	mov	r5,r23
   482d8:	004b30c0 	call	4b30c <__i2b>
   482dc:	d9000d17 	ldw	r4,52(sp)
   482e0:	102b883a 	mov	r21,r2
   482e4:	2000ce26 	beq	r4,zero,48620 <_dtoa_r+0xdbc>
   482e8:	200d883a 	mov	r6,r4
   482ec:	100b883a 	mov	r5,r2
   482f0:	e009883a 	mov	r4,fp
   482f4:	004b5400 	call	4b540 <__pow5mult>
   482f8:	d9800317 	ldw	r6,12(sp)
   482fc:	102b883a 	mov	r21,r2
   48300:	b981810e 	bge	r23,r6,48908 <_dtoa_r+0x10a4>
   48304:	0027883a 	mov	r19,zero
   48308:	a8800417 	ldw	r2,16(r21)
   4830c:	05c00804 	movi	r23,32
   48310:	10800104 	addi	r2,r2,4
   48314:	1085883a 	add	r2,r2,r2
   48318:	1085883a 	add	r2,r2,r2
   4831c:	a885883a 	add	r2,r21,r2
   48320:	11000017 	ldw	r4,0(r2)
   48324:	004b1f40 	call	4b1f4 <__hi0bits>
   48328:	b885c83a 	sub	r2,r23,r2
   4832c:	1585883a 	add	r2,r2,r22
   48330:	108007cc 	andi	r2,r2,31
   48334:	1000b326 	beq	r2,zero,48604 <_dtoa_r+0xda0>
   48338:	00c00804 	movi	r3,32
   4833c:	1887c83a 	sub	r3,r3,r2
   48340:	01000104 	movi	r4,4
   48344:	20c2cd0e 	bge	r4,r3,48e7c <_dtoa_r+0x1618>
   48348:	00c00704 	movi	r3,28
   4834c:	1885c83a 	sub	r2,r3,r2
   48350:	d8c00817 	ldw	r3,32(sp)
   48354:	a0a9883a 	add	r20,r20,r2
   48358:	b0ad883a 	add	r22,r22,r2
   4835c:	1887883a 	add	r3,r3,r2
   48360:	d8c00815 	stw	r3,32(sp)
   48364:	d9800817 	ldw	r6,32(sp)
   48368:	0180040e 	bge	zero,r6,4837c <_dtoa_r+0xb18>
   4836c:	800b883a 	mov	r5,r16
   48370:	e009883a 	mov	r4,fp
   48374:	004b6800 	call	4b680 <__lshift>
   48378:	1021883a 	mov	r16,r2
   4837c:	0580050e 	bge	zero,r22,48394 <_dtoa_r+0xb30>
   48380:	a80b883a 	mov	r5,r21
   48384:	b00d883a 	mov	r6,r22
   48388:	e009883a 	mov	r4,fp
   4838c:	004b6800 	call	4b680 <__lshift>
   48390:	102b883a 	mov	r21,r2
   48394:	d9c00e17 	ldw	r7,56(sp)
   48398:	3801211e 	bne	r7,zero,48820 <_dtoa_r+0xfbc>
   4839c:	d9800617 	ldw	r6,24(sp)
   483a0:	0181380e 	bge	zero,r6,48884 <_dtoa_r+0x1020>
   483a4:	d8c00b17 	ldw	r3,44(sp)
   483a8:	1800ab1e 	bne	r3,zero,48658 <_dtoa_r+0xdf4>
   483ac:	dc800717 	ldw	r18,28(sp)
   483b0:	dcc00617 	ldw	r19,24(sp)
   483b4:	9029883a 	mov	r20,r18
   483b8:	00000206 	br	483c4 <_dtoa_r+0xb60>
   483bc:	004afd00 	call	4afd0 <__multadd>
   483c0:	1021883a 	mov	r16,r2
   483c4:	a80b883a 	mov	r5,r21
   483c8:	8009883a 	mov	r4,r16
   483cc:	00476640 	call	47664 <quorem>
   483d0:	10800c04 	addi	r2,r2,48
   483d4:	90800005 	stb	r2,0(r18)
   483d8:	94800044 	addi	r18,r18,1
   483dc:	9507c83a 	sub	r3,r18,r20
   483e0:	000f883a 	mov	r7,zero
   483e4:	01800284 	movi	r6,10
   483e8:	800b883a 	mov	r5,r16
   483ec:	e009883a 	mov	r4,fp
   483f0:	1cfff216 	blt	r3,r19,483bc <__alt_data_end+0xfffc83bc>
   483f4:	1011883a 	mov	r8,r2
   483f8:	d8800617 	ldw	r2,24(sp)
   483fc:	0082370e 	bge	zero,r2,48cdc <_dtoa_r+0x1478>
   48400:	d9000717 	ldw	r4,28(sp)
   48404:	0025883a 	mov	r18,zero
   48408:	20af883a 	add	r23,r4,r2
   4840c:	01800044 	movi	r6,1
   48410:	800b883a 	mov	r5,r16
   48414:	e009883a 	mov	r4,fp
   48418:	da001715 	stw	r8,92(sp)
   4841c:	004b6800 	call	4b680 <__lshift>
   48420:	a80b883a 	mov	r5,r21
   48424:	1009883a 	mov	r4,r2
   48428:	d8800915 	stw	r2,36(sp)
   4842c:	004b7c80 	call	4b7c8 <__mcmp>
   48430:	da001717 	ldw	r8,92(sp)
   48434:	0081800e 	bge	zero,r2,48a38 <_dtoa_r+0x11d4>
   48438:	b93fffc3 	ldbu	r4,-1(r23)
   4843c:	b8bfffc4 	addi	r2,r23,-1
   48440:	1007883a 	mov	r3,r2
   48444:	01800e44 	movi	r6,57
   48448:	d9c00717 	ldw	r7,28(sp)
   4844c:	00000506 	br	48464 <_dtoa_r+0xc00>
   48450:	18ffffc4 	addi	r3,r3,-1
   48454:	11c12326 	beq	r2,r7,488e4 <_dtoa_r+0x1080>
   48458:	19000003 	ldbu	r4,0(r3)
   4845c:	102f883a 	mov	r23,r2
   48460:	10bfffc4 	addi	r2,r2,-1
   48464:	21403fcc 	andi	r5,r4,255
   48468:	2940201c 	xori	r5,r5,128
   4846c:	297fe004 	addi	r5,r5,-128
   48470:	29bff726 	beq	r5,r6,48450 <__alt_data_end+0xfffc8450>
   48474:	21000044 	addi	r4,r4,1
   48478:	11000005 	stb	r4,0(r2)
   4847c:	a80b883a 	mov	r5,r21
   48480:	e009883a 	mov	r4,fp
   48484:	004afa80 	call	4afa8 <_Bfree>
   48488:	883ea026 	beq	r17,zero,47f0c <__alt_data_end+0xfffc7f0c>
   4848c:	90000426 	beq	r18,zero,484a0 <_dtoa_r+0xc3c>
   48490:	94400326 	beq	r18,r17,484a0 <_dtoa_r+0xc3c>
   48494:	900b883a 	mov	r5,r18
   48498:	e009883a 	mov	r4,fp
   4849c:	004afa80 	call	4afa8 <_Bfree>
   484a0:	880b883a 	mov	r5,r17
   484a4:	e009883a 	mov	r4,fp
   484a8:	004afa80 	call	4afa8 <_Bfree>
   484ac:	003e9706 	br	47f0c <__alt_data_end+0xfffc7f0c>
   484b0:	01800044 	movi	r6,1
   484b4:	d9800e15 	stw	r6,56(sp)
   484b8:	003d9606 	br	47b14 <__alt_data_end+0xfffc7b14>
   484bc:	d8800817 	ldw	r2,32(sp)
   484c0:	d8c00517 	ldw	r3,20(sp)
   484c4:	d8000d15 	stw	zero,52(sp)
   484c8:	10c5c83a 	sub	r2,r2,r3
   484cc:	00c9c83a 	sub	r4,zero,r3
   484d0:	d8800815 	stw	r2,32(sp)
   484d4:	d9000a15 	stw	r4,40(sp)
   484d8:	003d9706 	br	47b38 <__alt_data_end+0xfffc7b38>
   484dc:	05adc83a 	sub	r22,zero,r22
   484e0:	dd800815 	stw	r22,32(sp)
   484e4:	002d883a 	mov	r22,zero
   484e8:	003d8e06 	br	47b24 <__alt_data_end+0xfffc7b24>
   484ec:	d9000517 	ldw	r4,20(sp)
   484f0:	0044c700 	call	44c70 <__floatsidf>
   484f4:	100d883a 	mov	r6,r2
   484f8:	180f883a 	mov	r7,r3
   484fc:	a009883a 	mov	r4,r20
   48500:	880b883a 	mov	r5,r17
   48504:	0043a780 	call	43a78 <__eqdf2>
   48508:	103d7126 	beq	r2,zero,47ad0 <__alt_data_end+0xfffc7ad0>
   4850c:	d9c00517 	ldw	r7,20(sp)
   48510:	39ffffc4 	addi	r7,r7,-1
   48514:	d9c00515 	stw	r7,20(sp)
   48518:	003d6d06 	br	47ad0 <__alt_data_end+0xfffc7ad0>
   4851c:	dd400a17 	ldw	r21,40(sp)
   48520:	dd000817 	ldw	r20,32(sp)
   48524:	0023883a 	mov	r17,zero
   48528:	003f4806 	br	4824c <__alt_data_end+0xfffc824c>
   4852c:	10e3c83a 	sub	r17,r2,r3
   48530:	9448983a 	sll	r4,r18,r17
   48534:	003d3206 	br	47a00 <__alt_data_end+0xfffc7a00>
   48538:	d8000e15 	stw	zero,56(sp)
   4853c:	003d7506 	br	47b14 <__alt_data_end+0xfffc7b14>
   48540:	b005883a 	mov	r2,r22
   48544:	003f4506 	br	4825c <__alt_data_end+0xfffc825c>
   48548:	dc000915 	stw	r16,36(sp)
   4854c:	d9800a17 	ldw	r6,40(sp)
   48550:	d9400917 	ldw	r5,36(sp)
   48554:	e009883a 	mov	r4,fp
   48558:	004b5400 	call	4b540 <__pow5mult>
   4855c:	1021883a 	mov	r16,r2
   48560:	003f5a06 	br	482cc <__alt_data_end+0xfffc82cc>
   48564:	01c00044 	movi	r7,1
   48568:	d9c00b15 	stw	r7,44(sp)
   4856c:	d8802217 	ldw	r2,136(sp)
   48570:	0081280e 	bge	zero,r2,48a14 <_dtoa_r+0x11b0>
   48574:	100d883a 	mov	r6,r2
   48578:	1021883a 	mov	r16,r2
   4857c:	d8800c15 	stw	r2,48(sp)
   48580:	d8800615 	stw	r2,24(sp)
   48584:	003d8806 	br	47ba8 <__alt_data_end+0xfffc7ba8>
   48588:	d8800617 	ldw	r2,24(sp)
   4858c:	00be9b16 	blt	zero,r2,47ffc <__alt_data_end+0xfffc7ffc>
   48590:	10010f1e 	bne	r2,zero,489d0 <_dtoa_r+0x116c>
   48594:	880b883a 	mov	r5,r17
   48598:	000d883a 	mov	r6,zero
   4859c:	01d00534 	movhi	r7,16404
   485a0:	8009883a 	mov	r4,r16
   485a4:	0043bdc0 	call	43bdc <__muldf3>
   485a8:	900d883a 	mov	r6,r18
   485ac:	980f883a 	mov	r7,r19
   485b0:	1009883a 	mov	r4,r2
   485b4:	180b883a 	mov	r5,r3
   485b8:	0043b000 	call	43b00 <__gedf2>
   485bc:	002b883a 	mov	r21,zero
   485c0:	0023883a 	mov	r17,zero
   485c4:	1000bf16 	blt	r2,zero,488c4 <_dtoa_r+0x1060>
   485c8:	d9802217 	ldw	r6,136(sp)
   485cc:	ddc00717 	ldw	r23,28(sp)
   485d0:	018c303a 	nor	r6,zero,r6
   485d4:	d9800515 	stw	r6,20(sp)
   485d8:	a80b883a 	mov	r5,r21
   485dc:	e009883a 	mov	r4,fp
   485e0:	004afa80 	call	4afa8 <_Bfree>
   485e4:	883e4926 	beq	r17,zero,47f0c <__alt_data_end+0xfffc7f0c>
   485e8:	003fad06 	br	484a0 <__alt_data_end+0xfffc84a0>
   485ec:	d9c01117 	ldw	r7,68(sp)
   485f0:	3801bc26 	beq	r7,zero,48ce4 <_dtoa_r+0x1480>
   485f4:	10810cc4 	addi	r2,r2,1075
   485f8:	dd400a17 	ldw	r21,40(sp)
   485fc:	dd000817 	ldw	r20,32(sp)
   48600:	003f0a06 	br	4822c <__alt_data_end+0xfffc822c>
   48604:	00800704 	movi	r2,28
   48608:	d9000817 	ldw	r4,32(sp)
   4860c:	a0a9883a 	add	r20,r20,r2
   48610:	b0ad883a 	add	r22,r22,r2
   48614:	2089883a 	add	r4,r4,r2
   48618:	d9000815 	stw	r4,32(sp)
   4861c:	003f5106 	br	48364 <__alt_data_end+0xfffc8364>
   48620:	d8c00317 	ldw	r3,12(sp)
   48624:	b8c1fc0e 	bge	r23,r3,48e18 <_dtoa_r+0x15b4>
   48628:	0027883a 	mov	r19,zero
   4862c:	b805883a 	mov	r2,r23
   48630:	003f3e06 	br	4832c <__alt_data_end+0xfffc832c>
   48634:	880b883a 	mov	r5,r17
   48638:	e009883a 	mov	r4,fp
   4863c:	000f883a 	mov	r7,zero
   48640:	01800284 	movi	r6,10
   48644:	004afd00 	call	4afd0 <__multadd>
   48648:	d9000c17 	ldw	r4,48(sp)
   4864c:	1023883a 	mov	r17,r2
   48650:	0102040e 	bge	zero,r4,48e64 <_dtoa_r+0x1600>
   48654:	d9000615 	stw	r4,24(sp)
   48658:	0500050e 	bge	zero,r20,48670 <_dtoa_r+0xe0c>
   4865c:	880b883a 	mov	r5,r17
   48660:	a00d883a 	mov	r6,r20
   48664:	e009883a 	mov	r4,fp
   48668:	004b6800 	call	4b680 <__lshift>
   4866c:	1023883a 	mov	r17,r2
   48670:	9801241e 	bne	r19,zero,48b04 <_dtoa_r+0x12a0>
   48674:	8829883a 	mov	r20,r17
   48678:	d9000617 	ldw	r4,24(sp)
   4867c:	dcc00717 	ldw	r19,28(sp)
   48680:	9480004c 	andi	r18,r18,1
   48684:	20bfffc4 	addi	r2,r4,-1
   48688:	9885883a 	add	r2,r19,r2
   4868c:	d8800415 	stw	r2,16(sp)
   48690:	dc800615 	stw	r18,24(sp)
   48694:	a80b883a 	mov	r5,r21
   48698:	8009883a 	mov	r4,r16
   4869c:	00476640 	call	47664 <quorem>
   486a0:	880b883a 	mov	r5,r17
   486a4:	8009883a 	mov	r4,r16
   486a8:	102f883a 	mov	r23,r2
   486ac:	004b7c80 	call	4b7c8 <__mcmp>
   486b0:	a80b883a 	mov	r5,r21
   486b4:	a00d883a 	mov	r6,r20
   486b8:	e009883a 	mov	r4,fp
   486bc:	102d883a 	mov	r22,r2
   486c0:	004b8280 	call	4b828 <__mdiff>
   486c4:	1007883a 	mov	r3,r2
   486c8:	10800317 	ldw	r2,12(r2)
   486cc:	bc800c04 	addi	r18,r23,48
   486d0:	180b883a 	mov	r5,r3
   486d4:	10004e1e 	bne	r2,zero,48810 <_dtoa_r+0xfac>
   486d8:	8009883a 	mov	r4,r16
   486dc:	d8c01615 	stw	r3,88(sp)
   486e0:	004b7c80 	call	4b7c8 <__mcmp>
   486e4:	d8c01617 	ldw	r3,88(sp)
   486e8:	e009883a 	mov	r4,fp
   486ec:	d8801615 	stw	r2,88(sp)
   486f0:	180b883a 	mov	r5,r3
   486f4:	004afa80 	call	4afa8 <_Bfree>
   486f8:	d8801617 	ldw	r2,88(sp)
   486fc:	1000041e 	bne	r2,zero,48710 <_dtoa_r+0xeac>
   48700:	d9800317 	ldw	r6,12(sp)
   48704:	3000021e 	bne	r6,zero,48710 <_dtoa_r+0xeac>
   48708:	d8c00617 	ldw	r3,24(sp)
   4870c:	18003726 	beq	r3,zero,487ec <_dtoa_r+0xf88>
   48710:	b0002016 	blt	r22,zero,48794 <_dtoa_r+0xf30>
   48714:	b000041e 	bne	r22,zero,48728 <_dtoa_r+0xec4>
   48718:	d9000317 	ldw	r4,12(sp)
   4871c:	2000021e 	bne	r4,zero,48728 <_dtoa_r+0xec4>
   48720:	d8c00617 	ldw	r3,24(sp)
   48724:	18001b26 	beq	r3,zero,48794 <_dtoa_r+0xf30>
   48728:	00810716 	blt	zero,r2,48b48 <_dtoa_r+0x12e4>
   4872c:	d8c00417 	ldw	r3,16(sp)
   48730:	9d800044 	addi	r22,r19,1
   48734:	9c800005 	stb	r18,0(r19)
   48738:	b02f883a 	mov	r23,r22
   4873c:	98c10626 	beq	r19,r3,48b58 <_dtoa_r+0x12f4>
   48740:	800b883a 	mov	r5,r16
   48744:	000f883a 	mov	r7,zero
   48748:	01800284 	movi	r6,10
   4874c:	e009883a 	mov	r4,fp
   48750:	004afd00 	call	4afd0 <__multadd>
   48754:	1021883a 	mov	r16,r2
   48758:	000f883a 	mov	r7,zero
   4875c:	01800284 	movi	r6,10
   48760:	880b883a 	mov	r5,r17
   48764:	e009883a 	mov	r4,fp
   48768:	8d002526 	beq	r17,r20,48800 <_dtoa_r+0xf9c>
   4876c:	004afd00 	call	4afd0 <__multadd>
   48770:	a00b883a 	mov	r5,r20
   48774:	000f883a 	mov	r7,zero
   48778:	01800284 	movi	r6,10
   4877c:	e009883a 	mov	r4,fp
   48780:	1023883a 	mov	r17,r2
   48784:	004afd00 	call	4afd0 <__multadd>
   48788:	1029883a 	mov	r20,r2
   4878c:	b027883a 	mov	r19,r22
   48790:	003fc006 	br	48694 <__alt_data_end+0xfffc8694>
   48794:	9011883a 	mov	r8,r18
   48798:	00800e0e 	bge	zero,r2,487d4 <_dtoa_r+0xf70>
   4879c:	800b883a 	mov	r5,r16
   487a0:	01800044 	movi	r6,1
   487a4:	e009883a 	mov	r4,fp
   487a8:	da001715 	stw	r8,92(sp)
   487ac:	004b6800 	call	4b680 <__lshift>
   487b0:	a80b883a 	mov	r5,r21
   487b4:	1009883a 	mov	r4,r2
   487b8:	1021883a 	mov	r16,r2
   487bc:	004b7c80 	call	4b7c8 <__mcmp>
   487c0:	da001717 	ldw	r8,92(sp)
   487c4:	0081960e 	bge	zero,r2,48e20 <_dtoa_r+0x15bc>
   487c8:	00800e44 	movi	r2,57
   487cc:	40817026 	beq	r8,r2,48d90 <_dtoa_r+0x152c>
   487d0:	ba000c44 	addi	r8,r23,49
   487d4:	8825883a 	mov	r18,r17
   487d8:	9dc00044 	addi	r23,r19,1
   487dc:	9a000005 	stb	r8,0(r19)
   487e0:	a023883a 	mov	r17,r20
   487e4:	dc000915 	stw	r16,36(sp)
   487e8:	003f2406 	br	4847c <__alt_data_end+0xfffc847c>
   487ec:	00800e44 	movi	r2,57
   487f0:	9011883a 	mov	r8,r18
   487f4:	90816626 	beq	r18,r2,48d90 <_dtoa_r+0x152c>
   487f8:	05bff516 	blt	zero,r22,487d0 <__alt_data_end+0xfffc87d0>
   487fc:	003ff506 	br	487d4 <__alt_data_end+0xfffc87d4>
   48800:	004afd00 	call	4afd0 <__multadd>
   48804:	1023883a 	mov	r17,r2
   48808:	1029883a 	mov	r20,r2
   4880c:	003fdf06 	br	4878c <__alt_data_end+0xfffc878c>
   48810:	e009883a 	mov	r4,fp
   48814:	004afa80 	call	4afa8 <_Bfree>
   48818:	00800044 	movi	r2,1
   4881c:	003fbc06 	br	48710 <__alt_data_end+0xfffc8710>
   48820:	a80b883a 	mov	r5,r21
   48824:	8009883a 	mov	r4,r16
   48828:	004b7c80 	call	4b7c8 <__mcmp>
   4882c:	103edb0e 	bge	r2,zero,4839c <__alt_data_end+0xfffc839c>
   48830:	800b883a 	mov	r5,r16
   48834:	000f883a 	mov	r7,zero
   48838:	01800284 	movi	r6,10
   4883c:	e009883a 	mov	r4,fp
   48840:	004afd00 	call	4afd0 <__multadd>
   48844:	1021883a 	mov	r16,r2
   48848:	d8800517 	ldw	r2,20(sp)
   4884c:	d8c00b17 	ldw	r3,44(sp)
   48850:	10bfffc4 	addi	r2,r2,-1
   48854:	d8800515 	stw	r2,20(sp)
   48858:	183f761e 	bne	r3,zero,48634 <__alt_data_end+0xfffc8634>
   4885c:	d9000c17 	ldw	r4,48(sp)
   48860:	0101730e 	bge	zero,r4,48e30 <_dtoa_r+0x15cc>
   48864:	d9000615 	stw	r4,24(sp)
   48868:	003ed006 	br	483ac <__alt_data_end+0xfffc83ac>
   4886c:	00800084 	movi	r2,2
   48870:	3081861e 	bne	r6,r2,48e8c <_dtoa_r+0x1628>
   48874:	d8000b15 	stw	zero,44(sp)
   48878:	003f3c06 	br	4856c <__alt_data_end+0xfffc856c>
   4887c:	dc000917 	ldw	r16,36(sp)
   48880:	003e9206 	br	482cc <__alt_data_end+0xfffc82cc>
   48884:	d9c00317 	ldw	r7,12(sp)
   48888:	00800084 	movi	r2,2
   4888c:	11fec50e 	bge	r2,r7,483a4 <__alt_data_end+0xfffc83a4>
   48890:	d9000617 	ldw	r4,24(sp)
   48894:	20013c1e 	bne	r4,zero,48d88 <_dtoa_r+0x1524>
   48898:	a80b883a 	mov	r5,r21
   4889c:	000f883a 	mov	r7,zero
   488a0:	01800144 	movi	r6,5
   488a4:	e009883a 	mov	r4,fp
   488a8:	004afd00 	call	4afd0 <__multadd>
   488ac:	100b883a 	mov	r5,r2
   488b0:	8009883a 	mov	r4,r16
   488b4:	102b883a 	mov	r21,r2
   488b8:	004b7c80 	call	4b7c8 <__mcmp>
   488bc:	dc000915 	stw	r16,36(sp)
   488c0:	00bf410e 	bge	zero,r2,485c8 <__alt_data_end+0xfffc85c8>
   488c4:	d9c00717 	ldw	r7,28(sp)
   488c8:	00800c44 	movi	r2,49
   488cc:	38800005 	stb	r2,0(r7)
   488d0:	d8800517 	ldw	r2,20(sp)
   488d4:	3dc00044 	addi	r23,r7,1
   488d8:	10800044 	addi	r2,r2,1
   488dc:	d8800515 	stw	r2,20(sp)
   488e0:	003f3d06 	br	485d8 <__alt_data_end+0xfffc85d8>
   488e4:	d9800517 	ldw	r6,20(sp)
   488e8:	d9c00717 	ldw	r7,28(sp)
   488ec:	00800c44 	movi	r2,49
   488f0:	31800044 	addi	r6,r6,1
   488f4:	d9800515 	stw	r6,20(sp)
   488f8:	38800005 	stb	r2,0(r7)
   488fc:	003edf06 	br	4847c <__alt_data_end+0xfffc847c>
   48900:	d8000b15 	stw	zero,44(sp)
   48904:	003c9f06 	br	47b84 <__alt_data_end+0xfffc7b84>
   48908:	903e7e1e 	bne	r18,zero,48304 <__alt_data_end+0xfffc8304>
   4890c:	00800434 	movhi	r2,16
   48910:	10bfffc4 	addi	r2,r2,-1
   48914:	9884703a 	and	r2,r19,r2
   48918:	1000ea1e 	bne	r2,zero,48cc4 <_dtoa_r+0x1460>
   4891c:	9cdffc2c 	andhi	r19,r19,32752
   48920:	9800e826 	beq	r19,zero,48cc4 <_dtoa_r+0x1460>
   48924:	d9c00817 	ldw	r7,32(sp)
   48928:	b5800044 	addi	r22,r22,1
   4892c:	04c00044 	movi	r19,1
   48930:	39c00044 	addi	r7,r7,1
   48934:	d9c00815 	stw	r7,32(sp)
   48938:	d8800d17 	ldw	r2,52(sp)
   4893c:	103e721e 	bne	r2,zero,48308 <__alt_data_end+0xfffc8308>
   48940:	00800044 	movi	r2,1
   48944:	003e7906 	br	4832c <__alt_data_end+0xfffc832c>
   48948:	8009883a 	mov	r4,r16
   4894c:	0044c700 	call	44c70 <__floatsidf>
   48950:	d9800f17 	ldw	r6,60(sp)
   48954:	d9c01017 	ldw	r7,64(sp)
   48958:	1009883a 	mov	r4,r2
   4895c:	180b883a 	mov	r5,r3
   48960:	0043bdc0 	call	43bdc <__muldf3>
   48964:	000d883a 	mov	r6,zero
   48968:	01d00734 	movhi	r7,16412
   4896c:	1009883a 	mov	r4,r2
   48970:	180b883a 	mov	r5,r3
   48974:	00431cc0 	call	431cc <__adddf3>
   48978:	047f3034 	movhi	r17,64704
   4897c:	1021883a 	mov	r16,r2
   48980:	1c63883a 	add	r17,r3,r17
   48984:	d9000f17 	ldw	r4,60(sp)
   48988:	d9401017 	ldw	r5,64(sp)
   4898c:	000d883a 	mov	r6,zero
   48990:	01d00534 	movhi	r7,16404
   48994:	00442f40 	call	442f4 <__subdf3>
   48998:	800d883a 	mov	r6,r16
   4899c:	880f883a 	mov	r7,r17
   489a0:	1009883a 	mov	r4,r2
   489a4:	180b883a 	mov	r5,r3
   489a8:	102b883a 	mov	r21,r2
   489ac:	1829883a 	mov	r20,r3
   489b0:	0043b000 	call	43b00 <__gedf2>
   489b4:	00806c16 	blt	zero,r2,48b68 <_dtoa_r+0x1304>
   489b8:	89e0003c 	xorhi	r7,r17,32768
   489bc:	800d883a 	mov	r6,r16
   489c0:	a809883a 	mov	r4,r21
   489c4:	a00b883a 	mov	r5,r20
   489c8:	004fa540 	call	4fa54 <__ledf2>
   489cc:	103d7e0e 	bge	r2,zero,47fc8 <__alt_data_end+0xfffc7fc8>
   489d0:	002b883a 	mov	r21,zero
   489d4:	0023883a 	mov	r17,zero
   489d8:	003efb06 	br	485c8 <__alt_data_end+0xfffc85c8>
   489dc:	d8800717 	ldw	r2,28(sp)
   489e0:	003bd006 	br	47924 <__alt_data_end+0xfffc7924>
   489e4:	d9000a17 	ldw	r4,40(sp)
   489e8:	d9800d17 	ldw	r6,52(sp)
   489ec:	dd400a15 	stw	r21,40(sp)
   489f0:	a905c83a 	sub	r2,r21,r4
   489f4:	308d883a 	add	r6,r6,r2
   489f8:	d9800d15 	stw	r6,52(sp)
   489fc:	002b883a 	mov	r21,zero
   48a00:	003e0606 	br	4821c <__alt_data_end+0xfffc821c>
   48a04:	9023883a 	mov	r17,r18
   48a08:	9829883a 	mov	r20,r19
   48a0c:	04000084 	movi	r16,2
   48a10:	003c9206 	br	47c5c <__alt_data_end+0xfffc7c5c>
   48a14:	04000044 	movi	r16,1
   48a18:	dc000c15 	stw	r16,48(sp)
   48a1c:	dc000615 	stw	r16,24(sp)
   48a20:	dc002215 	stw	r16,136(sp)
   48a24:	e0001115 	stw	zero,68(fp)
   48a28:	000b883a 	mov	r5,zero
   48a2c:	003c6906 	br	47bd4 <__alt_data_end+0xfffc7bd4>
   48a30:	3021883a 	mov	r16,r6
   48a34:	003ffb06 	br	48a24 <__alt_data_end+0xfffc8a24>
   48a38:	1000021e 	bne	r2,zero,48a44 <_dtoa_r+0x11e0>
   48a3c:	4200004c 	andi	r8,r8,1
   48a40:	403e7d1e 	bne	r8,zero,48438 <__alt_data_end+0xfffc8438>
   48a44:	01000c04 	movi	r4,48
   48a48:	00000106 	br	48a50 <_dtoa_r+0x11ec>
   48a4c:	102f883a 	mov	r23,r2
   48a50:	b8bfffc4 	addi	r2,r23,-1
   48a54:	10c00007 	ldb	r3,0(r2)
   48a58:	193ffc26 	beq	r3,r4,48a4c <__alt_data_end+0xfffc8a4c>
   48a5c:	003e8706 	br	4847c <__alt_data_end+0xfffc847c>
   48a60:	d8800517 	ldw	r2,20(sp)
   48a64:	00a3c83a 	sub	r17,zero,r2
   48a68:	8800a426 	beq	r17,zero,48cfc <_dtoa_r+0x1498>
   48a6c:	888003cc 	andi	r2,r17,15
   48a70:	100490fa 	slli	r2,r2,3
   48a74:	00c00174 	movhi	r3,5
   48a78:	18ca6304 	addi	r3,r3,10636
   48a7c:	1885883a 	add	r2,r3,r2
   48a80:	11800017 	ldw	r6,0(r2)
   48a84:	11c00117 	ldw	r7,4(r2)
   48a88:	9009883a 	mov	r4,r18
   48a8c:	980b883a 	mov	r5,r19
   48a90:	8823d13a 	srai	r17,r17,4
   48a94:	0043bdc0 	call	43bdc <__muldf3>
   48a98:	d8800f15 	stw	r2,60(sp)
   48a9c:	d8c01015 	stw	r3,64(sp)
   48aa0:	8800e826 	beq	r17,zero,48e44 <_dtoa_r+0x15e0>
   48aa4:	05000174 	movhi	r20,5
   48aa8:	a50a5904 	addi	r20,r20,10596
   48aac:	04000084 	movi	r16,2
   48ab0:	8980004c 	andi	r6,r17,1
   48ab4:	1009883a 	mov	r4,r2
   48ab8:	8823d07a 	srai	r17,r17,1
   48abc:	180b883a 	mov	r5,r3
   48ac0:	30000426 	beq	r6,zero,48ad4 <_dtoa_r+0x1270>
   48ac4:	a1800017 	ldw	r6,0(r20)
   48ac8:	a1c00117 	ldw	r7,4(r20)
   48acc:	84000044 	addi	r16,r16,1
   48ad0:	0043bdc0 	call	43bdc <__muldf3>
   48ad4:	a5000204 	addi	r20,r20,8
   48ad8:	883ff51e 	bne	r17,zero,48ab0 <__alt_data_end+0xfffc8ab0>
   48adc:	d8800f15 	stw	r2,60(sp)
   48ae0:	d8c01015 	stw	r3,64(sp)
   48ae4:	003c7606 	br	47cc0 <__alt_data_end+0xfffc7cc0>
   48ae8:	00c00c04 	movi	r3,48
   48aec:	10c00005 	stb	r3,0(r2)
   48af0:	d8c00517 	ldw	r3,20(sp)
   48af4:	bd3fffc3 	ldbu	r20,-1(r23)
   48af8:	18c00044 	addi	r3,r3,1
   48afc:	d8c00515 	stw	r3,20(sp)
   48b00:	003db906 	br	481e8 <__alt_data_end+0xfffc81e8>
   48b04:	89400117 	ldw	r5,4(r17)
   48b08:	e009883a 	mov	r4,fp
   48b0c:	004af000 	call	4af00 <_Balloc>
   48b10:	89800417 	ldw	r6,16(r17)
   48b14:	89400304 	addi	r5,r17,12
   48b18:	11000304 	addi	r4,r2,12
   48b1c:	31800084 	addi	r6,r6,2
   48b20:	318d883a 	add	r6,r6,r6
   48b24:	318d883a 	add	r6,r6,r6
   48b28:	1027883a 	mov	r19,r2
   48b2c:	004ab340 	call	4ab34 <memcpy>
   48b30:	01800044 	movi	r6,1
   48b34:	980b883a 	mov	r5,r19
   48b38:	e009883a 	mov	r4,fp
   48b3c:	004b6800 	call	4b680 <__lshift>
   48b40:	1029883a 	mov	r20,r2
   48b44:	003ecc06 	br	48678 <__alt_data_end+0xfffc8678>
   48b48:	00800e44 	movi	r2,57
   48b4c:	90809026 	beq	r18,r2,48d90 <_dtoa_r+0x152c>
   48b50:	92000044 	addi	r8,r18,1
   48b54:	003f1f06 	br	487d4 <__alt_data_end+0xfffc87d4>
   48b58:	9011883a 	mov	r8,r18
   48b5c:	8825883a 	mov	r18,r17
   48b60:	a023883a 	mov	r17,r20
   48b64:	003e2906 	br	4840c <__alt_data_end+0xfffc840c>
   48b68:	002b883a 	mov	r21,zero
   48b6c:	0023883a 	mov	r17,zero
   48b70:	003f5406 	br	488c4 <__alt_data_end+0xfffc88c4>
   48b74:	61bfffc4 	addi	r6,r12,-1
   48b78:	300490fa 	slli	r2,r6,3
   48b7c:	00c00174 	movhi	r3,5
   48b80:	18ca6304 	addi	r3,r3,10636
   48b84:	1885883a 	add	r2,r3,r2
   48b88:	11000017 	ldw	r4,0(r2)
   48b8c:	11400117 	ldw	r5,4(r2)
   48b90:	d8800717 	ldw	r2,28(sp)
   48b94:	880f883a 	mov	r7,r17
   48b98:	d9801215 	stw	r6,72(sp)
   48b9c:	800d883a 	mov	r6,r16
   48ba0:	db001615 	stw	r12,88(sp)
   48ba4:	15c00044 	addi	r23,r2,1
   48ba8:	0043bdc0 	call	43bdc <__muldf3>
   48bac:	d9401017 	ldw	r5,64(sp)
   48bb0:	d9000f17 	ldw	r4,60(sp)
   48bb4:	d8c01515 	stw	r3,84(sp)
   48bb8:	d8801415 	stw	r2,80(sp)
   48bbc:	0044bf00 	call	44bf0 <__fixdfsi>
   48bc0:	1009883a 	mov	r4,r2
   48bc4:	1021883a 	mov	r16,r2
   48bc8:	0044c700 	call	44c70 <__floatsidf>
   48bcc:	d9000f17 	ldw	r4,60(sp)
   48bd0:	d9401017 	ldw	r5,64(sp)
   48bd4:	100d883a 	mov	r6,r2
   48bd8:	180f883a 	mov	r7,r3
   48bdc:	00442f40 	call	442f4 <__subdf3>
   48be0:	1829883a 	mov	r20,r3
   48be4:	d8c00717 	ldw	r3,28(sp)
   48be8:	84000c04 	addi	r16,r16,48
   48bec:	1023883a 	mov	r17,r2
   48bf0:	1c000005 	stb	r16,0(r3)
   48bf4:	db001617 	ldw	r12,88(sp)
   48bf8:	00800044 	movi	r2,1
   48bfc:	60802226 	beq	r12,r2,48c88 <_dtoa_r+0x1424>
   48c00:	d9c00717 	ldw	r7,28(sp)
   48c04:	8805883a 	mov	r2,r17
   48c08:	b82b883a 	mov	r21,r23
   48c0c:	3b19883a 	add	r12,r7,r12
   48c10:	6023883a 	mov	r17,r12
   48c14:	a007883a 	mov	r3,r20
   48c18:	dc800f15 	stw	r18,60(sp)
   48c1c:	000d883a 	mov	r6,zero
   48c20:	01d00934 	movhi	r7,16420
   48c24:	1009883a 	mov	r4,r2
   48c28:	180b883a 	mov	r5,r3
   48c2c:	0043bdc0 	call	43bdc <__muldf3>
   48c30:	180b883a 	mov	r5,r3
   48c34:	1009883a 	mov	r4,r2
   48c38:	1829883a 	mov	r20,r3
   48c3c:	1025883a 	mov	r18,r2
   48c40:	0044bf00 	call	44bf0 <__fixdfsi>
   48c44:	1009883a 	mov	r4,r2
   48c48:	1021883a 	mov	r16,r2
   48c4c:	0044c700 	call	44c70 <__floatsidf>
   48c50:	100d883a 	mov	r6,r2
   48c54:	180f883a 	mov	r7,r3
   48c58:	9009883a 	mov	r4,r18
   48c5c:	a00b883a 	mov	r5,r20
   48c60:	84000c04 	addi	r16,r16,48
   48c64:	00442f40 	call	442f4 <__subdf3>
   48c68:	ad400044 	addi	r21,r21,1
   48c6c:	ac3fffc5 	stb	r16,-1(r21)
   48c70:	ac7fea1e 	bne	r21,r17,48c1c <__alt_data_end+0xfffc8c1c>
   48c74:	1023883a 	mov	r17,r2
   48c78:	d8801217 	ldw	r2,72(sp)
   48c7c:	dc800f17 	ldw	r18,60(sp)
   48c80:	1829883a 	mov	r20,r3
   48c84:	b8af883a 	add	r23,r23,r2
   48c88:	d9001417 	ldw	r4,80(sp)
   48c8c:	d9401517 	ldw	r5,84(sp)
   48c90:	000d883a 	mov	r6,zero
   48c94:	01cff834 	movhi	r7,16352
   48c98:	00431cc0 	call	431cc <__adddf3>
   48c9c:	880d883a 	mov	r6,r17
   48ca0:	a00f883a 	mov	r7,r20
   48ca4:	1009883a 	mov	r4,r2
   48ca8:	180b883a 	mov	r5,r3
   48cac:	004fa540 	call	4fa54 <__ledf2>
   48cb0:	10003e0e 	bge	r2,zero,48dac <_dtoa_r+0x1548>
   48cb4:	d9001317 	ldw	r4,76(sp)
   48cb8:	bd3fffc3 	ldbu	r20,-1(r23)
   48cbc:	d9000515 	stw	r4,20(sp)
   48cc0:	003d3b06 	br	481b0 <__alt_data_end+0xfffc81b0>
   48cc4:	0027883a 	mov	r19,zero
   48cc8:	003f1b06 	br	48938 <__alt_data_end+0xfffc8938>
   48ccc:	d8800817 	ldw	r2,32(sp)
   48cd0:	11e9c83a 	sub	r20,r2,r7
   48cd4:	0005883a 	mov	r2,zero
   48cd8:	003d5406 	br	4822c <__alt_data_end+0xfffc822c>
   48cdc:	00800044 	movi	r2,1
   48ce0:	003dc706 	br	48400 <__alt_data_end+0xfffc8400>
   48ce4:	d8c00217 	ldw	r3,8(sp)
   48ce8:	00800d84 	movi	r2,54
   48cec:	dd400a17 	ldw	r21,40(sp)
   48cf0:	10c5c83a 	sub	r2,r2,r3
   48cf4:	dd000817 	ldw	r20,32(sp)
   48cf8:	003d4c06 	br	4822c <__alt_data_end+0xfffc822c>
   48cfc:	dc800f15 	stw	r18,60(sp)
   48d00:	dcc01015 	stw	r19,64(sp)
   48d04:	04000084 	movi	r16,2
   48d08:	003bed06 	br	47cc0 <__alt_data_end+0xfffc7cc0>
   48d0c:	d9000617 	ldw	r4,24(sp)
   48d10:	203f0d26 	beq	r4,zero,48948 <__alt_data_end+0xfffc8948>
   48d14:	d9800c17 	ldw	r6,48(sp)
   48d18:	01bcab0e 	bge	zero,r6,47fc8 <__alt_data_end+0xfffc7fc8>
   48d1c:	d9401017 	ldw	r5,64(sp)
   48d20:	d9000f17 	ldw	r4,60(sp)
   48d24:	000d883a 	mov	r6,zero
   48d28:	01d00934 	movhi	r7,16420
   48d2c:	0043bdc0 	call	43bdc <__muldf3>
   48d30:	81000044 	addi	r4,r16,1
   48d34:	d8800f15 	stw	r2,60(sp)
   48d38:	d8c01015 	stw	r3,64(sp)
   48d3c:	0044c700 	call	44c70 <__floatsidf>
   48d40:	d9800f17 	ldw	r6,60(sp)
   48d44:	d9c01017 	ldw	r7,64(sp)
   48d48:	1009883a 	mov	r4,r2
   48d4c:	180b883a 	mov	r5,r3
   48d50:	0043bdc0 	call	43bdc <__muldf3>
   48d54:	01d00734 	movhi	r7,16412
   48d58:	000d883a 	mov	r6,zero
   48d5c:	1009883a 	mov	r4,r2
   48d60:	180b883a 	mov	r5,r3
   48d64:	00431cc0 	call	431cc <__adddf3>
   48d68:	d9c00517 	ldw	r7,20(sp)
   48d6c:	047f3034 	movhi	r17,64704
   48d70:	1021883a 	mov	r16,r2
   48d74:	39ffffc4 	addi	r7,r7,-1
   48d78:	d9c01315 	stw	r7,76(sp)
   48d7c:	1c63883a 	add	r17,r3,r17
   48d80:	db000c17 	ldw	r12,48(sp)
   48d84:	003bea06 	br	47d30 <__alt_data_end+0xfffc7d30>
   48d88:	dc000915 	stw	r16,36(sp)
   48d8c:	003e0e06 	br	485c8 <__alt_data_end+0xfffc85c8>
   48d90:	01000e44 	movi	r4,57
   48d94:	8825883a 	mov	r18,r17
   48d98:	9dc00044 	addi	r23,r19,1
   48d9c:	99000005 	stb	r4,0(r19)
   48da0:	a023883a 	mov	r17,r20
   48da4:	dc000915 	stw	r16,36(sp)
   48da8:	003da406 	br	4843c <__alt_data_end+0xfffc843c>
   48dac:	d9801417 	ldw	r6,80(sp)
   48db0:	d9c01517 	ldw	r7,84(sp)
   48db4:	0009883a 	mov	r4,zero
   48db8:	014ff834 	movhi	r5,16352
   48dbc:	00442f40 	call	442f4 <__subdf3>
   48dc0:	880d883a 	mov	r6,r17
   48dc4:	a00f883a 	mov	r7,r20
   48dc8:	1009883a 	mov	r4,r2
   48dcc:	180b883a 	mov	r5,r3
   48dd0:	0043b000 	call	43b00 <__gedf2>
   48dd4:	00bc7c0e 	bge	zero,r2,47fc8 <__alt_data_end+0xfffc7fc8>
   48dd8:	01000c04 	movi	r4,48
   48ddc:	00000106 	br	48de4 <_dtoa_r+0x1580>
   48de0:	102f883a 	mov	r23,r2
   48de4:	b8bfffc4 	addi	r2,r23,-1
   48de8:	10c00007 	ldb	r3,0(r2)
   48dec:	193ffc26 	beq	r3,r4,48de0 <__alt_data_end+0xfffc8de0>
   48df0:	d9801317 	ldw	r6,76(sp)
   48df4:	d9800515 	stw	r6,20(sp)
   48df8:	003c4406 	br	47f0c <__alt_data_end+0xfffc7f0c>
   48dfc:	d9801317 	ldw	r6,76(sp)
   48e00:	d9800515 	stw	r6,20(sp)
   48e04:	003cea06 	br	481b0 <__alt_data_end+0xfffc81b0>
   48e08:	dd800f17 	ldw	r22,60(sp)
   48e0c:	dcc01017 	ldw	r19,64(sp)
   48e10:	dc801217 	ldw	r18,72(sp)
   48e14:	003c6c06 	br	47fc8 <__alt_data_end+0xfffc7fc8>
   48e18:	903e031e 	bne	r18,zero,48628 <__alt_data_end+0xfffc8628>
   48e1c:	003ebb06 	br	4890c <__alt_data_end+0xfffc890c>
   48e20:	103e6c1e 	bne	r2,zero,487d4 <__alt_data_end+0xfffc87d4>
   48e24:	4080004c 	andi	r2,r8,1
   48e28:	103e6a26 	beq	r2,zero,487d4 <__alt_data_end+0xfffc87d4>
   48e2c:	003e6606 	br	487c8 <__alt_data_end+0xfffc87c8>
   48e30:	d8c00317 	ldw	r3,12(sp)
   48e34:	00800084 	movi	r2,2
   48e38:	10c02916 	blt	r2,r3,48ee0 <_dtoa_r+0x167c>
   48e3c:	d9000c17 	ldw	r4,48(sp)
   48e40:	003e8806 	br	48864 <__alt_data_end+0xfffc8864>
   48e44:	04000084 	movi	r16,2
   48e48:	003b9d06 	br	47cc0 <__alt_data_end+0xfffc7cc0>
   48e4c:	d9001317 	ldw	r4,76(sp)
   48e50:	d9000515 	stw	r4,20(sp)
   48e54:	003cd606 	br	481b0 <__alt_data_end+0xfffc81b0>
   48e58:	d8801317 	ldw	r2,76(sp)
   48e5c:	d8800515 	stw	r2,20(sp)
   48e60:	003c2a06 	br	47f0c <__alt_data_end+0xfffc7f0c>
   48e64:	d9800317 	ldw	r6,12(sp)
   48e68:	00800084 	movi	r2,2
   48e6c:	11801516 	blt	r2,r6,48ec4 <_dtoa_r+0x1660>
   48e70:	d9c00c17 	ldw	r7,48(sp)
   48e74:	d9c00615 	stw	r7,24(sp)
   48e78:	003df706 	br	48658 <__alt_data_end+0xfffc8658>
   48e7c:	193d3926 	beq	r3,r4,48364 <__alt_data_end+0xfffc8364>
   48e80:	00c00f04 	movi	r3,60
   48e84:	1885c83a 	sub	r2,r3,r2
   48e88:	003ddf06 	br	48608 <__alt_data_end+0xfffc8608>
   48e8c:	e009883a 	mov	r4,fp
   48e90:	e0001115 	stw	zero,68(fp)
   48e94:	000b883a 	mov	r5,zero
   48e98:	004af000 	call	4af00 <_Balloc>
   48e9c:	d8800715 	stw	r2,28(sp)
   48ea0:	d8c00717 	ldw	r3,28(sp)
   48ea4:	00bfffc4 	movi	r2,-1
   48ea8:	01000044 	movi	r4,1
   48eac:	d8800c15 	stw	r2,48(sp)
   48eb0:	e0c01015 	stw	r3,64(fp)
   48eb4:	d9000b15 	stw	r4,44(sp)
   48eb8:	d8800615 	stw	r2,24(sp)
   48ebc:	d8002215 	stw	zero,136(sp)
   48ec0:	003c4106 	br	47fc8 <__alt_data_end+0xfffc7fc8>
   48ec4:	d8c00c17 	ldw	r3,48(sp)
   48ec8:	d8c00615 	stw	r3,24(sp)
   48ecc:	003e7006 	br	48890 <__alt_data_end+0xfffc8890>
   48ed0:	04400044 	movi	r17,1
   48ed4:	003b2006 	br	47b58 <__alt_data_end+0xfffc7b58>
   48ed8:	000b883a 	mov	r5,zero
   48edc:	003b3d06 	br	47bd4 <__alt_data_end+0xfffc7bd4>
   48ee0:	d8800c17 	ldw	r2,48(sp)
   48ee4:	d8800615 	stw	r2,24(sp)
   48ee8:	003e6906 	br	48890 <__alt_data_end+0xfffc8890>

00048eec <__sflush_r>:
   48eec:	2880030b 	ldhu	r2,12(r5)
   48ef0:	defffb04 	addi	sp,sp,-20
   48ef4:	dcc00315 	stw	r19,12(sp)
   48ef8:	dc400115 	stw	r17,4(sp)
   48efc:	dfc00415 	stw	ra,16(sp)
   48f00:	dc800215 	stw	r18,8(sp)
   48f04:	dc000015 	stw	r16,0(sp)
   48f08:	10c0020c 	andi	r3,r2,8
   48f0c:	2823883a 	mov	r17,r5
   48f10:	2027883a 	mov	r19,r4
   48f14:	1800311e 	bne	r3,zero,48fdc <__sflush_r+0xf0>
   48f18:	28c00117 	ldw	r3,4(r5)
   48f1c:	10820014 	ori	r2,r2,2048
   48f20:	2880030d 	sth	r2,12(r5)
   48f24:	00c04b0e 	bge	zero,r3,49054 <__sflush_r+0x168>
   48f28:	8a000a17 	ldw	r8,40(r17)
   48f2c:	40002326 	beq	r8,zero,48fbc <__sflush_r+0xd0>
   48f30:	9c000017 	ldw	r16,0(r19)
   48f34:	10c4000c 	andi	r3,r2,4096
   48f38:	98000015 	stw	zero,0(r19)
   48f3c:	18004826 	beq	r3,zero,49060 <__sflush_r+0x174>
   48f40:	89801417 	ldw	r6,80(r17)
   48f44:	10c0010c 	andi	r3,r2,4
   48f48:	18000626 	beq	r3,zero,48f64 <__sflush_r+0x78>
   48f4c:	88c00117 	ldw	r3,4(r17)
   48f50:	88800c17 	ldw	r2,48(r17)
   48f54:	30cdc83a 	sub	r6,r6,r3
   48f58:	10000226 	beq	r2,zero,48f64 <__sflush_r+0x78>
   48f5c:	88800f17 	ldw	r2,60(r17)
   48f60:	308dc83a 	sub	r6,r6,r2
   48f64:	89400717 	ldw	r5,28(r17)
   48f68:	000f883a 	mov	r7,zero
   48f6c:	9809883a 	mov	r4,r19
   48f70:	403ee83a 	callr	r8
   48f74:	00ffffc4 	movi	r3,-1
   48f78:	10c04426 	beq	r2,r3,4908c <__sflush_r+0x1a0>
   48f7c:	88c0030b 	ldhu	r3,12(r17)
   48f80:	89000417 	ldw	r4,16(r17)
   48f84:	88000115 	stw	zero,4(r17)
   48f88:	197dffcc 	andi	r5,r3,63487
   48f8c:	8940030d 	sth	r5,12(r17)
   48f90:	89000015 	stw	r4,0(r17)
   48f94:	18c4000c 	andi	r3,r3,4096
   48f98:	18002c1e 	bne	r3,zero,4904c <__sflush_r+0x160>
   48f9c:	89400c17 	ldw	r5,48(r17)
   48fa0:	9c000015 	stw	r16,0(r19)
   48fa4:	28000526 	beq	r5,zero,48fbc <__sflush_r+0xd0>
   48fa8:	88801004 	addi	r2,r17,64
   48fac:	28800226 	beq	r5,r2,48fb8 <__sflush_r+0xcc>
   48fb0:	9809883a 	mov	r4,r19
   48fb4:	00496580 	call	49658 <_free_r>
   48fb8:	88000c15 	stw	zero,48(r17)
   48fbc:	0005883a 	mov	r2,zero
   48fc0:	dfc00417 	ldw	ra,16(sp)
   48fc4:	dcc00317 	ldw	r19,12(sp)
   48fc8:	dc800217 	ldw	r18,8(sp)
   48fcc:	dc400117 	ldw	r17,4(sp)
   48fd0:	dc000017 	ldw	r16,0(sp)
   48fd4:	dec00504 	addi	sp,sp,20
   48fd8:	f800283a 	ret
   48fdc:	2c800417 	ldw	r18,16(r5)
   48fe0:	903ff626 	beq	r18,zero,48fbc <__alt_data_end+0xfffc8fbc>
   48fe4:	2c000017 	ldw	r16,0(r5)
   48fe8:	108000cc 	andi	r2,r2,3
   48fec:	2c800015 	stw	r18,0(r5)
   48ff0:	84a1c83a 	sub	r16,r16,r18
   48ff4:	1000131e 	bne	r2,zero,49044 <__sflush_r+0x158>
   48ff8:	28800517 	ldw	r2,20(r5)
   48ffc:	88800215 	stw	r2,8(r17)
   49000:	04000316 	blt	zero,r16,49010 <__sflush_r+0x124>
   49004:	003fed06 	br	48fbc <__alt_data_end+0xfffc8fbc>
   49008:	90a5883a 	add	r18,r18,r2
   4900c:	043feb0e 	bge	zero,r16,48fbc <__alt_data_end+0xfffc8fbc>
   49010:	88800917 	ldw	r2,36(r17)
   49014:	89400717 	ldw	r5,28(r17)
   49018:	800f883a 	mov	r7,r16
   4901c:	900d883a 	mov	r6,r18
   49020:	9809883a 	mov	r4,r19
   49024:	103ee83a 	callr	r2
   49028:	80a1c83a 	sub	r16,r16,r2
   4902c:	00bff616 	blt	zero,r2,49008 <__alt_data_end+0xfffc9008>
   49030:	88c0030b 	ldhu	r3,12(r17)
   49034:	00bfffc4 	movi	r2,-1
   49038:	18c01014 	ori	r3,r3,64
   4903c:	88c0030d 	sth	r3,12(r17)
   49040:	003fdf06 	br	48fc0 <__alt_data_end+0xfffc8fc0>
   49044:	0005883a 	mov	r2,zero
   49048:	003fec06 	br	48ffc <__alt_data_end+0xfffc8ffc>
   4904c:	88801415 	stw	r2,80(r17)
   49050:	003fd206 	br	48f9c <__alt_data_end+0xfffc8f9c>
   49054:	28c00f17 	ldw	r3,60(r5)
   49058:	00ffb316 	blt	zero,r3,48f28 <__alt_data_end+0xfffc8f28>
   4905c:	003fd706 	br	48fbc <__alt_data_end+0xfffc8fbc>
   49060:	89400717 	ldw	r5,28(r17)
   49064:	000d883a 	mov	r6,zero
   49068:	01c00044 	movi	r7,1
   4906c:	9809883a 	mov	r4,r19
   49070:	403ee83a 	callr	r8
   49074:	100d883a 	mov	r6,r2
   49078:	00bfffc4 	movi	r2,-1
   4907c:	30801426 	beq	r6,r2,490d0 <__sflush_r+0x1e4>
   49080:	8880030b 	ldhu	r2,12(r17)
   49084:	8a000a17 	ldw	r8,40(r17)
   49088:	003fae06 	br	48f44 <__alt_data_end+0xfffc8f44>
   4908c:	98c00017 	ldw	r3,0(r19)
   49090:	183fba26 	beq	r3,zero,48f7c <__alt_data_end+0xfffc8f7c>
   49094:	01000744 	movi	r4,29
   49098:	19000626 	beq	r3,r4,490b4 <__sflush_r+0x1c8>
   4909c:	01000584 	movi	r4,22
   490a0:	19000426 	beq	r3,r4,490b4 <__sflush_r+0x1c8>
   490a4:	88c0030b 	ldhu	r3,12(r17)
   490a8:	18c01014 	ori	r3,r3,64
   490ac:	88c0030d 	sth	r3,12(r17)
   490b0:	003fc306 	br	48fc0 <__alt_data_end+0xfffc8fc0>
   490b4:	8880030b 	ldhu	r2,12(r17)
   490b8:	88c00417 	ldw	r3,16(r17)
   490bc:	88000115 	stw	zero,4(r17)
   490c0:	10bdffcc 	andi	r2,r2,63487
   490c4:	8880030d 	sth	r2,12(r17)
   490c8:	88c00015 	stw	r3,0(r17)
   490cc:	003fb306 	br	48f9c <__alt_data_end+0xfffc8f9c>
   490d0:	98800017 	ldw	r2,0(r19)
   490d4:	103fea26 	beq	r2,zero,49080 <__alt_data_end+0xfffc9080>
   490d8:	00c00744 	movi	r3,29
   490dc:	10c00226 	beq	r2,r3,490e8 <__sflush_r+0x1fc>
   490e0:	00c00584 	movi	r3,22
   490e4:	10c0031e 	bne	r2,r3,490f4 <__sflush_r+0x208>
   490e8:	9c000015 	stw	r16,0(r19)
   490ec:	0005883a 	mov	r2,zero
   490f0:	003fb306 	br	48fc0 <__alt_data_end+0xfffc8fc0>
   490f4:	88c0030b 	ldhu	r3,12(r17)
   490f8:	3005883a 	mov	r2,r6
   490fc:	18c01014 	ori	r3,r3,64
   49100:	88c0030d 	sth	r3,12(r17)
   49104:	003fae06 	br	48fc0 <__alt_data_end+0xfffc8fc0>

00049108 <_fflush_r>:
   49108:	defffd04 	addi	sp,sp,-12
   4910c:	dc000115 	stw	r16,4(sp)
   49110:	dfc00215 	stw	ra,8(sp)
   49114:	2021883a 	mov	r16,r4
   49118:	20000226 	beq	r4,zero,49124 <_fflush_r+0x1c>
   4911c:	20800e17 	ldw	r2,56(r4)
   49120:	10000c26 	beq	r2,zero,49154 <_fflush_r+0x4c>
   49124:	2880030f 	ldh	r2,12(r5)
   49128:	1000051e 	bne	r2,zero,49140 <_fflush_r+0x38>
   4912c:	0005883a 	mov	r2,zero
   49130:	dfc00217 	ldw	ra,8(sp)
   49134:	dc000117 	ldw	r16,4(sp)
   49138:	dec00304 	addi	sp,sp,12
   4913c:	f800283a 	ret
   49140:	8009883a 	mov	r4,r16
   49144:	dfc00217 	ldw	ra,8(sp)
   49148:	dc000117 	ldw	r16,4(sp)
   4914c:	dec00304 	addi	sp,sp,12
   49150:	0048eec1 	jmpi	48eec <__sflush_r>
   49154:	d9400015 	stw	r5,0(sp)
   49158:	00494e40 	call	494e4 <__sinit>
   4915c:	d9400017 	ldw	r5,0(sp)
   49160:	003ff006 	br	49124 <__alt_data_end+0xfffc9124>

00049164 <fflush>:
   49164:	20000526 	beq	r4,zero,4917c <fflush+0x18>
   49168:	00800174 	movhi	r2,5
   4916c:	10915604 	addi	r2,r2,17752
   49170:	200b883a 	mov	r5,r4
   49174:	11000017 	ldw	r4,0(r2)
   49178:	00491081 	jmpi	49108 <_fflush_r>
   4917c:	00800174 	movhi	r2,5
   49180:	10915504 	addi	r2,r2,17748
   49184:	11000017 	ldw	r4,0(r2)
   49188:	01400174 	movhi	r5,5
   4918c:	29644204 	addi	r5,r5,-28408
   49190:	0049ee81 	jmpi	49ee8 <_fwalk_reent>

00049194 <__fp_unlock>:
   49194:	0005883a 	mov	r2,zero
   49198:	f800283a 	ret

0004919c <_cleanup_r>:
   4919c:	01400174 	movhi	r5,5
   491a0:	2977c004 	addi	r5,r5,-8448
   491a4:	0049ee81 	jmpi	49ee8 <_fwalk_reent>

000491a8 <__sinit.part.1>:
   491a8:	defff704 	addi	sp,sp,-36
   491ac:	00c00174 	movhi	r3,5
   491b0:	dfc00815 	stw	ra,32(sp)
   491b4:	ddc00715 	stw	r23,28(sp)
   491b8:	dd800615 	stw	r22,24(sp)
   491bc:	dd400515 	stw	r21,20(sp)
   491c0:	dd000415 	stw	r20,16(sp)
   491c4:	dcc00315 	stw	r19,12(sp)
   491c8:	dc800215 	stw	r18,8(sp)
   491cc:	dc400115 	stw	r17,4(sp)
   491d0:	dc000015 	stw	r16,0(sp)
   491d4:	18e46704 	addi	r3,r3,-28260
   491d8:	24000117 	ldw	r16,4(r4)
   491dc:	20c00f15 	stw	r3,60(r4)
   491e0:	2080bb04 	addi	r2,r4,748
   491e4:	00c000c4 	movi	r3,3
   491e8:	20c0b915 	stw	r3,740(r4)
   491ec:	2080ba15 	stw	r2,744(r4)
   491f0:	2000b815 	stw	zero,736(r4)
   491f4:	05c00204 	movi	r23,8
   491f8:	00800104 	movi	r2,4
   491fc:	2025883a 	mov	r18,r4
   49200:	b80d883a 	mov	r6,r23
   49204:	81001704 	addi	r4,r16,92
   49208:	000b883a 	mov	r5,zero
   4920c:	80000015 	stw	zero,0(r16)
   49210:	80000115 	stw	zero,4(r16)
   49214:	80000215 	stw	zero,8(r16)
   49218:	8080030d 	sth	r2,12(r16)
   4921c:	80001915 	stw	zero,100(r16)
   49220:	8000038d 	sth	zero,14(r16)
   49224:	80000415 	stw	zero,16(r16)
   49228:	80000515 	stw	zero,20(r16)
   4922c:	80000615 	stw	zero,24(r16)
   49230:	004add80 	call	4add8 <memset>
   49234:	05800174 	movhi	r22,5
   49238:	94400217 	ldw	r17,8(r18)
   4923c:	05400174 	movhi	r21,5
   49240:	05000174 	movhi	r20,5
   49244:	04c00174 	movhi	r19,5
   49248:	b5b14a04 	addi	r22,r22,-15064
   4924c:	ad716104 	addi	r21,r21,-14972
   49250:	a5318004 	addi	r20,r20,-14848
   49254:	9cf19704 	addi	r19,r19,-14756
   49258:	85800815 	stw	r22,32(r16)
   4925c:	85400915 	stw	r21,36(r16)
   49260:	85000a15 	stw	r20,40(r16)
   49264:	84c00b15 	stw	r19,44(r16)
   49268:	84000715 	stw	r16,28(r16)
   4926c:	00800284 	movi	r2,10
   49270:	8880030d 	sth	r2,12(r17)
   49274:	00800044 	movi	r2,1
   49278:	b80d883a 	mov	r6,r23
   4927c:	89001704 	addi	r4,r17,92
   49280:	000b883a 	mov	r5,zero
   49284:	88000015 	stw	zero,0(r17)
   49288:	88000115 	stw	zero,4(r17)
   4928c:	88000215 	stw	zero,8(r17)
   49290:	88001915 	stw	zero,100(r17)
   49294:	8880038d 	sth	r2,14(r17)
   49298:	88000415 	stw	zero,16(r17)
   4929c:	88000515 	stw	zero,20(r17)
   492a0:	88000615 	stw	zero,24(r17)
   492a4:	004add80 	call	4add8 <memset>
   492a8:	94000317 	ldw	r16,12(r18)
   492ac:	00800484 	movi	r2,18
   492b0:	8c400715 	stw	r17,28(r17)
   492b4:	8d800815 	stw	r22,32(r17)
   492b8:	8d400915 	stw	r21,36(r17)
   492bc:	8d000a15 	stw	r20,40(r17)
   492c0:	8cc00b15 	stw	r19,44(r17)
   492c4:	8080030d 	sth	r2,12(r16)
   492c8:	00800084 	movi	r2,2
   492cc:	80000015 	stw	zero,0(r16)
   492d0:	80000115 	stw	zero,4(r16)
   492d4:	80000215 	stw	zero,8(r16)
   492d8:	80001915 	stw	zero,100(r16)
   492dc:	8080038d 	sth	r2,14(r16)
   492e0:	80000415 	stw	zero,16(r16)
   492e4:	80000515 	stw	zero,20(r16)
   492e8:	80000615 	stw	zero,24(r16)
   492ec:	b80d883a 	mov	r6,r23
   492f0:	000b883a 	mov	r5,zero
   492f4:	81001704 	addi	r4,r16,92
   492f8:	004add80 	call	4add8 <memset>
   492fc:	00800044 	movi	r2,1
   49300:	84000715 	stw	r16,28(r16)
   49304:	85800815 	stw	r22,32(r16)
   49308:	85400915 	stw	r21,36(r16)
   4930c:	85000a15 	stw	r20,40(r16)
   49310:	84c00b15 	stw	r19,44(r16)
   49314:	90800e15 	stw	r2,56(r18)
   49318:	dfc00817 	ldw	ra,32(sp)
   4931c:	ddc00717 	ldw	r23,28(sp)
   49320:	dd800617 	ldw	r22,24(sp)
   49324:	dd400517 	ldw	r21,20(sp)
   49328:	dd000417 	ldw	r20,16(sp)
   4932c:	dcc00317 	ldw	r19,12(sp)
   49330:	dc800217 	ldw	r18,8(sp)
   49334:	dc400117 	ldw	r17,4(sp)
   49338:	dc000017 	ldw	r16,0(sp)
   4933c:	dec00904 	addi	sp,sp,36
   49340:	f800283a 	ret

00049344 <__fp_lock>:
   49344:	0005883a 	mov	r2,zero
   49348:	f800283a 	ret

0004934c <__sfmoreglue>:
   4934c:	defffc04 	addi	sp,sp,-16
   49350:	dc400115 	stw	r17,4(sp)
   49354:	2c7fffc4 	addi	r17,r5,-1
   49358:	8c401a24 	muli	r17,r17,104
   4935c:	dc800215 	stw	r18,8(sp)
   49360:	2825883a 	mov	r18,r5
   49364:	89401d04 	addi	r5,r17,116
   49368:	dc000015 	stw	r16,0(sp)
   4936c:	dfc00315 	stw	ra,12(sp)
   49370:	004a2440 	call	4a244 <_malloc_r>
   49374:	1021883a 	mov	r16,r2
   49378:	10000726 	beq	r2,zero,49398 <__sfmoreglue+0x4c>
   4937c:	11000304 	addi	r4,r2,12
   49380:	10000015 	stw	zero,0(r2)
   49384:	14800115 	stw	r18,4(r2)
   49388:	11000215 	stw	r4,8(r2)
   4938c:	89801a04 	addi	r6,r17,104
   49390:	000b883a 	mov	r5,zero
   49394:	004add80 	call	4add8 <memset>
   49398:	8005883a 	mov	r2,r16
   4939c:	dfc00317 	ldw	ra,12(sp)
   493a0:	dc800217 	ldw	r18,8(sp)
   493a4:	dc400117 	ldw	r17,4(sp)
   493a8:	dc000017 	ldw	r16,0(sp)
   493ac:	dec00404 	addi	sp,sp,16
   493b0:	f800283a 	ret

000493b4 <__sfp>:
   493b4:	defffb04 	addi	sp,sp,-20
   493b8:	dc000015 	stw	r16,0(sp)
   493bc:	04000174 	movhi	r16,5
   493c0:	84115504 	addi	r16,r16,17748
   493c4:	dcc00315 	stw	r19,12(sp)
   493c8:	2027883a 	mov	r19,r4
   493cc:	81000017 	ldw	r4,0(r16)
   493d0:	dfc00415 	stw	ra,16(sp)
   493d4:	dc800215 	stw	r18,8(sp)
   493d8:	20800e17 	ldw	r2,56(r4)
   493dc:	dc400115 	stw	r17,4(sp)
   493e0:	1000021e 	bne	r2,zero,493ec <__sfp+0x38>
   493e4:	00491a80 	call	491a8 <__sinit.part.1>
   493e8:	81000017 	ldw	r4,0(r16)
   493ec:	2480b804 	addi	r18,r4,736
   493f0:	047fffc4 	movi	r17,-1
   493f4:	91000117 	ldw	r4,4(r18)
   493f8:	94000217 	ldw	r16,8(r18)
   493fc:	213fffc4 	addi	r4,r4,-1
   49400:	20000a16 	blt	r4,zero,4942c <__sfp+0x78>
   49404:	8080030f 	ldh	r2,12(r16)
   49408:	10000c26 	beq	r2,zero,4943c <__sfp+0x88>
   4940c:	80c01d04 	addi	r3,r16,116
   49410:	00000206 	br	4941c <__sfp+0x68>
   49414:	18bfe60f 	ldh	r2,-104(r3)
   49418:	10000826 	beq	r2,zero,4943c <__sfp+0x88>
   4941c:	213fffc4 	addi	r4,r4,-1
   49420:	1c3ffd04 	addi	r16,r3,-12
   49424:	18c01a04 	addi	r3,r3,104
   49428:	247ffa1e 	bne	r4,r17,49414 <__alt_data_end+0xfffc9414>
   4942c:	90800017 	ldw	r2,0(r18)
   49430:	10001d26 	beq	r2,zero,494a8 <__sfp+0xf4>
   49434:	1025883a 	mov	r18,r2
   49438:	003fee06 	br	493f4 <__alt_data_end+0xfffc93f4>
   4943c:	00bfffc4 	movi	r2,-1
   49440:	8080038d 	sth	r2,14(r16)
   49444:	00800044 	movi	r2,1
   49448:	8080030d 	sth	r2,12(r16)
   4944c:	80001915 	stw	zero,100(r16)
   49450:	80000015 	stw	zero,0(r16)
   49454:	80000215 	stw	zero,8(r16)
   49458:	80000115 	stw	zero,4(r16)
   4945c:	80000415 	stw	zero,16(r16)
   49460:	80000515 	stw	zero,20(r16)
   49464:	80000615 	stw	zero,24(r16)
   49468:	01800204 	movi	r6,8
   4946c:	000b883a 	mov	r5,zero
   49470:	81001704 	addi	r4,r16,92
   49474:	004add80 	call	4add8 <memset>
   49478:	8005883a 	mov	r2,r16
   4947c:	80000c15 	stw	zero,48(r16)
   49480:	80000d15 	stw	zero,52(r16)
   49484:	80001115 	stw	zero,68(r16)
   49488:	80001215 	stw	zero,72(r16)
   4948c:	dfc00417 	ldw	ra,16(sp)
   49490:	dcc00317 	ldw	r19,12(sp)
   49494:	dc800217 	ldw	r18,8(sp)
   49498:	dc400117 	ldw	r17,4(sp)
   4949c:	dc000017 	ldw	r16,0(sp)
   494a0:	dec00504 	addi	sp,sp,20
   494a4:	f800283a 	ret
   494a8:	01400104 	movi	r5,4
   494ac:	9809883a 	mov	r4,r19
   494b0:	004934c0 	call	4934c <__sfmoreglue>
   494b4:	90800015 	stw	r2,0(r18)
   494b8:	103fde1e 	bne	r2,zero,49434 <__alt_data_end+0xfffc9434>
   494bc:	00800304 	movi	r2,12
   494c0:	98800015 	stw	r2,0(r19)
   494c4:	0005883a 	mov	r2,zero
   494c8:	003ff006 	br	4948c <__alt_data_end+0xfffc948c>

000494cc <_cleanup>:
   494cc:	00800174 	movhi	r2,5
   494d0:	10915504 	addi	r2,r2,17748
   494d4:	11000017 	ldw	r4,0(r2)
   494d8:	01400174 	movhi	r5,5
   494dc:	2977c004 	addi	r5,r5,-8448
   494e0:	0049ee81 	jmpi	49ee8 <_fwalk_reent>

000494e4 <__sinit>:
   494e4:	20800e17 	ldw	r2,56(r4)
   494e8:	10000126 	beq	r2,zero,494f0 <__sinit+0xc>
   494ec:	f800283a 	ret
   494f0:	00491a81 	jmpi	491a8 <__sinit.part.1>

000494f4 <__sfp_lock_acquire>:
   494f4:	f800283a 	ret

000494f8 <__sfp_lock_release>:
   494f8:	f800283a 	ret

000494fc <__sinit_lock_acquire>:
   494fc:	f800283a 	ret

00049500 <__sinit_lock_release>:
   49500:	f800283a 	ret

00049504 <__fp_lock_all>:
   49504:	00800174 	movhi	r2,5
   49508:	10915604 	addi	r2,r2,17752
   4950c:	11000017 	ldw	r4,0(r2)
   49510:	01400174 	movhi	r5,5
   49514:	2964d104 	addi	r5,r5,-27836
   49518:	0049e241 	jmpi	49e24 <_fwalk>

0004951c <__fp_unlock_all>:
   4951c:	00800174 	movhi	r2,5
   49520:	10915604 	addi	r2,r2,17752
   49524:	11000017 	ldw	r4,0(r2)
   49528:	01400174 	movhi	r5,5
   4952c:	29646504 	addi	r5,r5,-28268
   49530:	0049e241 	jmpi	49e24 <_fwalk>

00049534 <_malloc_trim_r>:
   49534:	defffb04 	addi	sp,sp,-20
   49538:	dcc00315 	stw	r19,12(sp)
   4953c:	04c00174 	movhi	r19,5
   49540:	dc800215 	stw	r18,8(sp)
   49544:	dc400115 	stw	r17,4(sp)
   49548:	dc000015 	stw	r16,0(sp)
   4954c:	dfc00415 	stw	ra,16(sp)
   49550:	2821883a 	mov	r16,r5
   49554:	9ccbd104 	addi	r19,r19,12100
   49558:	2025883a 	mov	r18,r4
   4955c:	005016c0 	call	5016c <__malloc_lock>
   49560:	98800217 	ldw	r2,8(r19)
   49564:	14400117 	ldw	r17,4(r2)
   49568:	00bfff04 	movi	r2,-4
   4956c:	88a2703a 	and	r17,r17,r2
   49570:	8c21c83a 	sub	r16,r17,r16
   49574:	8403fbc4 	addi	r16,r16,4079
   49578:	8020d33a 	srli	r16,r16,12
   4957c:	0083ffc4 	movi	r2,4095
   49580:	843fffc4 	addi	r16,r16,-1
   49584:	8020933a 	slli	r16,r16,12
   49588:	1400060e 	bge	r2,r16,495a4 <_malloc_trim_r+0x70>
   4958c:	000b883a 	mov	r5,zero
   49590:	9009883a 	mov	r4,r18
   49594:	004c4d40 	call	4c4d4 <_sbrk_r>
   49598:	98c00217 	ldw	r3,8(r19)
   4959c:	1c47883a 	add	r3,r3,r17
   495a0:	10c00a26 	beq	r2,r3,495cc <_malloc_trim_r+0x98>
   495a4:	9009883a 	mov	r4,r18
   495a8:	00501900 	call	50190 <__malloc_unlock>
   495ac:	0005883a 	mov	r2,zero
   495b0:	dfc00417 	ldw	ra,16(sp)
   495b4:	dcc00317 	ldw	r19,12(sp)
   495b8:	dc800217 	ldw	r18,8(sp)
   495bc:	dc400117 	ldw	r17,4(sp)
   495c0:	dc000017 	ldw	r16,0(sp)
   495c4:	dec00504 	addi	sp,sp,20
   495c8:	f800283a 	ret
   495cc:	040bc83a 	sub	r5,zero,r16
   495d0:	9009883a 	mov	r4,r18
   495d4:	004c4d40 	call	4c4d4 <_sbrk_r>
   495d8:	00ffffc4 	movi	r3,-1
   495dc:	10c00d26 	beq	r2,r3,49614 <_malloc_trim_r+0xe0>
   495e0:	00c00174 	movhi	r3,5
   495e4:	18d83404 	addi	r3,r3,24784
   495e8:	18800017 	ldw	r2,0(r3)
   495ec:	99000217 	ldw	r4,8(r19)
   495f0:	8c23c83a 	sub	r17,r17,r16
   495f4:	8c400054 	ori	r17,r17,1
   495f8:	1421c83a 	sub	r16,r2,r16
   495fc:	24400115 	stw	r17,4(r4)
   49600:	9009883a 	mov	r4,r18
   49604:	1c000015 	stw	r16,0(r3)
   49608:	00501900 	call	50190 <__malloc_unlock>
   4960c:	00800044 	movi	r2,1
   49610:	003fe706 	br	495b0 <__alt_data_end+0xfffc95b0>
   49614:	000b883a 	mov	r5,zero
   49618:	9009883a 	mov	r4,r18
   4961c:	004c4d40 	call	4c4d4 <_sbrk_r>
   49620:	99000217 	ldw	r4,8(r19)
   49624:	014003c4 	movi	r5,15
   49628:	1107c83a 	sub	r3,r2,r4
   4962c:	28ffdd0e 	bge	r5,r3,495a4 <__alt_data_end+0xfffc95a4>
   49630:	01400174 	movhi	r5,5
   49634:	29515804 	addi	r5,r5,17760
   49638:	29400017 	ldw	r5,0(r5)
   4963c:	18c00054 	ori	r3,r3,1
   49640:	20c00115 	stw	r3,4(r4)
   49644:	00c00174 	movhi	r3,5
   49648:	1145c83a 	sub	r2,r2,r5
   4964c:	18d83404 	addi	r3,r3,24784
   49650:	18800015 	stw	r2,0(r3)
   49654:	003fd306 	br	495a4 <__alt_data_end+0xfffc95a4>

00049658 <_free_r>:
   49658:	28004126 	beq	r5,zero,49760 <_free_r+0x108>
   4965c:	defffd04 	addi	sp,sp,-12
   49660:	dc400115 	stw	r17,4(sp)
   49664:	dc000015 	stw	r16,0(sp)
   49668:	2023883a 	mov	r17,r4
   4966c:	2821883a 	mov	r16,r5
   49670:	dfc00215 	stw	ra,8(sp)
   49674:	005016c0 	call	5016c <__malloc_lock>
   49678:	81ffff17 	ldw	r7,-4(r16)
   4967c:	00bfff84 	movi	r2,-2
   49680:	01000174 	movhi	r4,5
   49684:	81bffe04 	addi	r6,r16,-8
   49688:	3884703a 	and	r2,r7,r2
   4968c:	210bd104 	addi	r4,r4,12100
   49690:	308b883a 	add	r5,r6,r2
   49694:	2a400117 	ldw	r9,4(r5)
   49698:	22000217 	ldw	r8,8(r4)
   4969c:	00ffff04 	movi	r3,-4
   496a0:	48c6703a 	and	r3,r9,r3
   496a4:	2a005726 	beq	r5,r8,49804 <_free_r+0x1ac>
   496a8:	28c00115 	stw	r3,4(r5)
   496ac:	39c0004c 	andi	r7,r7,1
   496b0:	3800091e 	bne	r7,zero,496d8 <_free_r+0x80>
   496b4:	823ffe17 	ldw	r8,-8(r16)
   496b8:	22400204 	addi	r9,r4,8
   496bc:	320dc83a 	sub	r6,r6,r8
   496c0:	31c00217 	ldw	r7,8(r6)
   496c4:	1205883a 	add	r2,r2,r8
   496c8:	3a406526 	beq	r7,r9,49860 <_free_r+0x208>
   496cc:	32000317 	ldw	r8,12(r6)
   496d0:	3a000315 	stw	r8,12(r7)
   496d4:	41c00215 	stw	r7,8(r8)
   496d8:	28cf883a 	add	r7,r5,r3
   496dc:	39c00117 	ldw	r7,4(r7)
   496e0:	39c0004c 	andi	r7,r7,1
   496e4:	38003a26 	beq	r7,zero,497d0 <_free_r+0x178>
   496e8:	10c00054 	ori	r3,r2,1
   496ec:	30c00115 	stw	r3,4(r6)
   496f0:	3087883a 	add	r3,r6,r2
   496f4:	18800015 	stw	r2,0(r3)
   496f8:	00c07fc4 	movi	r3,511
   496fc:	18801936 	bltu	r3,r2,49764 <_free_r+0x10c>
   49700:	1004d0fa 	srli	r2,r2,3
   49704:	01c00044 	movi	r7,1
   49708:	21400117 	ldw	r5,4(r4)
   4970c:	10c00044 	addi	r3,r2,1
   49710:	18c7883a 	add	r3,r3,r3
   49714:	1005d0ba 	srai	r2,r2,2
   49718:	18c7883a 	add	r3,r3,r3
   4971c:	18c7883a 	add	r3,r3,r3
   49720:	1907883a 	add	r3,r3,r4
   49724:	3884983a 	sll	r2,r7,r2
   49728:	19c00017 	ldw	r7,0(r3)
   4972c:	1a3ffe04 	addi	r8,r3,-8
   49730:	1144b03a 	or	r2,r2,r5
   49734:	32000315 	stw	r8,12(r6)
   49738:	31c00215 	stw	r7,8(r6)
   4973c:	20800115 	stw	r2,4(r4)
   49740:	19800015 	stw	r6,0(r3)
   49744:	39800315 	stw	r6,12(r7)
   49748:	8809883a 	mov	r4,r17
   4974c:	dfc00217 	ldw	ra,8(sp)
   49750:	dc400117 	ldw	r17,4(sp)
   49754:	dc000017 	ldw	r16,0(sp)
   49758:	dec00304 	addi	sp,sp,12
   4975c:	00501901 	jmpi	50190 <__malloc_unlock>
   49760:	f800283a 	ret
   49764:	100ad27a 	srli	r5,r2,9
   49768:	00c00104 	movi	r3,4
   4976c:	19404a36 	bltu	r3,r5,49898 <_free_r+0x240>
   49770:	100ad1ba 	srli	r5,r2,6
   49774:	28c00e44 	addi	r3,r5,57
   49778:	18c7883a 	add	r3,r3,r3
   4977c:	29400e04 	addi	r5,r5,56
   49780:	18c7883a 	add	r3,r3,r3
   49784:	18c7883a 	add	r3,r3,r3
   49788:	1909883a 	add	r4,r3,r4
   4978c:	20c00017 	ldw	r3,0(r4)
   49790:	01c00174 	movhi	r7,5
   49794:	213ffe04 	addi	r4,r4,-8
   49798:	39cbd104 	addi	r7,r7,12100
   4979c:	20c04426 	beq	r4,r3,498b0 <_free_r+0x258>
   497a0:	01ffff04 	movi	r7,-4
   497a4:	19400117 	ldw	r5,4(r3)
   497a8:	29ca703a 	and	r5,r5,r7
   497ac:	1140022e 	bgeu	r2,r5,497b8 <_free_r+0x160>
   497b0:	18c00217 	ldw	r3,8(r3)
   497b4:	20fffb1e 	bne	r4,r3,497a4 <__alt_data_end+0xfffc97a4>
   497b8:	19000317 	ldw	r4,12(r3)
   497bc:	31000315 	stw	r4,12(r6)
   497c0:	30c00215 	stw	r3,8(r6)
   497c4:	21800215 	stw	r6,8(r4)
   497c8:	19800315 	stw	r6,12(r3)
   497cc:	003fde06 	br	49748 <__alt_data_end+0xfffc9748>
   497d0:	29c00217 	ldw	r7,8(r5)
   497d4:	10c5883a 	add	r2,r2,r3
   497d8:	00c00174 	movhi	r3,5
   497dc:	18cbd304 	addi	r3,r3,12108
   497e0:	38c03b26 	beq	r7,r3,498d0 <_free_r+0x278>
   497e4:	2a000317 	ldw	r8,12(r5)
   497e8:	11400054 	ori	r5,r2,1
   497ec:	3087883a 	add	r3,r6,r2
   497f0:	3a000315 	stw	r8,12(r7)
   497f4:	41c00215 	stw	r7,8(r8)
   497f8:	31400115 	stw	r5,4(r6)
   497fc:	18800015 	stw	r2,0(r3)
   49800:	003fbd06 	br	496f8 <__alt_data_end+0xfffc96f8>
   49804:	39c0004c 	andi	r7,r7,1
   49808:	10c5883a 	add	r2,r2,r3
   4980c:	3800071e 	bne	r7,zero,4982c <_free_r+0x1d4>
   49810:	81fffe17 	ldw	r7,-8(r16)
   49814:	31cdc83a 	sub	r6,r6,r7
   49818:	30c00317 	ldw	r3,12(r6)
   4981c:	31400217 	ldw	r5,8(r6)
   49820:	11c5883a 	add	r2,r2,r7
   49824:	28c00315 	stw	r3,12(r5)
   49828:	19400215 	stw	r5,8(r3)
   4982c:	10c00054 	ori	r3,r2,1
   49830:	30c00115 	stw	r3,4(r6)
   49834:	00c00174 	movhi	r3,5
   49838:	18d15904 	addi	r3,r3,17764
   4983c:	18c00017 	ldw	r3,0(r3)
   49840:	21800215 	stw	r6,8(r4)
   49844:	10ffc036 	bltu	r2,r3,49748 <__alt_data_end+0xfffc9748>
   49848:	00800174 	movhi	r2,5
   4984c:	10982b04 	addi	r2,r2,24748
   49850:	11400017 	ldw	r5,0(r2)
   49854:	8809883a 	mov	r4,r17
   49858:	00495340 	call	49534 <_malloc_trim_r>
   4985c:	003fba06 	br	49748 <__alt_data_end+0xfffc9748>
   49860:	28c9883a 	add	r4,r5,r3
   49864:	21000117 	ldw	r4,4(r4)
   49868:	2100004c 	andi	r4,r4,1
   4986c:	2000391e 	bne	r4,zero,49954 <_free_r+0x2fc>
   49870:	29c00217 	ldw	r7,8(r5)
   49874:	29000317 	ldw	r4,12(r5)
   49878:	1885883a 	add	r2,r3,r2
   4987c:	10c00054 	ori	r3,r2,1
   49880:	39000315 	stw	r4,12(r7)
   49884:	21c00215 	stw	r7,8(r4)
   49888:	30c00115 	stw	r3,4(r6)
   4988c:	308d883a 	add	r6,r6,r2
   49890:	30800015 	stw	r2,0(r6)
   49894:	003fac06 	br	49748 <__alt_data_end+0xfffc9748>
   49898:	00c00504 	movi	r3,20
   4989c:	19401536 	bltu	r3,r5,498f4 <_free_r+0x29c>
   498a0:	28c01704 	addi	r3,r5,92
   498a4:	18c7883a 	add	r3,r3,r3
   498a8:	294016c4 	addi	r5,r5,91
   498ac:	003fb406 	br	49780 <__alt_data_end+0xfffc9780>
   498b0:	280bd0ba 	srai	r5,r5,2
   498b4:	00c00044 	movi	r3,1
   498b8:	38800117 	ldw	r2,4(r7)
   498bc:	194a983a 	sll	r5,r3,r5
   498c0:	2007883a 	mov	r3,r4
   498c4:	2884b03a 	or	r2,r5,r2
   498c8:	38800115 	stw	r2,4(r7)
   498cc:	003fbb06 	br	497bc <__alt_data_end+0xfffc97bc>
   498d0:	21800515 	stw	r6,20(r4)
   498d4:	21800415 	stw	r6,16(r4)
   498d8:	10c00054 	ori	r3,r2,1
   498dc:	31c00315 	stw	r7,12(r6)
   498e0:	31c00215 	stw	r7,8(r6)
   498e4:	30c00115 	stw	r3,4(r6)
   498e8:	308d883a 	add	r6,r6,r2
   498ec:	30800015 	stw	r2,0(r6)
   498f0:	003f9506 	br	49748 <__alt_data_end+0xfffc9748>
   498f4:	00c01504 	movi	r3,84
   498f8:	19400536 	bltu	r3,r5,49910 <_free_r+0x2b8>
   498fc:	100ad33a 	srli	r5,r2,12
   49900:	28c01bc4 	addi	r3,r5,111
   49904:	18c7883a 	add	r3,r3,r3
   49908:	29401b84 	addi	r5,r5,110
   4990c:	003f9c06 	br	49780 <__alt_data_end+0xfffc9780>
   49910:	00c05504 	movi	r3,340
   49914:	19400536 	bltu	r3,r5,4992c <_free_r+0x2d4>
   49918:	100ad3fa 	srli	r5,r2,15
   4991c:	28c01e04 	addi	r3,r5,120
   49920:	18c7883a 	add	r3,r3,r3
   49924:	29401dc4 	addi	r5,r5,119
   49928:	003f9506 	br	49780 <__alt_data_end+0xfffc9780>
   4992c:	00c15504 	movi	r3,1364
   49930:	19400536 	bltu	r3,r5,49948 <_free_r+0x2f0>
   49934:	100ad4ba 	srli	r5,r2,18
   49938:	28c01f44 	addi	r3,r5,125
   4993c:	18c7883a 	add	r3,r3,r3
   49940:	29401f04 	addi	r5,r5,124
   49944:	003f8e06 	br	49780 <__alt_data_end+0xfffc9780>
   49948:	00c03f84 	movi	r3,254
   4994c:	01401f84 	movi	r5,126
   49950:	003f8b06 	br	49780 <__alt_data_end+0xfffc9780>
   49954:	10c00054 	ori	r3,r2,1
   49958:	30c00115 	stw	r3,4(r6)
   4995c:	308d883a 	add	r6,r6,r2
   49960:	30800015 	stw	r2,0(r6)
   49964:	003f7806 	br	49748 <__alt_data_end+0xfffc9748>

00049968 <__sfvwrite_r>:
   49968:	30800217 	ldw	r2,8(r6)
   4996c:	10006726 	beq	r2,zero,49b0c <__sfvwrite_r+0x1a4>
   49970:	28c0030b 	ldhu	r3,12(r5)
   49974:	defff404 	addi	sp,sp,-48
   49978:	dd400715 	stw	r21,28(sp)
   4997c:	dd000615 	stw	r20,24(sp)
   49980:	dc000215 	stw	r16,8(sp)
   49984:	dfc00b15 	stw	ra,44(sp)
   49988:	df000a15 	stw	fp,40(sp)
   4998c:	ddc00915 	stw	r23,36(sp)
   49990:	dd800815 	stw	r22,32(sp)
   49994:	dcc00515 	stw	r19,20(sp)
   49998:	dc800415 	stw	r18,16(sp)
   4999c:	dc400315 	stw	r17,12(sp)
   499a0:	1880020c 	andi	r2,r3,8
   499a4:	2821883a 	mov	r16,r5
   499a8:	202b883a 	mov	r21,r4
   499ac:	3029883a 	mov	r20,r6
   499b0:	10002726 	beq	r2,zero,49a50 <__sfvwrite_r+0xe8>
   499b4:	28800417 	ldw	r2,16(r5)
   499b8:	10002526 	beq	r2,zero,49a50 <__sfvwrite_r+0xe8>
   499bc:	1880008c 	andi	r2,r3,2
   499c0:	a4400017 	ldw	r17,0(r20)
   499c4:	10002a26 	beq	r2,zero,49a70 <__sfvwrite_r+0x108>
   499c8:	05a00034 	movhi	r22,32768
   499cc:	0027883a 	mov	r19,zero
   499d0:	0025883a 	mov	r18,zero
   499d4:	b5bf0004 	addi	r22,r22,-1024
   499d8:	980d883a 	mov	r6,r19
   499dc:	a809883a 	mov	r4,r21
   499e0:	90004626 	beq	r18,zero,49afc <__sfvwrite_r+0x194>
   499e4:	900f883a 	mov	r7,r18
   499e8:	b480022e 	bgeu	r22,r18,499f4 <__sfvwrite_r+0x8c>
   499ec:	01e00034 	movhi	r7,32768
   499f0:	39ff0004 	addi	r7,r7,-1024
   499f4:	80800917 	ldw	r2,36(r16)
   499f8:	81400717 	ldw	r5,28(r16)
   499fc:	103ee83a 	callr	r2
   49a00:	0080570e 	bge	zero,r2,49b60 <__sfvwrite_r+0x1f8>
   49a04:	a0c00217 	ldw	r3,8(r20)
   49a08:	98a7883a 	add	r19,r19,r2
   49a0c:	90a5c83a 	sub	r18,r18,r2
   49a10:	1885c83a 	sub	r2,r3,r2
   49a14:	a0800215 	stw	r2,8(r20)
   49a18:	103fef1e 	bne	r2,zero,499d8 <__alt_data_end+0xfffc99d8>
   49a1c:	0005883a 	mov	r2,zero
   49a20:	dfc00b17 	ldw	ra,44(sp)
   49a24:	df000a17 	ldw	fp,40(sp)
   49a28:	ddc00917 	ldw	r23,36(sp)
   49a2c:	dd800817 	ldw	r22,32(sp)
   49a30:	dd400717 	ldw	r21,28(sp)
   49a34:	dd000617 	ldw	r20,24(sp)
   49a38:	dcc00517 	ldw	r19,20(sp)
   49a3c:	dc800417 	ldw	r18,16(sp)
   49a40:	dc400317 	ldw	r17,12(sp)
   49a44:	dc000217 	ldw	r16,8(sp)
   49a48:	dec00c04 	addi	sp,sp,48
   49a4c:	f800283a 	ret
   49a50:	800b883a 	mov	r5,r16
   49a54:	a809883a 	mov	r4,r21
   49a58:	00475100 	call	47510 <__swsetup_r>
   49a5c:	1000eb1e 	bne	r2,zero,49e0c <__sfvwrite_r+0x4a4>
   49a60:	80c0030b 	ldhu	r3,12(r16)
   49a64:	a4400017 	ldw	r17,0(r20)
   49a68:	1880008c 	andi	r2,r3,2
   49a6c:	103fd61e 	bne	r2,zero,499c8 <__alt_data_end+0xfffc99c8>
   49a70:	1880004c 	andi	r2,r3,1
   49a74:	10003f1e 	bne	r2,zero,49b74 <__sfvwrite_r+0x20c>
   49a78:	0039883a 	mov	fp,zero
   49a7c:	0025883a 	mov	r18,zero
   49a80:	90001a26 	beq	r18,zero,49aec <__sfvwrite_r+0x184>
   49a84:	1880800c 	andi	r2,r3,512
   49a88:	84c00217 	ldw	r19,8(r16)
   49a8c:	10002126 	beq	r2,zero,49b14 <__sfvwrite_r+0x1ac>
   49a90:	982f883a 	mov	r23,r19
   49a94:	94c09336 	bltu	r18,r19,49ce4 <__sfvwrite_r+0x37c>
   49a98:	1881200c 	andi	r2,r3,1152
   49a9c:	10009e1e 	bne	r2,zero,49d18 <__sfvwrite_r+0x3b0>
   49aa0:	81000017 	ldw	r4,0(r16)
   49aa4:	b80d883a 	mov	r6,r23
   49aa8:	e00b883a 	mov	r5,fp
   49aac:	004ac7c0 	call	4ac7c <memmove>
   49ab0:	80c00217 	ldw	r3,8(r16)
   49ab4:	81000017 	ldw	r4,0(r16)
   49ab8:	9005883a 	mov	r2,r18
   49abc:	1ce7c83a 	sub	r19,r3,r19
   49ac0:	25cf883a 	add	r7,r4,r23
   49ac4:	84c00215 	stw	r19,8(r16)
   49ac8:	81c00015 	stw	r7,0(r16)
   49acc:	a0c00217 	ldw	r3,8(r20)
   49ad0:	e0b9883a 	add	fp,fp,r2
   49ad4:	90a5c83a 	sub	r18,r18,r2
   49ad8:	18a7c83a 	sub	r19,r3,r2
   49adc:	a4c00215 	stw	r19,8(r20)
   49ae0:	983fce26 	beq	r19,zero,49a1c <__alt_data_end+0xfffc9a1c>
   49ae4:	80c0030b 	ldhu	r3,12(r16)
   49ae8:	903fe61e 	bne	r18,zero,49a84 <__alt_data_end+0xfffc9a84>
   49aec:	8f000017 	ldw	fp,0(r17)
   49af0:	8c800117 	ldw	r18,4(r17)
   49af4:	8c400204 	addi	r17,r17,8
   49af8:	003fe106 	br	49a80 <__alt_data_end+0xfffc9a80>
   49afc:	8cc00017 	ldw	r19,0(r17)
   49b00:	8c800117 	ldw	r18,4(r17)
   49b04:	8c400204 	addi	r17,r17,8
   49b08:	003fb306 	br	499d8 <__alt_data_end+0xfffc99d8>
   49b0c:	0005883a 	mov	r2,zero
   49b10:	f800283a 	ret
   49b14:	81000017 	ldw	r4,0(r16)
   49b18:	80800417 	ldw	r2,16(r16)
   49b1c:	11005736 	bltu	r2,r4,49c7c <__sfvwrite_r+0x314>
   49b20:	85c00517 	ldw	r23,20(r16)
   49b24:	95c05536 	bltu	r18,r23,49c7c <__sfvwrite_r+0x314>
   49b28:	00a00034 	movhi	r2,32768
   49b2c:	10bfffc4 	addi	r2,r2,-1
   49b30:	9009883a 	mov	r4,r18
   49b34:	1480012e 	bgeu	r2,r18,49b3c <__sfvwrite_r+0x1d4>
   49b38:	1009883a 	mov	r4,r2
   49b3c:	b80b883a 	mov	r5,r23
   49b40:	00430180 	call	43018 <__divsi3>
   49b44:	15cf383a 	mul	r7,r2,r23
   49b48:	81400717 	ldw	r5,28(r16)
   49b4c:	80800917 	ldw	r2,36(r16)
   49b50:	e00d883a 	mov	r6,fp
   49b54:	a809883a 	mov	r4,r21
   49b58:	103ee83a 	callr	r2
   49b5c:	00bfdb16 	blt	zero,r2,49acc <__alt_data_end+0xfffc9acc>
   49b60:	8080030b 	ldhu	r2,12(r16)
   49b64:	10801014 	ori	r2,r2,64
   49b68:	8080030d 	sth	r2,12(r16)
   49b6c:	00bfffc4 	movi	r2,-1
   49b70:	003fab06 	br	49a20 <__alt_data_end+0xfffc9a20>
   49b74:	0027883a 	mov	r19,zero
   49b78:	0011883a 	mov	r8,zero
   49b7c:	0039883a 	mov	fp,zero
   49b80:	0025883a 	mov	r18,zero
   49b84:	90001f26 	beq	r18,zero,49c04 <__sfvwrite_r+0x29c>
   49b88:	40005a26 	beq	r8,zero,49cf4 <__sfvwrite_r+0x38c>
   49b8c:	982d883a 	mov	r22,r19
   49b90:	94c0012e 	bgeu	r18,r19,49b98 <__sfvwrite_r+0x230>
   49b94:	902d883a 	mov	r22,r18
   49b98:	81000017 	ldw	r4,0(r16)
   49b9c:	80800417 	ldw	r2,16(r16)
   49ba0:	b02f883a 	mov	r23,r22
   49ba4:	81c00517 	ldw	r7,20(r16)
   49ba8:	1100032e 	bgeu	r2,r4,49bb8 <__sfvwrite_r+0x250>
   49bac:	80c00217 	ldw	r3,8(r16)
   49bb0:	38c7883a 	add	r3,r7,r3
   49bb4:	1d801816 	blt	r3,r22,49c18 <__sfvwrite_r+0x2b0>
   49bb8:	b1c03e16 	blt	r22,r7,49cb4 <__sfvwrite_r+0x34c>
   49bbc:	80800917 	ldw	r2,36(r16)
   49bc0:	81400717 	ldw	r5,28(r16)
   49bc4:	e00d883a 	mov	r6,fp
   49bc8:	da000115 	stw	r8,4(sp)
   49bcc:	a809883a 	mov	r4,r21
   49bd0:	103ee83a 	callr	r2
   49bd4:	102f883a 	mov	r23,r2
   49bd8:	da000117 	ldw	r8,4(sp)
   49bdc:	00bfe00e 	bge	zero,r2,49b60 <__alt_data_end+0xfffc9b60>
   49be0:	9de7c83a 	sub	r19,r19,r23
   49be4:	98001f26 	beq	r19,zero,49c64 <__sfvwrite_r+0x2fc>
   49be8:	a0800217 	ldw	r2,8(r20)
   49bec:	e5f9883a 	add	fp,fp,r23
   49bf0:	95e5c83a 	sub	r18,r18,r23
   49bf4:	15efc83a 	sub	r23,r2,r23
   49bf8:	a5c00215 	stw	r23,8(r20)
   49bfc:	b83f8726 	beq	r23,zero,49a1c <__alt_data_end+0xfffc9a1c>
   49c00:	903fe11e 	bne	r18,zero,49b88 <__alt_data_end+0xfffc9b88>
   49c04:	8f000017 	ldw	fp,0(r17)
   49c08:	8c800117 	ldw	r18,4(r17)
   49c0c:	0011883a 	mov	r8,zero
   49c10:	8c400204 	addi	r17,r17,8
   49c14:	003fdb06 	br	49b84 <__alt_data_end+0xfffc9b84>
   49c18:	180d883a 	mov	r6,r3
   49c1c:	e00b883a 	mov	r5,fp
   49c20:	da000115 	stw	r8,4(sp)
   49c24:	d8c00015 	stw	r3,0(sp)
   49c28:	004ac7c0 	call	4ac7c <memmove>
   49c2c:	d8c00017 	ldw	r3,0(sp)
   49c30:	80800017 	ldw	r2,0(r16)
   49c34:	800b883a 	mov	r5,r16
   49c38:	a809883a 	mov	r4,r21
   49c3c:	10c5883a 	add	r2,r2,r3
   49c40:	80800015 	stw	r2,0(r16)
   49c44:	d8c00015 	stw	r3,0(sp)
   49c48:	00491080 	call	49108 <_fflush_r>
   49c4c:	d8c00017 	ldw	r3,0(sp)
   49c50:	da000117 	ldw	r8,4(sp)
   49c54:	103fc21e 	bne	r2,zero,49b60 <__alt_data_end+0xfffc9b60>
   49c58:	182f883a 	mov	r23,r3
   49c5c:	9de7c83a 	sub	r19,r19,r23
   49c60:	983fe11e 	bne	r19,zero,49be8 <__alt_data_end+0xfffc9be8>
   49c64:	800b883a 	mov	r5,r16
   49c68:	a809883a 	mov	r4,r21
   49c6c:	00491080 	call	49108 <_fflush_r>
   49c70:	103fbb1e 	bne	r2,zero,49b60 <__alt_data_end+0xfffc9b60>
   49c74:	0011883a 	mov	r8,zero
   49c78:	003fdb06 	br	49be8 <__alt_data_end+0xfffc9be8>
   49c7c:	94c0012e 	bgeu	r18,r19,49c84 <__sfvwrite_r+0x31c>
   49c80:	9027883a 	mov	r19,r18
   49c84:	980d883a 	mov	r6,r19
   49c88:	e00b883a 	mov	r5,fp
   49c8c:	004ac7c0 	call	4ac7c <memmove>
   49c90:	80800217 	ldw	r2,8(r16)
   49c94:	80c00017 	ldw	r3,0(r16)
   49c98:	14c5c83a 	sub	r2,r2,r19
   49c9c:	1cc7883a 	add	r3,r3,r19
   49ca0:	80800215 	stw	r2,8(r16)
   49ca4:	80c00015 	stw	r3,0(r16)
   49ca8:	10004326 	beq	r2,zero,49db8 <__sfvwrite_r+0x450>
   49cac:	9805883a 	mov	r2,r19
   49cb0:	003f8606 	br	49acc <__alt_data_end+0xfffc9acc>
   49cb4:	b00d883a 	mov	r6,r22
   49cb8:	e00b883a 	mov	r5,fp
   49cbc:	da000115 	stw	r8,4(sp)
   49cc0:	004ac7c0 	call	4ac7c <memmove>
   49cc4:	80800217 	ldw	r2,8(r16)
   49cc8:	80c00017 	ldw	r3,0(r16)
   49ccc:	da000117 	ldw	r8,4(sp)
   49cd0:	1585c83a 	sub	r2,r2,r22
   49cd4:	1dad883a 	add	r22,r3,r22
   49cd8:	80800215 	stw	r2,8(r16)
   49cdc:	85800015 	stw	r22,0(r16)
   49ce0:	003fbf06 	br	49be0 <__alt_data_end+0xfffc9be0>
   49ce4:	81000017 	ldw	r4,0(r16)
   49ce8:	9027883a 	mov	r19,r18
   49cec:	902f883a 	mov	r23,r18
   49cf0:	003f6c06 	br	49aa4 <__alt_data_end+0xfffc9aa4>
   49cf4:	900d883a 	mov	r6,r18
   49cf8:	01400284 	movi	r5,10
   49cfc:	e009883a 	mov	r4,fp
   49d00:	004aa500 	call	4aa50 <memchr>
   49d04:	10003e26 	beq	r2,zero,49e00 <__sfvwrite_r+0x498>
   49d08:	10800044 	addi	r2,r2,1
   49d0c:	1727c83a 	sub	r19,r2,fp
   49d10:	02000044 	movi	r8,1
   49d14:	003f9d06 	br	49b8c <__alt_data_end+0xfffc9b8c>
   49d18:	80800517 	ldw	r2,20(r16)
   49d1c:	81400417 	ldw	r5,16(r16)
   49d20:	81c00017 	ldw	r7,0(r16)
   49d24:	10a7883a 	add	r19,r2,r2
   49d28:	9885883a 	add	r2,r19,r2
   49d2c:	1026d7fa 	srli	r19,r2,31
   49d30:	396dc83a 	sub	r22,r7,r5
   49d34:	b1000044 	addi	r4,r22,1
   49d38:	9885883a 	add	r2,r19,r2
   49d3c:	1027d07a 	srai	r19,r2,1
   49d40:	2485883a 	add	r2,r4,r18
   49d44:	980d883a 	mov	r6,r19
   49d48:	9880022e 	bgeu	r19,r2,49d54 <__sfvwrite_r+0x3ec>
   49d4c:	1027883a 	mov	r19,r2
   49d50:	100d883a 	mov	r6,r2
   49d54:	18c1000c 	andi	r3,r3,1024
   49d58:	18001c26 	beq	r3,zero,49dcc <__sfvwrite_r+0x464>
   49d5c:	300b883a 	mov	r5,r6
   49d60:	a809883a 	mov	r4,r21
   49d64:	004a2440 	call	4a244 <_malloc_r>
   49d68:	102f883a 	mov	r23,r2
   49d6c:	10002926 	beq	r2,zero,49e14 <__sfvwrite_r+0x4ac>
   49d70:	81400417 	ldw	r5,16(r16)
   49d74:	b00d883a 	mov	r6,r22
   49d78:	1009883a 	mov	r4,r2
   49d7c:	004ab340 	call	4ab34 <memcpy>
   49d80:	8080030b 	ldhu	r2,12(r16)
   49d84:	00fedfc4 	movi	r3,-1153
   49d88:	10c4703a 	and	r2,r2,r3
   49d8c:	10802014 	ori	r2,r2,128
   49d90:	8080030d 	sth	r2,12(r16)
   49d94:	bd89883a 	add	r4,r23,r22
   49d98:	9d8fc83a 	sub	r7,r19,r22
   49d9c:	85c00415 	stw	r23,16(r16)
   49da0:	84c00515 	stw	r19,20(r16)
   49da4:	81000015 	stw	r4,0(r16)
   49da8:	9027883a 	mov	r19,r18
   49dac:	81c00215 	stw	r7,8(r16)
   49db0:	902f883a 	mov	r23,r18
   49db4:	003f3b06 	br	49aa4 <__alt_data_end+0xfffc9aa4>
   49db8:	800b883a 	mov	r5,r16
   49dbc:	a809883a 	mov	r4,r21
   49dc0:	00491080 	call	49108 <_fflush_r>
   49dc4:	103fb926 	beq	r2,zero,49cac <__alt_data_end+0xfffc9cac>
   49dc8:	003f6506 	br	49b60 <__alt_data_end+0xfffc9b60>
   49dcc:	a809883a 	mov	r4,r21
   49dd0:	004befc0 	call	4befc <_realloc_r>
   49dd4:	102f883a 	mov	r23,r2
   49dd8:	103fee1e 	bne	r2,zero,49d94 <__alt_data_end+0xfffc9d94>
   49ddc:	81400417 	ldw	r5,16(r16)
   49de0:	a809883a 	mov	r4,r21
   49de4:	00496580 	call	49658 <_free_r>
   49de8:	8080030b 	ldhu	r2,12(r16)
   49dec:	00ffdfc4 	movi	r3,-129
   49df0:	1884703a 	and	r2,r3,r2
   49df4:	00c00304 	movi	r3,12
   49df8:	a8c00015 	stw	r3,0(r21)
   49dfc:	003f5906 	br	49b64 <__alt_data_end+0xfffc9b64>
   49e00:	94c00044 	addi	r19,r18,1
   49e04:	02000044 	movi	r8,1
   49e08:	003f6006 	br	49b8c <__alt_data_end+0xfffc9b8c>
   49e0c:	00bfffc4 	movi	r2,-1
   49e10:	003f0306 	br	49a20 <__alt_data_end+0xfffc9a20>
   49e14:	00800304 	movi	r2,12
   49e18:	a8800015 	stw	r2,0(r21)
   49e1c:	8080030b 	ldhu	r2,12(r16)
   49e20:	003f5006 	br	49b64 <__alt_data_end+0xfffc9b64>

00049e24 <_fwalk>:
   49e24:	defff704 	addi	sp,sp,-36
   49e28:	dd000415 	stw	r20,16(sp)
   49e2c:	dfc00815 	stw	ra,32(sp)
   49e30:	ddc00715 	stw	r23,28(sp)
   49e34:	dd800615 	stw	r22,24(sp)
   49e38:	dd400515 	stw	r21,20(sp)
   49e3c:	dcc00315 	stw	r19,12(sp)
   49e40:	dc800215 	stw	r18,8(sp)
   49e44:	dc400115 	stw	r17,4(sp)
   49e48:	dc000015 	stw	r16,0(sp)
   49e4c:	2500b804 	addi	r20,r4,736
   49e50:	a0002326 	beq	r20,zero,49ee0 <_fwalk+0xbc>
   49e54:	282b883a 	mov	r21,r5
   49e58:	002f883a 	mov	r23,zero
   49e5c:	05800044 	movi	r22,1
   49e60:	04ffffc4 	movi	r19,-1
   49e64:	a4400117 	ldw	r17,4(r20)
   49e68:	a4800217 	ldw	r18,8(r20)
   49e6c:	8c7fffc4 	addi	r17,r17,-1
   49e70:	88000d16 	blt	r17,zero,49ea8 <_fwalk+0x84>
   49e74:	94000304 	addi	r16,r18,12
   49e78:	94800384 	addi	r18,r18,14
   49e7c:	8080000b 	ldhu	r2,0(r16)
   49e80:	8c7fffc4 	addi	r17,r17,-1
   49e84:	813ffd04 	addi	r4,r16,-12
   49e88:	b080042e 	bgeu	r22,r2,49e9c <_fwalk+0x78>
   49e8c:	9080000f 	ldh	r2,0(r18)
   49e90:	14c00226 	beq	r2,r19,49e9c <_fwalk+0x78>
   49e94:	a83ee83a 	callr	r21
   49e98:	b8aeb03a 	or	r23,r23,r2
   49e9c:	84001a04 	addi	r16,r16,104
   49ea0:	94801a04 	addi	r18,r18,104
   49ea4:	8cfff51e 	bne	r17,r19,49e7c <__alt_data_end+0xfffc9e7c>
   49ea8:	a5000017 	ldw	r20,0(r20)
   49eac:	a03fed1e 	bne	r20,zero,49e64 <__alt_data_end+0xfffc9e64>
   49eb0:	b805883a 	mov	r2,r23
   49eb4:	dfc00817 	ldw	ra,32(sp)
   49eb8:	ddc00717 	ldw	r23,28(sp)
   49ebc:	dd800617 	ldw	r22,24(sp)
   49ec0:	dd400517 	ldw	r21,20(sp)
   49ec4:	dd000417 	ldw	r20,16(sp)
   49ec8:	dcc00317 	ldw	r19,12(sp)
   49ecc:	dc800217 	ldw	r18,8(sp)
   49ed0:	dc400117 	ldw	r17,4(sp)
   49ed4:	dc000017 	ldw	r16,0(sp)
   49ed8:	dec00904 	addi	sp,sp,36
   49edc:	f800283a 	ret
   49ee0:	002f883a 	mov	r23,zero
   49ee4:	003ff206 	br	49eb0 <__alt_data_end+0xfffc9eb0>

00049ee8 <_fwalk_reent>:
   49ee8:	defff704 	addi	sp,sp,-36
   49eec:	dd000415 	stw	r20,16(sp)
   49ef0:	dfc00815 	stw	ra,32(sp)
   49ef4:	ddc00715 	stw	r23,28(sp)
   49ef8:	dd800615 	stw	r22,24(sp)
   49efc:	dd400515 	stw	r21,20(sp)
   49f00:	dcc00315 	stw	r19,12(sp)
   49f04:	dc800215 	stw	r18,8(sp)
   49f08:	dc400115 	stw	r17,4(sp)
   49f0c:	dc000015 	stw	r16,0(sp)
   49f10:	2500b804 	addi	r20,r4,736
   49f14:	a0002326 	beq	r20,zero,49fa4 <_fwalk_reent+0xbc>
   49f18:	282b883a 	mov	r21,r5
   49f1c:	2027883a 	mov	r19,r4
   49f20:	002f883a 	mov	r23,zero
   49f24:	05800044 	movi	r22,1
   49f28:	04bfffc4 	movi	r18,-1
   49f2c:	a4400117 	ldw	r17,4(r20)
   49f30:	a4000217 	ldw	r16,8(r20)
   49f34:	8c7fffc4 	addi	r17,r17,-1
   49f38:	88000c16 	blt	r17,zero,49f6c <_fwalk_reent+0x84>
   49f3c:	84000304 	addi	r16,r16,12
   49f40:	8080000b 	ldhu	r2,0(r16)
   49f44:	8c7fffc4 	addi	r17,r17,-1
   49f48:	817ffd04 	addi	r5,r16,-12
   49f4c:	b080052e 	bgeu	r22,r2,49f64 <_fwalk_reent+0x7c>
   49f50:	8080008f 	ldh	r2,2(r16)
   49f54:	9809883a 	mov	r4,r19
   49f58:	14800226 	beq	r2,r18,49f64 <_fwalk_reent+0x7c>
   49f5c:	a83ee83a 	callr	r21
   49f60:	b8aeb03a 	or	r23,r23,r2
   49f64:	84001a04 	addi	r16,r16,104
   49f68:	8cbff51e 	bne	r17,r18,49f40 <__alt_data_end+0xfffc9f40>
   49f6c:	a5000017 	ldw	r20,0(r20)
   49f70:	a03fee1e 	bne	r20,zero,49f2c <__alt_data_end+0xfffc9f2c>
   49f74:	b805883a 	mov	r2,r23
   49f78:	dfc00817 	ldw	ra,32(sp)
   49f7c:	ddc00717 	ldw	r23,28(sp)
   49f80:	dd800617 	ldw	r22,24(sp)
   49f84:	dd400517 	ldw	r21,20(sp)
   49f88:	dd000417 	ldw	r20,16(sp)
   49f8c:	dcc00317 	ldw	r19,12(sp)
   49f90:	dc800217 	ldw	r18,8(sp)
   49f94:	dc400117 	ldw	r17,4(sp)
   49f98:	dc000017 	ldw	r16,0(sp)
   49f9c:	dec00904 	addi	sp,sp,36
   49fa0:	f800283a 	ret
   49fa4:	002f883a 	mov	r23,zero
   49fa8:	003ff206 	br	49f74 <__alt_data_end+0xfffc9f74>

00049fac <_setlocale_r>:
   49fac:	30001b26 	beq	r6,zero,4a01c <_setlocale_r+0x70>
   49fb0:	01400174 	movhi	r5,5
   49fb4:	defffe04 	addi	sp,sp,-8
   49fb8:	294a4904 	addi	r5,r5,10532
   49fbc:	3009883a 	mov	r4,r6
   49fc0:	dc000015 	stw	r16,0(sp)
   49fc4:	dfc00115 	stw	ra,4(sp)
   49fc8:	3021883a 	mov	r16,r6
   49fcc:	004c6640 	call	4c664 <strcmp>
   49fd0:	1000061e 	bne	r2,zero,49fec <_setlocale_r+0x40>
   49fd4:	00800174 	movhi	r2,5
   49fd8:	108a4804 	addi	r2,r2,10528
   49fdc:	dfc00117 	ldw	ra,4(sp)
   49fe0:	dc000017 	ldw	r16,0(sp)
   49fe4:	dec00204 	addi	sp,sp,8
   49fe8:	f800283a 	ret
   49fec:	01400174 	movhi	r5,5
   49ff0:	294a4804 	addi	r5,r5,10528
   49ff4:	8009883a 	mov	r4,r16
   49ff8:	004c6640 	call	4c664 <strcmp>
   49ffc:	103ff526 	beq	r2,zero,49fd4 <__alt_data_end+0xfffc9fd4>
   4a000:	01400174 	movhi	r5,5
   4a004:	294a3304 	addi	r5,r5,10444
   4a008:	8009883a 	mov	r4,r16
   4a00c:	004c6640 	call	4c664 <strcmp>
   4a010:	103ff026 	beq	r2,zero,49fd4 <__alt_data_end+0xfffc9fd4>
   4a014:	0005883a 	mov	r2,zero
   4a018:	003ff006 	br	49fdc <__alt_data_end+0xfffc9fdc>
   4a01c:	00800174 	movhi	r2,5
   4a020:	108a4804 	addi	r2,r2,10528
   4a024:	f800283a 	ret

0004a028 <__locale_charset>:
   4a028:	00800174 	movhi	r2,5
   4a02c:	108bbb04 	addi	r2,r2,12012
   4a030:	f800283a 	ret

0004a034 <__locale_mb_cur_max>:
   4a034:	00800174 	movhi	r2,5
   4a038:	10915704 	addi	r2,r2,17756
   4a03c:	10800017 	ldw	r2,0(r2)
   4a040:	f800283a 	ret

0004a044 <__locale_msgcharset>:
   4a044:	00800174 	movhi	r2,5
   4a048:	108bb304 	addi	r2,r2,11980
   4a04c:	f800283a 	ret

0004a050 <__locale_cjk_lang>:
   4a050:	0005883a 	mov	r2,zero
   4a054:	f800283a 	ret

0004a058 <_localeconv_r>:
   4a058:	00800174 	movhi	r2,5
   4a05c:	108bc304 	addi	r2,r2,12044
   4a060:	f800283a 	ret

0004a064 <setlocale>:
   4a064:	00800174 	movhi	r2,5
   4a068:	10915604 	addi	r2,r2,17752
   4a06c:	280d883a 	mov	r6,r5
   4a070:	200b883a 	mov	r5,r4
   4a074:	11000017 	ldw	r4,0(r2)
   4a078:	0049fac1 	jmpi	49fac <_setlocale_r>

0004a07c <localeconv>:
   4a07c:	00800174 	movhi	r2,5
   4a080:	108bc304 	addi	r2,r2,12044
   4a084:	f800283a 	ret

0004a088 <__smakebuf_r>:
   4a088:	2880030b 	ldhu	r2,12(r5)
   4a08c:	10c0008c 	andi	r3,r2,2
   4a090:	1800411e 	bne	r3,zero,4a198 <__smakebuf_r+0x110>
   4a094:	deffec04 	addi	sp,sp,-80
   4a098:	dc000f15 	stw	r16,60(sp)
   4a09c:	2821883a 	mov	r16,r5
   4a0a0:	2940038f 	ldh	r5,14(r5)
   4a0a4:	dc401015 	stw	r17,64(sp)
   4a0a8:	dfc01315 	stw	ra,76(sp)
   4a0ac:	dcc01215 	stw	r19,72(sp)
   4a0b0:	dc801115 	stw	r18,68(sp)
   4a0b4:	2023883a 	mov	r17,r4
   4a0b8:	28001c16 	blt	r5,zero,4a12c <__smakebuf_r+0xa4>
   4a0bc:	d80d883a 	mov	r6,sp
   4a0c0:	004e20c0 	call	4e20c <_fstat_r>
   4a0c4:	10001816 	blt	r2,zero,4a128 <__smakebuf_r+0xa0>
   4a0c8:	d8800117 	ldw	r2,4(sp)
   4a0cc:	00e00014 	movui	r3,32768
   4a0d0:	10bc000c 	andi	r2,r2,61440
   4a0d4:	14c80020 	cmpeqi	r19,r2,8192
   4a0d8:	10c03726 	beq	r2,r3,4a1b8 <__smakebuf_r+0x130>
   4a0dc:	80c0030b 	ldhu	r3,12(r16)
   4a0e0:	18c20014 	ori	r3,r3,2048
   4a0e4:	80c0030d 	sth	r3,12(r16)
   4a0e8:	00c80004 	movi	r3,8192
   4a0ec:	10c0521e 	bne	r2,r3,4a238 <__smakebuf_r+0x1b0>
   4a0f0:	8140038f 	ldh	r5,14(r16)
   4a0f4:	8809883a 	mov	r4,r17
   4a0f8:	004e2680 	call	4e268 <_isatty_r>
   4a0fc:	10004c26 	beq	r2,zero,4a230 <__smakebuf_r+0x1a8>
   4a100:	8080030b 	ldhu	r2,12(r16)
   4a104:	80c010c4 	addi	r3,r16,67
   4a108:	80c00015 	stw	r3,0(r16)
   4a10c:	10800054 	ori	r2,r2,1
   4a110:	8080030d 	sth	r2,12(r16)
   4a114:	00800044 	movi	r2,1
   4a118:	80c00415 	stw	r3,16(r16)
   4a11c:	80800515 	stw	r2,20(r16)
   4a120:	04810004 	movi	r18,1024
   4a124:	00000706 	br	4a144 <__smakebuf_r+0xbc>
   4a128:	8080030b 	ldhu	r2,12(r16)
   4a12c:	10c0200c 	andi	r3,r2,128
   4a130:	18001f1e 	bne	r3,zero,4a1b0 <__smakebuf_r+0x128>
   4a134:	04810004 	movi	r18,1024
   4a138:	10820014 	ori	r2,r2,2048
   4a13c:	8080030d 	sth	r2,12(r16)
   4a140:	0027883a 	mov	r19,zero
   4a144:	900b883a 	mov	r5,r18
   4a148:	8809883a 	mov	r4,r17
   4a14c:	004a2440 	call	4a244 <_malloc_r>
   4a150:	10002c26 	beq	r2,zero,4a204 <__smakebuf_r+0x17c>
   4a154:	80c0030b 	ldhu	r3,12(r16)
   4a158:	01000174 	movhi	r4,5
   4a15c:	21246704 	addi	r4,r4,-28260
   4a160:	89000f15 	stw	r4,60(r17)
   4a164:	18c02014 	ori	r3,r3,128
   4a168:	80c0030d 	sth	r3,12(r16)
   4a16c:	80800015 	stw	r2,0(r16)
   4a170:	80800415 	stw	r2,16(r16)
   4a174:	84800515 	stw	r18,20(r16)
   4a178:	98001a1e 	bne	r19,zero,4a1e4 <__smakebuf_r+0x15c>
   4a17c:	dfc01317 	ldw	ra,76(sp)
   4a180:	dcc01217 	ldw	r19,72(sp)
   4a184:	dc801117 	ldw	r18,68(sp)
   4a188:	dc401017 	ldw	r17,64(sp)
   4a18c:	dc000f17 	ldw	r16,60(sp)
   4a190:	dec01404 	addi	sp,sp,80
   4a194:	f800283a 	ret
   4a198:	288010c4 	addi	r2,r5,67
   4a19c:	28800015 	stw	r2,0(r5)
   4a1a0:	28800415 	stw	r2,16(r5)
   4a1a4:	00800044 	movi	r2,1
   4a1a8:	28800515 	stw	r2,20(r5)
   4a1ac:	f800283a 	ret
   4a1b0:	04801004 	movi	r18,64
   4a1b4:	003fe006 	br	4a138 <__alt_data_end+0xfffca138>
   4a1b8:	81000a17 	ldw	r4,40(r16)
   4a1bc:	00c00174 	movhi	r3,5
   4a1c0:	18f18004 	addi	r3,r3,-14848
   4a1c4:	20ffc51e 	bne	r4,r3,4a0dc <__alt_data_end+0xfffca0dc>
   4a1c8:	8080030b 	ldhu	r2,12(r16)
   4a1cc:	04810004 	movi	r18,1024
   4a1d0:	84801315 	stw	r18,76(r16)
   4a1d4:	1484b03a 	or	r2,r2,r18
   4a1d8:	8080030d 	sth	r2,12(r16)
   4a1dc:	0027883a 	mov	r19,zero
   4a1e0:	003fd806 	br	4a144 <__alt_data_end+0xfffca144>
   4a1e4:	8140038f 	ldh	r5,14(r16)
   4a1e8:	8809883a 	mov	r4,r17
   4a1ec:	004e2680 	call	4e268 <_isatty_r>
   4a1f0:	103fe226 	beq	r2,zero,4a17c <__alt_data_end+0xfffca17c>
   4a1f4:	8080030b 	ldhu	r2,12(r16)
   4a1f8:	10800054 	ori	r2,r2,1
   4a1fc:	8080030d 	sth	r2,12(r16)
   4a200:	003fde06 	br	4a17c <__alt_data_end+0xfffca17c>
   4a204:	8080030b 	ldhu	r2,12(r16)
   4a208:	10c0800c 	andi	r3,r2,512
   4a20c:	183fdb1e 	bne	r3,zero,4a17c <__alt_data_end+0xfffca17c>
   4a210:	10800094 	ori	r2,r2,2
   4a214:	80c010c4 	addi	r3,r16,67
   4a218:	8080030d 	sth	r2,12(r16)
   4a21c:	00800044 	movi	r2,1
   4a220:	80c00015 	stw	r3,0(r16)
   4a224:	80c00415 	stw	r3,16(r16)
   4a228:	80800515 	stw	r2,20(r16)
   4a22c:	003fd306 	br	4a17c <__alt_data_end+0xfffca17c>
   4a230:	04810004 	movi	r18,1024
   4a234:	003fc306 	br	4a144 <__alt_data_end+0xfffca144>
   4a238:	0027883a 	mov	r19,zero
   4a23c:	04810004 	movi	r18,1024
   4a240:	003fc006 	br	4a144 <__alt_data_end+0xfffca144>

0004a244 <_malloc_r>:
   4a244:	defff504 	addi	sp,sp,-44
   4a248:	dc800315 	stw	r18,12(sp)
   4a24c:	dfc00a15 	stw	ra,40(sp)
   4a250:	df000915 	stw	fp,36(sp)
   4a254:	ddc00815 	stw	r23,32(sp)
   4a258:	dd800715 	stw	r22,28(sp)
   4a25c:	dd400615 	stw	r21,24(sp)
   4a260:	dd000515 	stw	r20,20(sp)
   4a264:	dcc00415 	stw	r19,16(sp)
   4a268:	dc400215 	stw	r17,8(sp)
   4a26c:	dc000115 	stw	r16,4(sp)
   4a270:	288002c4 	addi	r2,r5,11
   4a274:	00c00584 	movi	r3,22
   4a278:	2025883a 	mov	r18,r4
   4a27c:	18807f2e 	bgeu	r3,r2,4a47c <_malloc_r+0x238>
   4a280:	047ffe04 	movi	r17,-8
   4a284:	1462703a 	and	r17,r2,r17
   4a288:	8800a316 	blt	r17,zero,4a518 <_malloc_r+0x2d4>
   4a28c:	8940a236 	bltu	r17,r5,4a518 <_malloc_r+0x2d4>
   4a290:	005016c0 	call	5016c <__malloc_lock>
   4a294:	00807dc4 	movi	r2,503
   4a298:	1441e92e 	bgeu	r2,r17,4aa40 <_malloc_r+0x7fc>
   4a29c:	8804d27a 	srli	r2,r17,9
   4a2a0:	1000a126 	beq	r2,zero,4a528 <_malloc_r+0x2e4>
   4a2a4:	00c00104 	movi	r3,4
   4a2a8:	18811e36 	bltu	r3,r2,4a724 <_malloc_r+0x4e0>
   4a2ac:	8804d1ba 	srli	r2,r17,6
   4a2b0:	12000e44 	addi	r8,r2,57
   4a2b4:	11c00e04 	addi	r7,r2,56
   4a2b8:	4209883a 	add	r4,r8,r8
   4a2bc:	04c00174 	movhi	r19,5
   4a2c0:	2109883a 	add	r4,r4,r4
   4a2c4:	9ccbd104 	addi	r19,r19,12100
   4a2c8:	2109883a 	add	r4,r4,r4
   4a2cc:	9909883a 	add	r4,r19,r4
   4a2d0:	24000117 	ldw	r16,4(r4)
   4a2d4:	213ffe04 	addi	r4,r4,-8
   4a2d8:	24009726 	beq	r4,r16,4a538 <_malloc_r+0x2f4>
   4a2dc:	80800117 	ldw	r2,4(r16)
   4a2e0:	01bfff04 	movi	r6,-4
   4a2e4:	014003c4 	movi	r5,15
   4a2e8:	1184703a 	and	r2,r2,r6
   4a2ec:	1447c83a 	sub	r3,r2,r17
   4a2f0:	28c00716 	blt	r5,r3,4a310 <_malloc_r+0xcc>
   4a2f4:	1800920e 	bge	r3,zero,4a540 <_malloc_r+0x2fc>
   4a2f8:	84000317 	ldw	r16,12(r16)
   4a2fc:	24008e26 	beq	r4,r16,4a538 <_malloc_r+0x2f4>
   4a300:	80800117 	ldw	r2,4(r16)
   4a304:	1184703a 	and	r2,r2,r6
   4a308:	1447c83a 	sub	r3,r2,r17
   4a30c:	28fff90e 	bge	r5,r3,4a2f4 <__alt_data_end+0xfffca2f4>
   4a310:	3809883a 	mov	r4,r7
   4a314:	01800174 	movhi	r6,5
   4a318:	9c000417 	ldw	r16,16(r19)
   4a31c:	318bd104 	addi	r6,r6,12100
   4a320:	32000204 	addi	r8,r6,8
   4a324:	82013426 	beq	r16,r8,4a7f8 <_malloc_r+0x5b4>
   4a328:	80c00117 	ldw	r3,4(r16)
   4a32c:	00bfff04 	movi	r2,-4
   4a330:	188e703a 	and	r7,r3,r2
   4a334:	3c45c83a 	sub	r2,r7,r17
   4a338:	00c003c4 	movi	r3,15
   4a33c:	18811f16 	blt	r3,r2,4a7bc <_malloc_r+0x578>
   4a340:	32000515 	stw	r8,20(r6)
   4a344:	32000415 	stw	r8,16(r6)
   4a348:	10007f0e 	bge	r2,zero,4a548 <_malloc_r+0x304>
   4a34c:	00807fc4 	movi	r2,511
   4a350:	11c0fd36 	bltu	r2,r7,4a748 <_malloc_r+0x504>
   4a354:	3806d0fa 	srli	r3,r7,3
   4a358:	01c00044 	movi	r7,1
   4a35c:	30800117 	ldw	r2,4(r6)
   4a360:	19400044 	addi	r5,r3,1
   4a364:	294b883a 	add	r5,r5,r5
   4a368:	1807d0ba 	srai	r3,r3,2
   4a36c:	294b883a 	add	r5,r5,r5
   4a370:	294b883a 	add	r5,r5,r5
   4a374:	298b883a 	add	r5,r5,r6
   4a378:	38c6983a 	sll	r3,r7,r3
   4a37c:	29c00017 	ldw	r7,0(r5)
   4a380:	2a7ffe04 	addi	r9,r5,-8
   4a384:	1886b03a 	or	r3,r3,r2
   4a388:	82400315 	stw	r9,12(r16)
   4a38c:	81c00215 	stw	r7,8(r16)
   4a390:	30c00115 	stw	r3,4(r6)
   4a394:	2c000015 	stw	r16,0(r5)
   4a398:	3c000315 	stw	r16,12(r7)
   4a39c:	2005d0ba 	srai	r2,r4,2
   4a3a0:	01400044 	movi	r5,1
   4a3a4:	288a983a 	sll	r5,r5,r2
   4a3a8:	19406f36 	bltu	r3,r5,4a568 <_malloc_r+0x324>
   4a3ac:	28c4703a 	and	r2,r5,r3
   4a3b0:	10000a1e 	bne	r2,zero,4a3dc <_malloc_r+0x198>
   4a3b4:	00bfff04 	movi	r2,-4
   4a3b8:	294b883a 	add	r5,r5,r5
   4a3bc:	2088703a 	and	r4,r4,r2
   4a3c0:	28c4703a 	and	r2,r5,r3
   4a3c4:	21000104 	addi	r4,r4,4
   4a3c8:	1000041e 	bne	r2,zero,4a3dc <_malloc_r+0x198>
   4a3cc:	294b883a 	add	r5,r5,r5
   4a3d0:	28c4703a 	and	r2,r5,r3
   4a3d4:	21000104 	addi	r4,r4,4
   4a3d8:	103ffc26 	beq	r2,zero,4a3cc <__alt_data_end+0xfffca3cc>
   4a3dc:	02bfff04 	movi	r10,-4
   4a3e0:	024003c4 	movi	r9,15
   4a3e4:	21800044 	addi	r6,r4,1
   4a3e8:	318d883a 	add	r6,r6,r6
   4a3ec:	318d883a 	add	r6,r6,r6
   4a3f0:	318d883a 	add	r6,r6,r6
   4a3f4:	998d883a 	add	r6,r19,r6
   4a3f8:	333ffe04 	addi	r12,r6,-8
   4a3fc:	2017883a 	mov	r11,r4
   4a400:	31800104 	addi	r6,r6,4
   4a404:	34000017 	ldw	r16,0(r6)
   4a408:	31fffd04 	addi	r7,r6,-12
   4a40c:	81c0041e 	bne	r16,r7,4a420 <_malloc_r+0x1dc>
   4a410:	0000fb06 	br	4a800 <_malloc_r+0x5bc>
   4a414:	1801030e 	bge	r3,zero,4a824 <_malloc_r+0x5e0>
   4a418:	84000317 	ldw	r16,12(r16)
   4a41c:	81c0f826 	beq	r16,r7,4a800 <_malloc_r+0x5bc>
   4a420:	80800117 	ldw	r2,4(r16)
   4a424:	1284703a 	and	r2,r2,r10
   4a428:	1447c83a 	sub	r3,r2,r17
   4a42c:	48fff90e 	bge	r9,r3,4a414 <__alt_data_end+0xfffca414>
   4a430:	80800317 	ldw	r2,12(r16)
   4a434:	81000217 	ldw	r4,8(r16)
   4a438:	89400054 	ori	r5,r17,1
   4a43c:	81400115 	stw	r5,4(r16)
   4a440:	20800315 	stw	r2,12(r4)
   4a444:	11000215 	stw	r4,8(r2)
   4a448:	8463883a 	add	r17,r16,r17
   4a44c:	9c400515 	stw	r17,20(r19)
   4a450:	9c400415 	stw	r17,16(r19)
   4a454:	18800054 	ori	r2,r3,1
   4a458:	88800115 	stw	r2,4(r17)
   4a45c:	8a000315 	stw	r8,12(r17)
   4a460:	8a000215 	stw	r8,8(r17)
   4a464:	88e3883a 	add	r17,r17,r3
   4a468:	88c00015 	stw	r3,0(r17)
   4a46c:	9009883a 	mov	r4,r18
   4a470:	00501900 	call	50190 <__malloc_unlock>
   4a474:	80800204 	addi	r2,r16,8
   4a478:	00001b06 	br	4a4e8 <_malloc_r+0x2a4>
   4a47c:	04400404 	movi	r17,16
   4a480:	89402536 	bltu	r17,r5,4a518 <_malloc_r+0x2d4>
   4a484:	005016c0 	call	5016c <__malloc_lock>
   4a488:	00800184 	movi	r2,6
   4a48c:	01000084 	movi	r4,2
   4a490:	04c00174 	movhi	r19,5
   4a494:	1085883a 	add	r2,r2,r2
   4a498:	9ccbd104 	addi	r19,r19,12100
   4a49c:	1085883a 	add	r2,r2,r2
   4a4a0:	9885883a 	add	r2,r19,r2
   4a4a4:	14000117 	ldw	r16,4(r2)
   4a4a8:	10fffe04 	addi	r3,r2,-8
   4a4ac:	80c0d926 	beq	r16,r3,4a814 <_malloc_r+0x5d0>
   4a4b0:	80c00117 	ldw	r3,4(r16)
   4a4b4:	81000317 	ldw	r4,12(r16)
   4a4b8:	00bfff04 	movi	r2,-4
   4a4bc:	1884703a 	and	r2,r3,r2
   4a4c0:	81400217 	ldw	r5,8(r16)
   4a4c4:	8085883a 	add	r2,r16,r2
   4a4c8:	10c00117 	ldw	r3,4(r2)
   4a4cc:	29000315 	stw	r4,12(r5)
   4a4d0:	21400215 	stw	r5,8(r4)
   4a4d4:	18c00054 	ori	r3,r3,1
   4a4d8:	10c00115 	stw	r3,4(r2)
   4a4dc:	9009883a 	mov	r4,r18
   4a4e0:	00501900 	call	50190 <__malloc_unlock>
   4a4e4:	80800204 	addi	r2,r16,8
   4a4e8:	dfc00a17 	ldw	ra,40(sp)
   4a4ec:	df000917 	ldw	fp,36(sp)
   4a4f0:	ddc00817 	ldw	r23,32(sp)
   4a4f4:	dd800717 	ldw	r22,28(sp)
   4a4f8:	dd400617 	ldw	r21,24(sp)
   4a4fc:	dd000517 	ldw	r20,20(sp)
   4a500:	dcc00417 	ldw	r19,16(sp)
   4a504:	dc800317 	ldw	r18,12(sp)
   4a508:	dc400217 	ldw	r17,8(sp)
   4a50c:	dc000117 	ldw	r16,4(sp)
   4a510:	dec00b04 	addi	sp,sp,44
   4a514:	f800283a 	ret
   4a518:	00800304 	movi	r2,12
   4a51c:	90800015 	stw	r2,0(r18)
   4a520:	0005883a 	mov	r2,zero
   4a524:	003ff006 	br	4a4e8 <__alt_data_end+0xfffca4e8>
   4a528:	01002004 	movi	r4,128
   4a52c:	02001004 	movi	r8,64
   4a530:	01c00fc4 	movi	r7,63
   4a534:	003f6106 	br	4a2bc <__alt_data_end+0xfffca2bc>
   4a538:	4009883a 	mov	r4,r8
   4a53c:	003f7506 	br	4a314 <__alt_data_end+0xfffca314>
   4a540:	81000317 	ldw	r4,12(r16)
   4a544:	003fde06 	br	4a4c0 <__alt_data_end+0xfffca4c0>
   4a548:	81c5883a 	add	r2,r16,r7
   4a54c:	11400117 	ldw	r5,4(r2)
   4a550:	9009883a 	mov	r4,r18
   4a554:	29400054 	ori	r5,r5,1
   4a558:	11400115 	stw	r5,4(r2)
   4a55c:	00501900 	call	50190 <__malloc_unlock>
   4a560:	80800204 	addi	r2,r16,8
   4a564:	003fe006 	br	4a4e8 <__alt_data_end+0xfffca4e8>
   4a568:	9c000217 	ldw	r16,8(r19)
   4a56c:	00bfff04 	movi	r2,-4
   4a570:	85800117 	ldw	r22,4(r16)
   4a574:	b0ac703a 	and	r22,r22,r2
   4a578:	b4400336 	bltu	r22,r17,4a588 <_malloc_r+0x344>
   4a57c:	b445c83a 	sub	r2,r22,r17
   4a580:	00c003c4 	movi	r3,15
   4a584:	18805d16 	blt	r3,r2,4a6fc <_malloc_r+0x4b8>
   4a588:	05c00174 	movhi	r23,5
   4a58c:	00800174 	movhi	r2,5
   4a590:	10982b04 	addi	r2,r2,24748
   4a594:	bdd15804 	addi	r23,r23,17760
   4a598:	15400017 	ldw	r21,0(r2)
   4a59c:	b8c00017 	ldw	r3,0(r23)
   4a5a0:	00bfffc4 	movi	r2,-1
   4a5a4:	858d883a 	add	r6,r16,r22
   4a5a8:	8d6b883a 	add	r21,r17,r21
   4a5ac:	1880ea26 	beq	r3,r2,4a958 <_malloc_r+0x714>
   4a5b0:	ad4403c4 	addi	r21,r21,4111
   4a5b4:	00bc0004 	movi	r2,-4096
   4a5b8:	a8aa703a 	and	r21,r21,r2
   4a5bc:	a80b883a 	mov	r5,r21
   4a5c0:	9009883a 	mov	r4,r18
   4a5c4:	d9800015 	stw	r6,0(sp)
   4a5c8:	004c4d40 	call	4c4d4 <_sbrk_r>
   4a5cc:	1029883a 	mov	r20,r2
   4a5d0:	00bfffc4 	movi	r2,-1
   4a5d4:	d9800017 	ldw	r6,0(sp)
   4a5d8:	a080e826 	beq	r20,r2,4a97c <_malloc_r+0x738>
   4a5dc:	a180a636 	bltu	r20,r6,4a878 <_malloc_r+0x634>
   4a5e0:	07000174 	movhi	fp,5
   4a5e4:	e7183404 	addi	fp,fp,24784
   4a5e8:	e0800017 	ldw	r2,0(fp)
   4a5ec:	a887883a 	add	r3,r21,r2
   4a5f0:	e0c00015 	stw	r3,0(fp)
   4a5f4:	3500e626 	beq	r6,r20,4a990 <_malloc_r+0x74c>
   4a5f8:	b9000017 	ldw	r4,0(r23)
   4a5fc:	00bfffc4 	movi	r2,-1
   4a600:	2080ee26 	beq	r4,r2,4a9bc <_malloc_r+0x778>
   4a604:	a185c83a 	sub	r2,r20,r6
   4a608:	10c5883a 	add	r2,r2,r3
   4a60c:	e0800015 	stw	r2,0(fp)
   4a610:	a0c001cc 	andi	r3,r20,7
   4a614:	1800bc26 	beq	r3,zero,4a908 <_malloc_r+0x6c4>
   4a618:	a0e9c83a 	sub	r20,r20,r3
   4a61c:	00840204 	movi	r2,4104
   4a620:	a5000204 	addi	r20,r20,8
   4a624:	10c7c83a 	sub	r3,r2,r3
   4a628:	a545883a 	add	r2,r20,r21
   4a62c:	1083ffcc 	andi	r2,r2,4095
   4a630:	18abc83a 	sub	r21,r3,r2
   4a634:	a80b883a 	mov	r5,r21
   4a638:	9009883a 	mov	r4,r18
   4a63c:	004c4d40 	call	4c4d4 <_sbrk_r>
   4a640:	00ffffc4 	movi	r3,-1
   4a644:	10c0e126 	beq	r2,r3,4a9cc <_malloc_r+0x788>
   4a648:	1505c83a 	sub	r2,r2,r20
   4a64c:	1545883a 	add	r2,r2,r21
   4a650:	10800054 	ori	r2,r2,1
   4a654:	e0c00017 	ldw	r3,0(fp)
   4a658:	9d000215 	stw	r20,8(r19)
   4a65c:	a0800115 	stw	r2,4(r20)
   4a660:	a8c7883a 	add	r3,r21,r3
   4a664:	e0c00015 	stw	r3,0(fp)
   4a668:	84c00e26 	beq	r16,r19,4a6a4 <_malloc_r+0x460>
   4a66c:	018003c4 	movi	r6,15
   4a670:	3580a72e 	bgeu	r6,r22,4a910 <_malloc_r+0x6cc>
   4a674:	81400117 	ldw	r5,4(r16)
   4a678:	013ffe04 	movi	r4,-8
   4a67c:	b0bffd04 	addi	r2,r22,-12
   4a680:	1104703a 	and	r2,r2,r4
   4a684:	2900004c 	andi	r4,r5,1
   4a688:	2088b03a 	or	r4,r4,r2
   4a68c:	81000115 	stw	r4,4(r16)
   4a690:	01400144 	movi	r5,5
   4a694:	8089883a 	add	r4,r16,r2
   4a698:	21400115 	stw	r5,4(r4)
   4a69c:	21400215 	stw	r5,8(r4)
   4a6a0:	3080cd36 	bltu	r6,r2,4a9d8 <_malloc_r+0x794>
   4a6a4:	00800174 	movhi	r2,5
   4a6a8:	10982a04 	addi	r2,r2,24744
   4a6ac:	11000017 	ldw	r4,0(r2)
   4a6b0:	20c0012e 	bgeu	r4,r3,4a6b8 <_malloc_r+0x474>
   4a6b4:	10c00015 	stw	r3,0(r2)
   4a6b8:	00800174 	movhi	r2,5
   4a6bc:	10982904 	addi	r2,r2,24740
   4a6c0:	11000017 	ldw	r4,0(r2)
   4a6c4:	9c000217 	ldw	r16,8(r19)
   4a6c8:	20c0012e 	bgeu	r4,r3,4a6d0 <_malloc_r+0x48c>
   4a6cc:	10c00015 	stw	r3,0(r2)
   4a6d0:	80c00117 	ldw	r3,4(r16)
   4a6d4:	00bfff04 	movi	r2,-4
   4a6d8:	1886703a 	and	r3,r3,r2
   4a6dc:	1c45c83a 	sub	r2,r3,r17
   4a6e0:	1c400236 	bltu	r3,r17,4a6ec <_malloc_r+0x4a8>
   4a6e4:	00c003c4 	movi	r3,15
   4a6e8:	18800416 	blt	r3,r2,4a6fc <_malloc_r+0x4b8>
   4a6ec:	9009883a 	mov	r4,r18
   4a6f0:	00501900 	call	50190 <__malloc_unlock>
   4a6f4:	0005883a 	mov	r2,zero
   4a6f8:	003f7b06 	br	4a4e8 <__alt_data_end+0xfffca4e8>
   4a6fc:	88c00054 	ori	r3,r17,1
   4a700:	80c00115 	stw	r3,4(r16)
   4a704:	8463883a 	add	r17,r16,r17
   4a708:	10800054 	ori	r2,r2,1
   4a70c:	9c400215 	stw	r17,8(r19)
   4a710:	88800115 	stw	r2,4(r17)
   4a714:	9009883a 	mov	r4,r18
   4a718:	00501900 	call	50190 <__malloc_unlock>
   4a71c:	80800204 	addi	r2,r16,8
   4a720:	003f7106 	br	4a4e8 <__alt_data_end+0xfffca4e8>
   4a724:	00c00504 	movi	r3,20
   4a728:	18804a2e 	bgeu	r3,r2,4a854 <_malloc_r+0x610>
   4a72c:	00c01504 	movi	r3,84
   4a730:	18806e36 	bltu	r3,r2,4a8ec <_malloc_r+0x6a8>
   4a734:	8804d33a 	srli	r2,r17,12
   4a738:	12001bc4 	addi	r8,r2,111
   4a73c:	11c01b84 	addi	r7,r2,110
   4a740:	4209883a 	add	r4,r8,r8
   4a744:	003edd06 	br	4a2bc <__alt_data_end+0xfffca2bc>
   4a748:	3804d27a 	srli	r2,r7,9
   4a74c:	00c00104 	movi	r3,4
   4a750:	1880442e 	bgeu	r3,r2,4a864 <_malloc_r+0x620>
   4a754:	00c00504 	movi	r3,20
   4a758:	18808136 	bltu	r3,r2,4a960 <_malloc_r+0x71c>
   4a75c:	11401704 	addi	r5,r2,92
   4a760:	10c016c4 	addi	r3,r2,91
   4a764:	294b883a 	add	r5,r5,r5
   4a768:	294b883a 	add	r5,r5,r5
   4a76c:	294b883a 	add	r5,r5,r5
   4a770:	994b883a 	add	r5,r19,r5
   4a774:	28800017 	ldw	r2,0(r5)
   4a778:	01800174 	movhi	r6,5
   4a77c:	297ffe04 	addi	r5,r5,-8
   4a780:	318bd104 	addi	r6,r6,12100
   4a784:	28806526 	beq	r5,r2,4a91c <_malloc_r+0x6d8>
   4a788:	01bfff04 	movi	r6,-4
   4a78c:	10c00117 	ldw	r3,4(r2)
   4a790:	1986703a 	and	r3,r3,r6
   4a794:	38c0022e 	bgeu	r7,r3,4a7a0 <_malloc_r+0x55c>
   4a798:	10800217 	ldw	r2,8(r2)
   4a79c:	28bffb1e 	bne	r5,r2,4a78c <__alt_data_end+0xfffca78c>
   4a7a0:	11400317 	ldw	r5,12(r2)
   4a7a4:	98c00117 	ldw	r3,4(r19)
   4a7a8:	81400315 	stw	r5,12(r16)
   4a7ac:	80800215 	stw	r2,8(r16)
   4a7b0:	2c000215 	stw	r16,8(r5)
   4a7b4:	14000315 	stw	r16,12(r2)
   4a7b8:	003ef806 	br	4a39c <__alt_data_end+0xfffca39c>
   4a7bc:	88c00054 	ori	r3,r17,1
   4a7c0:	80c00115 	stw	r3,4(r16)
   4a7c4:	8463883a 	add	r17,r16,r17
   4a7c8:	34400515 	stw	r17,20(r6)
   4a7cc:	34400415 	stw	r17,16(r6)
   4a7d0:	10c00054 	ori	r3,r2,1
   4a7d4:	8a000315 	stw	r8,12(r17)
   4a7d8:	8a000215 	stw	r8,8(r17)
   4a7dc:	88c00115 	stw	r3,4(r17)
   4a7e0:	88a3883a 	add	r17,r17,r2
   4a7e4:	88800015 	stw	r2,0(r17)
   4a7e8:	9009883a 	mov	r4,r18
   4a7ec:	00501900 	call	50190 <__malloc_unlock>
   4a7f0:	80800204 	addi	r2,r16,8
   4a7f4:	003f3c06 	br	4a4e8 <__alt_data_end+0xfffca4e8>
   4a7f8:	30c00117 	ldw	r3,4(r6)
   4a7fc:	003ee706 	br	4a39c <__alt_data_end+0xfffca39c>
   4a800:	5ac00044 	addi	r11,r11,1
   4a804:	588000cc 	andi	r2,r11,3
   4a808:	31800204 	addi	r6,r6,8
   4a80c:	103efd1e 	bne	r2,zero,4a404 <__alt_data_end+0xfffca404>
   4a810:	00002406 	br	4a8a4 <_malloc_r+0x660>
   4a814:	14000317 	ldw	r16,12(r2)
   4a818:	143f251e 	bne	r2,r16,4a4b0 <__alt_data_end+0xfffca4b0>
   4a81c:	21000084 	addi	r4,r4,2
   4a820:	003ebc06 	br	4a314 <__alt_data_end+0xfffca314>
   4a824:	8085883a 	add	r2,r16,r2
   4a828:	10c00117 	ldw	r3,4(r2)
   4a82c:	81000317 	ldw	r4,12(r16)
   4a830:	81400217 	ldw	r5,8(r16)
   4a834:	18c00054 	ori	r3,r3,1
   4a838:	10c00115 	stw	r3,4(r2)
   4a83c:	29000315 	stw	r4,12(r5)
   4a840:	21400215 	stw	r5,8(r4)
   4a844:	9009883a 	mov	r4,r18
   4a848:	00501900 	call	50190 <__malloc_unlock>
   4a84c:	80800204 	addi	r2,r16,8
   4a850:	003f2506 	br	4a4e8 <__alt_data_end+0xfffca4e8>
   4a854:	12001704 	addi	r8,r2,92
   4a858:	11c016c4 	addi	r7,r2,91
   4a85c:	4209883a 	add	r4,r8,r8
   4a860:	003e9606 	br	4a2bc <__alt_data_end+0xfffca2bc>
   4a864:	3804d1ba 	srli	r2,r7,6
   4a868:	11400e44 	addi	r5,r2,57
   4a86c:	10c00e04 	addi	r3,r2,56
   4a870:	294b883a 	add	r5,r5,r5
   4a874:	003fbc06 	br	4a768 <__alt_data_end+0xfffca768>
   4a878:	84ff5926 	beq	r16,r19,4a5e0 <__alt_data_end+0xfffca5e0>
   4a87c:	00800174 	movhi	r2,5
   4a880:	108bd104 	addi	r2,r2,12100
   4a884:	14000217 	ldw	r16,8(r2)
   4a888:	00bfff04 	movi	r2,-4
   4a88c:	80c00117 	ldw	r3,4(r16)
   4a890:	1886703a 	and	r3,r3,r2
   4a894:	003f9106 	br	4a6dc <__alt_data_end+0xfffca6dc>
   4a898:	60800217 	ldw	r2,8(r12)
   4a89c:	213fffc4 	addi	r4,r4,-1
   4a8a0:	1300651e 	bne	r2,r12,4aa38 <_malloc_r+0x7f4>
   4a8a4:	208000cc 	andi	r2,r4,3
   4a8a8:	633ffe04 	addi	r12,r12,-8
   4a8ac:	103ffa1e 	bne	r2,zero,4a898 <__alt_data_end+0xfffca898>
   4a8b0:	98800117 	ldw	r2,4(r19)
   4a8b4:	0146303a 	nor	r3,zero,r5
   4a8b8:	1884703a 	and	r2,r3,r2
   4a8bc:	98800115 	stw	r2,4(r19)
   4a8c0:	294b883a 	add	r5,r5,r5
   4a8c4:	117f2836 	bltu	r2,r5,4a568 <__alt_data_end+0xfffca568>
   4a8c8:	283f2726 	beq	r5,zero,4a568 <__alt_data_end+0xfffca568>
   4a8cc:	2886703a 	and	r3,r5,r2
   4a8d0:	5809883a 	mov	r4,r11
   4a8d4:	183ec31e 	bne	r3,zero,4a3e4 <__alt_data_end+0xfffca3e4>
   4a8d8:	294b883a 	add	r5,r5,r5
   4a8dc:	2886703a 	and	r3,r5,r2
   4a8e0:	21000104 	addi	r4,r4,4
   4a8e4:	183ffc26 	beq	r3,zero,4a8d8 <__alt_data_end+0xfffca8d8>
   4a8e8:	003ebe06 	br	4a3e4 <__alt_data_end+0xfffca3e4>
   4a8ec:	00c05504 	movi	r3,340
   4a8f0:	18801236 	bltu	r3,r2,4a93c <_malloc_r+0x6f8>
   4a8f4:	8804d3fa 	srli	r2,r17,15
   4a8f8:	12001e04 	addi	r8,r2,120
   4a8fc:	11c01dc4 	addi	r7,r2,119
   4a900:	4209883a 	add	r4,r8,r8
   4a904:	003e6d06 	br	4a2bc <__alt_data_end+0xfffca2bc>
   4a908:	00c40004 	movi	r3,4096
   4a90c:	003f4606 	br	4a628 <__alt_data_end+0xfffca628>
   4a910:	00800044 	movi	r2,1
   4a914:	a0800115 	stw	r2,4(r20)
   4a918:	003f7406 	br	4a6ec <__alt_data_end+0xfffca6ec>
   4a91c:	1805d0ba 	srai	r2,r3,2
   4a920:	01c00044 	movi	r7,1
   4a924:	30c00117 	ldw	r3,4(r6)
   4a928:	388e983a 	sll	r7,r7,r2
   4a92c:	2805883a 	mov	r2,r5
   4a930:	38c6b03a 	or	r3,r7,r3
   4a934:	30c00115 	stw	r3,4(r6)
   4a938:	003f9b06 	br	4a7a8 <__alt_data_end+0xfffca7a8>
   4a93c:	00c15504 	movi	r3,1364
   4a940:	18801a36 	bltu	r3,r2,4a9ac <_malloc_r+0x768>
   4a944:	8804d4ba 	srli	r2,r17,18
   4a948:	12001f44 	addi	r8,r2,125
   4a94c:	11c01f04 	addi	r7,r2,124
   4a950:	4209883a 	add	r4,r8,r8
   4a954:	003e5906 	br	4a2bc <__alt_data_end+0xfffca2bc>
   4a958:	ad400404 	addi	r21,r21,16
   4a95c:	003f1706 	br	4a5bc <__alt_data_end+0xfffca5bc>
   4a960:	00c01504 	movi	r3,84
   4a964:	18802336 	bltu	r3,r2,4a9f4 <_malloc_r+0x7b0>
   4a968:	3804d33a 	srli	r2,r7,12
   4a96c:	11401bc4 	addi	r5,r2,111
   4a970:	10c01b84 	addi	r3,r2,110
   4a974:	294b883a 	add	r5,r5,r5
   4a978:	003f7b06 	br	4a768 <__alt_data_end+0xfffca768>
   4a97c:	9c000217 	ldw	r16,8(r19)
   4a980:	00bfff04 	movi	r2,-4
   4a984:	80c00117 	ldw	r3,4(r16)
   4a988:	1886703a 	and	r3,r3,r2
   4a98c:	003f5306 	br	4a6dc <__alt_data_end+0xfffca6dc>
   4a990:	3083ffcc 	andi	r2,r6,4095
   4a994:	103f181e 	bne	r2,zero,4a5f8 <__alt_data_end+0xfffca5f8>
   4a998:	99000217 	ldw	r4,8(r19)
   4a99c:	b545883a 	add	r2,r22,r21
   4a9a0:	10800054 	ori	r2,r2,1
   4a9a4:	20800115 	stw	r2,4(r4)
   4a9a8:	003f3e06 	br	4a6a4 <__alt_data_end+0xfffca6a4>
   4a9ac:	01003f84 	movi	r4,254
   4a9b0:	02001fc4 	movi	r8,127
   4a9b4:	01c01f84 	movi	r7,126
   4a9b8:	003e4006 	br	4a2bc <__alt_data_end+0xfffca2bc>
   4a9bc:	00800174 	movhi	r2,5
   4a9c0:	10915804 	addi	r2,r2,17760
   4a9c4:	15000015 	stw	r20,0(r2)
   4a9c8:	003f1106 	br	4a610 <__alt_data_end+0xfffca610>
   4a9cc:	00800044 	movi	r2,1
   4a9d0:	002b883a 	mov	r21,zero
   4a9d4:	003f1f06 	br	4a654 <__alt_data_end+0xfffca654>
   4a9d8:	81400204 	addi	r5,r16,8
   4a9dc:	9009883a 	mov	r4,r18
   4a9e0:	00496580 	call	49658 <_free_r>
   4a9e4:	00800174 	movhi	r2,5
   4a9e8:	10983404 	addi	r2,r2,24784
   4a9ec:	10c00017 	ldw	r3,0(r2)
   4a9f0:	003f2c06 	br	4a6a4 <__alt_data_end+0xfffca6a4>
   4a9f4:	00c05504 	movi	r3,340
   4a9f8:	18800536 	bltu	r3,r2,4aa10 <_malloc_r+0x7cc>
   4a9fc:	3804d3fa 	srli	r2,r7,15
   4aa00:	11401e04 	addi	r5,r2,120
   4aa04:	10c01dc4 	addi	r3,r2,119
   4aa08:	294b883a 	add	r5,r5,r5
   4aa0c:	003f5606 	br	4a768 <__alt_data_end+0xfffca768>
   4aa10:	00c15504 	movi	r3,1364
   4aa14:	18800536 	bltu	r3,r2,4aa2c <_malloc_r+0x7e8>
   4aa18:	3804d4ba 	srli	r2,r7,18
   4aa1c:	11401f44 	addi	r5,r2,125
   4aa20:	10c01f04 	addi	r3,r2,124
   4aa24:	294b883a 	add	r5,r5,r5
   4aa28:	003f4f06 	br	4a768 <__alt_data_end+0xfffca768>
   4aa2c:	01403f84 	movi	r5,254
   4aa30:	00c01f84 	movi	r3,126
   4aa34:	003f4c06 	br	4a768 <__alt_data_end+0xfffca768>
   4aa38:	98800117 	ldw	r2,4(r19)
   4aa3c:	003fa006 	br	4a8c0 <__alt_data_end+0xfffca8c0>
   4aa40:	8808d0fa 	srli	r4,r17,3
   4aa44:	20800044 	addi	r2,r4,1
   4aa48:	1085883a 	add	r2,r2,r2
   4aa4c:	003e9006 	br	4a490 <__alt_data_end+0xfffca490>

0004aa50 <memchr>:
   4aa50:	208000cc 	andi	r2,r4,3
   4aa54:	280f883a 	mov	r7,r5
   4aa58:	10003426 	beq	r2,zero,4ab2c <memchr+0xdc>
   4aa5c:	30bfffc4 	addi	r2,r6,-1
   4aa60:	30001a26 	beq	r6,zero,4aacc <memchr+0x7c>
   4aa64:	20c00003 	ldbu	r3,0(r4)
   4aa68:	29803fcc 	andi	r6,r5,255
   4aa6c:	30c0051e 	bne	r6,r3,4aa84 <memchr+0x34>
   4aa70:	00001806 	br	4aad4 <memchr+0x84>
   4aa74:	10001526 	beq	r2,zero,4aacc <memchr+0x7c>
   4aa78:	20c00003 	ldbu	r3,0(r4)
   4aa7c:	10bfffc4 	addi	r2,r2,-1
   4aa80:	30c01426 	beq	r6,r3,4aad4 <memchr+0x84>
   4aa84:	21000044 	addi	r4,r4,1
   4aa88:	20c000cc 	andi	r3,r4,3
   4aa8c:	183ff91e 	bne	r3,zero,4aa74 <__alt_data_end+0xfffcaa74>
   4aa90:	020000c4 	movi	r8,3
   4aa94:	40801136 	bltu	r8,r2,4aadc <memchr+0x8c>
   4aa98:	10000c26 	beq	r2,zero,4aacc <memchr+0x7c>
   4aa9c:	20c00003 	ldbu	r3,0(r4)
   4aaa0:	29403fcc 	andi	r5,r5,255
   4aaa4:	28c00b26 	beq	r5,r3,4aad4 <memchr+0x84>
   4aaa8:	20c00044 	addi	r3,r4,1
   4aaac:	39803fcc 	andi	r6,r7,255
   4aab0:	2089883a 	add	r4,r4,r2
   4aab4:	00000306 	br	4aac4 <memchr+0x74>
   4aab8:	18c00044 	addi	r3,r3,1
   4aabc:	197fffc3 	ldbu	r5,-1(r3)
   4aac0:	31400526 	beq	r6,r5,4aad8 <memchr+0x88>
   4aac4:	1805883a 	mov	r2,r3
   4aac8:	20fffb1e 	bne	r4,r3,4aab8 <__alt_data_end+0xfffcaab8>
   4aacc:	0005883a 	mov	r2,zero
   4aad0:	f800283a 	ret
   4aad4:	2005883a 	mov	r2,r4
   4aad8:	f800283a 	ret
   4aadc:	28c03fcc 	andi	r3,r5,255
   4aae0:	1812923a 	slli	r9,r3,8
   4aae4:	02ffbff4 	movhi	r11,65279
   4aae8:	02a02074 	movhi	r10,32897
   4aaec:	48d2b03a 	or	r9,r9,r3
   4aaf0:	4806943a 	slli	r3,r9,16
   4aaf4:	5affbfc4 	addi	r11,r11,-257
   4aaf8:	52a02004 	addi	r10,r10,-32640
   4aafc:	48d2b03a 	or	r9,r9,r3
   4ab00:	20c00017 	ldw	r3,0(r4)
   4ab04:	48c6f03a 	xor	r3,r9,r3
   4ab08:	1acd883a 	add	r6,r3,r11
   4ab0c:	00c6303a 	nor	r3,zero,r3
   4ab10:	30c6703a 	and	r3,r6,r3
   4ab14:	1a86703a 	and	r3,r3,r10
   4ab18:	183fe01e 	bne	r3,zero,4aa9c <__alt_data_end+0xfffcaa9c>
   4ab1c:	10bfff04 	addi	r2,r2,-4
   4ab20:	21000104 	addi	r4,r4,4
   4ab24:	40bff636 	bltu	r8,r2,4ab00 <__alt_data_end+0xfffcab00>
   4ab28:	003fdb06 	br	4aa98 <__alt_data_end+0xfffcaa98>
   4ab2c:	3005883a 	mov	r2,r6
   4ab30:	003fd706 	br	4aa90 <__alt_data_end+0xfffcaa90>

0004ab34 <memcpy>:
   4ab34:	defffd04 	addi	sp,sp,-12
   4ab38:	dfc00215 	stw	ra,8(sp)
   4ab3c:	dc400115 	stw	r17,4(sp)
   4ab40:	dc000015 	stw	r16,0(sp)
   4ab44:	00c003c4 	movi	r3,15
   4ab48:	2005883a 	mov	r2,r4
   4ab4c:	1980452e 	bgeu	r3,r6,4ac64 <memcpy+0x130>
   4ab50:	2906b03a 	or	r3,r5,r4
   4ab54:	18c000cc 	andi	r3,r3,3
   4ab58:	1800441e 	bne	r3,zero,4ac6c <memcpy+0x138>
   4ab5c:	347ffc04 	addi	r17,r6,-16
   4ab60:	8822d13a 	srli	r17,r17,4
   4ab64:	28c00104 	addi	r3,r5,4
   4ab68:	23400104 	addi	r13,r4,4
   4ab6c:	8820913a 	slli	r16,r17,4
   4ab70:	2b000204 	addi	r12,r5,8
   4ab74:	22c00204 	addi	r11,r4,8
   4ab78:	84000504 	addi	r16,r16,20
   4ab7c:	2a800304 	addi	r10,r5,12
   4ab80:	22400304 	addi	r9,r4,12
   4ab84:	2c21883a 	add	r16,r5,r16
   4ab88:	2811883a 	mov	r8,r5
   4ab8c:	200f883a 	mov	r7,r4
   4ab90:	41000017 	ldw	r4,0(r8)
   4ab94:	1fc00017 	ldw	ra,0(r3)
   4ab98:	63c00017 	ldw	r15,0(r12)
   4ab9c:	39000015 	stw	r4,0(r7)
   4aba0:	53800017 	ldw	r14,0(r10)
   4aba4:	6fc00015 	stw	ra,0(r13)
   4aba8:	5bc00015 	stw	r15,0(r11)
   4abac:	4b800015 	stw	r14,0(r9)
   4abb0:	18c00404 	addi	r3,r3,16
   4abb4:	39c00404 	addi	r7,r7,16
   4abb8:	42000404 	addi	r8,r8,16
   4abbc:	6b400404 	addi	r13,r13,16
   4abc0:	63000404 	addi	r12,r12,16
   4abc4:	5ac00404 	addi	r11,r11,16
   4abc8:	52800404 	addi	r10,r10,16
   4abcc:	4a400404 	addi	r9,r9,16
   4abd0:	1c3fef1e 	bne	r3,r16,4ab90 <__alt_data_end+0xfffcab90>
   4abd4:	89c00044 	addi	r7,r17,1
   4abd8:	380e913a 	slli	r7,r7,4
   4abdc:	310003cc 	andi	r4,r6,15
   4abe0:	02c000c4 	movi	r11,3
   4abe4:	11c7883a 	add	r3,r2,r7
   4abe8:	29cb883a 	add	r5,r5,r7
   4abec:	5900212e 	bgeu	r11,r4,4ac74 <memcpy+0x140>
   4abf0:	1813883a 	mov	r9,r3
   4abf4:	2811883a 	mov	r8,r5
   4abf8:	200f883a 	mov	r7,r4
   4abfc:	42800017 	ldw	r10,0(r8)
   4ac00:	4a400104 	addi	r9,r9,4
   4ac04:	39ffff04 	addi	r7,r7,-4
   4ac08:	4abfff15 	stw	r10,-4(r9)
   4ac0c:	42000104 	addi	r8,r8,4
   4ac10:	59fffa36 	bltu	r11,r7,4abfc <__alt_data_end+0xfffcabfc>
   4ac14:	213fff04 	addi	r4,r4,-4
   4ac18:	2008d0ba 	srli	r4,r4,2
   4ac1c:	318000cc 	andi	r6,r6,3
   4ac20:	21000044 	addi	r4,r4,1
   4ac24:	2109883a 	add	r4,r4,r4
   4ac28:	2109883a 	add	r4,r4,r4
   4ac2c:	1907883a 	add	r3,r3,r4
   4ac30:	290b883a 	add	r5,r5,r4
   4ac34:	30000626 	beq	r6,zero,4ac50 <memcpy+0x11c>
   4ac38:	198d883a 	add	r6,r3,r6
   4ac3c:	29c00003 	ldbu	r7,0(r5)
   4ac40:	18c00044 	addi	r3,r3,1
   4ac44:	29400044 	addi	r5,r5,1
   4ac48:	19ffffc5 	stb	r7,-1(r3)
   4ac4c:	19bffb1e 	bne	r3,r6,4ac3c <__alt_data_end+0xfffcac3c>
   4ac50:	dfc00217 	ldw	ra,8(sp)
   4ac54:	dc400117 	ldw	r17,4(sp)
   4ac58:	dc000017 	ldw	r16,0(sp)
   4ac5c:	dec00304 	addi	sp,sp,12
   4ac60:	f800283a 	ret
   4ac64:	2007883a 	mov	r3,r4
   4ac68:	003ff206 	br	4ac34 <__alt_data_end+0xfffcac34>
   4ac6c:	2007883a 	mov	r3,r4
   4ac70:	003ff106 	br	4ac38 <__alt_data_end+0xfffcac38>
   4ac74:	200d883a 	mov	r6,r4
   4ac78:	003fee06 	br	4ac34 <__alt_data_end+0xfffcac34>

0004ac7c <memmove>:
   4ac7c:	2005883a 	mov	r2,r4
   4ac80:	29000b2e 	bgeu	r5,r4,4acb0 <memmove+0x34>
   4ac84:	298f883a 	add	r7,r5,r6
   4ac88:	21c0092e 	bgeu	r4,r7,4acb0 <memmove+0x34>
   4ac8c:	2187883a 	add	r3,r4,r6
   4ac90:	198bc83a 	sub	r5,r3,r6
   4ac94:	30004826 	beq	r6,zero,4adb8 <memmove+0x13c>
   4ac98:	39ffffc4 	addi	r7,r7,-1
   4ac9c:	39000003 	ldbu	r4,0(r7)
   4aca0:	18ffffc4 	addi	r3,r3,-1
   4aca4:	19000005 	stb	r4,0(r3)
   4aca8:	28fffb1e 	bne	r5,r3,4ac98 <__alt_data_end+0xfffcac98>
   4acac:	f800283a 	ret
   4acb0:	00c003c4 	movi	r3,15
   4acb4:	1980412e 	bgeu	r3,r6,4adbc <memmove+0x140>
   4acb8:	2886b03a 	or	r3,r5,r2
   4acbc:	18c000cc 	andi	r3,r3,3
   4acc0:	1800401e 	bne	r3,zero,4adc4 <memmove+0x148>
   4acc4:	33fffc04 	addi	r15,r6,-16
   4acc8:	781ed13a 	srli	r15,r15,4
   4accc:	28c00104 	addi	r3,r5,4
   4acd0:	13400104 	addi	r13,r2,4
   4acd4:	781c913a 	slli	r14,r15,4
   4acd8:	2b000204 	addi	r12,r5,8
   4acdc:	12c00204 	addi	r11,r2,8
   4ace0:	73800504 	addi	r14,r14,20
   4ace4:	2a800304 	addi	r10,r5,12
   4ace8:	12400304 	addi	r9,r2,12
   4acec:	2b9d883a 	add	r14,r5,r14
   4acf0:	2811883a 	mov	r8,r5
   4acf4:	100f883a 	mov	r7,r2
   4acf8:	41000017 	ldw	r4,0(r8)
   4acfc:	39c00404 	addi	r7,r7,16
   4ad00:	18c00404 	addi	r3,r3,16
   4ad04:	393ffc15 	stw	r4,-16(r7)
   4ad08:	193ffc17 	ldw	r4,-16(r3)
   4ad0c:	6b400404 	addi	r13,r13,16
   4ad10:	5ac00404 	addi	r11,r11,16
   4ad14:	693ffc15 	stw	r4,-16(r13)
   4ad18:	61000017 	ldw	r4,0(r12)
   4ad1c:	4a400404 	addi	r9,r9,16
   4ad20:	42000404 	addi	r8,r8,16
   4ad24:	593ffc15 	stw	r4,-16(r11)
   4ad28:	51000017 	ldw	r4,0(r10)
   4ad2c:	63000404 	addi	r12,r12,16
   4ad30:	52800404 	addi	r10,r10,16
   4ad34:	493ffc15 	stw	r4,-16(r9)
   4ad38:	1bbfef1e 	bne	r3,r14,4acf8 <__alt_data_end+0xfffcacf8>
   4ad3c:	79000044 	addi	r4,r15,1
   4ad40:	2008913a 	slli	r4,r4,4
   4ad44:	328003cc 	andi	r10,r6,15
   4ad48:	02c000c4 	movi	r11,3
   4ad4c:	1107883a 	add	r3,r2,r4
   4ad50:	290b883a 	add	r5,r5,r4
   4ad54:	5a801e2e 	bgeu	r11,r10,4add0 <memmove+0x154>
   4ad58:	1813883a 	mov	r9,r3
   4ad5c:	2811883a 	mov	r8,r5
   4ad60:	500f883a 	mov	r7,r10
   4ad64:	41000017 	ldw	r4,0(r8)
   4ad68:	4a400104 	addi	r9,r9,4
   4ad6c:	39ffff04 	addi	r7,r7,-4
   4ad70:	493fff15 	stw	r4,-4(r9)
   4ad74:	42000104 	addi	r8,r8,4
   4ad78:	59fffa36 	bltu	r11,r7,4ad64 <__alt_data_end+0xfffcad64>
   4ad7c:	513fff04 	addi	r4,r10,-4
   4ad80:	2008d0ba 	srli	r4,r4,2
   4ad84:	318000cc 	andi	r6,r6,3
   4ad88:	21000044 	addi	r4,r4,1
   4ad8c:	2109883a 	add	r4,r4,r4
   4ad90:	2109883a 	add	r4,r4,r4
   4ad94:	1907883a 	add	r3,r3,r4
   4ad98:	290b883a 	add	r5,r5,r4
   4ad9c:	30000b26 	beq	r6,zero,4adcc <memmove+0x150>
   4ada0:	198d883a 	add	r6,r3,r6
   4ada4:	29c00003 	ldbu	r7,0(r5)
   4ada8:	18c00044 	addi	r3,r3,1
   4adac:	29400044 	addi	r5,r5,1
   4adb0:	19ffffc5 	stb	r7,-1(r3)
   4adb4:	19bffb1e 	bne	r3,r6,4ada4 <__alt_data_end+0xfffcada4>
   4adb8:	f800283a 	ret
   4adbc:	1007883a 	mov	r3,r2
   4adc0:	003ff606 	br	4ad9c <__alt_data_end+0xfffcad9c>
   4adc4:	1007883a 	mov	r3,r2
   4adc8:	003ff506 	br	4ada0 <__alt_data_end+0xfffcada0>
   4adcc:	f800283a 	ret
   4add0:	500d883a 	mov	r6,r10
   4add4:	003ff106 	br	4ad9c <__alt_data_end+0xfffcad9c>

0004add8 <memset>:
   4add8:	20c000cc 	andi	r3,r4,3
   4addc:	2005883a 	mov	r2,r4
   4ade0:	18004426 	beq	r3,zero,4aef4 <memset+0x11c>
   4ade4:	31ffffc4 	addi	r7,r6,-1
   4ade8:	30004026 	beq	r6,zero,4aeec <memset+0x114>
   4adec:	2813883a 	mov	r9,r5
   4adf0:	200d883a 	mov	r6,r4
   4adf4:	2007883a 	mov	r3,r4
   4adf8:	00000406 	br	4ae0c <memset+0x34>
   4adfc:	3a3fffc4 	addi	r8,r7,-1
   4ae00:	31800044 	addi	r6,r6,1
   4ae04:	38003926 	beq	r7,zero,4aeec <memset+0x114>
   4ae08:	400f883a 	mov	r7,r8
   4ae0c:	18c00044 	addi	r3,r3,1
   4ae10:	32400005 	stb	r9,0(r6)
   4ae14:	1a0000cc 	andi	r8,r3,3
   4ae18:	403ff81e 	bne	r8,zero,4adfc <__alt_data_end+0xfffcadfc>
   4ae1c:	010000c4 	movi	r4,3
   4ae20:	21c02d2e 	bgeu	r4,r7,4aed8 <memset+0x100>
   4ae24:	29003fcc 	andi	r4,r5,255
   4ae28:	200c923a 	slli	r6,r4,8
   4ae2c:	3108b03a 	or	r4,r6,r4
   4ae30:	200c943a 	slli	r6,r4,16
   4ae34:	218cb03a 	or	r6,r4,r6
   4ae38:	010003c4 	movi	r4,15
   4ae3c:	21c0182e 	bgeu	r4,r7,4aea0 <memset+0xc8>
   4ae40:	3b3ffc04 	addi	r12,r7,-16
   4ae44:	6018d13a 	srli	r12,r12,4
   4ae48:	1a000104 	addi	r8,r3,4
   4ae4c:	1ac00204 	addi	r11,r3,8
   4ae50:	6008913a 	slli	r4,r12,4
   4ae54:	1a800304 	addi	r10,r3,12
   4ae58:	1813883a 	mov	r9,r3
   4ae5c:	21000504 	addi	r4,r4,20
   4ae60:	1909883a 	add	r4,r3,r4
   4ae64:	49800015 	stw	r6,0(r9)
   4ae68:	41800015 	stw	r6,0(r8)
   4ae6c:	59800015 	stw	r6,0(r11)
   4ae70:	51800015 	stw	r6,0(r10)
   4ae74:	42000404 	addi	r8,r8,16
   4ae78:	4a400404 	addi	r9,r9,16
   4ae7c:	5ac00404 	addi	r11,r11,16
   4ae80:	52800404 	addi	r10,r10,16
   4ae84:	413ff71e 	bne	r8,r4,4ae64 <__alt_data_end+0xfffcae64>
   4ae88:	63000044 	addi	r12,r12,1
   4ae8c:	6018913a 	slli	r12,r12,4
   4ae90:	39c003cc 	andi	r7,r7,15
   4ae94:	010000c4 	movi	r4,3
   4ae98:	1b07883a 	add	r3,r3,r12
   4ae9c:	21c00e2e 	bgeu	r4,r7,4aed8 <memset+0x100>
   4aea0:	1813883a 	mov	r9,r3
   4aea4:	3811883a 	mov	r8,r7
   4aea8:	010000c4 	movi	r4,3
   4aeac:	49800015 	stw	r6,0(r9)
   4aeb0:	423fff04 	addi	r8,r8,-4
   4aeb4:	4a400104 	addi	r9,r9,4
   4aeb8:	223ffc36 	bltu	r4,r8,4aeac <__alt_data_end+0xfffcaeac>
   4aebc:	393fff04 	addi	r4,r7,-4
   4aec0:	2008d0ba 	srli	r4,r4,2
   4aec4:	39c000cc 	andi	r7,r7,3
   4aec8:	21000044 	addi	r4,r4,1
   4aecc:	2109883a 	add	r4,r4,r4
   4aed0:	2109883a 	add	r4,r4,r4
   4aed4:	1907883a 	add	r3,r3,r4
   4aed8:	38000526 	beq	r7,zero,4aef0 <memset+0x118>
   4aedc:	19cf883a 	add	r7,r3,r7
   4aee0:	19400005 	stb	r5,0(r3)
   4aee4:	18c00044 	addi	r3,r3,1
   4aee8:	38fffd1e 	bne	r7,r3,4aee0 <__alt_data_end+0xfffcaee0>
   4aeec:	f800283a 	ret
   4aef0:	f800283a 	ret
   4aef4:	2007883a 	mov	r3,r4
   4aef8:	300f883a 	mov	r7,r6
   4aefc:	003fc706 	br	4ae1c <__alt_data_end+0xfffcae1c>

0004af00 <_Balloc>:
   4af00:	20801317 	ldw	r2,76(r4)
   4af04:	defffc04 	addi	sp,sp,-16
   4af08:	dc400115 	stw	r17,4(sp)
   4af0c:	dc000015 	stw	r16,0(sp)
   4af10:	dfc00315 	stw	ra,12(sp)
   4af14:	dc800215 	stw	r18,8(sp)
   4af18:	2023883a 	mov	r17,r4
   4af1c:	2821883a 	mov	r16,r5
   4af20:	10000f26 	beq	r2,zero,4af60 <_Balloc+0x60>
   4af24:	8407883a 	add	r3,r16,r16
   4af28:	18c7883a 	add	r3,r3,r3
   4af2c:	10c7883a 	add	r3,r2,r3
   4af30:	18800017 	ldw	r2,0(r3)
   4af34:	10001126 	beq	r2,zero,4af7c <_Balloc+0x7c>
   4af38:	11000017 	ldw	r4,0(r2)
   4af3c:	19000015 	stw	r4,0(r3)
   4af40:	10000415 	stw	zero,16(r2)
   4af44:	10000315 	stw	zero,12(r2)
   4af48:	dfc00317 	ldw	ra,12(sp)
   4af4c:	dc800217 	ldw	r18,8(sp)
   4af50:	dc400117 	ldw	r17,4(sp)
   4af54:	dc000017 	ldw	r16,0(sp)
   4af58:	dec00404 	addi	sp,sp,16
   4af5c:	f800283a 	ret
   4af60:	01800844 	movi	r6,33
   4af64:	01400104 	movi	r5,4
   4af68:	004de3c0 	call	4de3c <_calloc_r>
   4af6c:	88801315 	stw	r2,76(r17)
   4af70:	103fec1e 	bne	r2,zero,4af24 <__alt_data_end+0xfffcaf24>
   4af74:	0005883a 	mov	r2,zero
   4af78:	003ff306 	br	4af48 <__alt_data_end+0xfffcaf48>
   4af7c:	01400044 	movi	r5,1
   4af80:	2c24983a 	sll	r18,r5,r16
   4af84:	8809883a 	mov	r4,r17
   4af88:	91800144 	addi	r6,r18,5
   4af8c:	318d883a 	add	r6,r6,r6
   4af90:	318d883a 	add	r6,r6,r6
   4af94:	004de3c0 	call	4de3c <_calloc_r>
   4af98:	103ff626 	beq	r2,zero,4af74 <__alt_data_end+0xfffcaf74>
   4af9c:	14000115 	stw	r16,4(r2)
   4afa0:	14800215 	stw	r18,8(r2)
   4afa4:	003fe606 	br	4af40 <__alt_data_end+0xfffcaf40>

0004afa8 <_Bfree>:
   4afa8:	28000826 	beq	r5,zero,4afcc <_Bfree+0x24>
   4afac:	28c00117 	ldw	r3,4(r5)
   4afb0:	20801317 	ldw	r2,76(r4)
   4afb4:	18c7883a 	add	r3,r3,r3
   4afb8:	18c7883a 	add	r3,r3,r3
   4afbc:	10c5883a 	add	r2,r2,r3
   4afc0:	10c00017 	ldw	r3,0(r2)
   4afc4:	28c00015 	stw	r3,0(r5)
   4afc8:	11400015 	stw	r5,0(r2)
   4afcc:	f800283a 	ret

0004afd0 <__multadd>:
   4afd0:	defffa04 	addi	sp,sp,-24
   4afd4:	dc800315 	stw	r18,12(sp)
   4afd8:	dc400215 	stw	r17,8(sp)
   4afdc:	dc000115 	stw	r16,4(sp)
   4afe0:	2823883a 	mov	r17,r5
   4afe4:	2c000417 	ldw	r16,16(r5)
   4afe8:	dfc00515 	stw	ra,20(sp)
   4afec:	dcc00415 	stw	r19,16(sp)
   4aff0:	2025883a 	mov	r18,r4
   4aff4:	29400504 	addi	r5,r5,20
   4aff8:	0011883a 	mov	r8,zero
   4affc:	28c00017 	ldw	r3,0(r5)
   4b000:	29400104 	addi	r5,r5,4
   4b004:	42000044 	addi	r8,r8,1
   4b008:	18bfffcc 	andi	r2,r3,65535
   4b00c:	1185383a 	mul	r2,r2,r6
   4b010:	1806d43a 	srli	r3,r3,16
   4b014:	11cf883a 	add	r7,r2,r7
   4b018:	3808d43a 	srli	r4,r7,16
   4b01c:	1987383a 	mul	r3,r3,r6
   4b020:	38bfffcc 	andi	r2,r7,65535
   4b024:	1907883a 	add	r3,r3,r4
   4b028:	1808943a 	slli	r4,r3,16
   4b02c:	180ed43a 	srli	r7,r3,16
   4b030:	2085883a 	add	r2,r4,r2
   4b034:	28bfff15 	stw	r2,-4(r5)
   4b038:	443ff016 	blt	r8,r16,4affc <__alt_data_end+0xfffcaffc>
   4b03c:	38000926 	beq	r7,zero,4b064 <__multadd+0x94>
   4b040:	88800217 	ldw	r2,8(r17)
   4b044:	80800f0e 	bge	r16,r2,4b084 <__multadd+0xb4>
   4b048:	80800144 	addi	r2,r16,5
   4b04c:	1085883a 	add	r2,r2,r2
   4b050:	1085883a 	add	r2,r2,r2
   4b054:	8885883a 	add	r2,r17,r2
   4b058:	11c00015 	stw	r7,0(r2)
   4b05c:	84000044 	addi	r16,r16,1
   4b060:	8c000415 	stw	r16,16(r17)
   4b064:	8805883a 	mov	r2,r17
   4b068:	dfc00517 	ldw	ra,20(sp)
   4b06c:	dcc00417 	ldw	r19,16(sp)
   4b070:	dc800317 	ldw	r18,12(sp)
   4b074:	dc400217 	ldw	r17,8(sp)
   4b078:	dc000117 	ldw	r16,4(sp)
   4b07c:	dec00604 	addi	sp,sp,24
   4b080:	f800283a 	ret
   4b084:	89400117 	ldw	r5,4(r17)
   4b088:	9009883a 	mov	r4,r18
   4b08c:	d9c00015 	stw	r7,0(sp)
   4b090:	29400044 	addi	r5,r5,1
   4b094:	004af000 	call	4af00 <_Balloc>
   4b098:	89800417 	ldw	r6,16(r17)
   4b09c:	89400304 	addi	r5,r17,12
   4b0a0:	11000304 	addi	r4,r2,12
   4b0a4:	31800084 	addi	r6,r6,2
   4b0a8:	318d883a 	add	r6,r6,r6
   4b0ac:	318d883a 	add	r6,r6,r6
   4b0b0:	1027883a 	mov	r19,r2
   4b0b4:	004ab340 	call	4ab34 <memcpy>
   4b0b8:	d9c00017 	ldw	r7,0(sp)
   4b0bc:	88000a26 	beq	r17,zero,4b0e8 <__multadd+0x118>
   4b0c0:	88c00117 	ldw	r3,4(r17)
   4b0c4:	90801317 	ldw	r2,76(r18)
   4b0c8:	18c7883a 	add	r3,r3,r3
   4b0cc:	18c7883a 	add	r3,r3,r3
   4b0d0:	10c5883a 	add	r2,r2,r3
   4b0d4:	10c00017 	ldw	r3,0(r2)
   4b0d8:	88c00015 	stw	r3,0(r17)
   4b0dc:	14400015 	stw	r17,0(r2)
   4b0e0:	9823883a 	mov	r17,r19
   4b0e4:	003fd806 	br	4b048 <__alt_data_end+0xfffcb048>
   4b0e8:	9823883a 	mov	r17,r19
   4b0ec:	003fd606 	br	4b048 <__alt_data_end+0xfffcb048>

0004b0f0 <__s2b>:
   4b0f0:	defff904 	addi	sp,sp,-28
   4b0f4:	dc400115 	stw	r17,4(sp)
   4b0f8:	dc000015 	stw	r16,0(sp)
   4b0fc:	2023883a 	mov	r17,r4
   4b100:	2821883a 	mov	r16,r5
   4b104:	39000204 	addi	r4,r7,8
   4b108:	01400244 	movi	r5,9
   4b10c:	dcc00315 	stw	r19,12(sp)
   4b110:	dc800215 	stw	r18,8(sp)
   4b114:	dfc00615 	stw	ra,24(sp)
   4b118:	dd400515 	stw	r21,20(sp)
   4b11c:	dd000415 	stw	r20,16(sp)
   4b120:	3825883a 	mov	r18,r7
   4b124:	3027883a 	mov	r19,r6
   4b128:	00430180 	call	43018 <__divsi3>
   4b12c:	00c00044 	movi	r3,1
   4b130:	000b883a 	mov	r5,zero
   4b134:	1880030e 	bge	r3,r2,4b144 <__s2b+0x54>
   4b138:	18c7883a 	add	r3,r3,r3
   4b13c:	29400044 	addi	r5,r5,1
   4b140:	18bffd16 	blt	r3,r2,4b138 <__alt_data_end+0xfffcb138>
   4b144:	8809883a 	mov	r4,r17
   4b148:	004af000 	call	4af00 <_Balloc>
   4b14c:	d8c00717 	ldw	r3,28(sp)
   4b150:	10c00515 	stw	r3,20(r2)
   4b154:	00c00044 	movi	r3,1
   4b158:	10c00415 	stw	r3,16(r2)
   4b15c:	00c00244 	movi	r3,9
   4b160:	1cc0210e 	bge	r3,r19,4b1e8 <__s2b+0xf8>
   4b164:	80eb883a 	add	r21,r16,r3
   4b168:	a829883a 	mov	r20,r21
   4b16c:	84e1883a 	add	r16,r16,r19
   4b170:	a1c00007 	ldb	r7,0(r20)
   4b174:	01800284 	movi	r6,10
   4b178:	a5000044 	addi	r20,r20,1
   4b17c:	100b883a 	mov	r5,r2
   4b180:	39fff404 	addi	r7,r7,-48
   4b184:	8809883a 	mov	r4,r17
   4b188:	004afd00 	call	4afd0 <__multadd>
   4b18c:	a43ff81e 	bne	r20,r16,4b170 <__alt_data_end+0xfffcb170>
   4b190:	ace1883a 	add	r16,r21,r19
   4b194:	843ffe04 	addi	r16,r16,-8
   4b198:	9c800a0e 	bge	r19,r18,4b1c4 <__s2b+0xd4>
   4b19c:	94e5c83a 	sub	r18,r18,r19
   4b1a0:	84a5883a 	add	r18,r16,r18
   4b1a4:	81c00007 	ldb	r7,0(r16)
   4b1a8:	01800284 	movi	r6,10
   4b1ac:	84000044 	addi	r16,r16,1
   4b1b0:	100b883a 	mov	r5,r2
   4b1b4:	39fff404 	addi	r7,r7,-48
   4b1b8:	8809883a 	mov	r4,r17
   4b1bc:	004afd00 	call	4afd0 <__multadd>
   4b1c0:	84bff81e 	bne	r16,r18,4b1a4 <__alt_data_end+0xfffcb1a4>
   4b1c4:	dfc00617 	ldw	ra,24(sp)
   4b1c8:	dd400517 	ldw	r21,20(sp)
   4b1cc:	dd000417 	ldw	r20,16(sp)
   4b1d0:	dcc00317 	ldw	r19,12(sp)
   4b1d4:	dc800217 	ldw	r18,8(sp)
   4b1d8:	dc400117 	ldw	r17,4(sp)
   4b1dc:	dc000017 	ldw	r16,0(sp)
   4b1e0:	dec00704 	addi	sp,sp,28
   4b1e4:	f800283a 	ret
   4b1e8:	84000284 	addi	r16,r16,10
   4b1ec:	1827883a 	mov	r19,r3
   4b1f0:	003fe906 	br	4b198 <__alt_data_end+0xfffcb198>

0004b1f4 <__hi0bits>:
   4b1f4:	20bfffec 	andhi	r2,r4,65535
   4b1f8:	1000141e 	bne	r2,zero,4b24c <__hi0bits+0x58>
   4b1fc:	2008943a 	slli	r4,r4,16
   4b200:	00800404 	movi	r2,16
   4b204:	20ffc02c 	andhi	r3,r4,65280
   4b208:	1800021e 	bne	r3,zero,4b214 <__hi0bits+0x20>
   4b20c:	2008923a 	slli	r4,r4,8
   4b210:	10800204 	addi	r2,r2,8
   4b214:	20fc002c 	andhi	r3,r4,61440
   4b218:	1800021e 	bne	r3,zero,4b224 <__hi0bits+0x30>
   4b21c:	2008913a 	slli	r4,r4,4
   4b220:	10800104 	addi	r2,r2,4
   4b224:	20f0002c 	andhi	r3,r4,49152
   4b228:	1800031e 	bne	r3,zero,4b238 <__hi0bits+0x44>
   4b22c:	2109883a 	add	r4,r4,r4
   4b230:	10800084 	addi	r2,r2,2
   4b234:	2109883a 	add	r4,r4,r4
   4b238:	20000316 	blt	r4,zero,4b248 <__hi0bits+0x54>
   4b23c:	2110002c 	andhi	r4,r4,16384
   4b240:	2000041e 	bne	r4,zero,4b254 <__hi0bits+0x60>
   4b244:	00800804 	movi	r2,32
   4b248:	f800283a 	ret
   4b24c:	0005883a 	mov	r2,zero
   4b250:	003fec06 	br	4b204 <__alt_data_end+0xfffcb204>
   4b254:	10800044 	addi	r2,r2,1
   4b258:	f800283a 	ret

0004b25c <__lo0bits>:
   4b25c:	20c00017 	ldw	r3,0(r4)
   4b260:	188001cc 	andi	r2,r3,7
   4b264:	10000826 	beq	r2,zero,4b288 <__lo0bits+0x2c>
   4b268:	1880004c 	andi	r2,r3,1
   4b26c:	1000211e 	bne	r2,zero,4b2f4 <__lo0bits+0x98>
   4b270:	1880008c 	andi	r2,r3,2
   4b274:	1000211e 	bne	r2,zero,4b2fc <__lo0bits+0xa0>
   4b278:	1806d0ba 	srli	r3,r3,2
   4b27c:	00800084 	movi	r2,2
   4b280:	20c00015 	stw	r3,0(r4)
   4b284:	f800283a 	ret
   4b288:	18bfffcc 	andi	r2,r3,65535
   4b28c:	10001326 	beq	r2,zero,4b2dc <__lo0bits+0x80>
   4b290:	0005883a 	mov	r2,zero
   4b294:	19403fcc 	andi	r5,r3,255
   4b298:	2800021e 	bne	r5,zero,4b2a4 <__lo0bits+0x48>
   4b29c:	1806d23a 	srli	r3,r3,8
   4b2a0:	10800204 	addi	r2,r2,8
   4b2a4:	194003cc 	andi	r5,r3,15
   4b2a8:	2800021e 	bne	r5,zero,4b2b4 <__lo0bits+0x58>
   4b2ac:	1806d13a 	srli	r3,r3,4
   4b2b0:	10800104 	addi	r2,r2,4
   4b2b4:	194000cc 	andi	r5,r3,3
   4b2b8:	2800021e 	bne	r5,zero,4b2c4 <__lo0bits+0x68>
   4b2bc:	1806d0ba 	srli	r3,r3,2
   4b2c0:	10800084 	addi	r2,r2,2
   4b2c4:	1940004c 	andi	r5,r3,1
   4b2c8:	2800081e 	bne	r5,zero,4b2ec <__lo0bits+0x90>
   4b2cc:	1806d07a 	srli	r3,r3,1
   4b2d0:	1800051e 	bne	r3,zero,4b2e8 <__lo0bits+0x8c>
   4b2d4:	00800804 	movi	r2,32
   4b2d8:	f800283a 	ret
   4b2dc:	1806d43a 	srli	r3,r3,16
   4b2e0:	00800404 	movi	r2,16
   4b2e4:	003feb06 	br	4b294 <__alt_data_end+0xfffcb294>
   4b2e8:	10800044 	addi	r2,r2,1
   4b2ec:	20c00015 	stw	r3,0(r4)
   4b2f0:	f800283a 	ret
   4b2f4:	0005883a 	mov	r2,zero
   4b2f8:	f800283a 	ret
   4b2fc:	1806d07a 	srli	r3,r3,1
   4b300:	00800044 	movi	r2,1
   4b304:	20c00015 	stw	r3,0(r4)
   4b308:	f800283a 	ret

0004b30c <__i2b>:
   4b30c:	defffd04 	addi	sp,sp,-12
   4b310:	dc000015 	stw	r16,0(sp)
   4b314:	04000044 	movi	r16,1
   4b318:	dc400115 	stw	r17,4(sp)
   4b31c:	2823883a 	mov	r17,r5
   4b320:	800b883a 	mov	r5,r16
   4b324:	dfc00215 	stw	ra,8(sp)
   4b328:	004af000 	call	4af00 <_Balloc>
   4b32c:	14400515 	stw	r17,20(r2)
   4b330:	14000415 	stw	r16,16(r2)
   4b334:	dfc00217 	ldw	ra,8(sp)
   4b338:	dc400117 	ldw	r17,4(sp)
   4b33c:	dc000017 	ldw	r16,0(sp)
   4b340:	dec00304 	addi	sp,sp,12
   4b344:	f800283a 	ret

0004b348 <__multiply>:
   4b348:	defffa04 	addi	sp,sp,-24
   4b34c:	dcc00315 	stw	r19,12(sp)
   4b350:	dc800215 	stw	r18,8(sp)
   4b354:	34c00417 	ldw	r19,16(r6)
   4b358:	2c800417 	ldw	r18,16(r5)
   4b35c:	dd000415 	stw	r20,16(sp)
   4b360:	dc400115 	stw	r17,4(sp)
   4b364:	dfc00515 	stw	ra,20(sp)
   4b368:	dc000015 	stw	r16,0(sp)
   4b36c:	2829883a 	mov	r20,r5
   4b370:	3023883a 	mov	r17,r6
   4b374:	94c0050e 	bge	r18,r19,4b38c <__multiply+0x44>
   4b378:	9007883a 	mov	r3,r18
   4b37c:	3029883a 	mov	r20,r6
   4b380:	9825883a 	mov	r18,r19
   4b384:	2823883a 	mov	r17,r5
   4b388:	1827883a 	mov	r19,r3
   4b38c:	a0800217 	ldw	r2,8(r20)
   4b390:	94e1883a 	add	r16,r18,r19
   4b394:	a1400117 	ldw	r5,4(r20)
   4b398:	1400010e 	bge	r2,r16,4b3a0 <__multiply+0x58>
   4b39c:	29400044 	addi	r5,r5,1
   4b3a0:	004af000 	call	4af00 <_Balloc>
   4b3a4:	8415883a 	add	r10,r16,r16
   4b3a8:	12c00504 	addi	r11,r2,20
   4b3ac:	5295883a 	add	r10,r10,r10
   4b3b0:	5a95883a 	add	r10,r11,r10
   4b3b4:	5807883a 	mov	r3,r11
   4b3b8:	5a80032e 	bgeu	r11,r10,4b3c8 <__multiply+0x80>
   4b3bc:	18000015 	stw	zero,0(r3)
   4b3c0:	18c00104 	addi	r3,r3,4
   4b3c4:	1abffd36 	bltu	r3,r10,4b3bc <__alt_data_end+0xfffcb3bc>
   4b3c8:	9ce7883a 	add	r19,r19,r19
   4b3cc:	94a5883a 	add	r18,r18,r18
   4b3d0:	89800504 	addi	r6,r17,20
   4b3d4:	9ce7883a 	add	r19,r19,r19
   4b3d8:	a3400504 	addi	r13,r20,20
   4b3dc:	94a5883a 	add	r18,r18,r18
   4b3e0:	34d9883a 	add	r12,r6,r19
   4b3e4:	6c93883a 	add	r9,r13,r18
   4b3e8:	3300422e 	bgeu	r6,r12,4b4f4 <__multiply+0x1ac>
   4b3ec:	37c00017 	ldw	ra,0(r6)
   4b3f0:	fbffffcc 	andi	r15,ra,65535
   4b3f4:	78001b26 	beq	r15,zero,4b464 <__multiply+0x11c>
   4b3f8:	5811883a 	mov	r8,r11
   4b3fc:	681d883a 	mov	r14,r13
   4b400:	000f883a 	mov	r7,zero
   4b404:	71000017 	ldw	r4,0(r14)
   4b408:	40c00017 	ldw	r3,0(r8)
   4b40c:	73800104 	addi	r14,r14,4
   4b410:	217fffcc 	andi	r5,r4,65535
   4b414:	2bcb383a 	mul	r5,r5,r15
   4b418:	2008d43a 	srli	r4,r4,16
   4b41c:	1c7fffcc 	andi	r17,r3,65535
   4b420:	2c4b883a 	add	r5,r5,r17
   4b424:	29cb883a 	add	r5,r5,r7
   4b428:	23c9383a 	mul	r4,r4,r15
   4b42c:	1806d43a 	srli	r3,r3,16
   4b430:	280ed43a 	srli	r7,r5,16
   4b434:	297fffcc 	andi	r5,r5,65535
   4b438:	20c7883a 	add	r3,r4,r3
   4b43c:	19c7883a 	add	r3,r3,r7
   4b440:	1808943a 	slli	r4,r3,16
   4b444:	4023883a 	mov	r17,r8
   4b448:	180ed43a 	srli	r7,r3,16
   4b44c:	214ab03a 	or	r5,r4,r5
   4b450:	41400015 	stw	r5,0(r8)
   4b454:	42000104 	addi	r8,r8,4
   4b458:	727fea36 	bltu	r14,r9,4b404 <__alt_data_end+0xfffcb404>
   4b45c:	89c00115 	stw	r7,4(r17)
   4b460:	37c00017 	ldw	ra,0(r6)
   4b464:	f83ed43a 	srli	ra,ra,16
   4b468:	f8001f26 	beq	ra,zero,4b4e8 <__multiply+0x1a0>
   4b46c:	58c00017 	ldw	r3,0(r11)
   4b470:	681d883a 	mov	r14,r13
   4b474:	581f883a 	mov	r15,r11
   4b478:	1811883a 	mov	r8,r3
   4b47c:	5825883a 	mov	r18,r11
   4b480:	000f883a 	mov	r7,zero
   4b484:	00000106 	br	4b48c <__multiply+0x144>
   4b488:	8825883a 	mov	r18,r17
   4b48c:	7140000b 	ldhu	r5,0(r14)
   4b490:	4010d43a 	srli	r8,r8,16
   4b494:	193fffcc 	andi	r4,r3,65535
   4b498:	2fcb383a 	mul	r5,r5,ra
   4b49c:	7bc00104 	addi	r15,r15,4
   4b4a0:	73800104 	addi	r14,r14,4
   4b4a4:	2a0b883a 	add	r5,r5,r8
   4b4a8:	29cb883a 	add	r5,r5,r7
   4b4ac:	2806943a 	slli	r3,r5,16
   4b4b0:	94400104 	addi	r17,r18,4
   4b4b4:	280ad43a 	srli	r5,r5,16
   4b4b8:	1908b03a 	or	r4,r3,r4
   4b4bc:	793fff15 	stw	r4,-4(r15)
   4b4c0:	70ffff17 	ldw	r3,-4(r14)
   4b4c4:	8a000017 	ldw	r8,0(r17)
   4b4c8:	1806d43a 	srli	r3,r3,16
   4b4cc:	413fffcc 	andi	r4,r8,65535
   4b4d0:	1fc7383a 	mul	r3,r3,ra
   4b4d4:	1907883a 	add	r3,r3,r4
   4b4d8:	1947883a 	add	r3,r3,r5
   4b4dc:	180ed43a 	srli	r7,r3,16
   4b4e0:	727fe936 	bltu	r14,r9,4b488 <__alt_data_end+0xfffcb488>
   4b4e4:	90c00115 	stw	r3,4(r18)
   4b4e8:	31800104 	addi	r6,r6,4
   4b4ec:	5ac00104 	addi	r11,r11,4
   4b4f0:	333fbe36 	bltu	r6,r12,4b3ec <__alt_data_end+0xfffcb3ec>
   4b4f4:	0400090e 	bge	zero,r16,4b51c <__multiply+0x1d4>
   4b4f8:	50ffff17 	ldw	r3,-4(r10)
   4b4fc:	52bfff04 	addi	r10,r10,-4
   4b500:	18000326 	beq	r3,zero,4b510 <__multiply+0x1c8>
   4b504:	00000506 	br	4b51c <__multiply+0x1d4>
   4b508:	50c00017 	ldw	r3,0(r10)
   4b50c:	1800031e 	bne	r3,zero,4b51c <__multiply+0x1d4>
   4b510:	843fffc4 	addi	r16,r16,-1
   4b514:	52bfff04 	addi	r10,r10,-4
   4b518:	803ffb1e 	bne	r16,zero,4b508 <__alt_data_end+0xfffcb508>
   4b51c:	14000415 	stw	r16,16(r2)
   4b520:	dfc00517 	ldw	ra,20(sp)
   4b524:	dd000417 	ldw	r20,16(sp)
   4b528:	dcc00317 	ldw	r19,12(sp)
   4b52c:	dc800217 	ldw	r18,8(sp)
   4b530:	dc400117 	ldw	r17,4(sp)
   4b534:	dc000017 	ldw	r16,0(sp)
   4b538:	dec00604 	addi	sp,sp,24
   4b53c:	f800283a 	ret

0004b540 <__pow5mult>:
   4b540:	defffa04 	addi	sp,sp,-24
   4b544:	dcc00315 	stw	r19,12(sp)
   4b548:	dc000015 	stw	r16,0(sp)
   4b54c:	dfc00515 	stw	ra,20(sp)
   4b550:	dd000415 	stw	r20,16(sp)
   4b554:	dc800215 	stw	r18,8(sp)
   4b558:	dc400115 	stw	r17,4(sp)
   4b55c:	308000cc 	andi	r2,r6,3
   4b560:	3021883a 	mov	r16,r6
   4b564:	2027883a 	mov	r19,r4
   4b568:	10002f1e 	bne	r2,zero,4b628 <__pow5mult+0xe8>
   4b56c:	2825883a 	mov	r18,r5
   4b570:	8021d0ba 	srai	r16,r16,2
   4b574:	80001a26 	beq	r16,zero,4b5e0 <__pow5mult+0xa0>
   4b578:	9c401217 	ldw	r17,72(r19)
   4b57c:	8800061e 	bne	r17,zero,4b598 <__pow5mult+0x58>
   4b580:	00003406 	br	4b654 <__pow5mult+0x114>
   4b584:	8021d07a 	srai	r16,r16,1
   4b588:	80001526 	beq	r16,zero,4b5e0 <__pow5mult+0xa0>
   4b58c:	88800017 	ldw	r2,0(r17)
   4b590:	10001c26 	beq	r2,zero,4b604 <__pow5mult+0xc4>
   4b594:	1023883a 	mov	r17,r2
   4b598:	8080004c 	andi	r2,r16,1
   4b59c:	103ff926 	beq	r2,zero,4b584 <__alt_data_end+0xfffcb584>
   4b5a0:	880d883a 	mov	r6,r17
   4b5a4:	900b883a 	mov	r5,r18
   4b5a8:	9809883a 	mov	r4,r19
   4b5ac:	004b3480 	call	4b348 <__multiply>
   4b5b0:	90001b26 	beq	r18,zero,4b620 <__pow5mult+0xe0>
   4b5b4:	91000117 	ldw	r4,4(r18)
   4b5b8:	98c01317 	ldw	r3,76(r19)
   4b5bc:	8021d07a 	srai	r16,r16,1
   4b5c0:	2109883a 	add	r4,r4,r4
   4b5c4:	2109883a 	add	r4,r4,r4
   4b5c8:	1907883a 	add	r3,r3,r4
   4b5cc:	19000017 	ldw	r4,0(r3)
   4b5d0:	91000015 	stw	r4,0(r18)
   4b5d4:	1c800015 	stw	r18,0(r3)
   4b5d8:	1025883a 	mov	r18,r2
   4b5dc:	803feb1e 	bne	r16,zero,4b58c <__alt_data_end+0xfffcb58c>
   4b5e0:	9005883a 	mov	r2,r18
   4b5e4:	dfc00517 	ldw	ra,20(sp)
   4b5e8:	dd000417 	ldw	r20,16(sp)
   4b5ec:	dcc00317 	ldw	r19,12(sp)
   4b5f0:	dc800217 	ldw	r18,8(sp)
   4b5f4:	dc400117 	ldw	r17,4(sp)
   4b5f8:	dc000017 	ldw	r16,0(sp)
   4b5fc:	dec00604 	addi	sp,sp,24
   4b600:	f800283a 	ret
   4b604:	880d883a 	mov	r6,r17
   4b608:	880b883a 	mov	r5,r17
   4b60c:	9809883a 	mov	r4,r19
   4b610:	004b3480 	call	4b348 <__multiply>
   4b614:	88800015 	stw	r2,0(r17)
   4b618:	10000015 	stw	zero,0(r2)
   4b61c:	003fdd06 	br	4b594 <__alt_data_end+0xfffcb594>
   4b620:	1025883a 	mov	r18,r2
   4b624:	003fd706 	br	4b584 <__alt_data_end+0xfffcb584>
   4b628:	10bfffc4 	addi	r2,r2,-1
   4b62c:	1085883a 	add	r2,r2,r2
   4b630:	00c00174 	movhi	r3,5
   4b634:	18ca4c04 	addi	r3,r3,10544
   4b638:	1085883a 	add	r2,r2,r2
   4b63c:	1885883a 	add	r2,r3,r2
   4b640:	11800017 	ldw	r6,0(r2)
   4b644:	000f883a 	mov	r7,zero
   4b648:	004afd00 	call	4afd0 <__multadd>
   4b64c:	1025883a 	mov	r18,r2
   4b650:	003fc706 	br	4b570 <__alt_data_end+0xfffcb570>
   4b654:	05000044 	movi	r20,1
   4b658:	a00b883a 	mov	r5,r20
   4b65c:	9809883a 	mov	r4,r19
   4b660:	004af000 	call	4af00 <_Balloc>
   4b664:	1023883a 	mov	r17,r2
   4b668:	00809c44 	movi	r2,625
   4b66c:	88800515 	stw	r2,20(r17)
   4b670:	8d000415 	stw	r20,16(r17)
   4b674:	9c401215 	stw	r17,72(r19)
   4b678:	88000015 	stw	zero,0(r17)
   4b67c:	003fc606 	br	4b598 <__alt_data_end+0xfffcb598>

0004b680 <__lshift>:
   4b680:	defff904 	addi	sp,sp,-28
   4b684:	dd400515 	stw	r21,20(sp)
   4b688:	dcc00315 	stw	r19,12(sp)
   4b68c:	302bd17a 	srai	r21,r6,5
   4b690:	2cc00417 	ldw	r19,16(r5)
   4b694:	28800217 	ldw	r2,8(r5)
   4b698:	dd000415 	stw	r20,16(sp)
   4b69c:	ace7883a 	add	r19,r21,r19
   4b6a0:	dc800215 	stw	r18,8(sp)
   4b6a4:	dc400115 	stw	r17,4(sp)
   4b6a8:	dc000015 	stw	r16,0(sp)
   4b6ac:	dfc00615 	stw	ra,24(sp)
   4b6b0:	9c000044 	addi	r16,r19,1
   4b6b4:	2823883a 	mov	r17,r5
   4b6b8:	3029883a 	mov	r20,r6
   4b6bc:	2025883a 	mov	r18,r4
   4b6c0:	29400117 	ldw	r5,4(r5)
   4b6c4:	1400030e 	bge	r2,r16,4b6d4 <__lshift+0x54>
   4b6c8:	1085883a 	add	r2,r2,r2
   4b6cc:	29400044 	addi	r5,r5,1
   4b6d0:	143ffd16 	blt	r2,r16,4b6c8 <__alt_data_end+0xfffcb6c8>
   4b6d4:	9009883a 	mov	r4,r18
   4b6d8:	004af000 	call	4af00 <_Balloc>
   4b6dc:	10c00504 	addi	r3,r2,20
   4b6e0:	0540070e 	bge	zero,r21,4b700 <__lshift+0x80>
   4b6e4:	ad6b883a 	add	r21,r21,r21
   4b6e8:	ad6b883a 	add	r21,r21,r21
   4b6ec:	1809883a 	mov	r4,r3
   4b6f0:	1d47883a 	add	r3,r3,r21
   4b6f4:	20000015 	stw	zero,0(r4)
   4b6f8:	21000104 	addi	r4,r4,4
   4b6fc:	193ffd1e 	bne	r3,r4,4b6f4 <__alt_data_end+0xfffcb6f4>
   4b700:	8a000417 	ldw	r8,16(r17)
   4b704:	89000504 	addi	r4,r17,20
   4b708:	a18007cc 	andi	r6,r20,31
   4b70c:	4211883a 	add	r8,r8,r8
   4b710:	4211883a 	add	r8,r8,r8
   4b714:	2211883a 	add	r8,r4,r8
   4b718:	30002326 	beq	r6,zero,4b7a8 <__lshift+0x128>
   4b71c:	02400804 	movi	r9,32
   4b720:	4993c83a 	sub	r9,r9,r6
   4b724:	000b883a 	mov	r5,zero
   4b728:	21c00017 	ldw	r7,0(r4)
   4b72c:	1815883a 	mov	r10,r3
   4b730:	18c00104 	addi	r3,r3,4
   4b734:	398e983a 	sll	r7,r7,r6
   4b738:	21000104 	addi	r4,r4,4
   4b73c:	394ab03a 	or	r5,r7,r5
   4b740:	197fff15 	stw	r5,-4(r3)
   4b744:	217fff17 	ldw	r5,-4(r4)
   4b748:	2a4ad83a 	srl	r5,r5,r9
   4b74c:	223ff636 	bltu	r4,r8,4b728 <__alt_data_end+0xfffcb728>
   4b750:	51400115 	stw	r5,4(r10)
   4b754:	28001a1e 	bne	r5,zero,4b7c0 <__lshift+0x140>
   4b758:	843fffc4 	addi	r16,r16,-1
   4b75c:	14000415 	stw	r16,16(r2)
   4b760:	88000826 	beq	r17,zero,4b784 <__lshift+0x104>
   4b764:	89000117 	ldw	r4,4(r17)
   4b768:	90c01317 	ldw	r3,76(r18)
   4b76c:	2109883a 	add	r4,r4,r4
   4b770:	2109883a 	add	r4,r4,r4
   4b774:	1907883a 	add	r3,r3,r4
   4b778:	19000017 	ldw	r4,0(r3)
   4b77c:	89000015 	stw	r4,0(r17)
   4b780:	1c400015 	stw	r17,0(r3)
   4b784:	dfc00617 	ldw	ra,24(sp)
   4b788:	dd400517 	ldw	r21,20(sp)
   4b78c:	dd000417 	ldw	r20,16(sp)
   4b790:	dcc00317 	ldw	r19,12(sp)
   4b794:	dc800217 	ldw	r18,8(sp)
   4b798:	dc400117 	ldw	r17,4(sp)
   4b79c:	dc000017 	ldw	r16,0(sp)
   4b7a0:	dec00704 	addi	sp,sp,28
   4b7a4:	f800283a 	ret
   4b7a8:	21400017 	ldw	r5,0(r4)
   4b7ac:	18c00104 	addi	r3,r3,4
   4b7b0:	21000104 	addi	r4,r4,4
   4b7b4:	197fff15 	stw	r5,-4(r3)
   4b7b8:	223ffb36 	bltu	r4,r8,4b7a8 <__alt_data_end+0xfffcb7a8>
   4b7bc:	003fe606 	br	4b758 <__alt_data_end+0xfffcb758>
   4b7c0:	9c000084 	addi	r16,r19,2
   4b7c4:	003fe406 	br	4b758 <__alt_data_end+0xfffcb758>

0004b7c8 <__mcmp>:
   4b7c8:	20800417 	ldw	r2,16(r4)
   4b7cc:	28c00417 	ldw	r3,16(r5)
   4b7d0:	10c5c83a 	sub	r2,r2,r3
   4b7d4:	1000111e 	bne	r2,zero,4b81c <__mcmp+0x54>
   4b7d8:	18c7883a 	add	r3,r3,r3
   4b7dc:	18c7883a 	add	r3,r3,r3
   4b7e0:	21000504 	addi	r4,r4,20
   4b7e4:	29400504 	addi	r5,r5,20
   4b7e8:	20c5883a 	add	r2,r4,r3
   4b7ec:	28cb883a 	add	r5,r5,r3
   4b7f0:	00000106 	br	4b7f8 <__mcmp+0x30>
   4b7f4:	20800a2e 	bgeu	r4,r2,4b820 <__mcmp+0x58>
   4b7f8:	10bfff04 	addi	r2,r2,-4
   4b7fc:	297fff04 	addi	r5,r5,-4
   4b800:	11800017 	ldw	r6,0(r2)
   4b804:	28c00017 	ldw	r3,0(r5)
   4b808:	30fffa26 	beq	r6,r3,4b7f4 <__alt_data_end+0xfffcb7f4>
   4b80c:	30c00236 	bltu	r6,r3,4b818 <__mcmp+0x50>
   4b810:	00800044 	movi	r2,1
   4b814:	f800283a 	ret
   4b818:	00bfffc4 	movi	r2,-1
   4b81c:	f800283a 	ret
   4b820:	0005883a 	mov	r2,zero
   4b824:	f800283a 	ret

0004b828 <__mdiff>:
   4b828:	28c00417 	ldw	r3,16(r5)
   4b82c:	30800417 	ldw	r2,16(r6)
   4b830:	defffa04 	addi	sp,sp,-24
   4b834:	dcc00315 	stw	r19,12(sp)
   4b838:	dc800215 	stw	r18,8(sp)
   4b83c:	dfc00515 	stw	ra,20(sp)
   4b840:	dd000415 	stw	r20,16(sp)
   4b844:	dc400115 	stw	r17,4(sp)
   4b848:	dc000015 	stw	r16,0(sp)
   4b84c:	1887c83a 	sub	r3,r3,r2
   4b850:	2825883a 	mov	r18,r5
   4b854:	3027883a 	mov	r19,r6
   4b858:	1800141e 	bne	r3,zero,4b8ac <__mdiff+0x84>
   4b85c:	1085883a 	add	r2,r2,r2
   4b860:	1085883a 	add	r2,r2,r2
   4b864:	2a000504 	addi	r8,r5,20
   4b868:	34000504 	addi	r16,r6,20
   4b86c:	4087883a 	add	r3,r8,r2
   4b870:	8085883a 	add	r2,r16,r2
   4b874:	00000106 	br	4b87c <__mdiff+0x54>
   4b878:	40c0592e 	bgeu	r8,r3,4b9e0 <__mdiff+0x1b8>
   4b87c:	18ffff04 	addi	r3,r3,-4
   4b880:	10bfff04 	addi	r2,r2,-4
   4b884:	19c00017 	ldw	r7,0(r3)
   4b888:	11400017 	ldw	r5,0(r2)
   4b88c:	397ffa26 	beq	r7,r5,4b878 <__alt_data_end+0xfffcb878>
   4b890:	3940592e 	bgeu	r7,r5,4b9f8 <__mdiff+0x1d0>
   4b894:	9005883a 	mov	r2,r18
   4b898:	4023883a 	mov	r17,r8
   4b89c:	9825883a 	mov	r18,r19
   4b8a0:	05000044 	movi	r20,1
   4b8a4:	1027883a 	mov	r19,r2
   4b8a8:	00000406 	br	4b8bc <__mdiff+0x94>
   4b8ac:	18005616 	blt	r3,zero,4ba08 <__mdiff+0x1e0>
   4b8b0:	34400504 	addi	r17,r6,20
   4b8b4:	2c000504 	addi	r16,r5,20
   4b8b8:	0029883a 	mov	r20,zero
   4b8bc:	91400117 	ldw	r5,4(r18)
   4b8c0:	004af000 	call	4af00 <_Balloc>
   4b8c4:	92400417 	ldw	r9,16(r18)
   4b8c8:	9b000417 	ldw	r12,16(r19)
   4b8cc:	12c00504 	addi	r11,r2,20
   4b8d0:	4a51883a 	add	r8,r9,r9
   4b8d4:	6319883a 	add	r12,r12,r12
   4b8d8:	4211883a 	add	r8,r8,r8
   4b8dc:	6319883a 	add	r12,r12,r12
   4b8e0:	15000315 	stw	r20,12(r2)
   4b8e4:	8211883a 	add	r8,r16,r8
   4b8e8:	8b19883a 	add	r12,r17,r12
   4b8ec:	0007883a 	mov	r3,zero
   4b8f0:	81400017 	ldw	r5,0(r16)
   4b8f4:	89c00017 	ldw	r7,0(r17)
   4b8f8:	59800104 	addi	r6,r11,4
   4b8fc:	293fffcc 	andi	r4,r5,65535
   4b900:	20c7883a 	add	r3,r4,r3
   4b904:	393fffcc 	andi	r4,r7,65535
   4b908:	1909c83a 	sub	r4,r3,r4
   4b90c:	280ad43a 	srli	r5,r5,16
   4b910:	380ed43a 	srli	r7,r7,16
   4b914:	2007d43a 	srai	r3,r4,16
   4b918:	213fffcc 	andi	r4,r4,65535
   4b91c:	29cbc83a 	sub	r5,r5,r7
   4b920:	28c7883a 	add	r3,r5,r3
   4b924:	180a943a 	slli	r5,r3,16
   4b928:	8c400104 	addi	r17,r17,4
   4b92c:	84000104 	addi	r16,r16,4
   4b930:	2908b03a 	or	r4,r5,r4
   4b934:	59000015 	stw	r4,0(r11)
   4b938:	1807d43a 	srai	r3,r3,16
   4b93c:	3015883a 	mov	r10,r6
   4b940:	3017883a 	mov	r11,r6
   4b944:	8b3fea36 	bltu	r17,r12,4b8f0 <__alt_data_end+0xfffcb8f0>
   4b948:	8200162e 	bgeu	r16,r8,4b9a4 <__mdiff+0x17c>
   4b94c:	8017883a 	mov	r11,r16
   4b950:	59400017 	ldw	r5,0(r11)
   4b954:	31800104 	addi	r6,r6,4
   4b958:	5ac00104 	addi	r11,r11,4
   4b95c:	293fffcc 	andi	r4,r5,65535
   4b960:	20c7883a 	add	r3,r4,r3
   4b964:	280ed43a 	srli	r7,r5,16
   4b968:	180bd43a 	srai	r5,r3,16
   4b96c:	193fffcc 	andi	r4,r3,65535
   4b970:	3947883a 	add	r3,r7,r5
   4b974:	180a943a 	slli	r5,r3,16
   4b978:	1807d43a 	srai	r3,r3,16
   4b97c:	2908b03a 	or	r4,r5,r4
   4b980:	313fff15 	stw	r4,-4(r6)
   4b984:	5a3ff236 	bltu	r11,r8,4b950 <__alt_data_end+0xfffcb950>
   4b988:	0406303a 	nor	r3,zero,r16
   4b98c:	1a07883a 	add	r3,r3,r8
   4b990:	1806d0ba 	srli	r3,r3,2
   4b994:	18c00044 	addi	r3,r3,1
   4b998:	18c7883a 	add	r3,r3,r3
   4b99c:	18c7883a 	add	r3,r3,r3
   4b9a0:	50d5883a 	add	r10,r10,r3
   4b9a4:	50ffff04 	addi	r3,r10,-4
   4b9a8:	2000041e 	bne	r4,zero,4b9bc <__mdiff+0x194>
   4b9ac:	18ffff04 	addi	r3,r3,-4
   4b9b0:	19000017 	ldw	r4,0(r3)
   4b9b4:	4a7fffc4 	addi	r9,r9,-1
   4b9b8:	203ffc26 	beq	r4,zero,4b9ac <__alt_data_end+0xfffcb9ac>
   4b9bc:	12400415 	stw	r9,16(r2)
   4b9c0:	dfc00517 	ldw	ra,20(sp)
   4b9c4:	dd000417 	ldw	r20,16(sp)
   4b9c8:	dcc00317 	ldw	r19,12(sp)
   4b9cc:	dc800217 	ldw	r18,8(sp)
   4b9d0:	dc400117 	ldw	r17,4(sp)
   4b9d4:	dc000017 	ldw	r16,0(sp)
   4b9d8:	dec00604 	addi	sp,sp,24
   4b9dc:	f800283a 	ret
   4b9e0:	000b883a 	mov	r5,zero
   4b9e4:	004af000 	call	4af00 <_Balloc>
   4b9e8:	00c00044 	movi	r3,1
   4b9ec:	10c00415 	stw	r3,16(r2)
   4b9f0:	10000515 	stw	zero,20(r2)
   4b9f4:	003ff206 	br	4b9c0 <__alt_data_end+0xfffcb9c0>
   4b9f8:	8023883a 	mov	r17,r16
   4b9fc:	0029883a 	mov	r20,zero
   4ba00:	4021883a 	mov	r16,r8
   4ba04:	003fad06 	br	4b8bc <__alt_data_end+0xfffcb8bc>
   4ba08:	9005883a 	mov	r2,r18
   4ba0c:	94400504 	addi	r17,r18,20
   4ba10:	9c000504 	addi	r16,r19,20
   4ba14:	9825883a 	mov	r18,r19
   4ba18:	05000044 	movi	r20,1
   4ba1c:	1027883a 	mov	r19,r2
   4ba20:	003fa606 	br	4b8bc <__alt_data_end+0xfffcb8bc>

0004ba24 <__ulp>:
   4ba24:	295ffc2c 	andhi	r5,r5,32752
   4ba28:	00bf3034 	movhi	r2,64704
   4ba2c:	2887883a 	add	r3,r5,r2
   4ba30:	00c0020e 	bge	zero,r3,4ba3c <__ulp+0x18>
   4ba34:	0005883a 	mov	r2,zero
   4ba38:	f800283a 	ret
   4ba3c:	00c7c83a 	sub	r3,zero,r3
   4ba40:	1807d53a 	srai	r3,r3,20
   4ba44:	008004c4 	movi	r2,19
   4ba48:	10c00b0e 	bge	r2,r3,4ba78 <__ulp+0x54>
   4ba4c:	18bffb04 	addi	r2,r3,-20
   4ba50:	01000784 	movi	r4,30
   4ba54:	0007883a 	mov	r3,zero
   4ba58:	20800516 	blt	r4,r2,4ba70 <__ulp+0x4c>
   4ba5c:	010007c4 	movi	r4,31
   4ba60:	2089c83a 	sub	r4,r4,r2
   4ba64:	00800044 	movi	r2,1
   4ba68:	1104983a 	sll	r2,r2,r4
   4ba6c:	f800283a 	ret
   4ba70:	00800044 	movi	r2,1
   4ba74:	f800283a 	ret
   4ba78:	01400234 	movhi	r5,8
   4ba7c:	28c7d83a 	sra	r3,r5,r3
   4ba80:	0005883a 	mov	r2,zero
   4ba84:	f800283a 	ret

0004ba88 <__b2d>:
   4ba88:	defffa04 	addi	sp,sp,-24
   4ba8c:	dc000015 	stw	r16,0(sp)
   4ba90:	24000417 	ldw	r16,16(r4)
   4ba94:	dc400115 	stw	r17,4(sp)
   4ba98:	24400504 	addi	r17,r4,20
   4ba9c:	8421883a 	add	r16,r16,r16
   4baa0:	8421883a 	add	r16,r16,r16
   4baa4:	8c21883a 	add	r16,r17,r16
   4baa8:	dc800215 	stw	r18,8(sp)
   4baac:	84bfff17 	ldw	r18,-4(r16)
   4bab0:	dd000415 	stw	r20,16(sp)
   4bab4:	dcc00315 	stw	r19,12(sp)
   4bab8:	9009883a 	mov	r4,r18
   4babc:	2829883a 	mov	r20,r5
   4bac0:	dfc00515 	stw	ra,20(sp)
   4bac4:	004b1f40 	call	4b1f4 <__hi0bits>
   4bac8:	00c00804 	movi	r3,32
   4bacc:	1889c83a 	sub	r4,r3,r2
   4bad0:	a1000015 	stw	r4,0(r20)
   4bad4:	01000284 	movi	r4,10
   4bad8:	84ffff04 	addi	r19,r16,-4
   4badc:	20801216 	blt	r4,r2,4bb28 <__b2d+0xa0>
   4bae0:	018002c4 	movi	r6,11
   4bae4:	308dc83a 	sub	r6,r6,r2
   4bae8:	9186d83a 	srl	r3,r18,r6
   4baec:	18cffc34 	orhi	r3,r3,16368
   4baf0:	8cc0212e 	bgeu	r17,r19,4bb78 <__b2d+0xf0>
   4baf4:	813ffe17 	ldw	r4,-8(r16)
   4baf8:	218cd83a 	srl	r6,r4,r6
   4bafc:	10800544 	addi	r2,r2,21
   4bb00:	9084983a 	sll	r2,r18,r2
   4bb04:	1184b03a 	or	r2,r2,r6
   4bb08:	dfc00517 	ldw	ra,20(sp)
   4bb0c:	dd000417 	ldw	r20,16(sp)
   4bb10:	dcc00317 	ldw	r19,12(sp)
   4bb14:	dc800217 	ldw	r18,8(sp)
   4bb18:	dc400117 	ldw	r17,4(sp)
   4bb1c:	dc000017 	ldw	r16,0(sp)
   4bb20:	dec00604 	addi	sp,sp,24
   4bb24:	f800283a 	ret
   4bb28:	8cc00f2e 	bgeu	r17,r19,4bb68 <__b2d+0xe0>
   4bb2c:	117ffd44 	addi	r5,r2,-11
   4bb30:	80bffe17 	ldw	r2,-8(r16)
   4bb34:	28000e26 	beq	r5,zero,4bb70 <__b2d+0xe8>
   4bb38:	1949c83a 	sub	r4,r3,r5
   4bb3c:	9164983a 	sll	r18,r18,r5
   4bb40:	1106d83a 	srl	r3,r2,r4
   4bb44:	81bffe04 	addi	r6,r16,-8
   4bb48:	948ffc34 	orhi	r18,r18,16368
   4bb4c:	90c6b03a 	or	r3,r18,r3
   4bb50:	89800e2e 	bgeu	r17,r6,4bb8c <__b2d+0x104>
   4bb54:	81bffd17 	ldw	r6,-12(r16)
   4bb58:	1144983a 	sll	r2,r2,r5
   4bb5c:	310ad83a 	srl	r5,r6,r4
   4bb60:	2884b03a 	or	r2,r5,r2
   4bb64:	003fe806 	br	4bb08 <__alt_data_end+0xfffcbb08>
   4bb68:	10bffd44 	addi	r2,r2,-11
   4bb6c:	1000041e 	bne	r2,zero,4bb80 <__b2d+0xf8>
   4bb70:	90cffc34 	orhi	r3,r18,16368
   4bb74:	003fe406 	br	4bb08 <__alt_data_end+0xfffcbb08>
   4bb78:	000d883a 	mov	r6,zero
   4bb7c:	003fdf06 	br	4bafc <__alt_data_end+0xfffcbafc>
   4bb80:	90a4983a 	sll	r18,r18,r2
   4bb84:	0005883a 	mov	r2,zero
   4bb88:	003ff906 	br	4bb70 <__alt_data_end+0xfffcbb70>
   4bb8c:	1144983a 	sll	r2,r2,r5
   4bb90:	003fdd06 	br	4bb08 <__alt_data_end+0xfffcbb08>

0004bb94 <__d2b>:
   4bb94:	defff804 	addi	sp,sp,-32
   4bb98:	dc000215 	stw	r16,8(sp)
   4bb9c:	3021883a 	mov	r16,r6
   4bba0:	dc400315 	stw	r17,12(sp)
   4bba4:	8022907a 	slli	r17,r16,1
   4bba8:	dd000615 	stw	r20,24(sp)
   4bbac:	2829883a 	mov	r20,r5
   4bbb0:	01400044 	movi	r5,1
   4bbb4:	dcc00515 	stw	r19,20(sp)
   4bbb8:	dc800415 	stw	r18,16(sp)
   4bbbc:	dfc00715 	stw	ra,28(sp)
   4bbc0:	3825883a 	mov	r18,r7
   4bbc4:	8822d57a 	srli	r17,r17,21
   4bbc8:	004af000 	call	4af00 <_Balloc>
   4bbcc:	1027883a 	mov	r19,r2
   4bbd0:	00800434 	movhi	r2,16
   4bbd4:	10bfffc4 	addi	r2,r2,-1
   4bbd8:	808c703a 	and	r6,r16,r2
   4bbdc:	88000126 	beq	r17,zero,4bbe4 <__d2b+0x50>
   4bbe0:	31800434 	orhi	r6,r6,16
   4bbe4:	d9800015 	stw	r6,0(sp)
   4bbe8:	a0002426 	beq	r20,zero,4bc7c <__d2b+0xe8>
   4bbec:	d9000104 	addi	r4,sp,4
   4bbf0:	dd000115 	stw	r20,4(sp)
   4bbf4:	004b25c0 	call	4b25c <__lo0bits>
   4bbf8:	d8c00017 	ldw	r3,0(sp)
   4bbfc:	10002f1e 	bne	r2,zero,4bcbc <__d2b+0x128>
   4bc00:	d9000117 	ldw	r4,4(sp)
   4bc04:	99000515 	stw	r4,20(r19)
   4bc08:	1821003a 	cmpeq	r16,r3,zero
   4bc0c:	01000084 	movi	r4,2
   4bc10:	2421c83a 	sub	r16,r4,r16
   4bc14:	98c00615 	stw	r3,24(r19)
   4bc18:	9c000415 	stw	r16,16(r19)
   4bc1c:	88001f1e 	bne	r17,zero,4bc9c <__d2b+0x108>
   4bc20:	10bef384 	addi	r2,r2,-1074
   4bc24:	90800015 	stw	r2,0(r18)
   4bc28:	00900034 	movhi	r2,16384
   4bc2c:	10bfffc4 	addi	r2,r2,-1
   4bc30:	8085883a 	add	r2,r16,r2
   4bc34:	1085883a 	add	r2,r2,r2
   4bc38:	1085883a 	add	r2,r2,r2
   4bc3c:	9885883a 	add	r2,r19,r2
   4bc40:	11000517 	ldw	r4,20(r2)
   4bc44:	8020917a 	slli	r16,r16,5
   4bc48:	004b1f40 	call	4b1f4 <__hi0bits>
   4bc4c:	d8c00817 	ldw	r3,32(sp)
   4bc50:	8085c83a 	sub	r2,r16,r2
   4bc54:	18800015 	stw	r2,0(r3)
   4bc58:	9805883a 	mov	r2,r19
   4bc5c:	dfc00717 	ldw	ra,28(sp)
   4bc60:	dd000617 	ldw	r20,24(sp)
   4bc64:	dcc00517 	ldw	r19,20(sp)
   4bc68:	dc800417 	ldw	r18,16(sp)
   4bc6c:	dc400317 	ldw	r17,12(sp)
   4bc70:	dc000217 	ldw	r16,8(sp)
   4bc74:	dec00804 	addi	sp,sp,32
   4bc78:	f800283a 	ret
   4bc7c:	d809883a 	mov	r4,sp
   4bc80:	004b25c0 	call	4b25c <__lo0bits>
   4bc84:	d8c00017 	ldw	r3,0(sp)
   4bc88:	04000044 	movi	r16,1
   4bc8c:	9c000415 	stw	r16,16(r19)
   4bc90:	98c00515 	stw	r3,20(r19)
   4bc94:	10800804 	addi	r2,r2,32
   4bc98:	883fe126 	beq	r17,zero,4bc20 <__alt_data_end+0xfffcbc20>
   4bc9c:	00c00d44 	movi	r3,53
   4bca0:	8c7ef344 	addi	r17,r17,-1075
   4bca4:	88a3883a 	add	r17,r17,r2
   4bca8:	1885c83a 	sub	r2,r3,r2
   4bcac:	d8c00817 	ldw	r3,32(sp)
   4bcb0:	94400015 	stw	r17,0(r18)
   4bcb4:	18800015 	stw	r2,0(r3)
   4bcb8:	003fe706 	br	4bc58 <__alt_data_end+0xfffcbc58>
   4bcbc:	01000804 	movi	r4,32
   4bcc0:	2089c83a 	sub	r4,r4,r2
   4bcc4:	1908983a 	sll	r4,r3,r4
   4bcc8:	d9400117 	ldw	r5,4(sp)
   4bccc:	1886d83a 	srl	r3,r3,r2
   4bcd0:	2148b03a 	or	r4,r4,r5
   4bcd4:	99000515 	stw	r4,20(r19)
   4bcd8:	d8c00015 	stw	r3,0(sp)
   4bcdc:	003fca06 	br	4bc08 <__alt_data_end+0xfffcbc08>

0004bce0 <__ratio>:
   4bce0:	defff904 	addi	sp,sp,-28
   4bce4:	dc400315 	stw	r17,12(sp)
   4bce8:	2823883a 	mov	r17,r5
   4bcec:	d9400104 	addi	r5,sp,4
   4bcf0:	dfc00615 	stw	ra,24(sp)
   4bcf4:	dcc00515 	stw	r19,20(sp)
   4bcf8:	dc800415 	stw	r18,16(sp)
   4bcfc:	2027883a 	mov	r19,r4
   4bd00:	dc000215 	stw	r16,8(sp)
   4bd04:	004ba880 	call	4ba88 <__b2d>
   4bd08:	d80b883a 	mov	r5,sp
   4bd0c:	8809883a 	mov	r4,r17
   4bd10:	1025883a 	mov	r18,r2
   4bd14:	1821883a 	mov	r16,r3
   4bd18:	004ba880 	call	4ba88 <__b2d>
   4bd1c:	8a000417 	ldw	r8,16(r17)
   4bd20:	99000417 	ldw	r4,16(r19)
   4bd24:	d9400117 	ldw	r5,4(sp)
   4bd28:	2209c83a 	sub	r4,r4,r8
   4bd2c:	2010917a 	slli	r8,r4,5
   4bd30:	d9000017 	ldw	r4,0(sp)
   4bd34:	2909c83a 	sub	r4,r5,r4
   4bd38:	4109883a 	add	r4,r8,r4
   4bd3c:	01000e0e 	bge	zero,r4,4bd78 <__ratio+0x98>
   4bd40:	2008953a 	slli	r4,r4,20
   4bd44:	2421883a 	add	r16,r4,r16
   4bd48:	100d883a 	mov	r6,r2
   4bd4c:	180f883a 	mov	r7,r3
   4bd50:	9009883a 	mov	r4,r18
   4bd54:	800b883a 	mov	r5,r16
   4bd58:	004f16c0 	call	4f16c <__divdf3>
   4bd5c:	dfc00617 	ldw	ra,24(sp)
   4bd60:	dcc00517 	ldw	r19,20(sp)
   4bd64:	dc800417 	ldw	r18,16(sp)
   4bd68:	dc400317 	ldw	r17,12(sp)
   4bd6c:	dc000217 	ldw	r16,8(sp)
   4bd70:	dec00704 	addi	sp,sp,28
   4bd74:	f800283a 	ret
   4bd78:	2008953a 	slli	r4,r4,20
   4bd7c:	1907c83a 	sub	r3,r3,r4
   4bd80:	003ff106 	br	4bd48 <__alt_data_end+0xfffcbd48>

0004bd84 <_mprec_log10>:
   4bd84:	defffe04 	addi	sp,sp,-8
   4bd88:	dc000015 	stw	r16,0(sp)
   4bd8c:	dfc00115 	stw	ra,4(sp)
   4bd90:	008005c4 	movi	r2,23
   4bd94:	2021883a 	mov	r16,r4
   4bd98:	11000d0e 	bge	r2,r4,4bdd0 <_mprec_log10+0x4c>
   4bd9c:	0005883a 	mov	r2,zero
   4bda0:	00cffc34 	movhi	r3,16368
   4bda4:	843fffc4 	addi	r16,r16,-1
   4bda8:	000d883a 	mov	r6,zero
   4bdac:	01d00934 	movhi	r7,16420
   4bdb0:	1009883a 	mov	r4,r2
   4bdb4:	180b883a 	mov	r5,r3
   4bdb8:	0043bdc0 	call	43bdc <__muldf3>
   4bdbc:	803ff91e 	bne	r16,zero,4bda4 <__alt_data_end+0xfffcbda4>
   4bdc0:	dfc00117 	ldw	ra,4(sp)
   4bdc4:	dc000017 	ldw	r16,0(sp)
   4bdc8:	dec00204 	addi	sp,sp,8
   4bdcc:	f800283a 	ret
   4bdd0:	202090fa 	slli	r16,r4,3
   4bdd4:	00800174 	movhi	r2,5
   4bdd8:	108a6304 	addi	r2,r2,10636
   4bddc:	1421883a 	add	r16,r2,r16
   4bde0:	80800017 	ldw	r2,0(r16)
   4bde4:	80c00117 	ldw	r3,4(r16)
   4bde8:	dfc00117 	ldw	ra,4(sp)
   4bdec:	dc000017 	ldw	r16,0(sp)
   4bdf0:	dec00204 	addi	sp,sp,8
   4bdf4:	f800283a 	ret

0004bdf8 <__copybits>:
   4bdf8:	297fffc4 	addi	r5,r5,-1
   4bdfc:	280fd17a 	srai	r7,r5,5
   4be00:	30c00417 	ldw	r3,16(r6)
   4be04:	30800504 	addi	r2,r6,20
   4be08:	39c00044 	addi	r7,r7,1
   4be0c:	18c7883a 	add	r3,r3,r3
   4be10:	39cf883a 	add	r7,r7,r7
   4be14:	18c7883a 	add	r3,r3,r3
   4be18:	39cf883a 	add	r7,r7,r7
   4be1c:	10c7883a 	add	r3,r2,r3
   4be20:	21cf883a 	add	r7,r4,r7
   4be24:	10c00d2e 	bgeu	r2,r3,4be5c <__copybits+0x64>
   4be28:	200b883a 	mov	r5,r4
   4be2c:	12000017 	ldw	r8,0(r2)
   4be30:	29400104 	addi	r5,r5,4
   4be34:	10800104 	addi	r2,r2,4
   4be38:	2a3fff15 	stw	r8,-4(r5)
   4be3c:	10fffb36 	bltu	r2,r3,4be2c <__alt_data_end+0xfffcbe2c>
   4be40:	1985c83a 	sub	r2,r3,r6
   4be44:	10bffac4 	addi	r2,r2,-21
   4be48:	1004d0ba 	srli	r2,r2,2
   4be4c:	10800044 	addi	r2,r2,1
   4be50:	1085883a 	add	r2,r2,r2
   4be54:	1085883a 	add	r2,r2,r2
   4be58:	2089883a 	add	r4,r4,r2
   4be5c:	21c0032e 	bgeu	r4,r7,4be6c <__copybits+0x74>
   4be60:	20000015 	stw	zero,0(r4)
   4be64:	21000104 	addi	r4,r4,4
   4be68:	21fffd36 	bltu	r4,r7,4be60 <__alt_data_end+0xfffcbe60>
   4be6c:	f800283a 	ret

0004be70 <__any_on>:
   4be70:	20c00417 	ldw	r3,16(r4)
   4be74:	2805d17a 	srai	r2,r5,5
   4be78:	21000504 	addi	r4,r4,20
   4be7c:	18800d0e 	bge	r3,r2,4beb4 <__any_on+0x44>
   4be80:	18c7883a 	add	r3,r3,r3
   4be84:	18c7883a 	add	r3,r3,r3
   4be88:	20c7883a 	add	r3,r4,r3
   4be8c:	20c0192e 	bgeu	r4,r3,4bef4 <__any_on+0x84>
   4be90:	18bfff17 	ldw	r2,-4(r3)
   4be94:	18ffff04 	addi	r3,r3,-4
   4be98:	1000041e 	bne	r2,zero,4beac <__any_on+0x3c>
   4be9c:	20c0142e 	bgeu	r4,r3,4bef0 <__any_on+0x80>
   4bea0:	18ffff04 	addi	r3,r3,-4
   4bea4:	19400017 	ldw	r5,0(r3)
   4bea8:	283ffc26 	beq	r5,zero,4be9c <__alt_data_end+0xfffcbe9c>
   4beac:	00800044 	movi	r2,1
   4beb0:	f800283a 	ret
   4beb4:	10c00a0e 	bge	r2,r3,4bee0 <__any_on+0x70>
   4beb8:	1085883a 	add	r2,r2,r2
   4bebc:	1085883a 	add	r2,r2,r2
   4bec0:	294007cc 	andi	r5,r5,31
   4bec4:	2087883a 	add	r3,r4,r2
   4bec8:	283ff026 	beq	r5,zero,4be8c <__alt_data_end+0xfffcbe8c>
   4becc:	19800017 	ldw	r6,0(r3)
   4bed0:	3144d83a 	srl	r2,r6,r5
   4bed4:	114a983a 	sll	r5,r2,r5
   4bed8:	317ff41e 	bne	r6,r5,4beac <__alt_data_end+0xfffcbeac>
   4bedc:	003feb06 	br	4be8c <__alt_data_end+0xfffcbe8c>
   4bee0:	1085883a 	add	r2,r2,r2
   4bee4:	1085883a 	add	r2,r2,r2
   4bee8:	2087883a 	add	r3,r4,r2
   4beec:	003fe706 	br	4be8c <__alt_data_end+0xfffcbe8c>
   4bef0:	f800283a 	ret
   4bef4:	0005883a 	mov	r2,zero
   4bef8:	f800283a 	ret

0004befc <_realloc_r>:
   4befc:	defff604 	addi	sp,sp,-40
   4bf00:	dc800215 	stw	r18,8(sp)
   4bf04:	dfc00915 	stw	ra,36(sp)
   4bf08:	df000815 	stw	fp,32(sp)
   4bf0c:	ddc00715 	stw	r23,28(sp)
   4bf10:	dd800615 	stw	r22,24(sp)
   4bf14:	dd400515 	stw	r21,20(sp)
   4bf18:	dd000415 	stw	r20,16(sp)
   4bf1c:	dcc00315 	stw	r19,12(sp)
   4bf20:	dc400115 	stw	r17,4(sp)
   4bf24:	dc000015 	stw	r16,0(sp)
   4bf28:	3025883a 	mov	r18,r6
   4bf2c:	2800b726 	beq	r5,zero,4c20c <_realloc_r+0x310>
   4bf30:	282b883a 	mov	r21,r5
   4bf34:	2029883a 	mov	r20,r4
   4bf38:	005016c0 	call	5016c <__malloc_lock>
   4bf3c:	a8bfff17 	ldw	r2,-4(r21)
   4bf40:	043fff04 	movi	r16,-4
   4bf44:	90c002c4 	addi	r3,r18,11
   4bf48:	01000584 	movi	r4,22
   4bf4c:	acfffe04 	addi	r19,r21,-8
   4bf50:	1420703a 	and	r16,r2,r16
   4bf54:	20c0332e 	bgeu	r4,r3,4c024 <_realloc_r+0x128>
   4bf58:	047ffe04 	movi	r17,-8
   4bf5c:	1c62703a 	and	r17,r3,r17
   4bf60:	8807883a 	mov	r3,r17
   4bf64:	88005816 	blt	r17,zero,4c0c8 <_realloc_r+0x1cc>
   4bf68:	8c805736 	bltu	r17,r18,4c0c8 <_realloc_r+0x1cc>
   4bf6c:	80c0300e 	bge	r16,r3,4c030 <_realloc_r+0x134>
   4bf70:	07000174 	movhi	fp,5
   4bf74:	e70bd104 	addi	fp,fp,12100
   4bf78:	e1c00217 	ldw	r7,8(fp)
   4bf7c:	9c09883a 	add	r4,r19,r16
   4bf80:	22000117 	ldw	r8,4(r4)
   4bf84:	21c06326 	beq	r4,r7,4c114 <_realloc_r+0x218>
   4bf88:	017fff84 	movi	r5,-2
   4bf8c:	414a703a 	and	r5,r8,r5
   4bf90:	214b883a 	add	r5,r4,r5
   4bf94:	29800117 	ldw	r6,4(r5)
   4bf98:	3180004c 	andi	r6,r6,1
   4bf9c:	30003f26 	beq	r6,zero,4c09c <_realloc_r+0x1a0>
   4bfa0:	1080004c 	andi	r2,r2,1
   4bfa4:	10008326 	beq	r2,zero,4c1b4 <_realloc_r+0x2b8>
   4bfa8:	900b883a 	mov	r5,r18
   4bfac:	a009883a 	mov	r4,r20
   4bfb0:	004a2440 	call	4a244 <_malloc_r>
   4bfb4:	1025883a 	mov	r18,r2
   4bfb8:	10011e26 	beq	r2,zero,4c434 <_realloc_r+0x538>
   4bfbc:	a93fff17 	ldw	r4,-4(r21)
   4bfc0:	10fffe04 	addi	r3,r2,-8
   4bfc4:	00bfff84 	movi	r2,-2
   4bfc8:	2084703a 	and	r2,r4,r2
   4bfcc:	9885883a 	add	r2,r19,r2
   4bfd0:	1880ee26 	beq	r3,r2,4c38c <_realloc_r+0x490>
   4bfd4:	81bfff04 	addi	r6,r16,-4
   4bfd8:	00800904 	movi	r2,36
   4bfdc:	1180b836 	bltu	r2,r6,4c2c0 <_realloc_r+0x3c4>
   4bfe0:	00c004c4 	movi	r3,19
   4bfe4:	19809636 	bltu	r3,r6,4c240 <_realloc_r+0x344>
   4bfe8:	9005883a 	mov	r2,r18
   4bfec:	a807883a 	mov	r3,r21
   4bff0:	19000017 	ldw	r4,0(r3)
   4bff4:	11000015 	stw	r4,0(r2)
   4bff8:	19000117 	ldw	r4,4(r3)
   4bffc:	11000115 	stw	r4,4(r2)
   4c000:	18c00217 	ldw	r3,8(r3)
   4c004:	10c00215 	stw	r3,8(r2)
   4c008:	a80b883a 	mov	r5,r21
   4c00c:	a009883a 	mov	r4,r20
   4c010:	00496580 	call	49658 <_free_r>
   4c014:	a009883a 	mov	r4,r20
   4c018:	00501900 	call	50190 <__malloc_unlock>
   4c01c:	9005883a 	mov	r2,r18
   4c020:	00001206 	br	4c06c <_realloc_r+0x170>
   4c024:	00c00404 	movi	r3,16
   4c028:	1823883a 	mov	r17,r3
   4c02c:	003fce06 	br	4bf68 <__alt_data_end+0xfffcbf68>
   4c030:	a825883a 	mov	r18,r21
   4c034:	8445c83a 	sub	r2,r16,r17
   4c038:	00c003c4 	movi	r3,15
   4c03c:	18802636 	bltu	r3,r2,4c0d8 <_realloc_r+0x1dc>
   4c040:	99800117 	ldw	r6,4(r19)
   4c044:	9c07883a 	add	r3,r19,r16
   4c048:	3180004c 	andi	r6,r6,1
   4c04c:	3420b03a 	or	r16,r6,r16
   4c050:	9c000115 	stw	r16,4(r19)
   4c054:	18800117 	ldw	r2,4(r3)
   4c058:	10800054 	ori	r2,r2,1
   4c05c:	18800115 	stw	r2,4(r3)
   4c060:	a009883a 	mov	r4,r20
   4c064:	00501900 	call	50190 <__malloc_unlock>
   4c068:	9005883a 	mov	r2,r18
   4c06c:	dfc00917 	ldw	ra,36(sp)
   4c070:	df000817 	ldw	fp,32(sp)
   4c074:	ddc00717 	ldw	r23,28(sp)
   4c078:	dd800617 	ldw	r22,24(sp)
   4c07c:	dd400517 	ldw	r21,20(sp)
   4c080:	dd000417 	ldw	r20,16(sp)
   4c084:	dcc00317 	ldw	r19,12(sp)
   4c088:	dc800217 	ldw	r18,8(sp)
   4c08c:	dc400117 	ldw	r17,4(sp)
   4c090:	dc000017 	ldw	r16,0(sp)
   4c094:	dec00a04 	addi	sp,sp,40
   4c098:	f800283a 	ret
   4c09c:	017fff04 	movi	r5,-4
   4c0a0:	414a703a 	and	r5,r8,r5
   4c0a4:	814d883a 	add	r6,r16,r5
   4c0a8:	30c01f16 	blt	r6,r3,4c128 <_realloc_r+0x22c>
   4c0ac:	20800317 	ldw	r2,12(r4)
   4c0b0:	20c00217 	ldw	r3,8(r4)
   4c0b4:	a825883a 	mov	r18,r21
   4c0b8:	3021883a 	mov	r16,r6
   4c0bc:	18800315 	stw	r2,12(r3)
   4c0c0:	10c00215 	stw	r3,8(r2)
   4c0c4:	003fdb06 	br	4c034 <__alt_data_end+0xfffcc034>
   4c0c8:	00800304 	movi	r2,12
   4c0cc:	a0800015 	stw	r2,0(r20)
   4c0d0:	0005883a 	mov	r2,zero
   4c0d4:	003fe506 	br	4c06c <__alt_data_end+0xfffcc06c>
   4c0d8:	98c00117 	ldw	r3,4(r19)
   4c0dc:	9c4b883a 	add	r5,r19,r17
   4c0e0:	11000054 	ori	r4,r2,1
   4c0e4:	18c0004c 	andi	r3,r3,1
   4c0e8:	1c62b03a 	or	r17,r3,r17
   4c0ec:	9c400115 	stw	r17,4(r19)
   4c0f0:	29000115 	stw	r4,4(r5)
   4c0f4:	2885883a 	add	r2,r5,r2
   4c0f8:	10c00117 	ldw	r3,4(r2)
   4c0fc:	29400204 	addi	r5,r5,8
   4c100:	a009883a 	mov	r4,r20
   4c104:	18c00054 	ori	r3,r3,1
   4c108:	10c00115 	stw	r3,4(r2)
   4c10c:	00496580 	call	49658 <_free_r>
   4c110:	003fd306 	br	4c060 <__alt_data_end+0xfffcc060>
   4c114:	017fff04 	movi	r5,-4
   4c118:	414a703a 	and	r5,r8,r5
   4c11c:	89800404 	addi	r6,r17,16
   4c120:	8151883a 	add	r8,r16,r5
   4c124:	4180590e 	bge	r8,r6,4c28c <_realloc_r+0x390>
   4c128:	1080004c 	andi	r2,r2,1
   4c12c:	103f9e1e 	bne	r2,zero,4bfa8 <__alt_data_end+0xfffcbfa8>
   4c130:	adbffe17 	ldw	r22,-8(r21)
   4c134:	00bfff04 	movi	r2,-4
   4c138:	9dadc83a 	sub	r22,r19,r22
   4c13c:	b1800117 	ldw	r6,4(r22)
   4c140:	3084703a 	and	r2,r6,r2
   4c144:	20002026 	beq	r4,zero,4c1c8 <_realloc_r+0x2cc>
   4c148:	80af883a 	add	r23,r16,r2
   4c14c:	b96f883a 	add	r23,r23,r5
   4c150:	21c05f26 	beq	r4,r7,4c2d0 <_realloc_r+0x3d4>
   4c154:	b8c01c16 	blt	r23,r3,4c1c8 <_realloc_r+0x2cc>
   4c158:	20800317 	ldw	r2,12(r4)
   4c15c:	20c00217 	ldw	r3,8(r4)
   4c160:	81bfff04 	addi	r6,r16,-4
   4c164:	01000904 	movi	r4,36
   4c168:	18800315 	stw	r2,12(r3)
   4c16c:	10c00215 	stw	r3,8(r2)
   4c170:	b0c00217 	ldw	r3,8(r22)
   4c174:	b0800317 	ldw	r2,12(r22)
   4c178:	b4800204 	addi	r18,r22,8
   4c17c:	18800315 	stw	r2,12(r3)
   4c180:	10c00215 	stw	r3,8(r2)
   4c184:	21801b36 	bltu	r4,r6,4c1f4 <_realloc_r+0x2f8>
   4c188:	008004c4 	movi	r2,19
   4c18c:	1180352e 	bgeu	r2,r6,4c264 <_realloc_r+0x368>
   4c190:	a8800017 	ldw	r2,0(r21)
   4c194:	b0800215 	stw	r2,8(r22)
   4c198:	a8800117 	ldw	r2,4(r21)
   4c19c:	b0800315 	stw	r2,12(r22)
   4c1a0:	008006c4 	movi	r2,27
   4c1a4:	11807f36 	bltu	r2,r6,4c3a4 <_realloc_r+0x4a8>
   4c1a8:	b0800404 	addi	r2,r22,16
   4c1ac:	ad400204 	addi	r21,r21,8
   4c1b0:	00002d06 	br	4c268 <_realloc_r+0x36c>
   4c1b4:	adbffe17 	ldw	r22,-8(r21)
   4c1b8:	00bfff04 	movi	r2,-4
   4c1bc:	9dadc83a 	sub	r22,r19,r22
   4c1c0:	b1000117 	ldw	r4,4(r22)
   4c1c4:	2084703a 	and	r2,r4,r2
   4c1c8:	b03f7726 	beq	r22,zero,4bfa8 <__alt_data_end+0xfffcbfa8>
   4c1cc:	80af883a 	add	r23,r16,r2
   4c1d0:	b8ff7516 	blt	r23,r3,4bfa8 <__alt_data_end+0xfffcbfa8>
   4c1d4:	b0800317 	ldw	r2,12(r22)
   4c1d8:	b0c00217 	ldw	r3,8(r22)
   4c1dc:	81bfff04 	addi	r6,r16,-4
   4c1e0:	01000904 	movi	r4,36
   4c1e4:	18800315 	stw	r2,12(r3)
   4c1e8:	10c00215 	stw	r3,8(r2)
   4c1ec:	b4800204 	addi	r18,r22,8
   4c1f0:	21bfe52e 	bgeu	r4,r6,4c188 <__alt_data_end+0xfffcc188>
   4c1f4:	a80b883a 	mov	r5,r21
   4c1f8:	9009883a 	mov	r4,r18
   4c1fc:	004ac7c0 	call	4ac7c <memmove>
   4c200:	b821883a 	mov	r16,r23
   4c204:	b027883a 	mov	r19,r22
   4c208:	003f8a06 	br	4c034 <__alt_data_end+0xfffcc034>
   4c20c:	300b883a 	mov	r5,r6
   4c210:	dfc00917 	ldw	ra,36(sp)
   4c214:	df000817 	ldw	fp,32(sp)
   4c218:	ddc00717 	ldw	r23,28(sp)
   4c21c:	dd800617 	ldw	r22,24(sp)
   4c220:	dd400517 	ldw	r21,20(sp)
   4c224:	dd000417 	ldw	r20,16(sp)
   4c228:	dcc00317 	ldw	r19,12(sp)
   4c22c:	dc800217 	ldw	r18,8(sp)
   4c230:	dc400117 	ldw	r17,4(sp)
   4c234:	dc000017 	ldw	r16,0(sp)
   4c238:	dec00a04 	addi	sp,sp,40
   4c23c:	004a2441 	jmpi	4a244 <_malloc_r>
   4c240:	a8c00017 	ldw	r3,0(r21)
   4c244:	90c00015 	stw	r3,0(r18)
   4c248:	a8c00117 	ldw	r3,4(r21)
   4c24c:	90c00115 	stw	r3,4(r18)
   4c250:	00c006c4 	movi	r3,27
   4c254:	19804536 	bltu	r3,r6,4c36c <_realloc_r+0x470>
   4c258:	90800204 	addi	r2,r18,8
   4c25c:	a8c00204 	addi	r3,r21,8
   4c260:	003f6306 	br	4bff0 <__alt_data_end+0xfffcbff0>
   4c264:	9005883a 	mov	r2,r18
   4c268:	a8c00017 	ldw	r3,0(r21)
   4c26c:	b821883a 	mov	r16,r23
   4c270:	b027883a 	mov	r19,r22
   4c274:	10c00015 	stw	r3,0(r2)
   4c278:	a8c00117 	ldw	r3,4(r21)
   4c27c:	10c00115 	stw	r3,4(r2)
   4c280:	a8c00217 	ldw	r3,8(r21)
   4c284:	10c00215 	stw	r3,8(r2)
   4c288:	003f6a06 	br	4c034 <__alt_data_end+0xfffcc034>
   4c28c:	9c67883a 	add	r19,r19,r17
   4c290:	4445c83a 	sub	r2,r8,r17
   4c294:	e4c00215 	stw	r19,8(fp)
   4c298:	10800054 	ori	r2,r2,1
   4c29c:	98800115 	stw	r2,4(r19)
   4c2a0:	a8bfff17 	ldw	r2,-4(r21)
   4c2a4:	a009883a 	mov	r4,r20
   4c2a8:	1080004c 	andi	r2,r2,1
   4c2ac:	1462b03a 	or	r17,r2,r17
   4c2b0:	ac7fff15 	stw	r17,-4(r21)
   4c2b4:	00501900 	call	50190 <__malloc_unlock>
   4c2b8:	a805883a 	mov	r2,r21
   4c2bc:	003f6b06 	br	4c06c <__alt_data_end+0xfffcc06c>
   4c2c0:	a80b883a 	mov	r5,r21
   4c2c4:	9009883a 	mov	r4,r18
   4c2c8:	004ac7c0 	call	4ac7c <memmove>
   4c2cc:	003f4e06 	br	4c008 <__alt_data_end+0xfffcc008>
   4c2d0:	89000404 	addi	r4,r17,16
   4c2d4:	b93fbc16 	blt	r23,r4,4c1c8 <__alt_data_end+0xfffcc1c8>
   4c2d8:	b0800317 	ldw	r2,12(r22)
   4c2dc:	b0c00217 	ldw	r3,8(r22)
   4c2e0:	81bfff04 	addi	r6,r16,-4
   4c2e4:	01000904 	movi	r4,36
   4c2e8:	18800315 	stw	r2,12(r3)
   4c2ec:	10c00215 	stw	r3,8(r2)
   4c2f0:	b4800204 	addi	r18,r22,8
   4c2f4:	21804336 	bltu	r4,r6,4c404 <_realloc_r+0x508>
   4c2f8:	008004c4 	movi	r2,19
   4c2fc:	11803f2e 	bgeu	r2,r6,4c3fc <_realloc_r+0x500>
   4c300:	a8800017 	ldw	r2,0(r21)
   4c304:	b0800215 	stw	r2,8(r22)
   4c308:	a8800117 	ldw	r2,4(r21)
   4c30c:	b0800315 	stw	r2,12(r22)
   4c310:	008006c4 	movi	r2,27
   4c314:	11803f36 	bltu	r2,r6,4c414 <_realloc_r+0x518>
   4c318:	b0800404 	addi	r2,r22,16
   4c31c:	ad400204 	addi	r21,r21,8
   4c320:	a8c00017 	ldw	r3,0(r21)
   4c324:	10c00015 	stw	r3,0(r2)
   4c328:	a8c00117 	ldw	r3,4(r21)
   4c32c:	10c00115 	stw	r3,4(r2)
   4c330:	a8c00217 	ldw	r3,8(r21)
   4c334:	10c00215 	stw	r3,8(r2)
   4c338:	b447883a 	add	r3,r22,r17
   4c33c:	bc45c83a 	sub	r2,r23,r17
   4c340:	e0c00215 	stw	r3,8(fp)
   4c344:	10800054 	ori	r2,r2,1
   4c348:	18800115 	stw	r2,4(r3)
   4c34c:	b0800117 	ldw	r2,4(r22)
   4c350:	a009883a 	mov	r4,r20
   4c354:	1080004c 	andi	r2,r2,1
   4c358:	1462b03a 	or	r17,r2,r17
   4c35c:	b4400115 	stw	r17,4(r22)
   4c360:	00501900 	call	50190 <__malloc_unlock>
   4c364:	9005883a 	mov	r2,r18
   4c368:	003f4006 	br	4c06c <__alt_data_end+0xfffcc06c>
   4c36c:	a8c00217 	ldw	r3,8(r21)
   4c370:	90c00215 	stw	r3,8(r18)
   4c374:	a8c00317 	ldw	r3,12(r21)
   4c378:	90c00315 	stw	r3,12(r18)
   4c37c:	30801126 	beq	r6,r2,4c3c4 <_realloc_r+0x4c8>
   4c380:	90800404 	addi	r2,r18,16
   4c384:	a8c00404 	addi	r3,r21,16
   4c388:	003f1906 	br	4bff0 <__alt_data_end+0xfffcbff0>
   4c38c:	90ffff17 	ldw	r3,-4(r18)
   4c390:	00bfff04 	movi	r2,-4
   4c394:	a825883a 	mov	r18,r21
   4c398:	1884703a 	and	r2,r3,r2
   4c39c:	80a1883a 	add	r16,r16,r2
   4c3a0:	003f2406 	br	4c034 <__alt_data_end+0xfffcc034>
   4c3a4:	a8800217 	ldw	r2,8(r21)
   4c3a8:	b0800415 	stw	r2,16(r22)
   4c3ac:	a8800317 	ldw	r2,12(r21)
   4c3b0:	b0800515 	stw	r2,20(r22)
   4c3b4:	31000a26 	beq	r6,r4,4c3e0 <_realloc_r+0x4e4>
   4c3b8:	b0800604 	addi	r2,r22,24
   4c3bc:	ad400404 	addi	r21,r21,16
   4c3c0:	003fa906 	br	4c268 <__alt_data_end+0xfffcc268>
   4c3c4:	a9000417 	ldw	r4,16(r21)
   4c3c8:	90800604 	addi	r2,r18,24
   4c3cc:	a8c00604 	addi	r3,r21,24
   4c3d0:	91000415 	stw	r4,16(r18)
   4c3d4:	a9000517 	ldw	r4,20(r21)
   4c3d8:	91000515 	stw	r4,20(r18)
   4c3dc:	003f0406 	br	4bff0 <__alt_data_end+0xfffcbff0>
   4c3e0:	a8c00417 	ldw	r3,16(r21)
   4c3e4:	ad400604 	addi	r21,r21,24
   4c3e8:	b0800804 	addi	r2,r22,32
   4c3ec:	b0c00615 	stw	r3,24(r22)
   4c3f0:	a8ffff17 	ldw	r3,-4(r21)
   4c3f4:	b0c00715 	stw	r3,28(r22)
   4c3f8:	003f9b06 	br	4c268 <__alt_data_end+0xfffcc268>
   4c3fc:	9005883a 	mov	r2,r18
   4c400:	003fc706 	br	4c320 <__alt_data_end+0xfffcc320>
   4c404:	a80b883a 	mov	r5,r21
   4c408:	9009883a 	mov	r4,r18
   4c40c:	004ac7c0 	call	4ac7c <memmove>
   4c410:	003fc906 	br	4c338 <__alt_data_end+0xfffcc338>
   4c414:	a8800217 	ldw	r2,8(r21)
   4c418:	b0800415 	stw	r2,16(r22)
   4c41c:	a8800317 	ldw	r2,12(r21)
   4c420:	b0800515 	stw	r2,20(r22)
   4c424:	31000726 	beq	r6,r4,4c444 <_realloc_r+0x548>
   4c428:	b0800604 	addi	r2,r22,24
   4c42c:	ad400404 	addi	r21,r21,16
   4c430:	003fbb06 	br	4c320 <__alt_data_end+0xfffcc320>
   4c434:	a009883a 	mov	r4,r20
   4c438:	00501900 	call	50190 <__malloc_unlock>
   4c43c:	0005883a 	mov	r2,zero
   4c440:	003f0a06 	br	4c06c <__alt_data_end+0xfffcc06c>
   4c444:	a8c00417 	ldw	r3,16(r21)
   4c448:	ad400604 	addi	r21,r21,24
   4c44c:	b0800804 	addi	r2,r22,32
   4c450:	b0c00615 	stw	r3,24(r22)
   4c454:	a8ffff17 	ldw	r3,-4(r21)
   4c458:	b0c00715 	stw	r3,28(r22)
   4c45c:	003fb006 	br	4c320 <__alt_data_end+0xfffcc320>

0004c460 <__fpclassifyd>:
   4c460:	00a00034 	movhi	r2,32768
   4c464:	10bfffc4 	addi	r2,r2,-1
   4c468:	2884703a 	and	r2,r5,r2
   4c46c:	10000726 	beq	r2,zero,4c48c <__fpclassifyd+0x2c>
   4c470:	00fffc34 	movhi	r3,65520
   4c474:	019ff834 	movhi	r6,32736
   4c478:	28c7883a 	add	r3,r5,r3
   4c47c:	31bfffc4 	addi	r6,r6,-1
   4c480:	30c00536 	bltu	r6,r3,4c498 <__fpclassifyd+0x38>
   4c484:	00800104 	movi	r2,4
   4c488:	f800283a 	ret
   4c48c:	2000021e 	bne	r4,zero,4c498 <__fpclassifyd+0x38>
   4c490:	00800084 	movi	r2,2
   4c494:	f800283a 	ret
   4c498:	00dffc34 	movhi	r3,32752
   4c49c:	019ff834 	movhi	r6,32736
   4c4a0:	28cb883a 	add	r5,r5,r3
   4c4a4:	31bfffc4 	addi	r6,r6,-1
   4c4a8:	317ff62e 	bgeu	r6,r5,4c484 <__alt_data_end+0xfffcc484>
   4c4ac:	01400434 	movhi	r5,16
   4c4b0:	297fffc4 	addi	r5,r5,-1
   4c4b4:	28800236 	bltu	r5,r2,4c4c0 <__fpclassifyd+0x60>
   4c4b8:	008000c4 	movi	r2,3
   4c4bc:	f800283a 	ret
   4c4c0:	10c00226 	beq	r2,r3,4c4cc <__fpclassifyd+0x6c>
   4c4c4:	0005883a 	mov	r2,zero
   4c4c8:	f800283a 	ret
   4c4cc:	2005003a 	cmpeq	r2,r4,zero
   4c4d0:	f800283a 	ret

0004c4d4 <_sbrk_r>:
   4c4d4:	defffd04 	addi	sp,sp,-12
   4c4d8:	dc000015 	stw	r16,0(sp)
   4c4dc:	04000174 	movhi	r16,5
   4c4e0:	dc400115 	stw	r17,4(sp)
   4c4e4:	84182c04 	addi	r16,r16,24752
   4c4e8:	2023883a 	mov	r17,r4
   4c4ec:	2809883a 	mov	r4,r5
   4c4f0:	dfc00215 	stw	ra,8(sp)
   4c4f4:	80000015 	stw	zero,0(r16)
   4c4f8:	00503500 	call	50350 <sbrk>
   4c4fc:	00ffffc4 	movi	r3,-1
   4c500:	10c00526 	beq	r2,r3,4c518 <_sbrk_r+0x44>
   4c504:	dfc00217 	ldw	ra,8(sp)
   4c508:	dc400117 	ldw	r17,4(sp)
   4c50c:	dc000017 	ldw	r16,0(sp)
   4c510:	dec00304 	addi	sp,sp,12
   4c514:	f800283a 	ret
   4c518:	80c00017 	ldw	r3,0(r16)
   4c51c:	183ff926 	beq	r3,zero,4c504 <__alt_data_end+0xfffcc504>
   4c520:	88c00015 	stw	r3,0(r17)
   4c524:	003ff706 	br	4c504 <__alt_data_end+0xfffcc504>

0004c528 <__sread>:
   4c528:	defffe04 	addi	sp,sp,-8
   4c52c:	dc000015 	stw	r16,0(sp)
   4c530:	2821883a 	mov	r16,r5
   4c534:	2940038f 	ldh	r5,14(r5)
   4c538:	dfc00115 	stw	ra,4(sp)
   4c53c:	004e31c0 	call	4e31c <_read_r>
   4c540:	10000716 	blt	r2,zero,4c560 <__sread+0x38>
   4c544:	80c01417 	ldw	r3,80(r16)
   4c548:	1887883a 	add	r3,r3,r2
   4c54c:	80c01415 	stw	r3,80(r16)
   4c550:	dfc00117 	ldw	ra,4(sp)
   4c554:	dc000017 	ldw	r16,0(sp)
   4c558:	dec00204 	addi	sp,sp,8
   4c55c:	f800283a 	ret
   4c560:	80c0030b 	ldhu	r3,12(r16)
   4c564:	18fbffcc 	andi	r3,r3,61439
   4c568:	80c0030d 	sth	r3,12(r16)
   4c56c:	dfc00117 	ldw	ra,4(sp)
   4c570:	dc000017 	ldw	r16,0(sp)
   4c574:	dec00204 	addi	sp,sp,8
   4c578:	f800283a 	ret

0004c57c <__seofread>:
   4c57c:	0005883a 	mov	r2,zero
   4c580:	f800283a 	ret

0004c584 <__swrite>:
   4c584:	2880030b 	ldhu	r2,12(r5)
   4c588:	defffb04 	addi	sp,sp,-20
   4c58c:	dcc00315 	stw	r19,12(sp)
   4c590:	dc800215 	stw	r18,8(sp)
   4c594:	dc400115 	stw	r17,4(sp)
   4c598:	dc000015 	stw	r16,0(sp)
   4c59c:	dfc00415 	stw	ra,16(sp)
   4c5a0:	10c0400c 	andi	r3,r2,256
   4c5a4:	2821883a 	mov	r16,r5
   4c5a8:	2023883a 	mov	r17,r4
   4c5ac:	3025883a 	mov	r18,r6
   4c5b0:	3827883a 	mov	r19,r7
   4c5b4:	18000526 	beq	r3,zero,4c5cc <__swrite+0x48>
   4c5b8:	2940038f 	ldh	r5,14(r5)
   4c5bc:	01c00084 	movi	r7,2
   4c5c0:	000d883a 	mov	r6,zero
   4c5c4:	004e2bc0 	call	4e2bc <_lseek_r>
   4c5c8:	8080030b 	ldhu	r2,12(r16)
   4c5cc:	8140038f 	ldh	r5,14(r16)
   4c5d0:	10bbffcc 	andi	r2,r2,61439
   4c5d4:	980f883a 	mov	r7,r19
   4c5d8:	900d883a 	mov	r6,r18
   4c5dc:	8809883a 	mov	r4,r17
   4c5e0:	8080030d 	sth	r2,12(r16)
   4c5e4:	dfc00417 	ldw	ra,16(sp)
   4c5e8:	dcc00317 	ldw	r19,12(sp)
   4c5ec:	dc800217 	ldw	r18,8(sp)
   4c5f0:	dc400117 	ldw	r17,4(sp)
   4c5f4:	dc000017 	ldw	r16,0(sp)
   4c5f8:	dec00504 	addi	sp,sp,20
   4c5fc:	004dd881 	jmpi	4dd88 <_write_r>

0004c600 <__sseek>:
   4c600:	defffe04 	addi	sp,sp,-8
   4c604:	dc000015 	stw	r16,0(sp)
   4c608:	2821883a 	mov	r16,r5
   4c60c:	2940038f 	ldh	r5,14(r5)
   4c610:	dfc00115 	stw	ra,4(sp)
   4c614:	004e2bc0 	call	4e2bc <_lseek_r>
   4c618:	00ffffc4 	movi	r3,-1
   4c61c:	10c00826 	beq	r2,r3,4c640 <__sseek+0x40>
   4c620:	80c0030b 	ldhu	r3,12(r16)
   4c624:	80801415 	stw	r2,80(r16)
   4c628:	18c40014 	ori	r3,r3,4096
   4c62c:	80c0030d 	sth	r3,12(r16)
   4c630:	dfc00117 	ldw	ra,4(sp)
   4c634:	dc000017 	ldw	r16,0(sp)
   4c638:	dec00204 	addi	sp,sp,8
   4c63c:	f800283a 	ret
   4c640:	80c0030b 	ldhu	r3,12(r16)
   4c644:	18fbffcc 	andi	r3,r3,61439
   4c648:	80c0030d 	sth	r3,12(r16)
   4c64c:	dfc00117 	ldw	ra,4(sp)
   4c650:	dc000017 	ldw	r16,0(sp)
   4c654:	dec00204 	addi	sp,sp,8
   4c658:	f800283a 	ret

0004c65c <__sclose>:
   4c65c:	2940038f 	ldh	r5,14(r5)
   4c660:	004dde81 	jmpi	4dde8 <_close_r>

0004c664 <strcmp>:
   4c664:	2144b03a 	or	r2,r4,r5
   4c668:	108000cc 	andi	r2,r2,3
   4c66c:	1000171e 	bne	r2,zero,4c6cc <strcmp+0x68>
   4c670:	20800017 	ldw	r2,0(r4)
   4c674:	28c00017 	ldw	r3,0(r5)
   4c678:	10c0141e 	bne	r2,r3,4c6cc <strcmp+0x68>
   4c67c:	027fbff4 	movhi	r9,65279
   4c680:	4a7fbfc4 	addi	r9,r9,-257
   4c684:	0086303a 	nor	r3,zero,r2
   4c688:	02202074 	movhi	r8,32897
   4c68c:	1245883a 	add	r2,r2,r9
   4c690:	42202004 	addi	r8,r8,-32640
   4c694:	10c4703a 	and	r2,r2,r3
   4c698:	1204703a 	and	r2,r2,r8
   4c69c:	10000226 	beq	r2,zero,4c6a8 <strcmp+0x44>
   4c6a0:	00002306 	br	4c730 <strcmp+0xcc>
   4c6a4:	1000221e 	bne	r2,zero,4c730 <strcmp+0xcc>
   4c6a8:	21000104 	addi	r4,r4,4
   4c6ac:	20c00017 	ldw	r3,0(r4)
   4c6b0:	29400104 	addi	r5,r5,4
   4c6b4:	29800017 	ldw	r6,0(r5)
   4c6b8:	1a4f883a 	add	r7,r3,r9
   4c6bc:	00c4303a 	nor	r2,zero,r3
   4c6c0:	3884703a 	and	r2,r7,r2
   4c6c4:	1204703a 	and	r2,r2,r8
   4c6c8:	19bff626 	beq	r3,r6,4c6a4 <__alt_data_end+0xfffcc6a4>
   4c6cc:	20800003 	ldbu	r2,0(r4)
   4c6d0:	10c03fcc 	andi	r3,r2,255
   4c6d4:	18c0201c 	xori	r3,r3,128
   4c6d8:	18ffe004 	addi	r3,r3,-128
   4c6dc:	18000c26 	beq	r3,zero,4c710 <strcmp+0xac>
   4c6e0:	29800007 	ldb	r6,0(r5)
   4c6e4:	19800326 	beq	r3,r6,4c6f4 <strcmp+0x90>
   4c6e8:	00001306 	br	4c738 <strcmp+0xd4>
   4c6ec:	29800007 	ldb	r6,0(r5)
   4c6f0:	11800b1e 	bne	r2,r6,4c720 <strcmp+0xbc>
   4c6f4:	21000044 	addi	r4,r4,1
   4c6f8:	20c00003 	ldbu	r3,0(r4)
   4c6fc:	29400044 	addi	r5,r5,1
   4c700:	18803fcc 	andi	r2,r3,255
   4c704:	1080201c 	xori	r2,r2,128
   4c708:	10bfe004 	addi	r2,r2,-128
   4c70c:	103ff71e 	bne	r2,zero,4c6ec <__alt_data_end+0xfffcc6ec>
   4c710:	0007883a 	mov	r3,zero
   4c714:	28800003 	ldbu	r2,0(r5)
   4c718:	1885c83a 	sub	r2,r3,r2
   4c71c:	f800283a 	ret
   4c720:	28800003 	ldbu	r2,0(r5)
   4c724:	18c03fcc 	andi	r3,r3,255
   4c728:	1885c83a 	sub	r2,r3,r2
   4c72c:	f800283a 	ret
   4c730:	0005883a 	mov	r2,zero
   4c734:	f800283a 	ret
   4c738:	10c03fcc 	andi	r3,r2,255
   4c73c:	003ff506 	br	4c714 <__alt_data_end+0xfffcc714>

0004c740 <__sprint_r.part.0>:
   4c740:	28801917 	ldw	r2,100(r5)
   4c744:	defff604 	addi	sp,sp,-40
   4c748:	dd400515 	stw	r21,20(sp)
   4c74c:	dfc00915 	stw	ra,36(sp)
   4c750:	df000815 	stw	fp,32(sp)
   4c754:	ddc00715 	stw	r23,28(sp)
   4c758:	dd800615 	stw	r22,24(sp)
   4c75c:	dd000415 	stw	r20,16(sp)
   4c760:	dcc00315 	stw	r19,12(sp)
   4c764:	dc800215 	stw	r18,8(sp)
   4c768:	dc400115 	stw	r17,4(sp)
   4c76c:	dc000015 	stw	r16,0(sp)
   4c770:	1088000c 	andi	r2,r2,8192
   4c774:	302b883a 	mov	r21,r6
   4c778:	10002e26 	beq	r2,zero,4c834 <__sprint_r.part.0+0xf4>
   4c77c:	30800217 	ldw	r2,8(r6)
   4c780:	35800017 	ldw	r22,0(r6)
   4c784:	10002926 	beq	r2,zero,4c82c <__sprint_r.part.0+0xec>
   4c788:	2827883a 	mov	r19,r5
   4c78c:	2029883a 	mov	r20,r4
   4c790:	b5c00104 	addi	r23,r22,4
   4c794:	04bfffc4 	movi	r18,-1
   4c798:	bc400017 	ldw	r17,0(r23)
   4c79c:	b4000017 	ldw	r16,0(r22)
   4c7a0:	0039883a 	mov	fp,zero
   4c7a4:	8822d0ba 	srli	r17,r17,2
   4c7a8:	8800031e 	bne	r17,zero,4c7b8 <__sprint_r.part.0+0x78>
   4c7ac:	00001806 	br	4c810 <__sprint_r.part.0+0xd0>
   4c7b0:	84000104 	addi	r16,r16,4
   4c7b4:	8f001526 	beq	r17,fp,4c80c <__sprint_r.part.0+0xcc>
   4c7b8:	81400017 	ldw	r5,0(r16)
   4c7bc:	980d883a 	mov	r6,r19
   4c7c0:	a009883a 	mov	r4,r20
   4c7c4:	004e1680 	call	4e168 <_fputwc_r>
   4c7c8:	e7000044 	addi	fp,fp,1
   4c7cc:	14bff81e 	bne	r2,r18,4c7b0 <__alt_data_end+0xfffcc7b0>
   4c7d0:	9005883a 	mov	r2,r18
   4c7d4:	a8000215 	stw	zero,8(r21)
   4c7d8:	a8000115 	stw	zero,4(r21)
   4c7dc:	dfc00917 	ldw	ra,36(sp)
   4c7e0:	df000817 	ldw	fp,32(sp)
   4c7e4:	ddc00717 	ldw	r23,28(sp)
   4c7e8:	dd800617 	ldw	r22,24(sp)
   4c7ec:	dd400517 	ldw	r21,20(sp)
   4c7f0:	dd000417 	ldw	r20,16(sp)
   4c7f4:	dcc00317 	ldw	r19,12(sp)
   4c7f8:	dc800217 	ldw	r18,8(sp)
   4c7fc:	dc400117 	ldw	r17,4(sp)
   4c800:	dc000017 	ldw	r16,0(sp)
   4c804:	dec00a04 	addi	sp,sp,40
   4c808:	f800283a 	ret
   4c80c:	a8800217 	ldw	r2,8(r21)
   4c810:	8c63883a 	add	r17,r17,r17
   4c814:	8c63883a 	add	r17,r17,r17
   4c818:	1445c83a 	sub	r2,r2,r17
   4c81c:	a8800215 	stw	r2,8(r21)
   4c820:	b5800204 	addi	r22,r22,8
   4c824:	bdc00204 	addi	r23,r23,8
   4c828:	103fdb1e 	bne	r2,zero,4c798 <__alt_data_end+0xfffcc798>
   4c82c:	0005883a 	mov	r2,zero
   4c830:	003fe806 	br	4c7d4 <__alt_data_end+0xfffcc7d4>
   4c834:	00499680 	call	49968 <__sfvwrite_r>
   4c838:	003fe606 	br	4c7d4 <__alt_data_end+0xfffcc7d4>

0004c83c <__sprint_r>:
   4c83c:	30c00217 	ldw	r3,8(r6)
   4c840:	18000126 	beq	r3,zero,4c848 <__sprint_r+0xc>
   4c844:	004c7401 	jmpi	4c740 <__sprint_r.part.0>
   4c848:	30000115 	stw	zero,4(r6)
   4c84c:	0005883a 	mov	r2,zero
   4c850:	f800283a 	ret

0004c854 <___vfiprintf_internal_r>:
   4c854:	deffc904 	addi	sp,sp,-220
   4c858:	df003515 	stw	fp,212(sp)
   4c85c:	dd003115 	stw	r20,196(sp)
   4c860:	dfc03615 	stw	ra,216(sp)
   4c864:	ddc03415 	stw	r23,208(sp)
   4c868:	dd803315 	stw	r22,204(sp)
   4c86c:	dd403215 	stw	r21,200(sp)
   4c870:	dcc03015 	stw	r19,192(sp)
   4c874:	dc802f15 	stw	r18,188(sp)
   4c878:	dc402e15 	stw	r17,184(sp)
   4c87c:	dc002d15 	stw	r16,180(sp)
   4c880:	d9002015 	stw	r4,128(sp)
   4c884:	d9c02215 	stw	r7,136(sp)
   4c888:	2829883a 	mov	r20,r5
   4c88c:	3039883a 	mov	fp,r6
   4c890:	20000226 	beq	r4,zero,4c89c <___vfiprintf_internal_r+0x48>
   4c894:	20800e17 	ldw	r2,56(r4)
   4c898:	1000cf26 	beq	r2,zero,4cbd8 <___vfiprintf_internal_r+0x384>
   4c89c:	a080030b 	ldhu	r2,12(r20)
   4c8a0:	10c8000c 	andi	r3,r2,8192
   4c8a4:	1800061e 	bne	r3,zero,4c8c0 <___vfiprintf_internal_r+0x6c>
   4c8a8:	a1001917 	ldw	r4,100(r20)
   4c8ac:	00f7ffc4 	movi	r3,-8193
   4c8b0:	10880014 	ori	r2,r2,8192
   4c8b4:	20c6703a 	and	r3,r4,r3
   4c8b8:	a080030d 	sth	r2,12(r20)
   4c8bc:	a0c01915 	stw	r3,100(r20)
   4c8c0:	10c0020c 	andi	r3,r2,8
   4c8c4:	1800a926 	beq	r3,zero,4cb6c <___vfiprintf_internal_r+0x318>
   4c8c8:	a0c00417 	ldw	r3,16(r20)
   4c8cc:	1800a726 	beq	r3,zero,4cb6c <___vfiprintf_internal_r+0x318>
   4c8d0:	1080068c 	andi	r2,r2,26
   4c8d4:	00c00284 	movi	r3,10
   4c8d8:	10c0ac26 	beq	r2,r3,4cb8c <___vfiprintf_internal_r+0x338>
   4c8dc:	da801a04 	addi	r10,sp,104
   4c8e0:	da801e15 	stw	r10,120(sp)
   4c8e4:	d8801e17 	ldw	r2,120(sp)
   4c8e8:	da8019c4 	addi	r10,sp,103
   4c8ec:	05800174 	movhi	r22,5
   4c8f0:	05c00174 	movhi	r23,5
   4c8f4:	da801f15 	stw	r10,124(sp)
   4c8f8:	1295c83a 	sub	r10,r2,r10
   4c8fc:	b58a9904 	addi	r22,r22,10852
   4c900:	bdca9504 	addi	r23,r23,10836
   4c904:	dec01a15 	stw	sp,104(sp)
   4c908:	d8001c15 	stw	zero,112(sp)
   4c90c:	d8001b15 	stw	zero,108(sp)
   4c910:	d8002615 	stw	zero,152(sp)
   4c914:	d8002315 	stw	zero,140(sp)
   4c918:	da802715 	stw	r10,156(sp)
   4c91c:	d811883a 	mov	r8,sp
   4c920:	dd002115 	stw	r20,132(sp)
   4c924:	e021883a 	mov	r16,fp
   4c928:	80800007 	ldb	r2,0(r16)
   4c92c:	1003ea26 	beq	r2,zero,4d8d8 <___vfiprintf_internal_r+0x1084>
   4c930:	00c00944 	movi	r3,37
   4c934:	8025883a 	mov	r18,r16
   4c938:	10c0021e 	bne	r2,r3,4c944 <___vfiprintf_internal_r+0xf0>
   4c93c:	00001606 	br	4c998 <___vfiprintf_internal_r+0x144>
   4c940:	10c00326 	beq	r2,r3,4c950 <___vfiprintf_internal_r+0xfc>
   4c944:	94800044 	addi	r18,r18,1
   4c948:	90800007 	ldb	r2,0(r18)
   4c94c:	103ffc1e 	bne	r2,zero,4c940 <__alt_data_end+0xfffcc940>
   4c950:	9423c83a 	sub	r17,r18,r16
   4c954:	88001026 	beq	r17,zero,4c998 <___vfiprintf_internal_r+0x144>
   4c958:	d8c01c17 	ldw	r3,112(sp)
   4c95c:	d8801b17 	ldw	r2,108(sp)
   4c960:	44000015 	stw	r16,0(r8)
   4c964:	88c7883a 	add	r3,r17,r3
   4c968:	10800044 	addi	r2,r2,1
   4c96c:	44400115 	stw	r17,4(r8)
   4c970:	d8c01c15 	stw	r3,112(sp)
   4c974:	d8801b15 	stw	r2,108(sp)
   4c978:	010001c4 	movi	r4,7
   4c97c:	2080760e 	bge	r4,r2,4cb58 <___vfiprintf_internal_r+0x304>
   4c980:	1803821e 	bne	r3,zero,4d78c <___vfiprintf_internal_r+0xf38>
   4c984:	da802317 	ldw	r10,140(sp)
   4c988:	d8001b15 	stw	zero,108(sp)
   4c98c:	d811883a 	mov	r8,sp
   4c990:	5455883a 	add	r10,r10,r17
   4c994:	da802315 	stw	r10,140(sp)
   4c998:	90800007 	ldb	r2,0(r18)
   4c99c:	10044626 	beq	r2,zero,4dab8 <___vfiprintf_internal_r+0x1264>
   4c9a0:	90c00047 	ldb	r3,1(r18)
   4c9a4:	94000044 	addi	r16,r18,1
   4c9a8:	d8001d85 	stb	zero,118(sp)
   4c9ac:	0009883a 	mov	r4,zero
   4c9b0:	000f883a 	mov	r7,zero
   4c9b4:	027fffc4 	movi	r9,-1
   4c9b8:	0023883a 	mov	r17,zero
   4c9bc:	0029883a 	mov	r20,zero
   4c9c0:	01401604 	movi	r5,88
   4c9c4:	01800244 	movi	r6,9
   4c9c8:	03400a84 	movi	r13,42
   4c9cc:	03001b04 	movi	r12,108
   4c9d0:	84000044 	addi	r16,r16,1
   4c9d4:	18bff804 	addi	r2,r3,-32
   4c9d8:	28827336 	bltu	r5,r2,4d3a8 <___vfiprintf_internal_r+0xb54>
   4c9dc:	100490ba 	slli	r2,r2,2
   4c9e0:	02800174 	movhi	r10,5
   4c9e4:	52b27d04 	addi	r10,r10,-13836
   4c9e8:	1285883a 	add	r2,r2,r10
   4c9ec:	10800017 	ldw	r2,0(r2)
   4c9f0:	1000683a 	jmp	r2
   4c9f4:	0004d0dc 	xori	zero,zero,4931
   4c9f8:	0004d3a8 	cmpgeui	zero,zero,4942
   4c9fc:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca00:	0004d0fc 	xorhi	zero,zero,4931
   4ca04:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca08:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca0c:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca10:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca14:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca18:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca1c:	0004d2e4 	muli	zero,zero,4939
   4ca20:	0004d300 	call	4d30 <__reset-0x3b2d0>
   4ca24:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca28:	0004cbe8 	cmpgeui	zero,zero,4911
   4ca2c:	0004d310 	cmplti	zero,zero,4940
   4ca30:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca34:	0004d108 	cmpgei	zero,zero,4932
   4ca38:	0004d114 	movui	zero,4932
   4ca3c:	0004d114 	movui	zero,4932
   4ca40:	0004d114 	movui	zero,4932
   4ca44:	0004d114 	movui	zero,4932
   4ca48:	0004d114 	movui	zero,4932
   4ca4c:	0004d114 	movui	zero,4932
   4ca50:	0004d114 	movui	zero,4932
   4ca54:	0004d114 	movui	zero,4932
   4ca58:	0004d114 	movui	zero,4932
   4ca5c:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca60:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca64:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca68:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca6c:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca70:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca74:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca78:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca7c:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca80:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca84:	0004d140 	call	4d14 <__reset-0x3b2ec>
   4ca88:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca8c:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca90:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca94:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca98:	0004d3a8 	cmpgeui	zero,zero,4942
   4ca9c:	0004d3a8 	cmpgeui	zero,zero,4942
   4caa0:	0004d3a8 	cmpgeui	zero,zero,4942
   4caa4:	0004d3a8 	cmpgeui	zero,zero,4942
   4caa8:	0004d3a8 	cmpgeui	zero,zero,4942
   4caac:	0004d3a8 	cmpgeui	zero,zero,4942
   4cab0:	0004d178 	rdprs	zero,zero,4933
   4cab4:	0004d3a8 	cmpgeui	zero,zero,4942
   4cab8:	0004d3a8 	cmpgeui	zero,zero,4942
   4cabc:	0004d3a8 	cmpgeui	zero,zero,4942
   4cac0:	0004d3a8 	cmpgeui	zero,zero,4942
   4cac4:	0004d3a8 	cmpgeui	zero,zero,4942
   4cac8:	0004d1d0 	cmplti	zero,zero,4935
   4cacc:	0004d3a8 	cmpgeui	zero,zero,4942
   4cad0:	0004d3a8 	cmpgeui	zero,zero,4942
   4cad4:	0004d240 	call	4d24 <__reset-0x3b2dc>
   4cad8:	0004d3a8 	cmpgeui	zero,zero,4942
   4cadc:	0004d3a8 	cmpgeui	zero,zero,4942
   4cae0:	0004d3a8 	cmpgeui	zero,zero,4942
   4cae4:	0004d3a8 	cmpgeui	zero,zero,4942
   4cae8:	0004d3a8 	cmpgeui	zero,zero,4942
   4caec:	0004d3a8 	cmpgeui	zero,zero,4942
   4caf0:	0004d3a8 	cmpgeui	zero,zero,4942
   4caf4:	0004d3a8 	cmpgeui	zero,zero,4942
   4caf8:	0004d3a8 	cmpgeui	zero,zero,4942
   4cafc:	0004d3a8 	cmpgeui	zero,zero,4942
   4cb00:	0004cfec 	andhi	zero,zero,4927
   4cb04:	0004d018 	cmpnei	zero,zero,4928
   4cb08:	0004d3a8 	cmpgeui	zero,zero,4942
   4cb0c:	0004d3a8 	cmpgeui	zero,zero,4942
   4cb10:	0004d3a8 	cmpgeui	zero,zero,4942
   4cb14:	0004d350 	cmplti	zero,zero,4941
   4cb18:	0004d018 	cmpnei	zero,zero,4928
   4cb1c:	0004d3a8 	cmpgeui	zero,zero,4942
   4cb20:	0004d3a8 	cmpgeui	zero,zero,4942
   4cb24:	0004ceac 	andhi	zero,zero,4922
   4cb28:	0004d3a8 	cmpgeui	zero,zero,4942
   4cb2c:	0004cebc 	xorhi	zero,zero,4922
   4cb30:	0004cef8 	rdprs	zero,zero,4923
   4cb34:	0004cbf4 	movhi	zero,4911
   4cb38:	0004cea0 	cmpeqi	zero,zero,4922
   4cb3c:	0004d3a8 	cmpgeui	zero,zero,4942
   4cb40:	0004d27c 	xorhi	zero,zero,4937
   4cb44:	0004d3a8 	cmpgeui	zero,zero,4942
   4cb48:	0004d2d4 	movui	zero,4939
   4cb4c:	0004d3a8 	cmpgeui	zero,zero,4942
   4cb50:	0004d3a8 	cmpgeui	zero,zero,4942
   4cb54:	0004cf98 	cmpnei	zero,zero,4926
   4cb58:	42000204 	addi	r8,r8,8
   4cb5c:	da802317 	ldw	r10,140(sp)
   4cb60:	5455883a 	add	r10,r10,r17
   4cb64:	da802315 	stw	r10,140(sp)
   4cb68:	003f8b06 	br	4c998 <__alt_data_end+0xfffcc998>
   4cb6c:	d9002017 	ldw	r4,128(sp)
   4cb70:	a00b883a 	mov	r5,r20
   4cb74:	00475100 	call	47510 <__swsetup_r>
   4cb78:	1003b11e 	bne	r2,zero,4da40 <___vfiprintf_internal_r+0x11ec>
   4cb7c:	a080030b 	ldhu	r2,12(r20)
   4cb80:	00c00284 	movi	r3,10
   4cb84:	1080068c 	andi	r2,r2,26
   4cb88:	10ff541e 	bne	r2,r3,4c8dc <__alt_data_end+0xfffcc8dc>
   4cb8c:	a080038f 	ldh	r2,14(r20)
   4cb90:	103f5216 	blt	r2,zero,4c8dc <__alt_data_end+0xfffcc8dc>
   4cb94:	d9c02217 	ldw	r7,136(sp)
   4cb98:	d9002017 	ldw	r4,128(sp)
   4cb9c:	e00d883a 	mov	r6,fp
   4cba0:	a00b883a 	mov	r5,r20
   4cba4:	004dccc0 	call	4dccc <__sbprintf>
   4cba8:	dfc03617 	ldw	ra,216(sp)
   4cbac:	df003517 	ldw	fp,212(sp)
   4cbb0:	ddc03417 	ldw	r23,208(sp)
   4cbb4:	dd803317 	ldw	r22,204(sp)
   4cbb8:	dd403217 	ldw	r21,200(sp)
   4cbbc:	dd003117 	ldw	r20,196(sp)
   4cbc0:	dcc03017 	ldw	r19,192(sp)
   4cbc4:	dc802f17 	ldw	r18,188(sp)
   4cbc8:	dc402e17 	ldw	r17,184(sp)
   4cbcc:	dc002d17 	ldw	r16,180(sp)
   4cbd0:	dec03704 	addi	sp,sp,220
   4cbd4:	f800283a 	ret
   4cbd8:	00494e40 	call	494e4 <__sinit>
   4cbdc:	003f2f06 	br	4c89c <__alt_data_end+0xfffcc89c>
   4cbe0:	0463c83a 	sub	r17,zero,r17
   4cbe4:	d8802215 	stw	r2,136(sp)
   4cbe8:	a5000114 	ori	r20,r20,4
   4cbec:	80c00007 	ldb	r3,0(r16)
   4cbf0:	003f7706 	br	4c9d0 <__alt_data_end+0xfffcc9d0>
   4cbf4:	00800c04 	movi	r2,48
   4cbf8:	da802217 	ldw	r10,136(sp)
   4cbfc:	d8801d05 	stb	r2,116(sp)
   4cc00:	00801e04 	movi	r2,120
   4cc04:	d8801d45 	stb	r2,117(sp)
   4cc08:	d8001d85 	stb	zero,118(sp)
   4cc0c:	50c00104 	addi	r3,r10,4
   4cc10:	54800017 	ldw	r18,0(r10)
   4cc14:	0027883a 	mov	r19,zero
   4cc18:	a0800094 	ori	r2,r20,2
   4cc1c:	48030b16 	blt	r9,zero,4d84c <___vfiprintf_internal_r+0xff8>
   4cc20:	00bfdfc4 	movi	r2,-129
   4cc24:	a096703a 	and	r11,r20,r2
   4cc28:	d8c02215 	stw	r3,136(sp)
   4cc2c:	5d000094 	ori	r20,r11,2
   4cc30:	90032b1e 	bne	r18,zero,4d8e0 <___vfiprintf_internal_r+0x108c>
   4cc34:	00800174 	movhi	r2,5
   4cc38:	108a3404 	addi	r2,r2,10448
   4cc3c:	d8802615 	stw	r2,152(sp)
   4cc40:	0039883a 	mov	fp,zero
   4cc44:	48017b1e 	bne	r9,zero,4d234 <___vfiprintf_internal_r+0x9e0>
   4cc48:	0013883a 	mov	r9,zero
   4cc4c:	0027883a 	mov	r19,zero
   4cc50:	dd401a04 	addi	r21,sp,104
   4cc54:	4825883a 	mov	r18,r9
   4cc58:	4cc0010e 	bge	r9,r19,4cc60 <___vfiprintf_internal_r+0x40c>
   4cc5c:	9825883a 	mov	r18,r19
   4cc60:	e7003fcc 	andi	fp,fp,255
   4cc64:	e700201c 	xori	fp,fp,128
   4cc68:	e73fe004 	addi	fp,fp,-128
   4cc6c:	e0000126 	beq	fp,zero,4cc74 <___vfiprintf_internal_r+0x420>
   4cc70:	94800044 	addi	r18,r18,1
   4cc74:	a380008c 	andi	r14,r20,2
   4cc78:	70000126 	beq	r14,zero,4cc80 <___vfiprintf_internal_r+0x42c>
   4cc7c:	94800084 	addi	r18,r18,2
   4cc80:	a700210c 	andi	fp,r20,132
   4cc84:	e001df1e 	bne	fp,zero,4d404 <___vfiprintf_internal_r+0xbb0>
   4cc88:	8c87c83a 	sub	r3,r17,r18
   4cc8c:	00c1dd0e 	bge	zero,r3,4d404 <___vfiprintf_internal_r+0xbb0>
   4cc90:	01c00404 	movi	r7,16
   4cc94:	d8801c17 	ldw	r2,112(sp)
   4cc98:	38c3ad0e 	bge	r7,r3,4db50 <___vfiprintf_internal_r+0x12fc>
   4cc9c:	02800174 	movhi	r10,5
   4cca0:	528a9904 	addi	r10,r10,10852
   4cca4:	dc002915 	stw	r16,164(sp)
   4cca8:	d9801b17 	ldw	r6,108(sp)
   4ccac:	da802415 	stw	r10,144(sp)
   4ccb0:	03c001c4 	movi	r15,7
   4ccb4:	da402515 	stw	r9,148(sp)
   4ccb8:	db802815 	stw	r14,160(sp)
   4ccbc:	1821883a 	mov	r16,r3
   4ccc0:	00000506 	br	4ccd8 <___vfiprintf_internal_r+0x484>
   4ccc4:	31400084 	addi	r5,r6,2
   4ccc8:	42000204 	addi	r8,r8,8
   4cccc:	200d883a 	mov	r6,r4
   4ccd0:	843ffc04 	addi	r16,r16,-16
   4ccd4:	3c000d0e 	bge	r7,r16,4cd0c <___vfiprintf_internal_r+0x4b8>
   4ccd8:	10800404 	addi	r2,r2,16
   4ccdc:	31000044 	addi	r4,r6,1
   4cce0:	45800015 	stw	r22,0(r8)
   4cce4:	41c00115 	stw	r7,4(r8)
   4cce8:	d8801c15 	stw	r2,112(sp)
   4ccec:	d9001b15 	stw	r4,108(sp)
   4ccf0:	793ff40e 	bge	r15,r4,4ccc4 <__alt_data_end+0xfffcccc4>
   4ccf4:	1001b51e 	bne	r2,zero,4d3cc <___vfiprintf_internal_r+0xb78>
   4ccf8:	843ffc04 	addi	r16,r16,-16
   4ccfc:	000d883a 	mov	r6,zero
   4cd00:	01400044 	movi	r5,1
   4cd04:	d811883a 	mov	r8,sp
   4cd08:	3c3ff316 	blt	r7,r16,4ccd8 <__alt_data_end+0xfffcccd8>
   4cd0c:	8007883a 	mov	r3,r16
   4cd10:	da402517 	ldw	r9,148(sp)
   4cd14:	db802817 	ldw	r14,160(sp)
   4cd18:	dc002917 	ldw	r16,164(sp)
   4cd1c:	da802417 	ldw	r10,144(sp)
   4cd20:	1885883a 	add	r2,r3,r2
   4cd24:	40c00115 	stw	r3,4(r8)
   4cd28:	42800015 	stw	r10,0(r8)
   4cd2c:	d8801c15 	stw	r2,112(sp)
   4cd30:	d9401b15 	stw	r5,108(sp)
   4cd34:	00c001c4 	movi	r3,7
   4cd38:	19426016 	blt	r3,r5,4d6bc <___vfiprintf_internal_r+0xe68>
   4cd3c:	d8c01d87 	ldb	r3,118(sp)
   4cd40:	42000204 	addi	r8,r8,8
   4cd44:	29000044 	addi	r4,r5,1
   4cd48:	1801b31e 	bne	r3,zero,4d418 <___vfiprintf_internal_r+0xbc4>
   4cd4c:	7001c026 	beq	r14,zero,4d450 <___vfiprintf_internal_r+0xbfc>
   4cd50:	d8c01d04 	addi	r3,sp,116
   4cd54:	10800084 	addi	r2,r2,2
   4cd58:	40c00015 	stw	r3,0(r8)
   4cd5c:	00c00084 	movi	r3,2
   4cd60:	40c00115 	stw	r3,4(r8)
   4cd64:	d8801c15 	stw	r2,112(sp)
   4cd68:	d9001b15 	stw	r4,108(sp)
   4cd6c:	00c001c4 	movi	r3,7
   4cd70:	1902650e 	bge	r3,r4,4d708 <___vfiprintf_internal_r+0xeb4>
   4cd74:	10029a1e 	bne	r2,zero,4d7e0 <___vfiprintf_internal_r+0xf8c>
   4cd78:	00c02004 	movi	r3,128
   4cd7c:	01000044 	movi	r4,1
   4cd80:	000b883a 	mov	r5,zero
   4cd84:	d811883a 	mov	r8,sp
   4cd88:	e0c1b31e 	bne	fp,r3,4d458 <___vfiprintf_internal_r+0xc04>
   4cd8c:	8cb9c83a 	sub	fp,r17,r18
   4cd90:	0701b10e 	bge	zero,fp,4d458 <___vfiprintf_internal_r+0xc04>
   4cd94:	01c00404 	movi	r7,16
   4cd98:	3f03890e 	bge	r7,fp,4dbc0 <___vfiprintf_internal_r+0x136c>
   4cd9c:	00c00174 	movhi	r3,5
   4cda0:	18ca9504 	addi	r3,r3,10836
   4cda4:	d8c02415 	stw	r3,144(sp)
   4cda8:	8007883a 	mov	r3,r16
   4cdac:	034001c4 	movi	r13,7
   4cdb0:	e021883a 	mov	r16,fp
   4cdb4:	da402515 	stw	r9,148(sp)
   4cdb8:	1839883a 	mov	fp,r3
   4cdbc:	00000506 	br	4cdd4 <___vfiprintf_internal_r+0x580>
   4cdc0:	29800084 	addi	r6,r5,2
   4cdc4:	42000204 	addi	r8,r8,8
   4cdc8:	180b883a 	mov	r5,r3
   4cdcc:	843ffc04 	addi	r16,r16,-16
   4cdd0:	3c000d0e 	bge	r7,r16,4ce08 <___vfiprintf_internal_r+0x5b4>
   4cdd4:	10800404 	addi	r2,r2,16
   4cdd8:	28c00044 	addi	r3,r5,1
   4cddc:	45c00015 	stw	r23,0(r8)
   4cde0:	41c00115 	stw	r7,4(r8)
   4cde4:	d8801c15 	stw	r2,112(sp)
   4cde8:	d8c01b15 	stw	r3,108(sp)
   4cdec:	68fff40e 	bge	r13,r3,4cdc0 <__alt_data_end+0xfffccdc0>
   4cdf0:	1002241e 	bne	r2,zero,4d684 <___vfiprintf_internal_r+0xe30>
   4cdf4:	843ffc04 	addi	r16,r16,-16
   4cdf8:	01800044 	movi	r6,1
   4cdfc:	000b883a 	mov	r5,zero
   4ce00:	d811883a 	mov	r8,sp
   4ce04:	3c3ff316 	blt	r7,r16,4cdd4 <__alt_data_end+0xfffccdd4>
   4ce08:	da402517 	ldw	r9,148(sp)
   4ce0c:	e007883a 	mov	r3,fp
   4ce10:	8039883a 	mov	fp,r16
   4ce14:	1821883a 	mov	r16,r3
   4ce18:	d8c02417 	ldw	r3,144(sp)
   4ce1c:	1705883a 	add	r2,r2,fp
   4ce20:	47000115 	stw	fp,4(r8)
   4ce24:	40c00015 	stw	r3,0(r8)
   4ce28:	d8801c15 	stw	r2,112(sp)
   4ce2c:	d9801b15 	stw	r6,108(sp)
   4ce30:	00c001c4 	movi	r3,7
   4ce34:	19827616 	blt	r3,r6,4d810 <___vfiprintf_internal_r+0xfbc>
   4ce38:	4cf9c83a 	sub	fp,r9,r19
   4ce3c:	42000204 	addi	r8,r8,8
   4ce40:	31000044 	addi	r4,r6,1
   4ce44:	300b883a 	mov	r5,r6
   4ce48:	07018516 	blt	zero,fp,4d460 <___vfiprintf_internal_r+0xc0c>
   4ce4c:	9885883a 	add	r2,r19,r2
   4ce50:	45400015 	stw	r21,0(r8)
   4ce54:	44c00115 	stw	r19,4(r8)
   4ce58:	d8801c15 	stw	r2,112(sp)
   4ce5c:	d9001b15 	stw	r4,108(sp)
   4ce60:	00c001c4 	movi	r3,7
   4ce64:	1901dd0e 	bge	r3,r4,4d5dc <___vfiprintf_internal_r+0xd88>
   4ce68:	1002401e 	bne	r2,zero,4d76c <___vfiprintf_internal_r+0xf18>
   4ce6c:	d8001b15 	stw	zero,108(sp)
   4ce70:	a2c0010c 	andi	r11,r20,4
   4ce74:	58000226 	beq	r11,zero,4ce80 <___vfiprintf_internal_r+0x62c>
   4ce78:	8ca7c83a 	sub	r19,r17,r18
   4ce7c:	04c2f216 	blt	zero,r19,4da48 <___vfiprintf_internal_r+0x11f4>
   4ce80:	8c80010e 	bge	r17,r18,4ce88 <___vfiprintf_internal_r+0x634>
   4ce84:	9023883a 	mov	r17,r18
   4ce88:	da802317 	ldw	r10,140(sp)
   4ce8c:	5455883a 	add	r10,r10,r17
   4ce90:	da802315 	stw	r10,140(sp)
   4ce94:	d8001b15 	stw	zero,108(sp)
   4ce98:	d811883a 	mov	r8,sp
   4ce9c:	003ea206 	br	4c928 <__alt_data_end+0xfffcc928>
   4cea0:	a5000814 	ori	r20,r20,32
   4cea4:	80c00007 	ldb	r3,0(r16)
   4cea8:	003ec906 	br	4c9d0 <__alt_data_end+0xfffcc9d0>
   4ceac:	80c00007 	ldb	r3,0(r16)
   4ceb0:	1b030926 	beq	r3,r12,4dad8 <___vfiprintf_internal_r+0x1284>
   4ceb4:	a5000414 	ori	r20,r20,16
   4ceb8:	003ec506 	br	4c9d0 <__alt_data_end+0xfffcc9d0>
   4cebc:	21003fcc 	andi	r4,r4,255
   4cec0:	20035e1e 	bne	r4,zero,4dc3c <___vfiprintf_internal_r+0x13e8>
   4cec4:	a080080c 	andi	r2,r20,32
   4cec8:	1002a526 	beq	r2,zero,4d960 <___vfiprintf_internal_r+0x110c>
   4cecc:	da802217 	ldw	r10,136(sp)
   4ced0:	50800017 	ldw	r2,0(r10)
   4ced4:	da802317 	ldw	r10,140(sp)
   4ced8:	5007d7fa 	srai	r3,r10,31
   4cedc:	da802217 	ldw	r10,136(sp)
   4cee0:	10c00115 	stw	r3,4(r2)
   4cee4:	52800104 	addi	r10,r10,4
   4cee8:	da802215 	stw	r10,136(sp)
   4ceec:	da802317 	ldw	r10,140(sp)
   4cef0:	12800015 	stw	r10,0(r2)
   4cef4:	003e8c06 	br	4c928 <__alt_data_end+0xfffcc928>
   4cef8:	21003fcc 	andi	r4,r4,255
   4cefc:	2003511e 	bne	r4,zero,4dc44 <___vfiprintf_internal_r+0x13f0>
   4cf00:	a080080c 	andi	r2,r20,32
   4cf04:	1000a126 	beq	r2,zero,4d18c <___vfiprintf_internal_r+0x938>
   4cf08:	da802217 	ldw	r10,136(sp)
   4cf0c:	d8001d85 	stb	zero,118(sp)
   4cf10:	50800204 	addi	r2,r10,8
   4cf14:	54800017 	ldw	r18,0(r10)
   4cf18:	54c00117 	ldw	r19,4(r10)
   4cf1c:	4802b416 	blt	r9,zero,4d9f0 <___vfiprintf_internal_r+0x119c>
   4cf20:	013fdfc4 	movi	r4,-129
   4cf24:	94c6b03a 	or	r3,r18,r19
   4cf28:	d8802215 	stw	r2,136(sp)
   4cf2c:	a128703a 	and	r20,r20,r4
   4cf30:	1800a226 	beq	r3,zero,4d1bc <___vfiprintf_internal_r+0x968>
   4cf34:	0039883a 	mov	fp,zero
   4cf38:	dd401a04 	addi	r21,sp,104
   4cf3c:	9006d0fa 	srli	r3,r18,3
   4cf40:	9808977a 	slli	r4,r19,29
   4cf44:	9826d0fa 	srli	r19,r19,3
   4cf48:	948001cc 	andi	r18,r18,7
   4cf4c:	90800c04 	addi	r2,r18,48
   4cf50:	ad7fffc4 	addi	r21,r21,-1
   4cf54:	20e4b03a 	or	r18,r4,r3
   4cf58:	a8800005 	stb	r2,0(r21)
   4cf5c:	94c6b03a 	or	r3,r18,r19
   4cf60:	183ff61e 	bne	r3,zero,4cf3c <__alt_data_end+0xfffccf3c>
   4cf64:	a0c0004c 	andi	r3,r20,1
   4cf68:	18005926 	beq	r3,zero,4d0d0 <___vfiprintf_internal_r+0x87c>
   4cf6c:	10803fcc 	andi	r2,r2,255
   4cf70:	1080201c 	xori	r2,r2,128
   4cf74:	10bfe004 	addi	r2,r2,-128
   4cf78:	00c00c04 	movi	r3,48
   4cf7c:	10c05426 	beq	r2,r3,4d0d0 <___vfiprintf_internal_r+0x87c>
   4cf80:	da801e17 	ldw	r10,120(sp)
   4cf84:	a8bfffc4 	addi	r2,r21,-1
   4cf88:	a8ffffc5 	stb	r3,-1(r21)
   4cf8c:	50a7c83a 	sub	r19,r10,r2
   4cf90:	102b883a 	mov	r21,r2
   4cf94:	003f2f06 	br	4cc54 <__alt_data_end+0xfffccc54>
   4cf98:	21003fcc 	andi	r4,r4,255
   4cf9c:	2003421e 	bne	r4,zero,4dca8 <___vfiprintf_internal_r+0x1454>
   4cfa0:	00800174 	movhi	r2,5
   4cfa4:	108a3404 	addi	r2,r2,10448
   4cfa8:	d8802615 	stw	r2,152(sp)
   4cfac:	a080080c 	andi	r2,r20,32
   4cfb0:	1000aa26 	beq	r2,zero,4d25c <___vfiprintf_internal_r+0xa08>
   4cfb4:	da802217 	ldw	r10,136(sp)
   4cfb8:	54800017 	ldw	r18,0(r10)
   4cfbc:	54c00117 	ldw	r19,4(r10)
   4cfc0:	52800204 	addi	r10,r10,8
   4cfc4:	da802215 	stw	r10,136(sp)
   4cfc8:	a080004c 	andi	r2,r20,1
   4cfcc:	1001d226 	beq	r2,zero,4d718 <___vfiprintf_internal_r+0xec4>
   4cfd0:	94c4b03a 	or	r2,r18,r19
   4cfd4:	1002351e 	bne	r2,zero,4d8ac <___vfiprintf_internal_r+0x1058>
   4cfd8:	d8001d85 	stb	zero,118(sp)
   4cfdc:	48022216 	blt	r9,zero,4d868 <___vfiprintf_internal_r+0x1014>
   4cfe0:	00bfdfc4 	movi	r2,-129
   4cfe4:	a0a8703a 	and	r20,r20,r2
   4cfe8:	003f1506 	br	4cc40 <__alt_data_end+0xfffccc40>
   4cfec:	da802217 	ldw	r10,136(sp)
   4cff0:	04800044 	movi	r18,1
   4cff4:	d8001d85 	stb	zero,118(sp)
   4cff8:	50800017 	ldw	r2,0(r10)
   4cffc:	52800104 	addi	r10,r10,4
   4d000:	da802215 	stw	r10,136(sp)
   4d004:	d8801005 	stb	r2,64(sp)
   4d008:	9027883a 	mov	r19,r18
   4d00c:	dd401004 	addi	r21,sp,64
   4d010:	0013883a 	mov	r9,zero
   4d014:	003f1706 	br	4cc74 <__alt_data_end+0xfffccc74>
   4d018:	21003fcc 	andi	r4,r4,255
   4d01c:	2003201e 	bne	r4,zero,4dca0 <___vfiprintf_internal_r+0x144c>
   4d020:	a080080c 	andi	r2,r20,32
   4d024:	10004b26 	beq	r2,zero,4d154 <___vfiprintf_internal_r+0x900>
   4d028:	da802217 	ldw	r10,136(sp)
   4d02c:	50800117 	ldw	r2,4(r10)
   4d030:	54800017 	ldw	r18,0(r10)
   4d034:	52800204 	addi	r10,r10,8
   4d038:	da802215 	stw	r10,136(sp)
   4d03c:	1027883a 	mov	r19,r2
   4d040:	10022c16 	blt	r2,zero,4d8f4 <___vfiprintf_internal_r+0x10a0>
   4d044:	df001d83 	ldbu	fp,118(sp)
   4d048:	48007216 	blt	r9,zero,4d214 <___vfiprintf_internal_r+0x9c0>
   4d04c:	00ffdfc4 	movi	r3,-129
   4d050:	94c4b03a 	or	r2,r18,r19
   4d054:	a0e8703a 	and	r20,r20,r3
   4d058:	1000cc26 	beq	r2,zero,4d38c <___vfiprintf_internal_r+0xb38>
   4d05c:	98021026 	beq	r19,zero,4d8a0 <___vfiprintf_internal_r+0x104c>
   4d060:	dc402415 	stw	r17,144(sp)
   4d064:	dc002515 	stw	r16,148(sp)
   4d068:	9823883a 	mov	r17,r19
   4d06c:	9021883a 	mov	r16,r18
   4d070:	dd401a04 	addi	r21,sp,104
   4d074:	4825883a 	mov	r18,r9
   4d078:	4027883a 	mov	r19,r8
   4d07c:	8009883a 	mov	r4,r16
   4d080:	880b883a 	mov	r5,r17
   4d084:	01800284 	movi	r6,10
   4d088:	000f883a 	mov	r7,zero
   4d08c:	004ec340 	call	4ec34 <__umoddi3>
   4d090:	10800c04 	addi	r2,r2,48
   4d094:	ad7fffc4 	addi	r21,r21,-1
   4d098:	8009883a 	mov	r4,r16
   4d09c:	880b883a 	mov	r5,r17
   4d0a0:	a8800005 	stb	r2,0(r21)
   4d0a4:	01800284 	movi	r6,10
   4d0a8:	000f883a 	mov	r7,zero
   4d0ac:	004e6bc0 	call	4e6bc <__udivdi3>
   4d0b0:	1021883a 	mov	r16,r2
   4d0b4:	10c4b03a 	or	r2,r2,r3
   4d0b8:	1823883a 	mov	r17,r3
   4d0bc:	103fef1e 	bne	r2,zero,4d07c <__alt_data_end+0xfffcd07c>
   4d0c0:	dc402417 	ldw	r17,144(sp)
   4d0c4:	dc002517 	ldw	r16,148(sp)
   4d0c8:	9013883a 	mov	r9,r18
   4d0cc:	9811883a 	mov	r8,r19
   4d0d0:	da801e17 	ldw	r10,120(sp)
   4d0d4:	5567c83a 	sub	r19,r10,r21
   4d0d8:	003ede06 	br	4cc54 <__alt_data_end+0xfffccc54>
   4d0dc:	38803fcc 	andi	r2,r7,255
   4d0e0:	1080201c 	xori	r2,r2,128
   4d0e4:	10bfe004 	addi	r2,r2,-128
   4d0e8:	1002371e 	bne	r2,zero,4d9c8 <___vfiprintf_internal_r+0x1174>
   4d0ec:	01000044 	movi	r4,1
   4d0f0:	01c00804 	movi	r7,32
   4d0f4:	80c00007 	ldb	r3,0(r16)
   4d0f8:	003e3506 	br	4c9d0 <__alt_data_end+0xfffcc9d0>
   4d0fc:	a5000054 	ori	r20,r20,1
   4d100:	80c00007 	ldb	r3,0(r16)
   4d104:	003e3206 	br	4c9d0 <__alt_data_end+0xfffcc9d0>
   4d108:	a5002014 	ori	r20,r20,128
   4d10c:	80c00007 	ldb	r3,0(r16)
   4d110:	003e2f06 	br	4c9d0 <__alt_data_end+0xfffcc9d0>
   4d114:	8015883a 	mov	r10,r16
   4d118:	0023883a 	mov	r17,zero
   4d11c:	18bff404 	addi	r2,r3,-48
   4d120:	50c00007 	ldb	r3,0(r10)
   4d124:	8c4002a4 	muli	r17,r17,10
   4d128:	84000044 	addi	r16,r16,1
   4d12c:	8015883a 	mov	r10,r16
   4d130:	1463883a 	add	r17,r2,r17
   4d134:	18bff404 	addi	r2,r3,-48
   4d138:	30bff92e 	bgeu	r6,r2,4d120 <__alt_data_end+0xfffcd120>
   4d13c:	003e2506 	br	4c9d4 <__alt_data_end+0xfffcc9d4>
   4d140:	21003fcc 	andi	r4,r4,255
   4d144:	2002d41e 	bne	r4,zero,4dc98 <___vfiprintf_internal_r+0x1444>
   4d148:	a5000414 	ori	r20,r20,16
   4d14c:	a080080c 	andi	r2,r20,32
   4d150:	103fb51e 	bne	r2,zero,4d028 <__alt_data_end+0xfffcd028>
   4d154:	a080040c 	andi	r2,r20,16
   4d158:	1001f826 	beq	r2,zero,4d93c <___vfiprintf_internal_r+0x10e8>
   4d15c:	da802217 	ldw	r10,136(sp)
   4d160:	54800017 	ldw	r18,0(r10)
   4d164:	52800104 	addi	r10,r10,4
   4d168:	da802215 	stw	r10,136(sp)
   4d16c:	9027d7fa 	srai	r19,r18,31
   4d170:	9805883a 	mov	r2,r19
   4d174:	003fb206 	br	4d040 <__alt_data_end+0xfffcd040>
   4d178:	21003fcc 	andi	r4,r4,255
   4d17c:	2002c41e 	bne	r4,zero,4dc90 <___vfiprintf_internal_r+0x143c>
   4d180:	a5000414 	ori	r20,r20,16
   4d184:	a080080c 	andi	r2,r20,32
   4d188:	103f5f1e 	bne	r2,zero,4cf08 <__alt_data_end+0xfffccf08>
   4d18c:	a080040c 	andi	r2,r20,16
   4d190:	10020f26 	beq	r2,zero,4d9d0 <___vfiprintf_internal_r+0x117c>
   4d194:	da802217 	ldw	r10,136(sp)
   4d198:	d8001d85 	stb	zero,118(sp)
   4d19c:	0027883a 	mov	r19,zero
   4d1a0:	50800104 	addi	r2,r10,4
   4d1a4:	54800017 	ldw	r18,0(r10)
   4d1a8:	48021116 	blt	r9,zero,4d9f0 <___vfiprintf_internal_r+0x119c>
   4d1ac:	00ffdfc4 	movi	r3,-129
   4d1b0:	d8802215 	stw	r2,136(sp)
   4d1b4:	a0e8703a 	and	r20,r20,r3
   4d1b8:	903f5e1e 	bne	r18,zero,4cf34 <__alt_data_end+0xfffccf34>
   4d1bc:	0039883a 	mov	fp,zero
   4d1c0:	4802a626 	beq	r9,zero,4dc5c <___vfiprintf_internal_r+0x1408>
   4d1c4:	0025883a 	mov	r18,zero
   4d1c8:	0027883a 	mov	r19,zero
   4d1cc:	003f5a06 	br	4cf38 <__alt_data_end+0xfffccf38>
   4d1d0:	21003fcc 	andi	r4,r4,255
   4d1d4:	20029f1e 	bne	r4,zero,4dc54 <___vfiprintf_internal_r+0x1400>
   4d1d8:	a5000414 	ori	r20,r20,16
   4d1dc:	a080080c 	andi	r2,r20,32
   4d1e0:	10005e1e 	bne	r2,zero,4d35c <___vfiprintf_internal_r+0xb08>
   4d1e4:	a080040c 	andi	r2,r20,16
   4d1e8:	1001a21e 	bne	r2,zero,4d874 <___vfiprintf_internal_r+0x1020>
   4d1ec:	a080100c 	andi	r2,r20,64
   4d1f0:	d8001d85 	stb	zero,118(sp)
   4d1f4:	da802217 	ldw	r10,136(sp)
   4d1f8:	1002231e 	bne	r2,zero,4da88 <___vfiprintf_internal_r+0x1234>
   4d1fc:	50800104 	addi	r2,r10,4
   4d200:	54800017 	ldw	r18,0(r10)
   4d204:	0027883a 	mov	r19,zero
   4d208:	4801a00e 	bge	r9,zero,4d88c <___vfiprintf_internal_r+0x1038>
   4d20c:	d8802215 	stw	r2,136(sp)
   4d210:	0039883a 	mov	fp,zero
   4d214:	94c4b03a 	or	r2,r18,r19
   4d218:	103f901e 	bne	r2,zero,4d05c <__alt_data_end+0xfffcd05c>
   4d21c:	00800044 	movi	r2,1
   4d220:	10803fcc 	andi	r2,r2,255
   4d224:	00c00044 	movi	r3,1
   4d228:	10c05926 	beq	r2,r3,4d390 <___vfiprintf_internal_r+0xb3c>
   4d22c:	00c00084 	movi	r3,2
   4d230:	10ffe41e 	bne	r2,r3,4d1c4 <__alt_data_end+0xfffcd1c4>
   4d234:	0025883a 	mov	r18,zero
   4d238:	0027883a 	mov	r19,zero
   4d23c:	00013d06 	br	4d734 <___vfiprintf_internal_r+0xee0>
   4d240:	21003fcc 	andi	r4,r4,255
   4d244:	2002811e 	bne	r4,zero,4dc4c <___vfiprintf_internal_r+0x13f8>
   4d248:	00800174 	movhi	r2,5
   4d24c:	108a2f04 	addi	r2,r2,10428
   4d250:	d8802615 	stw	r2,152(sp)
   4d254:	a080080c 	andi	r2,r20,32
   4d258:	103f561e 	bne	r2,zero,4cfb4 <__alt_data_end+0xfffccfb4>
   4d25c:	a080040c 	andi	r2,r20,16
   4d260:	1001d126 	beq	r2,zero,4d9a8 <___vfiprintf_internal_r+0x1154>
   4d264:	da802217 	ldw	r10,136(sp)
   4d268:	0027883a 	mov	r19,zero
   4d26c:	54800017 	ldw	r18,0(r10)
   4d270:	52800104 	addi	r10,r10,4
   4d274:	da802215 	stw	r10,136(sp)
   4d278:	003f5306 	br	4cfc8 <__alt_data_end+0xfffccfc8>
   4d27c:	da802217 	ldw	r10,136(sp)
   4d280:	d8001d85 	stb	zero,118(sp)
   4d284:	55400017 	ldw	r21,0(r10)
   4d288:	50c00104 	addi	r3,r10,4
   4d28c:	a8024226 	beq	r21,zero,4db98 <___vfiprintf_internal_r+0x1344>
   4d290:	48021816 	blt	r9,zero,4daf4 <___vfiprintf_internal_r+0x12a0>
   4d294:	480d883a 	mov	r6,r9
   4d298:	000b883a 	mov	r5,zero
   4d29c:	a809883a 	mov	r4,r21
   4d2a0:	d8c02a15 	stw	r3,168(sp)
   4d2a4:	da002b15 	stw	r8,172(sp)
   4d2a8:	da402c15 	stw	r9,176(sp)
   4d2ac:	004aa500 	call	4aa50 <memchr>
   4d2b0:	d8c02a17 	ldw	r3,168(sp)
   4d2b4:	da002b17 	ldw	r8,172(sp)
   4d2b8:	da402c17 	ldw	r9,176(sp)
   4d2bc:	10024826 	beq	r2,zero,4dbe0 <___vfiprintf_internal_r+0x138c>
   4d2c0:	1567c83a 	sub	r19,r2,r21
   4d2c4:	df001d83 	ldbu	fp,118(sp)
   4d2c8:	d8c02215 	stw	r3,136(sp)
   4d2cc:	0013883a 	mov	r9,zero
   4d2d0:	003e6006 	br	4cc54 <__alt_data_end+0xfffccc54>
   4d2d4:	21003fcc 	andi	r4,r4,255
   4d2d8:	203fc026 	beq	r4,zero,4d1dc <__alt_data_end+0xfffcd1dc>
   4d2dc:	d9c01d85 	stb	r7,118(sp)
   4d2e0:	003fbe06 	br	4d1dc <__alt_data_end+0xfffcd1dc>
   4d2e4:	da802217 	ldw	r10,136(sp)
   4d2e8:	54400017 	ldw	r17,0(r10)
   4d2ec:	50800104 	addi	r2,r10,4
   4d2f0:	883e3b16 	blt	r17,zero,4cbe0 <__alt_data_end+0xfffccbe0>
   4d2f4:	d8802215 	stw	r2,136(sp)
   4d2f8:	80c00007 	ldb	r3,0(r16)
   4d2fc:	003db406 	br	4c9d0 <__alt_data_end+0xfffcc9d0>
   4d300:	01000044 	movi	r4,1
   4d304:	01c00ac4 	movi	r7,43
   4d308:	80c00007 	ldb	r3,0(r16)
   4d30c:	003db006 	br	4c9d0 <__alt_data_end+0xfffcc9d0>
   4d310:	80c00007 	ldb	r3,0(r16)
   4d314:	82800044 	addi	r10,r16,1
   4d318:	1b423c26 	beq	r3,r13,4dc0c <___vfiprintf_internal_r+0x13b8>
   4d31c:	18bff404 	addi	r2,r3,-48
   4d320:	0013883a 	mov	r9,zero
   4d324:	30822b36 	bltu	r6,r2,4dbd4 <___vfiprintf_internal_r+0x1380>
   4d328:	50c00007 	ldb	r3,0(r10)
   4d32c:	4a4002a4 	muli	r9,r9,10
   4d330:	54000044 	addi	r16,r10,1
   4d334:	8015883a 	mov	r10,r16
   4d338:	4893883a 	add	r9,r9,r2
   4d33c:	18bff404 	addi	r2,r3,-48
   4d340:	30bff92e 	bgeu	r6,r2,4d328 <__alt_data_end+0xfffcd328>
   4d344:	483da30e 	bge	r9,zero,4c9d4 <__alt_data_end+0xfffcc9d4>
   4d348:	027fffc4 	movi	r9,-1
   4d34c:	003da106 	br	4c9d4 <__alt_data_end+0xfffcc9d4>
   4d350:	a5001014 	ori	r20,r20,64
   4d354:	80c00007 	ldb	r3,0(r16)
   4d358:	003d9d06 	br	4c9d0 <__alt_data_end+0xfffcc9d0>
   4d35c:	da802217 	ldw	r10,136(sp)
   4d360:	d8001d85 	stb	zero,118(sp)
   4d364:	50c00204 	addi	r3,r10,8
   4d368:	54800017 	ldw	r18,0(r10)
   4d36c:	54c00117 	ldw	r19,4(r10)
   4d370:	4801ca16 	blt	r9,zero,4da9c <___vfiprintf_internal_r+0x1248>
   4d374:	013fdfc4 	movi	r4,-129
   4d378:	94c4b03a 	or	r2,r18,r19
   4d37c:	d8c02215 	stw	r3,136(sp)
   4d380:	a128703a 	and	r20,r20,r4
   4d384:	0039883a 	mov	fp,zero
   4d388:	103f341e 	bne	r2,zero,4d05c <__alt_data_end+0xfffcd05c>
   4d38c:	483e2e26 	beq	r9,zero,4cc48 <__alt_data_end+0xfffccc48>
   4d390:	0025883a 	mov	r18,zero
   4d394:	94800c04 	addi	r18,r18,48
   4d398:	dc8019c5 	stb	r18,103(sp)
   4d39c:	dcc02717 	ldw	r19,156(sp)
   4d3a0:	dd4019c4 	addi	r21,sp,103
   4d3a4:	003e2b06 	br	4cc54 <__alt_data_end+0xfffccc54>
   4d3a8:	21003fcc 	andi	r4,r4,255
   4d3ac:	2002361e 	bne	r4,zero,4dc88 <___vfiprintf_internal_r+0x1434>
   4d3b0:	1801c126 	beq	r3,zero,4dab8 <___vfiprintf_internal_r+0x1264>
   4d3b4:	04800044 	movi	r18,1
   4d3b8:	d8c01005 	stb	r3,64(sp)
   4d3bc:	d8001d85 	stb	zero,118(sp)
   4d3c0:	9027883a 	mov	r19,r18
   4d3c4:	dd401004 	addi	r21,sp,64
   4d3c8:	003f1106 	br	4d010 <__alt_data_end+0xfffcd010>
   4d3cc:	d9402117 	ldw	r5,132(sp)
   4d3d0:	d9002017 	ldw	r4,128(sp)
   4d3d4:	d9801a04 	addi	r6,sp,104
   4d3d8:	d9c02b15 	stw	r7,172(sp)
   4d3dc:	dbc02a15 	stw	r15,168(sp)
   4d3e0:	004c7400 	call	4c740 <__sprint_r.part.0>
   4d3e4:	d9c02b17 	ldw	r7,172(sp)
   4d3e8:	dbc02a17 	ldw	r15,168(sp)
   4d3ec:	10006d1e 	bne	r2,zero,4d5a4 <___vfiprintf_internal_r+0xd50>
   4d3f0:	d9801b17 	ldw	r6,108(sp)
   4d3f4:	d8801c17 	ldw	r2,112(sp)
   4d3f8:	d811883a 	mov	r8,sp
   4d3fc:	31400044 	addi	r5,r6,1
   4d400:	003e3306 	br	4ccd0 <__alt_data_end+0xfffcccd0>
   4d404:	d9401b17 	ldw	r5,108(sp)
   4d408:	d8801c17 	ldw	r2,112(sp)
   4d40c:	29000044 	addi	r4,r5,1
   4d410:	d8c01d87 	ldb	r3,118(sp)
   4d414:	183e4d26 	beq	r3,zero,4cd4c <__alt_data_end+0xfffccd4c>
   4d418:	00c00044 	movi	r3,1
   4d41c:	d9401d84 	addi	r5,sp,118
   4d420:	10c5883a 	add	r2,r2,r3
   4d424:	41400015 	stw	r5,0(r8)
   4d428:	40c00115 	stw	r3,4(r8)
   4d42c:	d8801c15 	stw	r2,112(sp)
   4d430:	d9001b15 	stw	r4,108(sp)
   4d434:	014001c4 	movi	r5,7
   4d438:	2900a90e 	bge	r5,r4,4d6e0 <___vfiprintf_internal_r+0xe8c>
   4d43c:	1000da1e 	bne	r2,zero,4d7a8 <___vfiprintf_internal_r+0xf54>
   4d440:	7000ab1e 	bne	r14,zero,4d6f0 <___vfiprintf_internal_r+0xe9c>
   4d444:	000b883a 	mov	r5,zero
   4d448:	1809883a 	mov	r4,r3
   4d44c:	d811883a 	mov	r8,sp
   4d450:	00c02004 	movi	r3,128
   4d454:	e0fe4d26 	beq	fp,r3,4cd8c <__alt_data_end+0xfffccd8c>
   4d458:	4cf9c83a 	sub	fp,r9,r19
   4d45c:	073e7b0e 	bge	zero,fp,4ce4c <__alt_data_end+0xfffcce4c>
   4d460:	01c00404 	movi	r7,16
   4d464:	3f01900e 	bge	r7,fp,4daa8 <___vfiprintf_internal_r+0x1254>
   4d468:	00c00174 	movhi	r3,5
   4d46c:	18ca9504 	addi	r3,r3,10836
   4d470:	d8c02415 	stw	r3,144(sp)
   4d474:	034001c4 	movi	r13,7
   4d478:	00000506 	br	4d490 <___vfiprintf_internal_r+0xc3c>
   4d47c:	29000084 	addi	r4,r5,2
   4d480:	42000204 	addi	r8,r8,8
   4d484:	180b883a 	mov	r5,r3
   4d488:	e73ffc04 	addi	fp,fp,-16
   4d48c:	3f000d0e 	bge	r7,fp,4d4c4 <___vfiprintf_internal_r+0xc70>
   4d490:	10800404 	addi	r2,r2,16
   4d494:	28c00044 	addi	r3,r5,1
   4d498:	45c00015 	stw	r23,0(r8)
   4d49c:	41c00115 	stw	r7,4(r8)
   4d4a0:	d8801c15 	stw	r2,112(sp)
   4d4a4:	d8c01b15 	stw	r3,108(sp)
   4d4a8:	68fff40e 	bge	r13,r3,4d47c <__alt_data_end+0xfffcd47c>
   4d4ac:	1000101e 	bne	r2,zero,4d4f0 <___vfiprintf_internal_r+0xc9c>
   4d4b0:	e73ffc04 	addi	fp,fp,-16
   4d4b4:	01000044 	movi	r4,1
   4d4b8:	000b883a 	mov	r5,zero
   4d4bc:	d811883a 	mov	r8,sp
   4d4c0:	3f3ff316 	blt	r7,fp,4d490 <__alt_data_end+0xfffcd490>
   4d4c4:	da802417 	ldw	r10,144(sp)
   4d4c8:	1705883a 	add	r2,r2,fp
   4d4cc:	47000115 	stw	fp,4(r8)
   4d4d0:	42800015 	stw	r10,0(r8)
   4d4d4:	d8801c15 	stw	r2,112(sp)
   4d4d8:	d9001b15 	stw	r4,108(sp)
   4d4dc:	00c001c4 	movi	r3,7
   4d4e0:	19003616 	blt	r3,r4,4d5bc <___vfiprintf_internal_r+0xd68>
   4d4e4:	42000204 	addi	r8,r8,8
   4d4e8:	21000044 	addi	r4,r4,1
   4d4ec:	003e5706 	br	4ce4c <__alt_data_end+0xfffcce4c>
   4d4f0:	d9402117 	ldw	r5,132(sp)
   4d4f4:	d9002017 	ldw	r4,128(sp)
   4d4f8:	d9801a04 	addi	r6,sp,104
   4d4fc:	d9c02b15 	stw	r7,172(sp)
   4d500:	db402a15 	stw	r13,168(sp)
   4d504:	004c7400 	call	4c740 <__sprint_r.part.0>
   4d508:	d9c02b17 	ldw	r7,172(sp)
   4d50c:	db402a17 	ldw	r13,168(sp)
   4d510:	1000241e 	bne	r2,zero,4d5a4 <___vfiprintf_internal_r+0xd50>
   4d514:	d9401b17 	ldw	r5,108(sp)
   4d518:	d8801c17 	ldw	r2,112(sp)
   4d51c:	d811883a 	mov	r8,sp
   4d520:	29000044 	addi	r4,r5,1
   4d524:	003fd806 	br	4d488 <__alt_data_end+0xfffcd488>
   4d528:	d9401b17 	ldw	r5,108(sp)
   4d52c:	00c00174 	movhi	r3,5
   4d530:	18ca9904 	addi	r3,r3,10852
   4d534:	d8c02415 	stw	r3,144(sp)
   4d538:	29400044 	addi	r5,r5,1
   4d53c:	d8c02417 	ldw	r3,144(sp)
   4d540:	14c5883a 	add	r2,r2,r19
   4d544:	44c00115 	stw	r19,4(r8)
   4d548:	40c00015 	stw	r3,0(r8)
   4d54c:	d8801c15 	stw	r2,112(sp)
   4d550:	d9401b15 	stw	r5,108(sp)
   4d554:	00c001c4 	movi	r3,7
   4d558:	1940070e 	bge	r3,r5,4d578 <___vfiprintf_internal_r+0xd24>
   4d55c:	103e4826 	beq	r2,zero,4ce80 <__alt_data_end+0xfffcce80>
   4d560:	d9402117 	ldw	r5,132(sp)
   4d564:	d9002017 	ldw	r4,128(sp)
   4d568:	d9801a04 	addi	r6,sp,104
   4d56c:	004c7400 	call	4c740 <__sprint_r.part.0>
   4d570:	10000c1e 	bne	r2,zero,4d5a4 <___vfiprintf_internal_r+0xd50>
   4d574:	d8801c17 	ldw	r2,112(sp)
   4d578:	8c80010e 	bge	r17,r18,4d580 <___vfiprintf_internal_r+0xd2c>
   4d57c:	9023883a 	mov	r17,r18
   4d580:	da802317 	ldw	r10,140(sp)
   4d584:	5455883a 	add	r10,r10,r17
   4d588:	da802315 	stw	r10,140(sp)
   4d58c:	103e4126 	beq	r2,zero,4ce94 <__alt_data_end+0xfffcce94>
   4d590:	d9402117 	ldw	r5,132(sp)
   4d594:	d9002017 	ldw	r4,128(sp)
   4d598:	d9801a04 	addi	r6,sp,104
   4d59c:	004c7400 	call	4c740 <__sprint_r.part.0>
   4d5a0:	103e3c26 	beq	r2,zero,4ce94 <__alt_data_end+0xfffcce94>
   4d5a4:	dd002117 	ldw	r20,132(sp)
   4d5a8:	a080030b 	ldhu	r2,12(r20)
   4d5ac:	1080100c 	andi	r2,r2,64
   4d5b0:	1001231e 	bne	r2,zero,4da40 <___vfiprintf_internal_r+0x11ec>
   4d5b4:	d8802317 	ldw	r2,140(sp)
   4d5b8:	003d7b06 	br	4cba8 <__alt_data_end+0xfffccba8>
   4d5bc:	1000991e 	bne	r2,zero,4d824 <___vfiprintf_internal_r+0xfd0>
   4d5c0:	00c00044 	movi	r3,1
   4d5c4:	9805883a 	mov	r2,r19
   4d5c8:	dd400015 	stw	r21,0(sp)
   4d5cc:	dcc00115 	stw	r19,4(sp)
   4d5d0:	dcc01c15 	stw	r19,112(sp)
   4d5d4:	d8c01b15 	stw	r3,108(sp)
   4d5d8:	d811883a 	mov	r8,sp
   4d5dc:	42000204 	addi	r8,r8,8
   4d5e0:	a2c0010c 	andi	r11,r20,4
   4d5e4:	583fe426 	beq	r11,zero,4d578 <__alt_data_end+0xfffcd578>
   4d5e8:	8ca7c83a 	sub	r19,r17,r18
   4d5ec:	04ffe20e 	bge	zero,r19,4d578 <__alt_data_end+0xfffcd578>
   4d5f0:	01c00404 	movi	r7,16
   4d5f4:	3cffcc0e 	bge	r7,r19,4d528 <__alt_data_end+0xfffcd528>
   4d5f8:	02800174 	movhi	r10,5
   4d5fc:	528a9904 	addi	r10,r10,10852
   4d600:	d9001b17 	ldw	r4,108(sp)
   4d604:	da802415 	stw	r10,144(sp)
   4d608:	382b883a 	mov	r21,r7
   4d60c:	050001c4 	movi	r20,7
   4d610:	df002017 	ldw	fp,128(sp)
   4d614:	00000506 	br	4d62c <___vfiprintf_internal_r+0xdd8>
   4d618:	21400084 	addi	r5,r4,2
   4d61c:	42000204 	addi	r8,r8,8
   4d620:	1809883a 	mov	r4,r3
   4d624:	9cfffc04 	addi	r19,r19,-16
   4d628:	acffc40e 	bge	r21,r19,4d53c <__alt_data_end+0xfffcd53c>
   4d62c:	10800404 	addi	r2,r2,16
   4d630:	20c00044 	addi	r3,r4,1
   4d634:	45800015 	stw	r22,0(r8)
   4d638:	45400115 	stw	r21,4(r8)
   4d63c:	d8801c15 	stw	r2,112(sp)
   4d640:	d8c01b15 	stw	r3,108(sp)
   4d644:	a0fff40e 	bge	r20,r3,4d618 <__alt_data_end+0xfffcd618>
   4d648:	1000041e 	bne	r2,zero,4d65c <___vfiprintf_internal_r+0xe08>
   4d64c:	01400044 	movi	r5,1
   4d650:	0009883a 	mov	r4,zero
   4d654:	d811883a 	mov	r8,sp
   4d658:	003ff206 	br	4d624 <__alt_data_end+0xfffcd624>
   4d65c:	d9402117 	ldw	r5,132(sp)
   4d660:	d9801a04 	addi	r6,sp,104
   4d664:	e009883a 	mov	r4,fp
   4d668:	004c7400 	call	4c740 <__sprint_r.part.0>
   4d66c:	103fcd1e 	bne	r2,zero,4d5a4 <__alt_data_end+0xfffcd5a4>
   4d670:	d9001b17 	ldw	r4,108(sp)
   4d674:	d8801c17 	ldw	r2,112(sp)
   4d678:	d811883a 	mov	r8,sp
   4d67c:	21400044 	addi	r5,r4,1
   4d680:	003fe806 	br	4d624 <__alt_data_end+0xfffcd624>
   4d684:	d9402117 	ldw	r5,132(sp)
   4d688:	d9002017 	ldw	r4,128(sp)
   4d68c:	d9801a04 	addi	r6,sp,104
   4d690:	d9c02b15 	stw	r7,172(sp)
   4d694:	db402a15 	stw	r13,168(sp)
   4d698:	004c7400 	call	4c740 <__sprint_r.part.0>
   4d69c:	d9c02b17 	ldw	r7,172(sp)
   4d6a0:	db402a17 	ldw	r13,168(sp)
   4d6a4:	103fbf1e 	bne	r2,zero,4d5a4 <__alt_data_end+0xfffcd5a4>
   4d6a8:	d9401b17 	ldw	r5,108(sp)
   4d6ac:	d8801c17 	ldw	r2,112(sp)
   4d6b0:	d811883a 	mov	r8,sp
   4d6b4:	29800044 	addi	r6,r5,1
   4d6b8:	003dc406 	br	4cdcc <__alt_data_end+0xfffccdcc>
   4d6bc:	1000d21e 	bne	r2,zero,4da08 <___vfiprintf_internal_r+0x11b4>
   4d6c0:	d8c01d87 	ldb	r3,118(sp)
   4d6c4:	18009526 	beq	r3,zero,4d91c <___vfiprintf_internal_r+0x10c8>
   4d6c8:	00800044 	movi	r2,1
   4d6cc:	d8c01d84 	addi	r3,sp,118
   4d6d0:	1009883a 	mov	r4,r2
   4d6d4:	d8c00015 	stw	r3,0(sp)
   4d6d8:	d8800115 	stw	r2,4(sp)
   4d6dc:	d811883a 	mov	r8,sp
   4d6e0:	200b883a 	mov	r5,r4
   4d6e4:	42000204 	addi	r8,r8,8
   4d6e8:	21000044 	addi	r4,r4,1
   4d6ec:	003d9706 	br	4cd4c <__alt_data_end+0xfffccd4c>
   4d6f0:	d9001d04 	addi	r4,sp,116
   4d6f4:	00800084 	movi	r2,2
   4d6f8:	d9000015 	stw	r4,0(sp)
   4d6fc:	d8800115 	stw	r2,4(sp)
   4d700:	1809883a 	mov	r4,r3
   4d704:	d811883a 	mov	r8,sp
   4d708:	200b883a 	mov	r5,r4
   4d70c:	42000204 	addi	r8,r8,8
   4d710:	21000044 	addi	r4,r4,1
   4d714:	003f4e06 	br	4d450 <__alt_data_end+0xfffcd450>
   4d718:	d8001d85 	stb	zero,118(sp)
   4d71c:	48005016 	blt	r9,zero,4d860 <___vfiprintf_internal_r+0x100c>
   4d720:	00ffdfc4 	movi	r3,-129
   4d724:	94c4b03a 	or	r2,r18,r19
   4d728:	a0e8703a 	and	r20,r20,r3
   4d72c:	103d4426 	beq	r2,zero,4cc40 <__alt_data_end+0xfffccc40>
   4d730:	0039883a 	mov	fp,zero
   4d734:	d9002617 	ldw	r4,152(sp)
   4d738:	dd401a04 	addi	r21,sp,104
   4d73c:	908003cc 	andi	r2,r18,15
   4d740:	9806973a 	slli	r3,r19,28
   4d744:	2085883a 	add	r2,r4,r2
   4d748:	9024d13a 	srli	r18,r18,4
   4d74c:	10800003 	ldbu	r2,0(r2)
   4d750:	9826d13a 	srli	r19,r19,4
   4d754:	ad7fffc4 	addi	r21,r21,-1
   4d758:	1ca4b03a 	or	r18,r3,r18
   4d75c:	a8800005 	stb	r2,0(r21)
   4d760:	94c4b03a 	or	r2,r18,r19
   4d764:	103ff51e 	bne	r2,zero,4d73c <__alt_data_end+0xfffcd73c>
   4d768:	003e5906 	br	4d0d0 <__alt_data_end+0xfffcd0d0>
   4d76c:	d9402117 	ldw	r5,132(sp)
   4d770:	d9002017 	ldw	r4,128(sp)
   4d774:	d9801a04 	addi	r6,sp,104
   4d778:	004c7400 	call	4c740 <__sprint_r.part.0>
   4d77c:	103f891e 	bne	r2,zero,4d5a4 <__alt_data_end+0xfffcd5a4>
   4d780:	d8801c17 	ldw	r2,112(sp)
   4d784:	d811883a 	mov	r8,sp
   4d788:	003f9506 	br	4d5e0 <__alt_data_end+0xfffcd5e0>
   4d78c:	d9402117 	ldw	r5,132(sp)
   4d790:	d9002017 	ldw	r4,128(sp)
   4d794:	d9801a04 	addi	r6,sp,104
   4d798:	004c7400 	call	4c740 <__sprint_r.part.0>
   4d79c:	103f811e 	bne	r2,zero,4d5a4 <__alt_data_end+0xfffcd5a4>
   4d7a0:	d811883a 	mov	r8,sp
   4d7a4:	003ced06 	br	4cb5c <__alt_data_end+0xfffccb5c>
   4d7a8:	d9402117 	ldw	r5,132(sp)
   4d7ac:	d9002017 	ldw	r4,128(sp)
   4d7b0:	d9801a04 	addi	r6,sp,104
   4d7b4:	da402c15 	stw	r9,176(sp)
   4d7b8:	db802a15 	stw	r14,168(sp)
   4d7bc:	004c7400 	call	4c740 <__sprint_r.part.0>
   4d7c0:	da402c17 	ldw	r9,176(sp)
   4d7c4:	db802a17 	ldw	r14,168(sp)
   4d7c8:	103f761e 	bne	r2,zero,4d5a4 <__alt_data_end+0xfffcd5a4>
   4d7cc:	d9401b17 	ldw	r5,108(sp)
   4d7d0:	d8801c17 	ldw	r2,112(sp)
   4d7d4:	d811883a 	mov	r8,sp
   4d7d8:	29000044 	addi	r4,r5,1
   4d7dc:	003d5b06 	br	4cd4c <__alt_data_end+0xfffccd4c>
   4d7e0:	d9402117 	ldw	r5,132(sp)
   4d7e4:	d9002017 	ldw	r4,128(sp)
   4d7e8:	d9801a04 	addi	r6,sp,104
   4d7ec:	da402c15 	stw	r9,176(sp)
   4d7f0:	004c7400 	call	4c740 <__sprint_r.part.0>
   4d7f4:	da402c17 	ldw	r9,176(sp)
   4d7f8:	103f6a1e 	bne	r2,zero,4d5a4 <__alt_data_end+0xfffcd5a4>
   4d7fc:	d9401b17 	ldw	r5,108(sp)
   4d800:	d8801c17 	ldw	r2,112(sp)
   4d804:	d811883a 	mov	r8,sp
   4d808:	29000044 	addi	r4,r5,1
   4d80c:	003f1006 	br	4d450 <__alt_data_end+0xfffcd450>
   4d810:	1000c31e 	bne	r2,zero,4db20 <___vfiprintf_internal_r+0x12cc>
   4d814:	01000044 	movi	r4,1
   4d818:	000b883a 	mov	r5,zero
   4d81c:	d811883a 	mov	r8,sp
   4d820:	003f0d06 	br	4d458 <__alt_data_end+0xfffcd458>
   4d824:	d9402117 	ldw	r5,132(sp)
   4d828:	d9002017 	ldw	r4,128(sp)
   4d82c:	d9801a04 	addi	r6,sp,104
   4d830:	004c7400 	call	4c740 <__sprint_r.part.0>
   4d834:	103f5b1e 	bne	r2,zero,4d5a4 <__alt_data_end+0xfffcd5a4>
   4d838:	d9001b17 	ldw	r4,108(sp)
   4d83c:	d8801c17 	ldw	r2,112(sp)
   4d840:	d811883a 	mov	r8,sp
   4d844:	21000044 	addi	r4,r4,1
   4d848:	003d8006 	br	4ce4c <__alt_data_end+0xfffcce4c>
   4d84c:	01000174 	movhi	r4,5
   4d850:	210a3404 	addi	r4,r4,10448
   4d854:	d9002615 	stw	r4,152(sp)
   4d858:	d8c02215 	stw	r3,136(sp)
   4d85c:	1029883a 	mov	r20,r2
   4d860:	94c4b03a 	or	r2,r18,r19
   4d864:	103fb21e 	bne	r2,zero,4d730 <__alt_data_end+0xfffcd730>
   4d868:	0039883a 	mov	fp,zero
   4d86c:	00800084 	movi	r2,2
   4d870:	003e6b06 	br	4d220 <__alt_data_end+0xfffcd220>
   4d874:	da802217 	ldw	r10,136(sp)
   4d878:	d8001d85 	stb	zero,118(sp)
   4d87c:	0027883a 	mov	r19,zero
   4d880:	50800104 	addi	r2,r10,4
   4d884:	54800017 	ldw	r18,0(r10)
   4d888:	483e6016 	blt	r9,zero,4d20c <__alt_data_end+0xfffcd20c>
   4d88c:	00ffdfc4 	movi	r3,-129
   4d890:	d8802215 	stw	r2,136(sp)
   4d894:	a0e8703a 	and	r20,r20,r3
   4d898:	0039883a 	mov	fp,zero
   4d89c:	903ebb26 	beq	r18,zero,4d38c <__alt_data_end+0xfffcd38c>
   4d8a0:	00800244 	movi	r2,9
   4d8a4:	14bdee36 	bltu	r2,r18,4d060 <__alt_data_end+0xfffcd060>
   4d8a8:	003eba06 	br	4d394 <__alt_data_end+0xfffcd394>
   4d8ac:	00800c04 	movi	r2,48
   4d8b0:	d8c01d45 	stb	r3,117(sp)
   4d8b4:	d8801d05 	stb	r2,116(sp)
   4d8b8:	d8001d85 	stb	zero,118(sp)
   4d8bc:	a0c00094 	ori	r3,r20,2
   4d8c0:	4800a916 	blt	r9,zero,4db68 <___vfiprintf_internal_r+0x1314>
   4d8c4:	00bfdfc4 	movi	r2,-129
   4d8c8:	a096703a 	and	r11,r20,r2
   4d8cc:	5d000094 	ori	r20,r11,2
   4d8d0:	0039883a 	mov	fp,zero
   4d8d4:	003f9706 	br	4d734 <__alt_data_end+0xfffcd734>
   4d8d8:	8025883a 	mov	r18,r16
   4d8dc:	003c2e06 	br	4c998 <__alt_data_end+0xfffcc998>
   4d8e0:	00800174 	movhi	r2,5
   4d8e4:	108a3404 	addi	r2,r2,10448
   4d8e8:	0039883a 	mov	fp,zero
   4d8ec:	d8802615 	stw	r2,152(sp)
   4d8f0:	003f9006 	br	4d734 <__alt_data_end+0xfffcd734>
   4d8f4:	04a5c83a 	sub	r18,zero,r18
   4d8f8:	07000b44 	movi	fp,45
   4d8fc:	9004c03a 	cmpne	r2,r18,zero
   4d900:	04e7c83a 	sub	r19,zero,r19
   4d904:	df001d85 	stb	fp,118(sp)
   4d908:	98a7c83a 	sub	r19,r19,r2
   4d90c:	48009f16 	blt	r9,zero,4db8c <___vfiprintf_internal_r+0x1338>
   4d910:	00bfdfc4 	movi	r2,-129
   4d914:	a0a8703a 	and	r20,r20,r2
   4d918:	003dd006 	br	4d05c <__alt_data_end+0xfffcd05c>
   4d91c:	70004c26 	beq	r14,zero,4da50 <___vfiprintf_internal_r+0x11fc>
   4d920:	00800084 	movi	r2,2
   4d924:	d8c01d04 	addi	r3,sp,116
   4d928:	d8c00015 	stw	r3,0(sp)
   4d92c:	d8800115 	stw	r2,4(sp)
   4d930:	01000044 	movi	r4,1
   4d934:	d811883a 	mov	r8,sp
   4d938:	003f7306 	br	4d708 <__alt_data_end+0xfffcd708>
   4d93c:	a080100c 	andi	r2,r20,64
   4d940:	da802217 	ldw	r10,136(sp)
   4d944:	103e0626 	beq	r2,zero,4d160 <__alt_data_end+0xfffcd160>
   4d948:	5480000f 	ldh	r18,0(r10)
   4d94c:	52800104 	addi	r10,r10,4
   4d950:	da802215 	stw	r10,136(sp)
   4d954:	9027d7fa 	srai	r19,r18,31
   4d958:	9805883a 	mov	r2,r19
   4d95c:	003db806 	br	4d040 <__alt_data_end+0xfffcd040>
   4d960:	a080040c 	andi	r2,r20,16
   4d964:	1000091e 	bne	r2,zero,4d98c <___vfiprintf_internal_r+0x1138>
   4d968:	a2c0100c 	andi	r11,r20,64
   4d96c:	58000726 	beq	r11,zero,4d98c <___vfiprintf_internal_r+0x1138>
   4d970:	da802217 	ldw	r10,136(sp)
   4d974:	50800017 	ldw	r2,0(r10)
   4d978:	52800104 	addi	r10,r10,4
   4d97c:	da802215 	stw	r10,136(sp)
   4d980:	da802317 	ldw	r10,140(sp)
   4d984:	1280000d 	sth	r10,0(r2)
   4d988:	003be706 	br	4c928 <__alt_data_end+0xfffcc928>
   4d98c:	da802217 	ldw	r10,136(sp)
   4d990:	50800017 	ldw	r2,0(r10)
   4d994:	52800104 	addi	r10,r10,4
   4d998:	da802215 	stw	r10,136(sp)
   4d99c:	da802317 	ldw	r10,140(sp)
   4d9a0:	12800015 	stw	r10,0(r2)
   4d9a4:	003be006 	br	4c928 <__alt_data_end+0xfffcc928>
   4d9a8:	a080100c 	andi	r2,r20,64
   4d9ac:	da802217 	ldw	r10,136(sp)
   4d9b0:	10003026 	beq	r2,zero,4da74 <___vfiprintf_internal_r+0x1220>
   4d9b4:	5480000b 	ldhu	r18,0(r10)
   4d9b8:	52800104 	addi	r10,r10,4
   4d9bc:	0027883a 	mov	r19,zero
   4d9c0:	da802215 	stw	r10,136(sp)
   4d9c4:	003d8006 	br	4cfc8 <__alt_data_end+0xfffccfc8>
   4d9c8:	80c00007 	ldb	r3,0(r16)
   4d9cc:	003c0006 	br	4c9d0 <__alt_data_end+0xfffcc9d0>
   4d9d0:	a080100c 	andi	r2,r20,64
   4d9d4:	d8001d85 	stb	zero,118(sp)
   4d9d8:	da802217 	ldw	r10,136(sp)
   4d9dc:	1000201e 	bne	r2,zero,4da60 <___vfiprintf_internal_r+0x120c>
   4d9e0:	50800104 	addi	r2,r10,4
   4d9e4:	54800017 	ldw	r18,0(r10)
   4d9e8:	0027883a 	mov	r19,zero
   4d9ec:	483def0e 	bge	r9,zero,4d1ac <__alt_data_end+0xfffcd1ac>
   4d9f0:	94c6b03a 	or	r3,r18,r19
   4d9f4:	d8802215 	stw	r2,136(sp)
   4d9f8:	183d4e1e 	bne	r3,zero,4cf34 <__alt_data_end+0xfffccf34>
   4d9fc:	0039883a 	mov	fp,zero
   4da00:	0005883a 	mov	r2,zero
   4da04:	003e0606 	br	4d220 <__alt_data_end+0xfffcd220>
   4da08:	d9402117 	ldw	r5,132(sp)
   4da0c:	d9002017 	ldw	r4,128(sp)
   4da10:	d9801a04 	addi	r6,sp,104
   4da14:	da402c15 	stw	r9,176(sp)
   4da18:	db802a15 	stw	r14,168(sp)
   4da1c:	004c7400 	call	4c740 <__sprint_r.part.0>
   4da20:	da402c17 	ldw	r9,176(sp)
   4da24:	db802a17 	ldw	r14,168(sp)
   4da28:	103ede1e 	bne	r2,zero,4d5a4 <__alt_data_end+0xfffcd5a4>
   4da2c:	d9401b17 	ldw	r5,108(sp)
   4da30:	d8801c17 	ldw	r2,112(sp)
   4da34:	d811883a 	mov	r8,sp
   4da38:	29000044 	addi	r4,r5,1
   4da3c:	003e7406 	br	4d410 <__alt_data_end+0xfffcd410>
   4da40:	00bfffc4 	movi	r2,-1
   4da44:	003c5806 	br	4cba8 <__alt_data_end+0xfffccba8>
   4da48:	d811883a 	mov	r8,sp
   4da4c:	003ee806 	br	4d5f0 <__alt_data_end+0xfffcd5f0>
   4da50:	000b883a 	mov	r5,zero
   4da54:	01000044 	movi	r4,1
   4da58:	d811883a 	mov	r8,sp
   4da5c:	003e7c06 	br	4d450 <__alt_data_end+0xfffcd450>
   4da60:	50800104 	addi	r2,r10,4
   4da64:	5480000b 	ldhu	r18,0(r10)
   4da68:	0027883a 	mov	r19,zero
   4da6c:	483dcf0e 	bge	r9,zero,4d1ac <__alt_data_end+0xfffcd1ac>
   4da70:	003fdf06 	br	4d9f0 <__alt_data_end+0xfffcd9f0>
   4da74:	54800017 	ldw	r18,0(r10)
   4da78:	52800104 	addi	r10,r10,4
   4da7c:	0027883a 	mov	r19,zero
   4da80:	da802215 	stw	r10,136(sp)
   4da84:	003d5006 	br	4cfc8 <__alt_data_end+0xfffccfc8>
   4da88:	50800104 	addi	r2,r10,4
   4da8c:	5480000b 	ldhu	r18,0(r10)
   4da90:	0027883a 	mov	r19,zero
   4da94:	483f7d0e 	bge	r9,zero,4d88c <__alt_data_end+0xfffcd88c>
   4da98:	003ddc06 	br	4d20c <__alt_data_end+0xfffcd20c>
   4da9c:	d8c02215 	stw	r3,136(sp)
   4daa0:	0039883a 	mov	fp,zero
   4daa4:	003ddb06 	br	4d214 <__alt_data_end+0xfffcd214>
   4daa8:	02800174 	movhi	r10,5
   4daac:	528a9504 	addi	r10,r10,10836
   4dab0:	da802415 	stw	r10,144(sp)
   4dab4:	003e8306 	br	4d4c4 <__alt_data_end+0xfffcd4c4>
   4dab8:	d8801c17 	ldw	r2,112(sp)
   4dabc:	dd002117 	ldw	r20,132(sp)
   4dac0:	103eb926 	beq	r2,zero,4d5a8 <__alt_data_end+0xfffcd5a8>
   4dac4:	d9002017 	ldw	r4,128(sp)
   4dac8:	d9801a04 	addi	r6,sp,104
   4dacc:	a00b883a 	mov	r5,r20
   4dad0:	004c7400 	call	4c740 <__sprint_r.part.0>
   4dad4:	003eb406 	br	4d5a8 <__alt_data_end+0xfffcd5a8>
   4dad8:	80c00043 	ldbu	r3,1(r16)
   4dadc:	a5000814 	ori	r20,r20,32
   4dae0:	84000044 	addi	r16,r16,1
   4dae4:	18c03fcc 	andi	r3,r3,255
   4dae8:	18c0201c 	xori	r3,r3,128
   4daec:	18ffe004 	addi	r3,r3,-128
   4daf0:	003bb706 	br	4c9d0 <__alt_data_end+0xfffcc9d0>
   4daf4:	a809883a 	mov	r4,r21
   4daf8:	d8c02a15 	stw	r3,168(sp)
   4dafc:	da002b15 	stw	r8,172(sp)
   4db00:	00451a80 	call	451a8 <strlen>
   4db04:	d8c02a17 	ldw	r3,168(sp)
   4db08:	1027883a 	mov	r19,r2
   4db0c:	df001d83 	ldbu	fp,118(sp)
   4db10:	d8c02215 	stw	r3,136(sp)
   4db14:	0013883a 	mov	r9,zero
   4db18:	da002b17 	ldw	r8,172(sp)
   4db1c:	003c4d06 	br	4cc54 <__alt_data_end+0xfffccc54>
   4db20:	d9402117 	ldw	r5,132(sp)
   4db24:	d9002017 	ldw	r4,128(sp)
   4db28:	d9801a04 	addi	r6,sp,104
   4db2c:	da402c15 	stw	r9,176(sp)
   4db30:	004c7400 	call	4c740 <__sprint_r.part.0>
   4db34:	da402c17 	ldw	r9,176(sp)
   4db38:	103e9a1e 	bne	r2,zero,4d5a4 <__alt_data_end+0xfffcd5a4>
   4db3c:	d9401b17 	ldw	r5,108(sp)
   4db40:	d8801c17 	ldw	r2,112(sp)
   4db44:	d811883a 	mov	r8,sp
   4db48:	29000044 	addi	r4,r5,1
   4db4c:	003e4206 	br	4d458 <__alt_data_end+0xfffcd458>
   4db50:	d9401b17 	ldw	r5,108(sp)
   4db54:	01000174 	movhi	r4,5
   4db58:	210a9904 	addi	r4,r4,10852
   4db5c:	d9002415 	stw	r4,144(sp)
   4db60:	29400044 	addi	r5,r5,1
   4db64:	003c6d06 	br	4cd1c <__alt_data_end+0xfffccd1c>
   4db68:	0039883a 	mov	fp,zero
   4db6c:	00800084 	movi	r2,2
   4db70:	10803fcc 	andi	r2,r2,255
   4db74:	01000044 	movi	r4,1
   4db78:	11001e26 	beq	r2,r4,4dbf4 <___vfiprintf_internal_r+0x13a0>
   4db7c:	01000084 	movi	r4,2
   4db80:	11001e1e 	bne	r2,r4,4dbfc <___vfiprintf_internal_r+0x13a8>
   4db84:	1829883a 	mov	r20,r3
   4db88:	003eea06 	br	4d734 <__alt_data_end+0xfffcd734>
   4db8c:	a007883a 	mov	r3,r20
   4db90:	00800044 	movi	r2,1
   4db94:	003ff606 	br	4db70 <__alt_data_end+0xfffcdb70>
   4db98:	00800184 	movi	r2,6
   4db9c:	1240012e 	bgeu	r2,r9,4dba4 <___vfiprintf_internal_r+0x1350>
   4dba0:	1013883a 	mov	r9,r2
   4dba4:	4827883a 	mov	r19,r9
   4dba8:	4825883a 	mov	r18,r9
   4dbac:	48001516 	blt	r9,zero,4dc04 <___vfiprintf_internal_r+0x13b0>
   4dbb0:	05400174 	movhi	r21,5
   4dbb4:	d8c02215 	stw	r3,136(sp)
   4dbb8:	ad4a3904 	addi	r21,r21,10468
   4dbbc:	003d1406 	br	4d010 <__alt_data_end+0xfffcd010>
   4dbc0:	02800174 	movhi	r10,5
   4dbc4:	528a9504 	addi	r10,r10,10836
   4dbc8:	da802415 	stw	r10,144(sp)
   4dbcc:	200d883a 	mov	r6,r4
   4dbd0:	003c9106 	br	4ce18 <__alt_data_end+0xfffcce18>
   4dbd4:	5021883a 	mov	r16,r10
   4dbd8:	0013883a 	mov	r9,zero
   4dbdc:	003b7d06 	br	4c9d4 <__alt_data_end+0xfffcc9d4>
   4dbe0:	4827883a 	mov	r19,r9
   4dbe4:	df001d83 	ldbu	fp,118(sp)
   4dbe8:	d8c02215 	stw	r3,136(sp)
   4dbec:	0013883a 	mov	r9,zero
   4dbf0:	003c1806 	br	4cc54 <__alt_data_end+0xfffccc54>
   4dbf4:	1829883a 	mov	r20,r3
   4dbf8:	003d1806 	br	4d05c <__alt_data_end+0xfffcd05c>
   4dbfc:	1829883a 	mov	r20,r3
   4dc00:	003ccd06 	br	4cf38 <__alt_data_end+0xfffccf38>
   4dc04:	0025883a 	mov	r18,zero
   4dc08:	003fe906 	br	4dbb0 <__alt_data_end+0xfffcdbb0>
   4dc0c:	d8802217 	ldw	r2,136(sp)
   4dc10:	80c00043 	ldbu	r3,1(r16)
   4dc14:	5021883a 	mov	r16,r10
   4dc18:	12400017 	ldw	r9,0(r2)
   4dc1c:	10800104 	addi	r2,r2,4
   4dc20:	d8802215 	stw	r2,136(sp)
   4dc24:	483faf0e 	bge	r9,zero,4dae4 <__alt_data_end+0xfffcdae4>
   4dc28:	18c03fcc 	andi	r3,r3,255
   4dc2c:	18c0201c 	xori	r3,r3,128
   4dc30:	027fffc4 	movi	r9,-1
   4dc34:	18ffe004 	addi	r3,r3,-128
   4dc38:	003b6506 	br	4c9d0 <__alt_data_end+0xfffcc9d0>
   4dc3c:	d9c01d85 	stb	r7,118(sp)
   4dc40:	003ca006 	br	4cec4 <__alt_data_end+0xfffccec4>
   4dc44:	d9c01d85 	stb	r7,118(sp)
   4dc48:	003cad06 	br	4cf00 <__alt_data_end+0xfffccf00>
   4dc4c:	d9c01d85 	stb	r7,118(sp)
   4dc50:	003d7d06 	br	4d248 <__alt_data_end+0xfffcd248>
   4dc54:	d9c01d85 	stb	r7,118(sp)
   4dc58:	003d5f06 	br	4d1d8 <__alt_data_end+0xfffcd1d8>
   4dc5c:	a080004c 	andi	r2,r20,1
   4dc60:	0039883a 	mov	fp,zero
   4dc64:	10000526 	beq	r2,zero,4dc7c <___vfiprintf_internal_r+0x1428>
   4dc68:	00800c04 	movi	r2,48
   4dc6c:	d88019c5 	stb	r2,103(sp)
   4dc70:	dcc02717 	ldw	r19,156(sp)
   4dc74:	dd4019c4 	addi	r21,sp,103
   4dc78:	003bf606 	br	4cc54 <__alt_data_end+0xfffccc54>
   4dc7c:	0027883a 	mov	r19,zero
   4dc80:	dd401a04 	addi	r21,sp,104
   4dc84:	003bf306 	br	4cc54 <__alt_data_end+0xfffccc54>
   4dc88:	d9c01d85 	stb	r7,118(sp)
   4dc8c:	003dc806 	br	4d3b0 <__alt_data_end+0xfffcd3b0>
   4dc90:	d9c01d85 	stb	r7,118(sp)
   4dc94:	003d3a06 	br	4d180 <__alt_data_end+0xfffcd180>
   4dc98:	d9c01d85 	stb	r7,118(sp)
   4dc9c:	003d2a06 	br	4d148 <__alt_data_end+0xfffcd148>
   4dca0:	d9c01d85 	stb	r7,118(sp)
   4dca4:	003cde06 	br	4d020 <__alt_data_end+0xfffcd020>
   4dca8:	d9c01d85 	stb	r7,118(sp)
   4dcac:	003cbc06 	br	4cfa0 <__alt_data_end+0xfffccfa0>

0004dcb0 <__vfiprintf_internal>:
   4dcb0:	00800174 	movhi	r2,5
   4dcb4:	10915604 	addi	r2,r2,17752
   4dcb8:	300f883a 	mov	r7,r6
   4dcbc:	280d883a 	mov	r6,r5
   4dcc0:	200b883a 	mov	r5,r4
   4dcc4:	11000017 	ldw	r4,0(r2)
   4dcc8:	004c8541 	jmpi	4c854 <___vfiprintf_internal_r>

0004dccc <__sbprintf>:
   4dccc:	2880030b 	ldhu	r2,12(r5)
   4dcd0:	2ac01917 	ldw	r11,100(r5)
   4dcd4:	2a80038b 	ldhu	r10,14(r5)
   4dcd8:	2a400717 	ldw	r9,28(r5)
   4dcdc:	2a000917 	ldw	r8,36(r5)
   4dce0:	defee204 	addi	sp,sp,-1144
   4dce4:	00c10004 	movi	r3,1024
   4dce8:	dc011a15 	stw	r16,1128(sp)
   4dcec:	10bfff4c 	andi	r2,r2,65533
   4dcf0:	2821883a 	mov	r16,r5
   4dcf4:	d8cb883a 	add	r5,sp,r3
   4dcf8:	dc811c15 	stw	r18,1136(sp)
   4dcfc:	dc411b15 	stw	r17,1132(sp)
   4dd00:	dfc11d15 	stw	ra,1140(sp)
   4dd04:	2025883a 	mov	r18,r4
   4dd08:	d881030d 	sth	r2,1036(sp)
   4dd0c:	dac11915 	stw	r11,1124(sp)
   4dd10:	da81038d 	sth	r10,1038(sp)
   4dd14:	da410715 	stw	r9,1052(sp)
   4dd18:	da010915 	stw	r8,1060(sp)
   4dd1c:	dec10015 	stw	sp,1024(sp)
   4dd20:	dec10415 	stw	sp,1040(sp)
   4dd24:	d8c10215 	stw	r3,1032(sp)
   4dd28:	d8c10515 	stw	r3,1044(sp)
   4dd2c:	d8010615 	stw	zero,1048(sp)
   4dd30:	004c8540 	call	4c854 <___vfiprintf_internal_r>
   4dd34:	1023883a 	mov	r17,r2
   4dd38:	10000416 	blt	r2,zero,4dd4c <__sbprintf+0x80>
   4dd3c:	d9410004 	addi	r5,sp,1024
   4dd40:	9009883a 	mov	r4,r18
   4dd44:	00491080 	call	49108 <_fflush_r>
   4dd48:	10000d1e 	bne	r2,zero,4dd80 <__sbprintf+0xb4>
   4dd4c:	d881030b 	ldhu	r2,1036(sp)
   4dd50:	1080100c 	andi	r2,r2,64
   4dd54:	10000326 	beq	r2,zero,4dd64 <__sbprintf+0x98>
   4dd58:	8080030b 	ldhu	r2,12(r16)
   4dd5c:	10801014 	ori	r2,r2,64
   4dd60:	8080030d 	sth	r2,12(r16)
   4dd64:	8805883a 	mov	r2,r17
   4dd68:	dfc11d17 	ldw	ra,1140(sp)
   4dd6c:	dc811c17 	ldw	r18,1136(sp)
   4dd70:	dc411b17 	ldw	r17,1132(sp)
   4dd74:	dc011a17 	ldw	r16,1128(sp)
   4dd78:	dec11e04 	addi	sp,sp,1144
   4dd7c:	f800283a 	ret
   4dd80:	047fffc4 	movi	r17,-1
   4dd84:	003ff106 	br	4dd4c <__alt_data_end+0xfffcdd4c>

0004dd88 <_write_r>:
   4dd88:	defffd04 	addi	sp,sp,-12
   4dd8c:	2805883a 	mov	r2,r5
   4dd90:	dc000015 	stw	r16,0(sp)
   4dd94:	04000174 	movhi	r16,5
   4dd98:	dc400115 	stw	r17,4(sp)
   4dd9c:	300b883a 	mov	r5,r6
   4dda0:	84182c04 	addi	r16,r16,24752
   4dda4:	2023883a 	mov	r17,r4
   4dda8:	380d883a 	mov	r6,r7
   4ddac:	1009883a 	mov	r4,r2
   4ddb0:	dfc00215 	stw	ra,8(sp)
   4ddb4:	80000015 	stw	zero,0(r16)
   4ddb8:	005043c0 	call	5043c <write>
   4ddbc:	00ffffc4 	movi	r3,-1
   4ddc0:	10c00526 	beq	r2,r3,4ddd8 <_write_r+0x50>
   4ddc4:	dfc00217 	ldw	ra,8(sp)
   4ddc8:	dc400117 	ldw	r17,4(sp)
   4ddcc:	dc000017 	ldw	r16,0(sp)
   4ddd0:	dec00304 	addi	sp,sp,12
   4ddd4:	f800283a 	ret
   4ddd8:	80c00017 	ldw	r3,0(r16)
   4dddc:	183ff926 	beq	r3,zero,4ddc4 <__alt_data_end+0xfffcddc4>
   4dde0:	88c00015 	stw	r3,0(r17)
   4dde4:	003ff706 	br	4ddc4 <__alt_data_end+0xfffcddc4>

0004dde8 <_close_r>:
   4dde8:	defffd04 	addi	sp,sp,-12
   4ddec:	dc000015 	stw	r16,0(sp)
   4ddf0:	04000174 	movhi	r16,5
   4ddf4:	dc400115 	stw	r17,4(sp)
   4ddf8:	84182c04 	addi	r16,r16,24752
   4ddfc:	2023883a 	mov	r17,r4
   4de00:	2809883a 	mov	r4,r5
   4de04:	dfc00215 	stw	ra,8(sp)
   4de08:	80000015 	stw	zero,0(r16)
   4de0c:	004fc2c0 	call	4fc2c <close>
   4de10:	00ffffc4 	movi	r3,-1
   4de14:	10c00526 	beq	r2,r3,4de2c <_close_r+0x44>
   4de18:	dfc00217 	ldw	ra,8(sp)
   4de1c:	dc400117 	ldw	r17,4(sp)
   4de20:	dc000017 	ldw	r16,0(sp)
   4de24:	dec00304 	addi	sp,sp,12
   4de28:	f800283a 	ret
   4de2c:	80c00017 	ldw	r3,0(r16)
   4de30:	183ff926 	beq	r3,zero,4de18 <__alt_data_end+0xfffcde18>
   4de34:	88c00015 	stw	r3,0(r17)
   4de38:	003ff706 	br	4de18 <__alt_data_end+0xfffcde18>

0004de3c <_calloc_r>:
   4de3c:	298b383a 	mul	r5,r5,r6
   4de40:	defffe04 	addi	sp,sp,-8
   4de44:	dfc00115 	stw	ra,4(sp)
   4de48:	dc000015 	stw	r16,0(sp)
   4de4c:	004a2440 	call	4a244 <_malloc_r>
   4de50:	10002926 	beq	r2,zero,4def8 <_calloc_r+0xbc>
   4de54:	11bfff17 	ldw	r6,-4(r2)
   4de58:	1021883a 	mov	r16,r2
   4de5c:	00bfff04 	movi	r2,-4
   4de60:	308c703a 	and	r6,r6,r2
   4de64:	00c00904 	movi	r3,36
   4de68:	308d883a 	add	r6,r6,r2
   4de6c:	19801636 	bltu	r3,r6,4dec8 <_calloc_r+0x8c>
   4de70:	008004c4 	movi	r2,19
   4de74:	11800b2e 	bgeu	r2,r6,4dea4 <_calloc_r+0x68>
   4de78:	80000015 	stw	zero,0(r16)
   4de7c:	80000115 	stw	zero,4(r16)
   4de80:	008006c4 	movi	r2,27
   4de84:	11801a2e 	bgeu	r2,r6,4def0 <_calloc_r+0xb4>
   4de88:	80000215 	stw	zero,8(r16)
   4de8c:	80000315 	stw	zero,12(r16)
   4de90:	30c0151e 	bne	r6,r3,4dee8 <_calloc_r+0xac>
   4de94:	80000415 	stw	zero,16(r16)
   4de98:	80800604 	addi	r2,r16,24
   4de9c:	80000515 	stw	zero,20(r16)
   4dea0:	00000106 	br	4dea8 <_calloc_r+0x6c>
   4dea4:	8005883a 	mov	r2,r16
   4dea8:	10000015 	stw	zero,0(r2)
   4deac:	10000115 	stw	zero,4(r2)
   4deb0:	10000215 	stw	zero,8(r2)
   4deb4:	8005883a 	mov	r2,r16
   4deb8:	dfc00117 	ldw	ra,4(sp)
   4debc:	dc000017 	ldw	r16,0(sp)
   4dec0:	dec00204 	addi	sp,sp,8
   4dec4:	f800283a 	ret
   4dec8:	000b883a 	mov	r5,zero
   4decc:	8009883a 	mov	r4,r16
   4ded0:	004add80 	call	4add8 <memset>
   4ded4:	8005883a 	mov	r2,r16
   4ded8:	dfc00117 	ldw	ra,4(sp)
   4dedc:	dc000017 	ldw	r16,0(sp)
   4dee0:	dec00204 	addi	sp,sp,8
   4dee4:	f800283a 	ret
   4dee8:	80800404 	addi	r2,r16,16
   4deec:	003fee06 	br	4dea8 <__alt_data_end+0xfffcdea8>
   4def0:	80800204 	addi	r2,r16,8
   4def4:	003fec06 	br	4dea8 <__alt_data_end+0xfffcdea8>
   4def8:	0005883a 	mov	r2,zero
   4defc:	003fee06 	br	4deb8 <__alt_data_end+0xfffcdeb8>

0004df00 <_fclose_r>:
   4df00:	28003926 	beq	r5,zero,4dfe8 <_fclose_r+0xe8>
   4df04:	defffc04 	addi	sp,sp,-16
   4df08:	dc400115 	stw	r17,4(sp)
   4df0c:	dc000015 	stw	r16,0(sp)
   4df10:	dfc00315 	stw	ra,12(sp)
   4df14:	dc800215 	stw	r18,8(sp)
   4df18:	2023883a 	mov	r17,r4
   4df1c:	2821883a 	mov	r16,r5
   4df20:	20000226 	beq	r4,zero,4df2c <_fclose_r+0x2c>
   4df24:	20800e17 	ldw	r2,56(r4)
   4df28:	10002726 	beq	r2,zero,4dfc8 <_fclose_r+0xc8>
   4df2c:	8080030f 	ldh	r2,12(r16)
   4df30:	1000071e 	bne	r2,zero,4df50 <_fclose_r+0x50>
   4df34:	0005883a 	mov	r2,zero
   4df38:	dfc00317 	ldw	ra,12(sp)
   4df3c:	dc800217 	ldw	r18,8(sp)
   4df40:	dc400117 	ldw	r17,4(sp)
   4df44:	dc000017 	ldw	r16,0(sp)
   4df48:	dec00404 	addi	sp,sp,16
   4df4c:	f800283a 	ret
   4df50:	800b883a 	mov	r5,r16
   4df54:	8809883a 	mov	r4,r17
   4df58:	0048eec0 	call	48eec <__sflush_r>
   4df5c:	1025883a 	mov	r18,r2
   4df60:	80800b17 	ldw	r2,44(r16)
   4df64:	10000426 	beq	r2,zero,4df78 <_fclose_r+0x78>
   4df68:	81400717 	ldw	r5,28(r16)
   4df6c:	8809883a 	mov	r4,r17
   4df70:	103ee83a 	callr	r2
   4df74:	10001616 	blt	r2,zero,4dfd0 <_fclose_r+0xd0>
   4df78:	8080030b 	ldhu	r2,12(r16)
   4df7c:	1080200c 	andi	r2,r2,128
   4df80:	1000151e 	bne	r2,zero,4dfd8 <_fclose_r+0xd8>
   4df84:	81400c17 	ldw	r5,48(r16)
   4df88:	28000526 	beq	r5,zero,4dfa0 <_fclose_r+0xa0>
   4df8c:	80801004 	addi	r2,r16,64
   4df90:	28800226 	beq	r5,r2,4df9c <_fclose_r+0x9c>
   4df94:	8809883a 	mov	r4,r17
   4df98:	00496580 	call	49658 <_free_r>
   4df9c:	80000c15 	stw	zero,48(r16)
   4dfa0:	81401117 	ldw	r5,68(r16)
   4dfa4:	28000326 	beq	r5,zero,4dfb4 <_fclose_r+0xb4>
   4dfa8:	8809883a 	mov	r4,r17
   4dfac:	00496580 	call	49658 <_free_r>
   4dfb0:	80001115 	stw	zero,68(r16)
   4dfb4:	00494f40 	call	494f4 <__sfp_lock_acquire>
   4dfb8:	8000030d 	sth	zero,12(r16)
   4dfbc:	00494f80 	call	494f8 <__sfp_lock_release>
   4dfc0:	9005883a 	mov	r2,r18
   4dfc4:	003fdc06 	br	4df38 <__alt_data_end+0xfffcdf38>
   4dfc8:	00494e40 	call	494e4 <__sinit>
   4dfcc:	003fd706 	br	4df2c <__alt_data_end+0xfffcdf2c>
   4dfd0:	04bfffc4 	movi	r18,-1
   4dfd4:	003fe806 	br	4df78 <__alt_data_end+0xfffcdf78>
   4dfd8:	81400417 	ldw	r5,16(r16)
   4dfdc:	8809883a 	mov	r4,r17
   4dfe0:	00496580 	call	49658 <_free_r>
   4dfe4:	003fe706 	br	4df84 <__alt_data_end+0xfffcdf84>
   4dfe8:	0005883a 	mov	r2,zero
   4dfec:	f800283a 	ret

0004dff0 <fclose>:
   4dff0:	00800174 	movhi	r2,5
   4dff4:	10915604 	addi	r2,r2,17752
   4dff8:	200b883a 	mov	r5,r4
   4dffc:	11000017 	ldw	r4,0(r2)
   4e000:	004df001 	jmpi	4df00 <_fclose_r>

0004e004 <__fputwc>:
   4e004:	defff804 	addi	sp,sp,-32
   4e008:	dcc00415 	stw	r19,16(sp)
   4e00c:	dc800315 	stw	r18,12(sp)
   4e010:	dc000115 	stw	r16,4(sp)
   4e014:	dfc00715 	stw	ra,28(sp)
   4e018:	dd400615 	stw	r21,24(sp)
   4e01c:	dd000515 	stw	r20,20(sp)
   4e020:	dc400215 	stw	r17,8(sp)
   4e024:	2027883a 	mov	r19,r4
   4e028:	2825883a 	mov	r18,r5
   4e02c:	3021883a 	mov	r16,r6
   4e030:	004a0340 	call	4a034 <__locale_mb_cur_max>
   4e034:	00c00044 	movi	r3,1
   4e038:	10c03e26 	beq	r2,r3,4e134 <__fputwc+0x130>
   4e03c:	81c01704 	addi	r7,r16,92
   4e040:	900d883a 	mov	r6,r18
   4e044:	d80b883a 	mov	r5,sp
   4e048:	9809883a 	mov	r4,r19
   4e04c:	004e4d40 	call	4e4d4 <_wcrtomb_r>
   4e050:	1029883a 	mov	r20,r2
   4e054:	00bfffc4 	movi	r2,-1
   4e058:	a0802026 	beq	r20,r2,4e0dc <__fputwc+0xd8>
   4e05c:	d9400003 	ldbu	r5,0(sp)
   4e060:	a0001c26 	beq	r20,zero,4e0d4 <__fputwc+0xd0>
   4e064:	0023883a 	mov	r17,zero
   4e068:	05400284 	movi	r21,10
   4e06c:	00000906 	br	4e094 <__fputwc+0x90>
   4e070:	80800017 	ldw	r2,0(r16)
   4e074:	11400005 	stb	r5,0(r2)
   4e078:	80c00017 	ldw	r3,0(r16)
   4e07c:	18c00044 	addi	r3,r3,1
   4e080:	80c00015 	stw	r3,0(r16)
   4e084:	8c400044 	addi	r17,r17,1
   4e088:	dc45883a 	add	r2,sp,r17
   4e08c:	8d00112e 	bgeu	r17,r20,4e0d4 <__fputwc+0xd0>
   4e090:	11400003 	ldbu	r5,0(r2)
   4e094:	80c00217 	ldw	r3,8(r16)
   4e098:	18ffffc4 	addi	r3,r3,-1
   4e09c:	80c00215 	stw	r3,8(r16)
   4e0a0:	183ff30e 	bge	r3,zero,4e070 <__alt_data_end+0xfffce070>
   4e0a4:	80800617 	ldw	r2,24(r16)
   4e0a8:	18801916 	blt	r3,r2,4e110 <__fputwc+0x10c>
   4e0ac:	80800017 	ldw	r2,0(r16)
   4e0b0:	11400005 	stb	r5,0(r2)
   4e0b4:	80800017 	ldw	r2,0(r16)
   4e0b8:	10c00003 	ldbu	r3,0(r2)
   4e0bc:	10800044 	addi	r2,r2,1
   4e0c0:	1d402326 	beq	r3,r21,4e150 <__fputwc+0x14c>
   4e0c4:	80800015 	stw	r2,0(r16)
   4e0c8:	8c400044 	addi	r17,r17,1
   4e0cc:	dc45883a 	add	r2,sp,r17
   4e0d0:	8d3fef36 	bltu	r17,r20,4e090 <__alt_data_end+0xfffce090>
   4e0d4:	9005883a 	mov	r2,r18
   4e0d8:	00000406 	br	4e0ec <__fputwc+0xe8>
   4e0dc:	80c0030b 	ldhu	r3,12(r16)
   4e0e0:	a005883a 	mov	r2,r20
   4e0e4:	18c01014 	ori	r3,r3,64
   4e0e8:	80c0030d 	sth	r3,12(r16)
   4e0ec:	dfc00717 	ldw	ra,28(sp)
   4e0f0:	dd400617 	ldw	r21,24(sp)
   4e0f4:	dd000517 	ldw	r20,20(sp)
   4e0f8:	dcc00417 	ldw	r19,16(sp)
   4e0fc:	dc800317 	ldw	r18,12(sp)
   4e100:	dc400217 	ldw	r17,8(sp)
   4e104:	dc000117 	ldw	r16,4(sp)
   4e108:	dec00804 	addi	sp,sp,32
   4e10c:	f800283a 	ret
   4e110:	800d883a 	mov	r6,r16
   4e114:	29403fcc 	andi	r5,r5,255
   4e118:	9809883a 	mov	r4,r19
   4e11c:	004e37c0 	call	4e37c <__swbuf_r>
   4e120:	10bfffe0 	cmpeqi	r2,r2,-1
   4e124:	10803fcc 	andi	r2,r2,255
   4e128:	103fd626 	beq	r2,zero,4e084 <__alt_data_end+0xfffce084>
   4e12c:	00bfffc4 	movi	r2,-1
   4e130:	003fee06 	br	4e0ec <__alt_data_end+0xfffce0ec>
   4e134:	90ffffc4 	addi	r3,r18,-1
   4e138:	01003f84 	movi	r4,254
   4e13c:	20ffbf36 	bltu	r4,r3,4e03c <__alt_data_end+0xfffce03c>
   4e140:	900b883a 	mov	r5,r18
   4e144:	dc800005 	stb	r18,0(sp)
   4e148:	1029883a 	mov	r20,r2
   4e14c:	003fc506 	br	4e064 <__alt_data_end+0xfffce064>
   4e150:	800d883a 	mov	r6,r16
   4e154:	a80b883a 	mov	r5,r21
   4e158:	9809883a 	mov	r4,r19
   4e15c:	004e37c0 	call	4e37c <__swbuf_r>
   4e160:	10bfffe0 	cmpeqi	r2,r2,-1
   4e164:	003fef06 	br	4e124 <__alt_data_end+0xfffce124>

0004e168 <_fputwc_r>:
   4e168:	3080030b 	ldhu	r2,12(r6)
   4e16c:	10c8000c 	andi	r3,r2,8192
   4e170:	1800051e 	bne	r3,zero,4e188 <_fputwc_r+0x20>
   4e174:	30c01917 	ldw	r3,100(r6)
   4e178:	10880014 	ori	r2,r2,8192
   4e17c:	3080030d 	sth	r2,12(r6)
   4e180:	18880014 	ori	r2,r3,8192
   4e184:	30801915 	stw	r2,100(r6)
   4e188:	004e0041 	jmpi	4e004 <__fputwc>

0004e18c <fputwc>:
   4e18c:	00800174 	movhi	r2,5
   4e190:	defffc04 	addi	sp,sp,-16
   4e194:	10915604 	addi	r2,r2,17752
   4e198:	dc000115 	stw	r16,4(sp)
   4e19c:	14000017 	ldw	r16,0(r2)
   4e1a0:	dc400215 	stw	r17,8(sp)
   4e1a4:	dfc00315 	stw	ra,12(sp)
   4e1a8:	2023883a 	mov	r17,r4
   4e1ac:	80000226 	beq	r16,zero,4e1b8 <fputwc+0x2c>
   4e1b0:	80800e17 	ldw	r2,56(r16)
   4e1b4:	10001026 	beq	r2,zero,4e1f8 <fputwc+0x6c>
   4e1b8:	2880030b 	ldhu	r2,12(r5)
   4e1bc:	10c8000c 	andi	r3,r2,8192
   4e1c0:	1800051e 	bne	r3,zero,4e1d8 <fputwc+0x4c>
   4e1c4:	28c01917 	ldw	r3,100(r5)
   4e1c8:	10880014 	ori	r2,r2,8192
   4e1cc:	2880030d 	sth	r2,12(r5)
   4e1d0:	18880014 	ori	r2,r3,8192
   4e1d4:	28801915 	stw	r2,100(r5)
   4e1d8:	280d883a 	mov	r6,r5
   4e1dc:	8009883a 	mov	r4,r16
   4e1e0:	880b883a 	mov	r5,r17
   4e1e4:	dfc00317 	ldw	ra,12(sp)
   4e1e8:	dc400217 	ldw	r17,8(sp)
   4e1ec:	dc000117 	ldw	r16,4(sp)
   4e1f0:	dec00404 	addi	sp,sp,16
   4e1f4:	004e0041 	jmpi	4e004 <__fputwc>
   4e1f8:	8009883a 	mov	r4,r16
   4e1fc:	d9400015 	stw	r5,0(sp)
   4e200:	00494e40 	call	494e4 <__sinit>
   4e204:	d9400017 	ldw	r5,0(sp)
   4e208:	003feb06 	br	4e1b8 <__alt_data_end+0xfffce1b8>

0004e20c <_fstat_r>:
   4e20c:	defffd04 	addi	sp,sp,-12
   4e210:	2805883a 	mov	r2,r5
   4e214:	dc000015 	stw	r16,0(sp)
   4e218:	04000174 	movhi	r16,5
   4e21c:	dc400115 	stw	r17,4(sp)
   4e220:	84182c04 	addi	r16,r16,24752
   4e224:	2023883a 	mov	r17,r4
   4e228:	300b883a 	mov	r5,r6
   4e22c:	1009883a 	mov	r4,r2
   4e230:	dfc00215 	stw	ra,8(sp)
   4e234:	80000015 	stw	zero,0(r16)
   4e238:	004fd640 	call	4fd64 <fstat>
   4e23c:	00ffffc4 	movi	r3,-1
   4e240:	10c00526 	beq	r2,r3,4e258 <_fstat_r+0x4c>
   4e244:	dfc00217 	ldw	ra,8(sp)
   4e248:	dc400117 	ldw	r17,4(sp)
   4e24c:	dc000017 	ldw	r16,0(sp)
   4e250:	dec00304 	addi	sp,sp,12
   4e254:	f800283a 	ret
   4e258:	80c00017 	ldw	r3,0(r16)
   4e25c:	183ff926 	beq	r3,zero,4e244 <__alt_data_end+0xfffce244>
   4e260:	88c00015 	stw	r3,0(r17)
   4e264:	003ff706 	br	4e244 <__alt_data_end+0xfffce244>

0004e268 <_isatty_r>:
   4e268:	defffd04 	addi	sp,sp,-12
   4e26c:	dc000015 	stw	r16,0(sp)
   4e270:	04000174 	movhi	r16,5
   4e274:	dc400115 	stw	r17,4(sp)
   4e278:	84182c04 	addi	r16,r16,24752
   4e27c:	2023883a 	mov	r17,r4
   4e280:	2809883a 	mov	r4,r5
   4e284:	dfc00215 	stw	ra,8(sp)
   4e288:	80000015 	stw	zero,0(r16)
   4e28c:	004fe500 	call	4fe50 <isatty>
   4e290:	00ffffc4 	movi	r3,-1
   4e294:	10c00526 	beq	r2,r3,4e2ac <_isatty_r+0x44>
   4e298:	dfc00217 	ldw	ra,8(sp)
   4e29c:	dc400117 	ldw	r17,4(sp)
   4e2a0:	dc000017 	ldw	r16,0(sp)
   4e2a4:	dec00304 	addi	sp,sp,12
   4e2a8:	f800283a 	ret
   4e2ac:	80c00017 	ldw	r3,0(r16)
   4e2b0:	183ff926 	beq	r3,zero,4e298 <__alt_data_end+0xfffce298>
   4e2b4:	88c00015 	stw	r3,0(r17)
   4e2b8:	003ff706 	br	4e298 <__alt_data_end+0xfffce298>

0004e2bc <_lseek_r>:
   4e2bc:	defffd04 	addi	sp,sp,-12
   4e2c0:	2805883a 	mov	r2,r5
   4e2c4:	dc000015 	stw	r16,0(sp)
   4e2c8:	04000174 	movhi	r16,5
   4e2cc:	dc400115 	stw	r17,4(sp)
   4e2d0:	300b883a 	mov	r5,r6
   4e2d4:	84182c04 	addi	r16,r16,24752
   4e2d8:	2023883a 	mov	r17,r4
   4e2dc:	380d883a 	mov	r6,r7
   4e2e0:	1009883a 	mov	r4,r2
   4e2e4:	dfc00215 	stw	ra,8(sp)
   4e2e8:	80000015 	stw	zero,0(r16)
   4e2ec:	005001c0 	call	5001c <lseek>
   4e2f0:	00ffffc4 	movi	r3,-1
   4e2f4:	10c00526 	beq	r2,r3,4e30c <_lseek_r+0x50>
   4e2f8:	dfc00217 	ldw	ra,8(sp)
   4e2fc:	dc400117 	ldw	r17,4(sp)
   4e300:	dc000017 	ldw	r16,0(sp)
   4e304:	dec00304 	addi	sp,sp,12
   4e308:	f800283a 	ret
   4e30c:	80c00017 	ldw	r3,0(r16)
   4e310:	183ff926 	beq	r3,zero,4e2f8 <__alt_data_end+0xfffce2f8>
   4e314:	88c00015 	stw	r3,0(r17)
   4e318:	003ff706 	br	4e2f8 <__alt_data_end+0xfffce2f8>

0004e31c <_read_r>:
   4e31c:	defffd04 	addi	sp,sp,-12
   4e320:	2805883a 	mov	r2,r5
   4e324:	dc000015 	stw	r16,0(sp)
   4e328:	04000174 	movhi	r16,5
   4e32c:	dc400115 	stw	r17,4(sp)
   4e330:	300b883a 	mov	r5,r6
   4e334:	84182c04 	addi	r16,r16,24752
   4e338:	2023883a 	mov	r17,r4
   4e33c:	380d883a 	mov	r6,r7
   4e340:	1009883a 	mov	r4,r2
   4e344:	dfc00215 	stw	ra,8(sp)
   4e348:	80000015 	stw	zero,0(r16)
   4e34c:	00501f00 	call	501f0 <read>
   4e350:	00ffffc4 	movi	r3,-1
   4e354:	10c00526 	beq	r2,r3,4e36c <_read_r+0x50>
   4e358:	dfc00217 	ldw	ra,8(sp)
   4e35c:	dc400117 	ldw	r17,4(sp)
   4e360:	dc000017 	ldw	r16,0(sp)
   4e364:	dec00304 	addi	sp,sp,12
   4e368:	f800283a 	ret
   4e36c:	80c00017 	ldw	r3,0(r16)
   4e370:	183ff926 	beq	r3,zero,4e358 <__alt_data_end+0xfffce358>
   4e374:	88c00015 	stw	r3,0(r17)
   4e378:	003ff706 	br	4e358 <__alt_data_end+0xfffce358>

0004e37c <__swbuf_r>:
   4e37c:	defffb04 	addi	sp,sp,-20
   4e380:	dcc00315 	stw	r19,12(sp)
   4e384:	dc800215 	stw	r18,8(sp)
   4e388:	dc000015 	stw	r16,0(sp)
   4e38c:	dfc00415 	stw	ra,16(sp)
   4e390:	dc400115 	stw	r17,4(sp)
   4e394:	2025883a 	mov	r18,r4
   4e398:	2827883a 	mov	r19,r5
   4e39c:	3021883a 	mov	r16,r6
   4e3a0:	20000226 	beq	r4,zero,4e3ac <__swbuf_r+0x30>
   4e3a4:	20800e17 	ldw	r2,56(r4)
   4e3a8:	10004226 	beq	r2,zero,4e4b4 <__swbuf_r+0x138>
   4e3ac:	80800617 	ldw	r2,24(r16)
   4e3b0:	8100030b 	ldhu	r4,12(r16)
   4e3b4:	80800215 	stw	r2,8(r16)
   4e3b8:	2080020c 	andi	r2,r4,8
   4e3bc:	10003626 	beq	r2,zero,4e498 <__swbuf_r+0x11c>
   4e3c0:	80c00417 	ldw	r3,16(r16)
   4e3c4:	18003426 	beq	r3,zero,4e498 <__swbuf_r+0x11c>
   4e3c8:	2088000c 	andi	r2,r4,8192
   4e3cc:	9c403fcc 	andi	r17,r19,255
   4e3d0:	10001a26 	beq	r2,zero,4e43c <__swbuf_r+0xc0>
   4e3d4:	80800017 	ldw	r2,0(r16)
   4e3d8:	81000517 	ldw	r4,20(r16)
   4e3dc:	10c7c83a 	sub	r3,r2,r3
   4e3e0:	1900200e 	bge	r3,r4,4e464 <__swbuf_r+0xe8>
   4e3e4:	18c00044 	addi	r3,r3,1
   4e3e8:	81000217 	ldw	r4,8(r16)
   4e3ec:	11400044 	addi	r5,r2,1
   4e3f0:	81400015 	stw	r5,0(r16)
   4e3f4:	213fffc4 	addi	r4,r4,-1
   4e3f8:	81000215 	stw	r4,8(r16)
   4e3fc:	14c00005 	stb	r19,0(r2)
   4e400:	80800517 	ldw	r2,20(r16)
   4e404:	10c01e26 	beq	r2,r3,4e480 <__swbuf_r+0x104>
   4e408:	8080030b 	ldhu	r2,12(r16)
   4e40c:	1080004c 	andi	r2,r2,1
   4e410:	10000226 	beq	r2,zero,4e41c <__swbuf_r+0xa0>
   4e414:	00800284 	movi	r2,10
   4e418:	88801926 	beq	r17,r2,4e480 <__swbuf_r+0x104>
   4e41c:	8805883a 	mov	r2,r17
   4e420:	dfc00417 	ldw	ra,16(sp)
   4e424:	dcc00317 	ldw	r19,12(sp)
   4e428:	dc800217 	ldw	r18,8(sp)
   4e42c:	dc400117 	ldw	r17,4(sp)
   4e430:	dc000017 	ldw	r16,0(sp)
   4e434:	dec00504 	addi	sp,sp,20
   4e438:	f800283a 	ret
   4e43c:	81401917 	ldw	r5,100(r16)
   4e440:	00b7ffc4 	movi	r2,-8193
   4e444:	21080014 	ori	r4,r4,8192
   4e448:	2884703a 	and	r2,r5,r2
   4e44c:	80801915 	stw	r2,100(r16)
   4e450:	80800017 	ldw	r2,0(r16)
   4e454:	8100030d 	sth	r4,12(r16)
   4e458:	81000517 	ldw	r4,20(r16)
   4e45c:	10c7c83a 	sub	r3,r2,r3
   4e460:	193fe016 	blt	r3,r4,4e3e4 <__alt_data_end+0xfffce3e4>
   4e464:	800b883a 	mov	r5,r16
   4e468:	9009883a 	mov	r4,r18
   4e46c:	00491080 	call	49108 <_fflush_r>
   4e470:	1000071e 	bne	r2,zero,4e490 <__swbuf_r+0x114>
   4e474:	80800017 	ldw	r2,0(r16)
   4e478:	00c00044 	movi	r3,1
   4e47c:	003fda06 	br	4e3e8 <__alt_data_end+0xfffce3e8>
   4e480:	800b883a 	mov	r5,r16
   4e484:	9009883a 	mov	r4,r18
   4e488:	00491080 	call	49108 <_fflush_r>
   4e48c:	103fe326 	beq	r2,zero,4e41c <__alt_data_end+0xfffce41c>
   4e490:	00bfffc4 	movi	r2,-1
   4e494:	003fe206 	br	4e420 <__alt_data_end+0xfffce420>
   4e498:	800b883a 	mov	r5,r16
   4e49c:	9009883a 	mov	r4,r18
   4e4a0:	00475100 	call	47510 <__swsetup_r>
   4e4a4:	103ffa1e 	bne	r2,zero,4e490 <__alt_data_end+0xfffce490>
   4e4a8:	8100030b 	ldhu	r4,12(r16)
   4e4ac:	80c00417 	ldw	r3,16(r16)
   4e4b0:	003fc506 	br	4e3c8 <__alt_data_end+0xfffce3c8>
   4e4b4:	00494e40 	call	494e4 <__sinit>
   4e4b8:	003fbc06 	br	4e3ac <__alt_data_end+0xfffce3ac>

0004e4bc <__swbuf>:
   4e4bc:	00800174 	movhi	r2,5
   4e4c0:	10915604 	addi	r2,r2,17752
   4e4c4:	280d883a 	mov	r6,r5
   4e4c8:	200b883a 	mov	r5,r4
   4e4cc:	11000017 	ldw	r4,0(r2)
   4e4d0:	004e37c1 	jmpi	4e37c <__swbuf_r>

0004e4d4 <_wcrtomb_r>:
   4e4d4:	defff604 	addi	sp,sp,-40
   4e4d8:	00800174 	movhi	r2,5
   4e4dc:	dc800815 	stw	r18,32(sp)
   4e4e0:	dc400715 	stw	r17,28(sp)
   4e4e4:	dc000615 	stw	r16,24(sp)
   4e4e8:	10915a04 	addi	r2,r2,17768
   4e4ec:	dfc00915 	stw	ra,36(sp)
   4e4f0:	2021883a 	mov	r16,r4
   4e4f4:	3823883a 	mov	r17,r7
   4e4f8:	14800017 	ldw	r18,0(r2)
   4e4fc:	28001426 	beq	r5,zero,4e550 <_wcrtomb_r+0x7c>
   4e500:	d9400415 	stw	r5,16(sp)
   4e504:	d9800515 	stw	r6,20(sp)
   4e508:	004a0280 	call	4a028 <__locale_charset>
   4e50c:	d9800517 	ldw	r6,20(sp)
   4e510:	d9400417 	ldw	r5,16(sp)
   4e514:	100f883a 	mov	r7,r2
   4e518:	dc400015 	stw	r17,0(sp)
   4e51c:	8009883a 	mov	r4,r16
   4e520:	903ee83a 	callr	r18
   4e524:	00ffffc4 	movi	r3,-1
   4e528:	10c0031e 	bne	r2,r3,4e538 <_wcrtomb_r+0x64>
   4e52c:	88000015 	stw	zero,0(r17)
   4e530:	00c02284 	movi	r3,138
   4e534:	80c00015 	stw	r3,0(r16)
   4e538:	dfc00917 	ldw	ra,36(sp)
   4e53c:	dc800817 	ldw	r18,32(sp)
   4e540:	dc400717 	ldw	r17,28(sp)
   4e544:	dc000617 	ldw	r16,24(sp)
   4e548:	dec00a04 	addi	sp,sp,40
   4e54c:	f800283a 	ret
   4e550:	004a0280 	call	4a028 <__locale_charset>
   4e554:	100f883a 	mov	r7,r2
   4e558:	dc400015 	stw	r17,0(sp)
   4e55c:	000d883a 	mov	r6,zero
   4e560:	d9400104 	addi	r5,sp,4
   4e564:	8009883a 	mov	r4,r16
   4e568:	903ee83a 	callr	r18
   4e56c:	003fed06 	br	4e524 <__alt_data_end+0xfffce524>

0004e570 <wcrtomb>:
   4e570:	defff604 	addi	sp,sp,-40
   4e574:	00800174 	movhi	r2,5
   4e578:	dc800615 	stw	r18,24(sp)
   4e57c:	dc400515 	stw	r17,20(sp)
   4e580:	10915604 	addi	r2,r2,17752
   4e584:	dfc00915 	stw	ra,36(sp)
   4e588:	dd000815 	stw	r20,32(sp)
   4e58c:	dcc00715 	stw	r19,28(sp)
   4e590:	dc000415 	stw	r16,16(sp)
   4e594:	3025883a 	mov	r18,r6
   4e598:	14400017 	ldw	r17,0(r2)
   4e59c:	20001926 	beq	r4,zero,4e604 <wcrtomb+0x94>
   4e5a0:	00800174 	movhi	r2,5
   4e5a4:	10915a04 	addi	r2,r2,17768
   4e5a8:	15000017 	ldw	r20,0(r2)
   4e5ac:	2021883a 	mov	r16,r4
   4e5b0:	2827883a 	mov	r19,r5
   4e5b4:	004a0280 	call	4a028 <__locale_charset>
   4e5b8:	100f883a 	mov	r7,r2
   4e5bc:	dc800015 	stw	r18,0(sp)
   4e5c0:	980d883a 	mov	r6,r19
   4e5c4:	800b883a 	mov	r5,r16
   4e5c8:	8809883a 	mov	r4,r17
   4e5cc:	a03ee83a 	callr	r20
   4e5d0:	00ffffc4 	movi	r3,-1
   4e5d4:	10c0031e 	bne	r2,r3,4e5e4 <wcrtomb+0x74>
   4e5d8:	90000015 	stw	zero,0(r18)
   4e5dc:	00c02284 	movi	r3,138
   4e5e0:	88c00015 	stw	r3,0(r17)
   4e5e4:	dfc00917 	ldw	ra,36(sp)
   4e5e8:	dd000817 	ldw	r20,32(sp)
   4e5ec:	dcc00717 	ldw	r19,28(sp)
   4e5f0:	dc800617 	ldw	r18,24(sp)
   4e5f4:	dc400517 	ldw	r17,20(sp)
   4e5f8:	dc000417 	ldw	r16,16(sp)
   4e5fc:	dec00a04 	addi	sp,sp,40
   4e600:	f800283a 	ret
   4e604:	00800174 	movhi	r2,5
   4e608:	10915a04 	addi	r2,r2,17768
   4e60c:	14000017 	ldw	r16,0(r2)
   4e610:	004a0280 	call	4a028 <__locale_charset>
   4e614:	100f883a 	mov	r7,r2
   4e618:	dc800015 	stw	r18,0(sp)
   4e61c:	000d883a 	mov	r6,zero
   4e620:	d9400104 	addi	r5,sp,4
   4e624:	8809883a 	mov	r4,r17
   4e628:	803ee83a 	callr	r16
   4e62c:	003fe806 	br	4e5d0 <__alt_data_end+0xfffce5d0>

0004e630 <__ascii_wctomb>:
   4e630:	28000526 	beq	r5,zero,4e648 <__ascii_wctomb+0x18>
   4e634:	00803fc4 	movi	r2,255
   4e638:	11800536 	bltu	r2,r6,4e650 <__ascii_wctomb+0x20>
   4e63c:	29800005 	stb	r6,0(r5)
   4e640:	00800044 	movi	r2,1
   4e644:	f800283a 	ret
   4e648:	0005883a 	mov	r2,zero
   4e64c:	f800283a 	ret
   4e650:	00802284 	movi	r2,138
   4e654:	20800015 	stw	r2,0(r4)
   4e658:	00bfffc4 	movi	r2,-1
   4e65c:	f800283a 	ret

0004e660 <_wctomb_r>:
   4e660:	00800174 	movhi	r2,5
   4e664:	defff904 	addi	sp,sp,-28
   4e668:	10915a04 	addi	r2,r2,17768
   4e66c:	dfc00615 	stw	ra,24(sp)
   4e670:	dc400515 	stw	r17,20(sp)
   4e674:	dc000415 	stw	r16,16(sp)
   4e678:	3823883a 	mov	r17,r7
   4e67c:	14000017 	ldw	r16,0(r2)
   4e680:	d9000115 	stw	r4,4(sp)
   4e684:	d9400215 	stw	r5,8(sp)
   4e688:	d9800315 	stw	r6,12(sp)
   4e68c:	004a0280 	call	4a028 <__locale_charset>
   4e690:	d9800317 	ldw	r6,12(sp)
   4e694:	d9400217 	ldw	r5,8(sp)
   4e698:	d9000117 	ldw	r4,4(sp)
   4e69c:	100f883a 	mov	r7,r2
   4e6a0:	dc400015 	stw	r17,0(sp)
   4e6a4:	803ee83a 	callr	r16
   4e6a8:	dfc00617 	ldw	ra,24(sp)
   4e6ac:	dc400517 	ldw	r17,20(sp)
   4e6b0:	dc000417 	ldw	r16,16(sp)
   4e6b4:	dec00704 	addi	sp,sp,28
   4e6b8:	f800283a 	ret

0004e6bc <__udivdi3>:
   4e6bc:	defff504 	addi	sp,sp,-44
   4e6c0:	dcc00415 	stw	r19,16(sp)
   4e6c4:	dc000115 	stw	r16,4(sp)
   4e6c8:	dfc00a15 	stw	ra,40(sp)
   4e6cc:	df000915 	stw	fp,36(sp)
   4e6d0:	ddc00815 	stw	r23,32(sp)
   4e6d4:	dd800715 	stw	r22,28(sp)
   4e6d8:	dd400615 	stw	r21,24(sp)
   4e6dc:	dd000515 	stw	r20,20(sp)
   4e6e0:	dc800315 	stw	r18,12(sp)
   4e6e4:	dc400215 	stw	r17,8(sp)
   4e6e8:	2027883a 	mov	r19,r4
   4e6ec:	2821883a 	mov	r16,r5
   4e6f0:	3800411e 	bne	r7,zero,4e7f8 <__udivdi3+0x13c>
   4e6f4:	3023883a 	mov	r17,r6
   4e6f8:	2025883a 	mov	r18,r4
   4e6fc:	2980522e 	bgeu	r5,r6,4e848 <__udivdi3+0x18c>
   4e700:	00bfffd4 	movui	r2,65535
   4e704:	282d883a 	mov	r22,r5
   4e708:	1180a836 	bltu	r2,r6,4e9ac <__udivdi3+0x2f0>
   4e70c:	00803fc4 	movi	r2,255
   4e710:	1185803a 	cmpltu	r2,r2,r6
   4e714:	100490fa 	slli	r2,r2,3
   4e718:	3086d83a 	srl	r3,r6,r2
   4e71c:	01000174 	movhi	r4,5
   4e720:	2109ea04 	addi	r4,r4,10152
   4e724:	20c7883a 	add	r3,r4,r3
   4e728:	18c00003 	ldbu	r3,0(r3)
   4e72c:	1885883a 	add	r2,r3,r2
   4e730:	00c00804 	movi	r3,32
   4e734:	1887c83a 	sub	r3,r3,r2
   4e738:	18000526 	beq	r3,zero,4e750 <__udivdi3+0x94>
   4e73c:	80e0983a 	sll	r16,r16,r3
   4e740:	9884d83a 	srl	r2,r19,r2
   4e744:	30e2983a 	sll	r17,r6,r3
   4e748:	98e4983a 	sll	r18,r19,r3
   4e74c:	142cb03a 	or	r22,r2,r16
   4e750:	882ad43a 	srli	r21,r17,16
   4e754:	b009883a 	mov	r4,r22
   4e758:	8d3fffcc 	andi	r20,r17,65535
   4e75c:	a80b883a 	mov	r5,r21
   4e760:	00431740 	call	43174 <__umodsi3>
   4e764:	b009883a 	mov	r4,r22
   4e768:	a80b883a 	mov	r5,r21
   4e76c:	1027883a 	mov	r19,r2
   4e770:	00431100 	call	43110 <__udivsi3>
   4e774:	102d883a 	mov	r22,r2
   4e778:	9826943a 	slli	r19,r19,16
   4e77c:	9004d43a 	srli	r2,r18,16
   4e780:	a5a1383a 	mul	r16,r20,r22
   4e784:	14c4b03a 	or	r2,r2,r19
   4e788:	1400052e 	bgeu	r2,r16,4e7a0 <__udivdi3+0xe4>
   4e78c:	1445883a 	add	r2,r2,r17
   4e790:	b0ffffc4 	addi	r3,r22,-1
   4e794:	14400136 	bltu	r2,r17,4e79c <__udivdi3+0xe0>
   4e798:	14012336 	bltu	r2,r16,4ec28 <__udivdi3+0x56c>
   4e79c:	182d883a 	mov	r22,r3
   4e7a0:	1421c83a 	sub	r16,r2,r16
   4e7a4:	a80b883a 	mov	r5,r21
   4e7a8:	8009883a 	mov	r4,r16
   4e7ac:	00431740 	call	43174 <__umodsi3>
   4e7b0:	1027883a 	mov	r19,r2
   4e7b4:	a80b883a 	mov	r5,r21
   4e7b8:	8009883a 	mov	r4,r16
   4e7bc:	00431100 	call	43110 <__udivsi3>
   4e7c0:	9826943a 	slli	r19,r19,16
   4e7c4:	a0a9383a 	mul	r20,r20,r2
   4e7c8:	94bfffcc 	andi	r18,r18,65535
   4e7cc:	94e4b03a 	or	r18,r18,r19
   4e7d0:	9500052e 	bgeu	r18,r20,4e7e8 <__udivdi3+0x12c>
   4e7d4:	8ca5883a 	add	r18,r17,r18
   4e7d8:	10ffffc4 	addi	r3,r2,-1
   4e7dc:	9440f136 	bltu	r18,r17,4eba4 <__udivdi3+0x4e8>
   4e7e0:	9500f02e 	bgeu	r18,r20,4eba4 <__udivdi3+0x4e8>
   4e7e4:	10bfff84 	addi	r2,r2,-2
   4e7e8:	b00c943a 	slli	r6,r22,16
   4e7ec:	0007883a 	mov	r3,zero
   4e7f0:	3084b03a 	or	r2,r6,r2
   4e7f4:	00005906 	br	4e95c <__udivdi3+0x2a0>
   4e7f8:	29c05636 	bltu	r5,r7,4e954 <__udivdi3+0x298>
   4e7fc:	00bfffd4 	movui	r2,65535
   4e800:	11c0622e 	bgeu	r2,r7,4e98c <__udivdi3+0x2d0>
   4e804:	00804034 	movhi	r2,256
   4e808:	10bfffc4 	addi	r2,r2,-1
   4e80c:	11c0ee36 	bltu	r2,r7,4ebc8 <__udivdi3+0x50c>
   4e810:	00800404 	movi	r2,16
   4e814:	3886d83a 	srl	r3,r7,r2
   4e818:	01000174 	movhi	r4,5
   4e81c:	2109ea04 	addi	r4,r4,10152
   4e820:	20c7883a 	add	r3,r4,r3
   4e824:	18c00003 	ldbu	r3,0(r3)
   4e828:	05400804 	movi	r21,32
   4e82c:	1885883a 	add	r2,r3,r2
   4e830:	a8abc83a 	sub	r21,r21,r2
   4e834:	a800621e 	bne	r21,zero,4e9c0 <__udivdi3+0x304>
   4e838:	3c00e936 	bltu	r7,r16,4ebe0 <__udivdi3+0x524>
   4e83c:	9985403a 	cmpgeu	r2,r19,r6
   4e840:	0007883a 	mov	r3,zero
   4e844:	00004506 	br	4e95c <__udivdi3+0x2a0>
   4e848:	3000041e 	bne	r6,zero,4e85c <__udivdi3+0x1a0>
   4e84c:	000b883a 	mov	r5,zero
   4e850:	01000044 	movi	r4,1
   4e854:	00431100 	call	43110 <__udivsi3>
   4e858:	1023883a 	mov	r17,r2
   4e85c:	00bfffd4 	movui	r2,65535
   4e860:	14404e2e 	bgeu	r2,r17,4e99c <__udivdi3+0x2e0>
   4e864:	00804034 	movhi	r2,256
   4e868:	10bfffc4 	addi	r2,r2,-1
   4e86c:	1440d836 	bltu	r2,r17,4ebd0 <__udivdi3+0x514>
   4e870:	00800404 	movi	r2,16
   4e874:	8886d83a 	srl	r3,r17,r2
   4e878:	01000174 	movhi	r4,5
   4e87c:	2109ea04 	addi	r4,r4,10152
   4e880:	20c7883a 	add	r3,r4,r3
   4e884:	18c00003 	ldbu	r3,0(r3)
   4e888:	1885883a 	add	r2,r3,r2
   4e88c:	00c00804 	movi	r3,32
   4e890:	1887c83a 	sub	r3,r3,r2
   4e894:	18008f1e 	bne	r3,zero,4ead4 <__udivdi3+0x418>
   4e898:	882ad43a 	srli	r21,r17,16
   4e89c:	8461c83a 	sub	r16,r16,r17
   4e8a0:	8d3fffcc 	andi	r20,r17,65535
   4e8a4:	00c00044 	movi	r3,1
   4e8a8:	8009883a 	mov	r4,r16
   4e8ac:	a80b883a 	mov	r5,r21
   4e8b0:	d8c00015 	stw	r3,0(sp)
   4e8b4:	00431740 	call	43174 <__umodsi3>
   4e8b8:	8009883a 	mov	r4,r16
   4e8bc:	a80b883a 	mov	r5,r21
   4e8c0:	1027883a 	mov	r19,r2
   4e8c4:	00431100 	call	43110 <__udivsi3>
   4e8c8:	9826943a 	slli	r19,r19,16
   4e8cc:	9008d43a 	srli	r4,r18,16
   4e8d0:	1521383a 	mul	r16,r2,r20
   4e8d4:	102d883a 	mov	r22,r2
   4e8d8:	24c8b03a 	or	r4,r4,r19
   4e8dc:	d8c00017 	ldw	r3,0(sp)
   4e8e0:	2400052e 	bgeu	r4,r16,4e8f8 <__udivdi3+0x23c>
   4e8e4:	2449883a 	add	r4,r4,r17
   4e8e8:	b0bfffc4 	addi	r2,r22,-1
   4e8ec:	24400136 	bltu	r4,r17,4e8f4 <__udivdi3+0x238>
   4e8f0:	2400ca36 	bltu	r4,r16,4ec1c <__udivdi3+0x560>
   4e8f4:	102d883a 	mov	r22,r2
   4e8f8:	2421c83a 	sub	r16,r4,r16
   4e8fc:	a80b883a 	mov	r5,r21
   4e900:	8009883a 	mov	r4,r16
   4e904:	d8c00015 	stw	r3,0(sp)
   4e908:	00431740 	call	43174 <__umodsi3>
   4e90c:	1027883a 	mov	r19,r2
   4e910:	a80b883a 	mov	r5,r21
   4e914:	8009883a 	mov	r4,r16
   4e918:	00431100 	call	43110 <__udivsi3>
   4e91c:	9826943a 	slli	r19,r19,16
   4e920:	1529383a 	mul	r20,r2,r20
   4e924:	94bfffcc 	andi	r18,r18,65535
   4e928:	94e4b03a 	or	r18,r18,r19
   4e92c:	d8c00017 	ldw	r3,0(sp)
   4e930:	9500052e 	bgeu	r18,r20,4e948 <__udivdi3+0x28c>
   4e934:	8ca5883a 	add	r18,r17,r18
   4e938:	113fffc4 	addi	r4,r2,-1
   4e93c:	94409736 	bltu	r18,r17,4eb9c <__udivdi3+0x4e0>
   4e940:	9500962e 	bgeu	r18,r20,4eb9c <__udivdi3+0x4e0>
   4e944:	10bfff84 	addi	r2,r2,-2
   4e948:	b00c943a 	slli	r6,r22,16
   4e94c:	3084b03a 	or	r2,r6,r2
   4e950:	00000206 	br	4e95c <__udivdi3+0x2a0>
   4e954:	0007883a 	mov	r3,zero
   4e958:	0005883a 	mov	r2,zero
   4e95c:	dfc00a17 	ldw	ra,40(sp)
   4e960:	df000917 	ldw	fp,36(sp)
   4e964:	ddc00817 	ldw	r23,32(sp)
   4e968:	dd800717 	ldw	r22,28(sp)
   4e96c:	dd400617 	ldw	r21,24(sp)
   4e970:	dd000517 	ldw	r20,20(sp)
   4e974:	dcc00417 	ldw	r19,16(sp)
   4e978:	dc800317 	ldw	r18,12(sp)
   4e97c:	dc400217 	ldw	r17,8(sp)
   4e980:	dc000117 	ldw	r16,4(sp)
   4e984:	dec00b04 	addi	sp,sp,44
   4e988:	f800283a 	ret
   4e98c:	00803fc4 	movi	r2,255
   4e990:	11c5803a 	cmpltu	r2,r2,r7
   4e994:	100490fa 	slli	r2,r2,3
   4e998:	003f9e06 	br	4e814 <__alt_data_end+0xfffce814>
   4e99c:	00803fc4 	movi	r2,255
   4e9a0:	1445803a 	cmpltu	r2,r2,r17
   4e9a4:	100490fa 	slli	r2,r2,3
   4e9a8:	003fb206 	br	4e874 <__alt_data_end+0xfffce874>
   4e9ac:	00804034 	movhi	r2,256
   4e9b0:	10bfffc4 	addi	r2,r2,-1
   4e9b4:	11808836 	bltu	r2,r6,4ebd8 <__udivdi3+0x51c>
   4e9b8:	00800404 	movi	r2,16
   4e9bc:	003f5606 	br	4e718 <__alt_data_end+0xfffce718>
   4e9c0:	30aed83a 	srl	r23,r6,r2
   4e9c4:	3d4e983a 	sll	r7,r7,r21
   4e9c8:	80acd83a 	srl	r22,r16,r2
   4e9cc:	9884d83a 	srl	r2,r19,r2
   4e9d0:	3deeb03a 	or	r23,r7,r23
   4e9d4:	b824d43a 	srli	r18,r23,16
   4e9d8:	8560983a 	sll	r16,r16,r21
   4e9dc:	b009883a 	mov	r4,r22
   4e9e0:	900b883a 	mov	r5,r18
   4e9e4:	3568983a 	sll	r20,r6,r21
   4e9e8:	1420b03a 	or	r16,r2,r16
   4e9ec:	00431740 	call	43174 <__umodsi3>
   4e9f0:	b009883a 	mov	r4,r22
   4e9f4:	900b883a 	mov	r5,r18
   4e9f8:	1023883a 	mov	r17,r2
   4e9fc:	00431100 	call	43110 <__udivsi3>
   4ea00:	8808943a 	slli	r4,r17,16
   4ea04:	bf3fffcc 	andi	fp,r23,65535
   4ea08:	8006d43a 	srli	r3,r16,16
   4ea0c:	e0a3383a 	mul	r17,fp,r2
   4ea10:	100d883a 	mov	r6,r2
   4ea14:	1906b03a 	or	r3,r3,r4
   4ea18:	1c40042e 	bgeu	r3,r17,4ea2c <__udivdi3+0x370>
   4ea1c:	1dc7883a 	add	r3,r3,r23
   4ea20:	10bfffc4 	addi	r2,r2,-1
   4ea24:	1dc0752e 	bgeu	r3,r23,4ebfc <__udivdi3+0x540>
   4ea28:	100d883a 	mov	r6,r2
   4ea2c:	1c63c83a 	sub	r17,r3,r17
   4ea30:	900b883a 	mov	r5,r18
   4ea34:	8809883a 	mov	r4,r17
   4ea38:	d9800015 	stw	r6,0(sp)
   4ea3c:	00431740 	call	43174 <__umodsi3>
   4ea40:	102d883a 	mov	r22,r2
   4ea44:	8809883a 	mov	r4,r17
   4ea48:	900b883a 	mov	r5,r18
   4ea4c:	00431100 	call	43110 <__udivsi3>
   4ea50:	b02c943a 	slli	r22,r22,16
   4ea54:	e089383a 	mul	r4,fp,r2
   4ea58:	843fffcc 	andi	r16,r16,65535
   4ea5c:	85a0b03a 	or	r16,r16,r22
   4ea60:	d9800017 	ldw	r6,0(sp)
   4ea64:	8100042e 	bgeu	r16,r4,4ea78 <__udivdi3+0x3bc>
   4ea68:	85e1883a 	add	r16,r16,r23
   4ea6c:	10ffffc4 	addi	r3,r2,-1
   4ea70:	85c05e2e 	bgeu	r16,r23,4ebec <__udivdi3+0x530>
   4ea74:	1805883a 	mov	r2,r3
   4ea78:	300c943a 	slli	r6,r6,16
   4ea7c:	a17fffcc 	andi	r5,r20,65535
   4ea80:	a028d43a 	srli	r20,r20,16
   4ea84:	3084b03a 	or	r2,r6,r2
   4ea88:	10ffffcc 	andi	r3,r2,65535
   4ea8c:	100cd43a 	srli	r6,r2,16
   4ea90:	194f383a 	mul	r7,r3,r5
   4ea94:	1d07383a 	mul	r3,r3,r20
   4ea98:	314b383a 	mul	r5,r6,r5
   4ea9c:	3810d43a 	srli	r8,r7,16
   4eaa0:	8121c83a 	sub	r16,r16,r4
   4eaa4:	1947883a 	add	r3,r3,r5
   4eaa8:	40c7883a 	add	r3,r8,r3
   4eaac:	350d383a 	mul	r6,r6,r20
   4eab0:	1940022e 	bgeu	r3,r5,4eabc <__udivdi3+0x400>
   4eab4:	01000074 	movhi	r4,1
   4eab8:	310d883a 	add	r6,r6,r4
   4eabc:	1828d43a 	srli	r20,r3,16
   4eac0:	a18d883a 	add	r6,r20,r6
   4eac4:	81803e36 	bltu	r16,r6,4ebc0 <__udivdi3+0x504>
   4eac8:	81803826 	beq	r16,r6,4ebac <__udivdi3+0x4f0>
   4eacc:	0007883a 	mov	r3,zero
   4ead0:	003fa206 	br	4e95c <__alt_data_end+0xfffce95c>
   4ead4:	88e2983a 	sll	r17,r17,r3
   4ead8:	80a8d83a 	srl	r20,r16,r2
   4eadc:	80e0983a 	sll	r16,r16,r3
   4eae0:	882ad43a 	srli	r21,r17,16
   4eae4:	9884d83a 	srl	r2,r19,r2
   4eae8:	a009883a 	mov	r4,r20
   4eaec:	a80b883a 	mov	r5,r21
   4eaf0:	142eb03a 	or	r23,r2,r16
   4eaf4:	98e4983a 	sll	r18,r19,r3
   4eaf8:	00431740 	call	43174 <__umodsi3>
   4eafc:	a009883a 	mov	r4,r20
   4eb00:	a80b883a 	mov	r5,r21
   4eb04:	1021883a 	mov	r16,r2
   4eb08:	00431100 	call	43110 <__udivsi3>
   4eb0c:	1039883a 	mov	fp,r2
   4eb10:	8d3fffcc 	andi	r20,r17,65535
   4eb14:	8020943a 	slli	r16,r16,16
   4eb18:	b804d43a 	srli	r2,r23,16
   4eb1c:	a72d383a 	mul	r22,r20,fp
   4eb20:	1404b03a 	or	r2,r2,r16
   4eb24:	1580062e 	bgeu	r2,r22,4eb40 <__udivdi3+0x484>
   4eb28:	1445883a 	add	r2,r2,r17
   4eb2c:	e0ffffc4 	addi	r3,fp,-1
   4eb30:	14403836 	bltu	r2,r17,4ec14 <__udivdi3+0x558>
   4eb34:	1580372e 	bgeu	r2,r22,4ec14 <__udivdi3+0x558>
   4eb38:	e73fff84 	addi	fp,fp,-2
   4eb3c:	1445883a 	add	r2,r2,r17
   4eb40:	15adc83a 	sub	r22,r2,r22
   4eb44:	a80b883a 	mov	r5,r21
   4eb48:	b009883a 	mov	r4,r22
   4eb4c:	00431740 	call	43174 <__umodsi3>
   4eb50:	1027883a 	mov	r19,r2
   4eb54:	b009883a 	mov	r4,r22
   4eb58:	a80b883a 	mov	r5,r21
   4eb5c:	00431100 	call	43110 <__udivsi3>
   4eb60:	9826943a 	slli	r19,r19,16
   4eb64:	a0a1383a 	mul	r16,r20,r2
   4eb68:	b93fffcc 	andi	r4,r23,65535
   4eb6c:	24c8b03a 	or	r4,r4,r19
   4eb70:	2400062e 	bgeu	r4,r16,4eb8c <__udivdi3+0x4d0>
   4eb74:	2449883a 	add	r4,r4,r17
   4eb78:	10ffffc4 	addi	r3,r2,-1
   4eb7c:	24402336 	bltu	r4,r17,4ec0c <__udivdi3+0x550>
   4eb80:	2400222e 	bgeu	r4,r16,4ec0c <__udivdi3+0x550>
   4eb84:	10bfff84 	addi	r2,r2,-2
   4eb88:	2449883a 	add	r4,r4,r17
   4eb8c:	e038943a 	slli	fp,fp,16
   4eb90:	2421c83a 	sub	r16,r4,r16
   4eb94:	e086b03a 	or	r3,fp,r2
   4eb98:	003f4306 	br	4e8a8 <__alt_data_end+0xfffce8a8>
   4eb9c:	2005883a 	mov	r2,r4
   4eba0:	003f6906 	br	4e948 <__alt_data_end+0xfffce948>
   4eba4:	1805883a 	mov	r2,r3
   4eba8:	003f0f06 	br	4e7e8 <__alt_data_end+0xfffce7e8>
   4ebac:	1806943a 	slli	r3,r3,16
   4ebb0:	9d66983a 	sll	r19,r19,r21
   4ebb4:	39ffffcc 	andi	r7,r7,65535
   4ebb8:	19c7883a 	add	r3,r3,r7
   4ebbc:	98ffc32e 	bgeu	r19,r3,4eacc <__alt_data_end+0xfffceacc>
   4ebc0:	10bfffc4 	addi	r2,r2,-1
   4ebc4:	003fc106 	br	4eacc <__alt_data_end+0xfffceacc>
   4ebc8:	00800604 	movi	r2,24
   4ebcc:	003f1106 	br	4e814 <__alt_data_end+0xfffce814>
   4ebd0:	00800604 	movi	r2,24
   4ebd4:	003f2706 	br	4e874 <__alt_data_end+0xfffce874>
   4ebd8:	00800604 	movi	r2,24
   4ebdc:	003ece06 	br	4e718 <__alt_data_end+0xfffce718>
   4ebe0:	0007883a 	mov	r3,zero
   4ebe4:	00800044 	movi	r2,1
   4ebe8:	003f5c06 	br	4e95c <__alt_data_end+0xfffce95c>
   4ebec:	813fa12e 	bgeu	r16,r4,4ea74 <__alt_data_end+0xfffcea74>
   4ebf0:	10bfff84 	addi	r2,r2,-2
   4ebf4:	85e1883a 	add	r16,r16,r23
   4ebf8:	003f9f06 	br	4ea78 <__alt_data_end+0xfffcea78>
   4ebfc:	1c7f8a2e 	bgeu	r3,r17,4ea28 <__alt_data_end+0xfffcea28>
   4ec00:	31bfff84 	addi	r6,r6,-2
   4ec04:	1dc7883a 	add	r3,r3,r23
   4ec08:	003f8806 	br	4ea2c <__alt_data_end+0xfffcea2c>
   4ec0c:	1805883a 	mov	r2,r3
   4ec10:	003fde06 	br	4eb8c <__alt_data_end+0xfffceb8c>
   4ec14:	1839883a 	mov	fp,r3
   4ec18:	003fc906 	br	4eb40 <__alt_data_end+0xfffceb40>
   4ec1c:	b5bfff84 	addi	r22,r22,-2
   4ec20:	2449883a 	add	r4,r4,r17
   4ec24:	003f3406 	br	4e8f8 <__alt_data_end+0xfffce8f8>
   4ec28:	b5bfff84 	addi	r22,r22,-2
   4ec2c:	1445883a 	add	r2,r2,r17
   4ec30:	003edb06 	br	4e7a0 <__alt_data_end+0xfffce7a0>

0004ec34 <__umoddi3>:
   4ec34:	defff404 	addi	sp,sp,-48
   4ec38:	df000a15 	stw	fp,40(sp)
   4ec3c:	dc400315 	stw	r17,12(sp)
   4ec40:	dc000215 	stw	r16,8(sp)
   4ec44:	dfc00b15 	stw	ra,44(sp)
   4ec48:	ddc00915 	stw	r23,36(sp)
   4ec4c:	dd800815 	stw	r22,32(sp)
   4ec50:	dd400715 	stw	r21,28(sp)
   4ec54:	dd000615 	stw	r20,24(sp)
   4ec58:	dcc00515 	stw	r19,20(sp)
   4ec5c:	dc800415 	stw	r18,16(sp)
   4ec60:	2021883a 	mov	r16,r4
   4ec64:	2823883a 	mov	r17,r5
   4ec68:	2839883a 	mov	fp,r5
   4ec6c:	38003c1e 	bne	r7,zero,4ed60 <__umoddi3+0x12c>
   4ec70:	3027883a 	mov	r19,r6
   4ec74:	2029883a 	mov	r20,r4
   4ec78:	2980512e 	bgeu	r5,r6,4edc0 <__umoddi3+0x18c>
   4ec7c:	00bfffd4 	movui	r2,65535
   4ec80:	11809a36 	bltu	r2,r6,4eeec <__umoddi3+0x2b8>
   4ec84:	01003fc4 	movi	r4,255
   4ec88:	2189803a 	cmpltu	r4,r4,r6
   4ec8c:	200890fa 	slli	r4,r4,3
   4ec90:	3104d83a 	srl	r2,r6,r4
   4ec94:	00c00174 	movhi	r3,5
   4ec98:	18c9ea04 	addi	r3,r3,10152
   4ec9c:	1885883a 	add	r2,r3,r2
   4eca0:	10c00003 	ldbu	r3,0(r2)
   4eca4:	00800804 	movi	r2,32
   4eca8:	1909883a 	add	r4,r3,r4
   4ecac:	1125c83a 	sub	r18,r2,r4
   4ecb0:	90000526 	beq	r18,zero,4ecc8 <__umoddi3+0x94>
   4ecb4:	8ca2983a 	sll	r17,r17,r18
   4ecb8:	8108d83a 	srl	r4,r16,r4
   4ecbc:	34a6983a 	sll	r19,r6,r18
   4ecc0:	84a8983a 	sll	r20,r16,r18
   4ecc4:	2478b03a 	or	fp,r4,r17
   4ecc8:	982ed43a 	srli	r23,r19,16
   4eccc:	e009883a 	mov	r4,fp
   4ecd0:	9dbfffcc 	andi	r22,r19,65535
   4ecd4:	b80b883a 	mov	r5,r23
   4ecd8:	00431740 	call	43174 <__umodsi3>
   4ecdc:	e009883a 	mov	r4,fp
   4ece0:	b80b883a 	mov	r5,r23
   4ece4:	102b883a 	mov	r21,r2
   4ece8:	00431100 	call	43110 <__udivsi3>
   4ecec:	a806943a 	slli	r3,r21,16
   4ecf0:	a008d43a 	srli	r4,r20,16
   4ecf4:	b085383a 	mul	r2,r22,r2
   4ecf8:	20c8b03a 	or	r4,r4,r3
   4ecfc:	2080032e 	bgeu	r4,r2,4ed0c <__umoddi3+0xd8>
   4ed00:	24c9883a 	add	r4,r4,r19
   4ed04:	24c00136 	bltu	r4,r19,4ed0c <__umoddi3+0xd8>
   4ed08:	20811036 	bltu	r4,r2,4f14c <__umoddi3+0x518>
   4ed0c:	20abc83a 	sub	r21,r4,r2
   4ed10:	b80b883a 	mov	r5,r23
   4ed14:	a809883a 	mov	r4,r21
   4ed18:	00431740 	call	43174 <__umodsi3>
   4ed1c:	1023883a 	mov	r17,r2
   4ed20:	b80b883a 	mov	r5,r23
   4ed24:	a809883a 	mov	r4,r21
   4ed28:	00431100 	call	43110 <__udivsi3>
   4ed2c:	8822943a 	slli	r17,r17,16
   4ed30:	b085383a 	mul	r2,r22,r2
   4ed34:	a0ffffcc 	andi	r3,r20,65535
   4ed38:	1c46b03a 	or	r3,r3,r17
   4ed3c:	1880042e 	bgeu	r3,r2,4ed50 <__umoddi3+0x11c>
   4ed40:	1cc7883a 	add	r3,r3,r19
   4ed44:	1cc00236 	bltu	r3,r19,4ed50 <__umoddi3+0x11c>
   4ed48:	1880012e 	bgeu	r3,r2,4ed50 <__umoddi3+0x11c>
   4ed4c:	1cc7883a 	add	r3,r3,r19
   4ed50:	1885c83a 	sub	r2,r3,r2
   4ed54:	1484d83a 	srl	r2,r2,r18
   4ed58:	0007883a 	mov	r3,zero
   4ed5c:	00004f06 	br	4ee9c <__umoddi3+0x268>
   4ed60:	29c04c36 	bltu	r5,r7,4ee94 <__umoddi3+0x260>
   4ed64:	00bfffd4 	movui	r2,65535
   4ed68:	11c0582e 	bgeu	r2,r7,4eecc <__umoddi3+0x298>
   4ed6c:	00804034 	movhi	r2,256
   4ed70:	10bfffc4 	addi	r2,r2,-1
   4ed74:	11c0e736 	bltu	r2,r7,4f114 <__umoddi3+0x4e0>
   4ed78:	01000404 	movi	r4,16
   4ed7c:	3904d83a 	srl	r2,r7,r4
   4ed80:	00c00174 	movhi	r3,5
   4ed84:	18c9ea04 	addi	r3,r3,10152
   4ed88:	1885883a 	add	r2,r3,r2
   4ed8c:	14c00003 	ldbu	r19,0(r2)
   4ed90:	00c00804 	movi	r3,32
   4ed94:	9927883a 	add	r19,r19,r4
   4ed98:	1ce9c83a 	sub	r20,r3,r19
   4ed9c:	a000581e 	bne	r20,zero,4ef00 <__umoddi3+0x2cc>
   4eda0:	3c400136 	bltu	r7,r17,4eda8 <__umoddi3+0x174>
   4eda4:	8180eb36 	bltu	r16,r6,4f154 <__umoddi3+0x520>
   4eda8:	8185c83a 	sub	r2,r16,r6
   4edac:	89e3c83a 	sub	r17,r17,r7
   4edb0:	8089803a 	cmpltu	r4,r16,r2
   4edb4:	8939c83a 	sub	fp,r17,r4
   4edb8:	e007883a 	mov	r3,fp
   4edbc:	00003706 	br	4ee9c <__umoddi3+0x268>
   4edc0:	3000041e 	bne	r6,zero,4edd4 <__umoddi3+0x1a0>
   4edc4:	000b883a 	mov	r5,zero
   4edc8:	01000044 	movi	r4,1
   4edcc:	00431100 	call	43110 <__udivsi3>
   4edd0:	1027883a 	mov	r19,r2
   4edd4:	00bfffd4 	movui	r2,65535
   4edd8:	14c0402e 	bgeu	r2,r19,4eedc <__umoddi3+0x2a8>
   4eddc:	00804034 	movhi	r2,256
   4ede0:	10bfffc4 	addi	r2,r2,-1
   4ede4:	14c0cd36 	bltu	r2,r19,4f11c <__umoddi3+0x4e8>
   4ede8:	00800404 	movi	r2,16
   4edec:	9886d83a 	srl	r3,r19,r2
   4edf0:	01000174 	movhi	r4,5
   4edf4:	2109ea04 	addi	r4,r4,10152
   4edf8:	20c7883a 	add	r3,r4,r3
   4edfc:	18c00003 	ldbu	r3,0(r3)
   4ee00:	1887883a 	add	r3,r3,r2
   4ee04:	00800804 	movi	r2,32
   4ee08:	10e5c83a 	sub	r18,r2,r3
   4ee0c:	9000901e 	bne	r18,zero,4f050 <__umoddi3+0x41c>
   4ee10:	982cd43a 	srli	r22,r19,16
   4ee14:	8ce3c83a 	sub	r17,r17,r19
   4ee18:	9d7fffcc 	andi	r21,r19,65535
   4ee1c:	b00b883a 	mov	r5,r22
   4ee20:	8809883a 	mov	r4,r17
   4ee24:	00431740 	call	43174 <__umodsi3>
   4ee28:	8809883a 	mov	r4,r17
   4ee2c:	b00b883a 	mov	r5,r22
   4ee30:	1021883a 	mov	r16,r2
   4ee34:	00431100 	call	43110 <__udivsi3>
   4ee38:	8006943a 	slli	r3,r16,16
   4ee3c:	a008d43a 	srli	r4,r20,16
   4ee40:	1545383a 	mul	r2,r2,r21
   4ee44:	20c8b03a 	or	r4,r4,r3
   4ee48:	2080042e 	bgeu	r4,r2,4ee5c <__umoddi3+0x228>
   4ee4c:	24c9883a 	add	r4,r4,r19
   4ee50:	24c00236 	bltu	r4,r19,4ee5c <__umoddi3+0x228>
   4ee54:	2080012e 	bgeu	r4,r2,4ee5c <__umoddi3+0x228>
   4ee58:	24c9883a 	add	r4,r4,r19
   4ee5c:	20a1c83a 	sub	r16,r4,r2
   4ee60:	b00b883a 	mov	r5,r22
   4ee64:	8009883a 	mov	r4,r16
   4ee68:	00431740 	call	43174 <__umodsi3>
   4ee6c:	1023883a 	mov	r17,r2
   4ee70:	b00b883a 	mov	r5,r22
   4ee74:	8009883a 	mov	r4,r16
   4ee78:	00431100 	call	43110 <__udivsi3>
   4ee7c:	8822943a 	slli	r17,r17,16
   4ee80:	1545383a 	mul	r2,r2,r21
   4ee84:	a53fffcc 	andi	r20,r20,65535
   4ee88:	a446b03a 	or	r3,r20,r17
   4ee8c:	18bfb02e 	bgeu	r3,r2,4ed50 <__alt_data_end+0xfffced50>
   4ee90:	003fab06 	br	4ed40 <__alt_data_end+0xfffced40>
   4ee94:	2005883a 	mov	r2,r4
   4ee98:	2807883a 	mov	r3,r5
   4ee9c:	dfc00b17 	ldw	ra,44(sp)
   4eea0:	df000a17 	ldw	fp,40(sp)
   4eea4:	ddc00917 	ldw	r23,36(sp)
   4eea8:	dd800817 	ldw	r22,32(sp)
   4eeac:	dd400717 	ldw	r21,28(sp)
   4eeb0:	dd000617 	ldw	r20,24(sp)
   4eeb4:	dcc00517 	ldw	r19,20(sp)
   4eeb8:	dc800417 	ldw	r18,16(sp)
   4eebc:	dc400317 	ldw	r17,12(sp)
   4eec0:	dc000217 	ldw	r16,8(sp)
   4eec4:	dec00c04 	addi	sp,sp,48
   4eec8:	f800283a 	ret
   4eecc:	04c03fc4 	movi	r19,255
   4eed0:	99c9803a 	cmpltu	r4,r19,r7
   4eed4:	200890fa 	slli	r4,r4,3
   4eed8:	003fa806 	br	4ed7c <__alt_data_end+0xfffced7c>
   4eedc:	00803fc4 	movi	r2,255
   4eee0:	14c5803a 	cmpltu	r2,r2,r19
   4eee4:	100490fa 	slli	r2,r2,3
   4eee8:	003fc006 	br	4edec <__alt_data_end+0xfffcedec>
   4eeec:	00804034 	movhi	r2,256
   4eef0:	10bfffc4 	addi	r2,r2,-1
   4eef4:	11808b36 	bltu	r2,r6,4f124 <__umoddi3+0x4f0>
   4eef8:	01000404 	movi	r4,16
   4eefc:	003f6406 	br	4ec90 <__alt_data_end+0xfffcec90>
   4ef00:	34c4d83a 	srl	r2,r6,r19
   4ef04:	3d0e983a 	sll	r7,r7,r20
   4ef08:	8cf8d83a 	srl	fp,r17,r19
   4ef0c:	8d10983a 	sll	r8,r17,r20
   4ef10:	38aab03a 	or	r21,r7,r2
   4ef14:	a82cd43a 	srli	r22,r21,16
   4ef18:	84e2d83a 	srl	r17,r16,r19
   4ef1c:	e009883a 	mov	r4,fp
   4ef20:	b00b883a 	mov	r5,r22
   4ef24:	8a22b03a 	or	r17,r17,r8
   4ef28:	3524983a 	sll	r18,r6,r20
   4ef2c:	00431740 	call	43174 <__umodsi3>
   4ef30:	e009883a 	mov	r4,fp
   4ef34:	b00b883a 	mov	r5,r22
   4ef38:	102f883a 	mov	r23,r2
   4ef3c:	00431100 	call	43110 <__udivsi3>
   4ef40:	100d883a 	mov	r6,r2
   4ef44:	b808943a 	slli	r4,r23,16
   4ef48:	aa3fffcc 	andi	r8,r21,65535
   4ef4c:	8804d43a 	srli	r2,r17,16
   4ef50:	41af383a 	mul	r23,r8,r6
   4ef54:	8520983a 	sll	r16,r16,r20
   4ef58:	1104b03a 	or	r2,r2,r4
   4ef5c:	15c0042e 	bgeu	r2,r23,4ef70 <__umoddi3+0x33c>
   4ef60:	1545883a 	add	r2,r2,r21
   4ef64:	30ffffc4 	addi	r3,r6,-1
   4ef68:	1540742e 	bgeu	r2,r21,4f13c <__umoddi3+0x508>
   4ef6c:	180d883a 	mov	r6,r3
   4ef70:	15efc83a 	sub	r23,r2,r23
   4ef74:	b00b883a 	mov	r5,r22
   4ef78:	b809883a 	mov	r4,r23
   4ef7c:	d9800115 	stw	r6,4(sp)
   4ef80:	da000015 	stw	r8,0(sp)
   4ef84:	00431740 	call	43174 <__umodsi3>
   4ef88:	b00b883a 	mov	r5,r22
   4ef8c:	b809883a 	mov	r4,r23
   4ef90:	1039883a 	mov	fp,r2
   4ef94:	00431100 	call	43110 <__udivsi3>
   4ef98:	da000017 	ldw	r8,0(sp)
   4ef9c:	e038943a 	slli	fp,fp,16
   4efa0:	100b883a 	mov	r5,r2
   4efa4:	4089383a 	mul	r4,r8,r2
   4efa8:	8a3fffcc 	andi	r8,r17,65535
   4efac:	4710b03a 	or	r8,r8,fp
   4efb0:	d9800117 	ldw	r6,4(sp)
   4efb4:	4100042e 	bgeu	r8,r4,4efc8 <__umoddi3+0x394>
   4efb8:	4551883a 	add	r8,r8,r21
   4efbc:	10bfffc4 	addi	r2,r2,-1
   4efc0:	45405a2e 	bgeu	r8,r21,4f12c <__umoddi3+0x4f8>
   4efc4:	100b883a 	mov	r5,r2
   4efc8:	300c943a 	slli	r6,r6,16
   4efcc:	91ffffcc 	andi	r7,r18,65535
   4efd0:	9004d43a 	srli	r2,r18,16
   4efd4:	314cb03a 	or	r6,r6,r5
   4efd8:	317fffcc 	andi	r5,r6,65535
   4efdc:	300cd43a 	srli	r6,r6,16
   4efe0:	29d3383a 	mul	r9,r5,r7
   4efe4:	288b383a 	mul	r5,r5,r2
   4efe8:	31cf383a 	mul	r7,r6,r7
   4efec:	4806d43a 	srli	r3,r9,16
   4eff0:	4111c83a 	sub	r8,r8,r4
   4eff4:	29cb883a 	add	r5,r5,r7
   4eff8:	194b883a 	add	r5,r3,r5
   4effc:	3085383a 	mul	r2,r6,r2
   4f000:	29c0022e 	bgeu	r5,r7,4f00c <__umoddi3+0x3d8>
   4f004:	00c00074 	movhi	r3,1
   4f008:	10c5883a 	add	r2,r2,r3
   4f00c:	2808d43a 	srli	r4,r5,16
   4f010:	280a943a 	slli	r5,r5,16
   4f014:	4a7fffcc 	andi	r9,r9,65535
   4f018:	2085883a 	add	r2,r4,r2
   4f01c:	2a4b883a 	add	r5,r5,r9
   4f020:	40803636 	bltu	r8,r2,4f0fc <__umoddi3+0x4c8>
   4f024:	40804d26 	beq	r8,r2,4f15c <__umoddi3+0x528>
   4f028:	4089c83a 	sub	r4,r8,r2
   4f02c:	280f883a 	mov	r7,r5
   4f030:	81cfc83a 	sub	r7,r16,r7
   4f034:	81c7803a 	cmpltu	r3,r16,r7
   4f038:	20c7c83a 	sub	r3,r4,r3
   4f03c:	1cc4983a 	sll	r2,r3,r19
   4f040:	3d0ed83a 	srl	r7,r7,r20
   4f044:	1d06d83a 	srl	r3,r3,r20
   4f048:	11c4b03a 	or	r2,r2,r7
   4f04c:	003f9306 	br	4ee9c <__alt_data_end+0xfffcee9c>
   4f050:	9ca6983a 	sll	r19,r19,r18
   4f054:	88e8d83a 	srl	r20,r17,r3
   4f058:	80c4d83a 	srl	r2,r16,r3
   4f05c:	982cd43a 	srli	r22,r19,16
   4f060:	8ca2983a 	sll	r17,r17,r18
   4f064:	a009883a 	mov	r4,r20
   4f068:	b00b883a 	mov	r5,r22
   4f06c:	1478b03a 	or	fp,r2,r17
   4f070:	00431740 	call	43174 <__umodsi3>
   4f074:	a009883a 	mov	r4,r20
   4f078:	b00b883a 	mov	r5,r22
   4f07c:	1023883a 	mov	r17,r2
   4f080:	00431100 	call	43110 <__udivsi3>
   4f084:	9d7fffcc 	andi	r21,r19,65535
   4f088:	880a943a 	slli	r5,r17,16
   4f08c:	e008d43a 	srli	r4,fp,16
   4f090:	a885383a 	mul	r2,r21,r2
   4f094:	84a8983a 	sll	r20,r16,r18
   4f098:	2148b03a 	or	r4,r4,r5
   4f09c:	2080042e 	bgeu	r4,r2,4f0b0 <__umoddi3+0x47c>
   4f0a0:	24c9883a 	add	r4,r4,r19
   4f0a4:	24c00236 	bltu	r4,r19,4f0b0 <__umoddi3+0x47c>
   4f0a8:	2080012e 	bgeu	r4,r2,4f0b0 <__umoddi3+0x47c>
   4f0ac:	24c9883a 	add	r4,r4,r19
   4f0b0:	20a3c83a 	sub	r17,r4,r2
   4f0b4:	b00b883a 	mov	r5,r22
   4f0b8:	8809883a 	mov	r4,r17
   4f0bc:	00431740 	call	43174 <__umodsi3>
   4f0c0:	102f883a 	mov	r23,r2
   4f0c4:	8809883a 	mov	r4,r17
   4f0c8:	b00b883a 	mov	r5,r22
   4f0cc:	00431100 	call	43110 <__udivsi3>
   4f0d0:	b82e943a 	slli	r23,r23,16
   4f0d4:	a885383a 	mul	r2,r21,r2
   4f0d8:	e13fffcc 	andi	r4,fp,65535
   4f0dc:	25c8b03a 	or	r4,r4,r23
   4f0e0:	2080042e 	bgeu	r4,r2,4f0f4 <__umoddi3+0x4c0>
   4f0e4:	24c9883a 	add	r4,r4,r19
   4f0e8:	24c00236 	bltu	r4,r19,4f0f4 <__umoddi3+0x4c0>
   4f0ec:	2080012e 	bgeu	r4,r2,4f0f4 <__umoddi3+0x4c0>
   4f0f0:	24c9883a 	add	r4,r4,r19
   4f0f4:	20a3c83a 	sub	r17,r4,r2
   4f0f8:	003f4806 	br	4ee1c <__alt_data_end+0xfffcee1c>
   4f0fc:	2c8fc83a 	sub	r7,r5,r18
   4f100:	1545c83a 	sub	r2,r2,r21
   4f104:	29cb803a 	cmpltu	r5,r5,r7
   4f108:	1145c83a 	sub	r2,r2,r5
   4f10c:	4089c83a 	sub	r4,r8,r2
   4f110:	003fc706 	br	4f030 <__alt_data_end+0xfffcf030>
   4f114:	01000604 	movi	r4,24
   4f118:	003f1806 	br	4ed7c <__alt_data_end+0xfffced7c>
   4f11c:	00800604 	movi	r2,24
   4f120:	003f3206 	br	4edec <__alt_data_end+0xfffcedec>
   4f124:	01000604 	movi	r4,24
   4f128:	003ed906 	br	4ec90 <__alt_data_end+0xfffcec90>
   4f12c:	413fa52e 	bgeu	r8,r4,4efc4 <__alt_data_end+0xfffcefc4>
   4f130:	297fff84 	addi	r5,r5,-2
   4f134:	4551883a 	add	r8,r8,r21
   4f138:	003fa306 	br	4efc8 <__alt_data_end+0xfffcefc8>
   4f13c:	15ff8b2e 	bgeu	r2,r23,4ef6c <__alt_data_end+0xfffcef6c>
   4f140:	31bfff84 	addi	r6,r6,-2
   4f144:	1545883a 	add	r2,r2,r21
   4f148:	003f8906 	br	4ef70 <__alt_data_end+0xfffcef70>
   4f14c:	24c9883a 	add	r4,r4,r19
   4f150:	003eee06 	br	4ed0c <__alt_data_end+0xfffced0c>
   4f154:	8005883a 	mov	r2,r16
   4f158:	003f1706 	br	4edb8 <__alt_data_end+0xfffcedb8>
   4f15c:	817fe736 	bltu	r16,r5,4f0fc <__alt_data_end+0xfffcf0fc>
   4f160:	280f883a 	mov	r7,r5
   4f164:	0009883a 	mov	r4,zero
   4f168:	003fb106 	br	4f030 <__alt_data_end+0xfffcf030>

0004f16c <__divdf3>:
   4f16c:	defff204 	addi	sp,sp,-56
   4f170:	dd400915 	stw	r21,36(sp)
   4f174:	282ad53a 	srli	r21,r5,20
   4f178:	dd000815 	stw	r20,32(sp)
   4f17c:	2828d7fa 	srli	r20,r5,31
   4f180:	dc000415 	stw	r16,16(sp)
   4f184:	04000434 	movhi	r16,16
   4f188:	df000c15 	stw	fp,48(sp)
   4f18c:	843fffc4 	addi	r16,r16,-1
   4f190:	dfc00d15 	stw	ra,52(sp)
   4f194:	ddc00b15 	stw	r23,44(sp)
   4f198:	dd800a15 	stw	r22,40(sp)
   4f19c:	dcc00715 	stw	r19,28(sp)
   4f1a0:	dc800615 	stw	r18,24(sp)
   4f1a4:	dc400515 	stw	r17,20(sp)
   4f1a8:	ad41ffcc 	andi	r21,r21,2047
   4f1ac:	2c20703a 	and	r16,r5,r16
   4f1b0:	a7003fcc 	andi	fp,r20,255
   4f1b4:	a8006126 	beq	r21,zero,4f33c <__divdf3+0x1d0>
   4f1b8:	0081ffc4 	movi	r2,2047
   4f1bc:	2025883a 	mov	r18,r4
   4f1c0:	a8803726 	beq	r21,r2,4f2a0 <__divdf3+0x134>
   4f1c4:	80800434 	orhi	r2,r16,16
   4f1c8:	100490fa 	slli	r2,r2,3
   4f1cc:	2020d77a 	srli	r16,r4,29
   4f1d0:	202490fa 	slli	r18,r4,3
   4f1d4:	ad7f0044 	addi	r21,r21,-1023
   4f1d8:	80a0b03a 	or	r16,r16,r2
   4f1dc:	0027883a 	mov	r19,zero
   4f1e0:	0013883a 	mov	r9,zero
   4f1e4:	3804d53a 	srli	r2,r7,20
   4f1e8:	382cd7fa 	srli	r22,r7,31
   4f1ec:	04400434 	movhi	r17,16
   4f1f0:	8c7fffc4 	addi	r17,r17,-1
   4f1f4:	1081ffcc 	andi	r2,r2,2047
   4f1f8:	3011883a 	mov	r8,r6
   4f1fc:	3c62703a 	and	r17,r7,r17
   4f200:	b5c03fcc 	andi	r23,r22,255
   4f204:	10006c26 	beq	r2,zero,4f3b8 <__divdf3+0x24c>
   4f208:	00c1ffc4 	movi	r3,2047
   4f20c:	10c06426 	beq	r2,r3,4f3a0 <__divdf3+0x234>
   4f210:	88c00434 	orhi	r3,r17,16
   4f214:	180690fa 	slli	r3,r3,3
   4f218:	3022d77a 	srli	r17,r6,29
   4f21c:	301090fa 	slli	r8,r6,3
   4f220:	10bf0044 	addi	r2,r2,-1023
   4f224:	88e2b03a 	or	r17,r17,r3
   4f228:	000f883a 	mov	r7,zero
   4f22c:	a58cf03a 	xor	r6,r20,r22
   4f230:	3cc8b03a 	or	r4,r7,r19
   4f234:	a8abc83a 	sub	r21,r21,r2
   4f238:	008003c4 	movi	r2,15
   4f23c:	3007883a 	mov	r3,r6
   4f240:	34c03fcc 	andi	r19,r6,255
   4f244:	11009036 	bltu	r2,r4,4f488 <__divdf3+0x31c>
   4f248:	200890ba 	slli	r4,r4,2
   4f24c:	00800174 	movhi	r2,5
   4f250:	10bc9804 	addi	r2,r2,-3488
   4f254:	2089883a 	add	r4,r4,r2
   4f258:	20800017 	ldw	r2,0(r4)
   4f25c:	1000683a 	jmp	r2
   4f260:	0004f488 	cmpgei	zero,zero,5074
   4f264:	0004f2d8 	cmpnei	zero,zero,5067
   4f268:	0004f478 	rdprs	zero,zero,5073
   4f26c:	0004f2cc 	andi	zero,zero,5067
   4f270:	0004f478 	rdprs	zero,zero,5073
   4f274:	0004f44c 	andi	zero,zero,5073
   4f278:	0004f478 	rdprs	zero,zero,5073
   4f27c:	0004f2cc 	andi	zero,zero,5067
   4f280:	0004f2d8 	cmpnei	zero,zero,5067
   4f284:	0004f2d8 	cmpnei	zero,zero,5067
   4f288:	0004f44c 	andi	zero,zero,5073
   4f28c:	0004f2cc 	andi	zero,zero,5067
   4f290:	0004f2bc 	xorhi	zero,zero,5066
   4f294:	0004f2bc 	xorhi	zero,zero,5066
   4f298:	0004f2bc 	xorhi	zero,zero,5066
   4f29c:	0004f76c 	andhi	zero,zero,5085
   4f2a0:	2404b03a 	or	r2,r4,r16
   4f2a4:	1000661e 	bne	r2,zero,4f440 <__divdf3+0x2d4>
   4f2a8:	04c00204 	movi	r19,8
   4f2ac:	0021883a 	mov	r16,zero
   4f2b0:	0025883a 	mov	r18,zero
   4f2b4:	02400084 	movi	r9,2
   4f2b8:	003fca06 	br	4f1e4 <__alt_data_end+0xfffcf1e4>
   4f2bc:	8023883a 	mov	r17,r16
   4f2c0:	9011883a 	mov	r8,r18
   4f2c4:	e02f883a 	mov	r23,fp
   4f2c8:	480f883a 	mov	r7,r9
   4f2cc:	00800084 	movi	r2,2
   4f2d0:	3881311e 	bne	r7,r2,4f798 <__divdf3+0x62c>
   4f2d4:	b827883a 	mov	r19,r23
   4f2d8:	98c0004c 	andi	r3,r19,1
   4f2dc:	0081ffc4 	movi	r2,2047
   4f2e0:	000b883a 	mov	r5,zero
   4f2e4:	0025883a 	mov	r18,zero
   4f2e8:	1004953a 	slli	r2,r2,20
   4f2ec:	18c03fcc 	andi	r3,r3,255
   4f2f0:	04400434 	movhi	r17,16
   4f2f4:	8c7fffc4 	addi	r17,r17,-1
   4f2f8:	180697fa 	slli	r3,r3,31
   4f2fc:	2c4a703a 	and	r5,r5,r17
   4f300:	288ab03a 	or	r5,r5,r2
   4f304:	28c6b03a 	or	r3,r5,r3
   4f308:	9005883a 	mov	r2,r18
   4f30c:	dfc00d17 	ldw	ra,52(sp)
   4f310:	df000c17 	ldw	fp,48(sp)
   4f314:	ddc00b17 	ldw	r23,44(sp)
   4f318:	dd800a17 	ldw	r22,40(sp)
   4f31c:	dd400917 	ldw	r21,36(sp)
   4f320:	dd000817 	ldw	r20,32(sp)
   4f324:	dcc00717 	ldw	r19,28(sp)
   4f328:	dc800617 	ldw	r18,24(sp)
   4f32c:	dc400517 	ldw	r17,20(sp)
   4f330:	dc000417 	ldw	r16,16(sp)
   4f334:	dec00e04 	addi	sp,sp,56
   4f338:	f800283a 	ret
   4f33c:	2404b03a 	or	r2,r4,r16
   4f340:	2027883a 	mov	r19,r4
   4f344:	10003926 	beq	r2,zero,4f42c <__divdf3+0x2c0>
   4f348:	80012e26 	beq	r16,zero,4f804 <__divdf3+0x698>
   4f34c:	8009883a 	mov	r4,r16
   4f350:	d9800315 	stw	r6,12(sp)
   4f354:	d9c00215 	stw	r7,8(sp)
   4f358:	00450040 	call	45004 <__clzsi2>
   4f35c:	d9800317 	ldw	r6,12(sp)
   4f360:	d9c00217 	ldw	r7,8(sp)
   4f364:	113ffd44 	addi	r4,r2,-11
   4f368:	00c00704 	movi	r3,28
   4f36c:	19012116 	blt	r3,r4,4f7f4 <__divdf3+0x688>
   4f370:	00c00744 	movi	r3,29
   4f374:	147ffe04 	addi	r17,r2,-8
   4f378:	1907c83a 	sub	r3,r3,r4
   4f37c:	8460983a 	sll	r16,r16,r17
   4f380:	98c6d83a 	srl	r3,r19,r3
   4f384:	9c64983a 	sll	r18,r19,r17
   4f388:	1c20b03a 	or	r16,r3,r16
   4f38c:	1080fcc4 	addi	r2,r2,1011
   4f390:	00abc83a 	sub	r21,zero,r2
   4f394:	0027883a 	mov	r19,zero
   4f398:	0013883a 	mov	r9,zero
   4f39c:	003f9106 	br	4f1e4 <__alt_data_end+0xfffcf1e4>
   4f3a0:	3446b03a 	or	r3,r6,r17
   4f3a4:	18001f1e 	bne	r3,zero,4f424 <__divdf3+0x2b8>
   4f3a8:	0023883a 	mov	r17,zero
   4f3ac:	0011883a 	mov	r8,zero
   4f3b0:	01c00084 	movi	r7,2
   4f3b4:	003f9d06 	br	4f22c <__alt_data_end+0xfffcf22c>
   4f3b8:	3446b03a 	or	r3,r6,r17
   4f3bc:	18001526 	beq	r3,zero,4f414 <__divdf3+0x2a8>
   4f3c0:	88011b26 	beq	r17,zero,4f830 <__divdf3+0x6c4>
   4f3c4:	8809883a 	mov	r4,r17
   4f3c8:	d9800315 	stw	r6,12(sp)
   4f3cc:	da400115 	stw	r9,4(sp)
   4f3d0:	00450040 	call	45004 <__clzsi2>
   4f3d4:	d9800317 	ldw	r6,12(sp)
   4f3d8:	da400117 	ldw	r9,4(sp)
   4f3dc:	113ffd44 	addi	r4,r2,-11
   4f3e0:	00c00704 	movi	r3,28
   4f3e4:	19010e16 	blt	r3,r4,4f820 <__divdf3+0x6b4>
   4f3e8:	00c00744 	movi	r3,29
   4f3ec:	123ffe04 	addi	r8,r2,-8
   4f3f0:	1907c83a 	sub	r3,r3,r4
   4f3f4:	8a22983a 	sll	r17,r17,r8
   4f3f8:	30c6d83a 	srl	r3,r6,r3
   4f3fc:	3210983a 	sll	r8,r6,r8
   4f400:	1c62b03a 	or	r17,r3,r17
   4f404:	1080fcc4 	addi	r2,r2,1011
   4f408:	0085c83a 	sub	r2,zero,r2
   4f40c:	000f883a 	mov	r7,zero
   4f410:	003f8606 	br	4f22c <__alt_data_end+0xfffcf22c>
   4f414:	0023883a 	mov	r17,zero
   4f418:	0011883a 	mov	r8,zero
   4f41c:	01c00044 	movi	r7,1
   4f420:	003f8206 	br	4f22c <__alt_data_end+0xfffcf22c>
   4f424:	01c000c4 	movi	r7,3
   4f428:	003f8006 	br	4f22c <__alt_data_end+0xfffcf22c>
   4f42c:	04c00104 	movi	r19,4
   4f430:	0021883a 	mov	r16,zero
   4f434:	0025883a 	mov	r18,zero
   4f438:	02400044 	movi	r9,1
   4f43c:	003f6906 	br	4f1e4 <__alt_data_end+0xfffcf1e4>
   4f440:	04c00304 	movi	r19,12
   4f444:	024000c4 	movi	r9,3
   4f448:	003f6606 	br	4f1e4 <__alt_data_end+0xfffcf1e4>
   4f44c:	01400434 	movhi	r5,16
   4f450:	0007883a 	mov	r3,zero
   4f454:	297fffc4 	addi	r5,r5,-1
   4f458:	04bfffc4 	movi	r18,-1
   4f45c:	0081ffc4 	movi	r2,2047
   4f460:	003fa106 	br	4f2e8 <__alt_data_end+0xfffcf2e8>
   4f464:	00c00044 	movi	r3,1
   4f468:	1887c83a 	sub	r3,r3,r2
   4f46c:	01000e04 	movi	r4,56
   4f470:	20c1210e 	bge	r4,r3,4f8f8 <__divdf3+0x78c>
   4f474:	98c0004c 	andi	r3,r19,1
   4f478:	0005883a 	mov	r2,zero
   4f47c:	000b883a 	mov	r5,zero
   4f480:	0025883a 	mov	r18,zero
   4f484:	003f9806 	br	4f2e8 <__alt_data_end+0xfffcf2e8>
   4f488:	8c00fd36 	bltu	r17,r16,4f880 <__divdf3+0x714>
   4f48c:	8440fb26 	beq	r16,r17,4f87c <__divdf3+0x710>
   4f490:	8007883a 	mov	r3,r16
   4f494:	ad7fffc4 	addi	r21,r21,-1
   4f498:	0021883a 	mov	r16,zero
   4f49c:	4004d63a 	srli	r2,r8,24
   4f4a0:	8822923a 	slli	r17,r17,8
   4f4a4:	1809883a 	mov	r4,r3
   4f4a8:	402c923a 	slli	r22,r8,8
   4f4ac:	88b8b03a 	or	fp,r17,r2
   4f4b0:	e028d43a 	srli	r20,fp,16
   4f4b4:	d8c00015 	stw	r3,0(sp)
   4f4b8:	e5ffffcc 	andi	r23,fp,65535
   4f4bc:	a00b883a 	mov	r5,r20
   4f4c0:	00431100 	call	43110 <__udivsi3>
   4f4c4:	d8c00017 	ldw	r3,0(sp)
   4f4c8:	a00b883a 	mov	r5,r20
   4f4cc:	d8800315 	stw	r2,12(sp)
   4f4d0:	1809883a 	mov	r4,r3
   4f4d4:	00431740 	call	43174 <__umodsi3>
   4f4d8:	d9800317 	ldw	r6,12(sp)
   4f4dc:	1006943a 	slli	r3,r2,16
   4f4e0:	9004d43a 	srli	r2,r18,16
   4f4e4:	b9a3383a 	mul	r17,r23,r6
   4f4e8:	10c4b03a 	or	r2,r2,r3
   4f4ec:	1440062e 	bgeu	r2,r17,4f508 <__divdf3+0x39c>
   4f4f0:	1705883a 	add	r2,r2,fp
   4f4f4:	30ffffc4 	addi	r3,r6,-1
   4f4f8:	1700ee36 	bltu	r2,fp,4f8b4 <__divdf3+0x748>
   4f4fc:	1440ed2e 	bgeu	r2,r17,4f8b4 <__divdf3+0x748>
   4f500:	31bfff84 	addi	r6,r6,-2
   4f504:	1705883a 	add	r2,r2,fp
   4f508:	1463c83a 	sub	r17,r2,r17
   4f50c:	a00b883a 	mov	r5,r20
   4f510:	8809883a 	mov	r4,r17
   4f514:	d9800315 	stw	r6,12(sp)
   4f518:	00431100 	call	43110 <__udivsi3>
   4f51c:	a00b883a 	mov	r5,r20
   4f520:	8809883a 	mov	r4,r17
   4f524:	d8800215 	stw	r2,8(sp)
   4f528:	00431740 	call	43174 <__umodsi3>
   4f52c:	d9c00217 	ldw	r7,8(sp)
   4f530:	1004943a 	slli	r2,r2,16
   4f534:	94bfffcc 	andi	r18,r18,65535
   4f538:	b9d1383a 	mul	r8,r23,r7
   4f53c:	90a4b03a 	or	r18,r18,r2
   4f540:	d9800317 	ldw	r6,12(sp)
   4f544:	9200062e 	bgeu	r18,r8,4f560 <__divdf3+0x3f4>
   4f548:	9725883a 	add	r18,r18,fp
   4f54c:	38bfffc4 	addi	r2,r7,-1
   4f550:	9700d636 	bltu	r18,fp,4f8ac <__divdf3+0x740>
   4f554:	9200d52e 	bgeu	r18,r8,4f8ac <__divdf3+0x740>
   4f558:	39ffff84 	addi	r7,r7,-2
   4f55c:	9725883a 	add	r18,r18,fp
   4f560:	3004943a 	slli	r2,r6,16
   4f564:	b012d43a 	srli	r9,r22,16
   4f568:	b1bfffcc 	andi	r6,r22,65535
   4f56c:	11e2b03a 	or	r17,r2,r7
   4f570:	8806d43a 	srli	r3,r17,16
   4f574:	893fffcc 	andi	r4,r17,65535
   4f578:	218b383a 	mul	r5,r4,r6
   4f57c:	30c5383a 	mul	r2,r6,r3
   4f580:	2249383a 	mul	r4,r4,r9
   4f584:	280ed43a 	srli	r7,r5,16
   4f588:	9225c83a 	sub	r18,r18,r8
   4f58c:	2089883a 	add	r4,r4,r2
   4f590:	3909883a 	add	r4,r7,r4
   4f594:	1a47383a 	mul	r3,r3,r9
   4f598:	2080022e 	bgeu	r4,r2,4f5a4 <__divdf3+0x438>
   4f59c:	00800074 	movhi	r2,1
   4f5a0:	1887883a 	add	r3,r3,r2
   4f5a4:	2004d43a 	srli	r2,r4,16
   4f5a8:	2008943a 	slli	r4,r4,16
   4f5ac:	297fffcc 	andi	r5,r5,65535
   4f5b0:	10c7883a 	add	r3,r2,r3
   4f5b4:	2149883a 	add	r4,r4,r5
   4f5b8:	90c0a536 	bltu	r18,r3,4f850 <__divdf3+0x6e4>
   4f5bc:	90c0bf26 	beq	r18,r3,4f8bc <__divdf3+0x750>
   4f5c0:	90c7c83a 	sub	r3,r18,r3
   4f5c4:	810fc83a 	sub	r7,r16,r4
   4f5c8:	81e5803a 	cmpltu	r18,r16,r7
   4f5cc:	1ca5c83a 	sub	r18,r3,r18
   4f5d0:	e480c126 	beq	fp,r18,4f8d8 <__divdf3+0x76c>
   4f5d4:	a00b883a 	mov	r5,r20
   4f5d8:	9009883a 	mov	r4,r18
   4f5dc:	d9800315 	stw	r6,12(sp)
   4f5e0:	d9c00215 	stw	r7,8(sp)
   4f5e4:	da400115 	stw	r9,4(sp)
   4f5e8:	00431100 	call	43110 <__udivsi3>
   4f5ec:	a00b883a 	mov	r5,r20
   4f5f0:	9009883a 	mov	r4,r18
   4f5f4:	d8800015 	stw	r2,0(sp)
   4f5f8:	00431740 	call	43174 <__umodsi3>
   4f5fc:	d9c00217 	ldw	r7,8(sp)
   4f600:	da000017 	ldw	r8,0(sp)
   4f604:	1006943a 	slli	r3,r2,16
   4f608:	3804d43a 	srli	r2,r7,16
   4f60c:	ba21383a 	mul	r16,r23,r8
   4f610:	d9800317 	ldw	r6,12(sp)
   4f614:	10c4b03a 	or	r2,r2,r3
   4f618:	da400117 	ldw	r9,4(sp)
   4f61c:	1400062e 	bgeu	r2,r16,4f638 <__divdf3+0x4cc>
   4f620:	1705883a 	add	r2,r2,fp
   4f624:	40ffffc4 	addi	r3,r8,-1
   4f628:	1700ad36 	bltu	r2,fp,4f8e0 <__divdf3+0x774>
   4f62c:	1400ac2e 	bgeu	r2,r16,4f8e0 <__divdf3+0x774>
   4f630:	423fff84 	addi	r8,r8,-2
   4f634:	1705883a 	add	r2,r2,fp
   4f638:	1421c83a 	sub	r16,r2,r16
   4f63c:	a00b883a 	mov	r5,r20
   4f640:	8009883a 	mov	r4,r16
   4f644:	d9800315 	stw	r6,12(sp)
   4f648:	d9c00215 	stw	r7,8(sp)
   4f64c:	da000015 	stw	r8,0(sp)
   4f650:	da400115 	stw	r9,4(sp)
   4f654:	00431100 	call	43110 <__udivsi3>
   4f658:	8009883a 	mov	r4,r16
   4f65c:	a00b883a 	mov	r5,r20
   4f660:	1025883a 	mov	r18,r2
   4f664:	00431740 	call	43174 <__umodsi3>
   4f668:	d9c00217 	ldw	r7,8(sp)
   4f66c:	1004943a 	slli	r2,r2,16
   4f670:	bcaf383a 	mul	r23,r23,r18
   4f674:	393fffcc 	andi	r4,r7,65535
   4f678:	2088b03a 	or	r4,r4,r2
   4f67c:	d9800317 	ldw	r6,12(sp)
   4f680:	da000017 	ldw	r8,0(sp)
   4f684:	da400117 	ldw	r9,4(sp)
   4f688:	25c0062e 	bgeu	r4,r23,4f6a4 <__divdf3+0x538>
   4f68c:	2709883a 	add	r4,r4,fp
   4f690:	90bfffc4 	addi	r2,r18,-1
   4f694:	27009436 	bltu	r4,fp,4f8e8 <__divdf3+0x77c>
   4f698:	25c0932e 	bgeu	r4,r23,4f8e8 <__divdf3+0x77c>
   4f69c:	94bfff84 	addi	r18,r18,-2
   4f6a0:	2709883a 	add	r4,r4,fp
   4f6a4:	4004943a 	slli	r2,r8,16
   4f6a8:	25efc83a 	sub	r23,r4,r23
   4f6ac:	1490b03a 	or	r8,r2,r18
   4f6b0:	4008d43a 	srli	r4,r8,16
   4f6b4:	40ffffcc 	andi	r3,r8,65535
   4f6b8:	30c5383a 	mul	r2,r6,r3
   4f6bc:	1a47383a 	mul	r3,r3,r9
   4f6c0:	310d383a 	mul	r6,r6,r4
   4f6c4:	100ad43a 	srli	r5,r2,16
   4f6c8:	4913383a 	mul	r9,r9,r4
   4f6cc:	1987883a 	add	r3,r3,r6
   4f6d0:	28c7883a 	add	r3,r5,r3
   4f6d4:	1980022e 	bgeu	r3,r6,4f6e0 <__divdf3+0x574>
   4f6d8:	01000074 	movhi	r4,1
   4f6dc:	4913883a 	add	r9,r9,r4
   4f6e0:	1808d43a 	srli	r4,r3,16
   4f6e4:	1806943a 	slli	r3,r3,16
   4f6e8:	10bfffcc 	andi	r2,r2,65535
   4f6ec:	2253883a 	add	r9,r4,r9
   4f6f0:	1887883a 	add	r3,r3,r2
   4f6f4:	ba403836 	bltu	r23,r9,4f7d8 <__divdf3+0x66c>
   4f6f8:	ba403626 	beq	r23,r9,4f7d4 <__divdf3+0x668>
   4f6fc:	42000054 	ori	r8,r8,1
   4f700:	a880ffc4 	addi	r2,r21,1023
   4f704:	00bf570e 	bge	zero,r2,4f464 <__alt_data_end+0xfffcf464>
   4f708:	40c001cc 	andi	r3,r8,7
   4f70c:	18000726 	beq	r3,zero,4f72c <__divdf3+0x5c0>
   4f710:	40c003cc 	andi	r3,r8,15
   4f714:	01000104 	movi	r4,4
   4f718:	19000426 	beq	r3,r4,4f72c <__divdf3+0x5c0>
   4f71c:	4107883a 	add	r3,r8,r4
   4f720:	1a11803a 	cmpltu	r8,r3,r8
   4f724:	8a23883a 	add	r17,r17,r8
   4f728:	1811883a 	mov	r8,r3
   4f72c:	88c0402c 	andhi	r3,r17,256
   4f730:	18000426 	beq	r3,zero,4f744 <__divdf3+0x5d8>
   4f734:	00ffc034 	movhi	r3,65280
   4f738:	18ffffc4 	addi	r3,r3,-1
   4f73c:	a8810004 	addi	r2,r21,1024
   4f740:	88e2703a 	and	r17,r17,r3
   4f744:	00c1ff84 	movi	r3,2046
   4f748:	18bee316 	blt	r3,r2,4f2d8 <__alt_data_end+0xfffcf2d8>
   4f74c:	8824977a 	slli	r18,r17,29
   4f750:	4010d0fa 	srli	r8,r8,3
   4f754:	8822927a 	slli	r17,r17,9
   4f758:	1081ffcc 	andi	r2,r2,2047
   4f75c:	9224b03a 	or	r18,r18,r8
   4f760:	880ad33a 	srli	r5,r17,12
   4f764:	98c0004c 	andi	r3,r19,1
   4f768:	003edf06 	br	4f2e8 <__alt_data_end+0xfffcf2e8>
   4f76c:	8080022c 	andhi	r2,r16,8
   4f770:	10001226 	beq	r2,zero,4f7bc <__divdf3+0x650>
   4f774:	8880022c 	andhi	r2,r17,8
   4f778:	1000101e 	bne	r2,zero,4f7bc <__divdf3+0x650>
   4f77c:	00800434 	movhi	r2,16
   4f780:	89400234 	orhi	r5,r17,8
   4f784:	10bfffc4 	addi	r2,r2,-1
   4f788:	b007883a 	mov	r3,r22
   4f78c:	288a703a 	and	r5,r5,r2
   4f790:	4025883a 	mov	r18,r8
   4f794:	003f3106 	br	4f45c <__alt_data_end+0xfffcf45c>
   4f798:	008000c4 	movi	r2,3
   4f79c:	3880a626 	beq	r7,r2,4fa38 <__divdf3+0x8cc>
   4f7a0:	00800044 	movi	r2,1
   4f7a4:	3880521e 	bne	r7,r2,4f8f0 <__divdf3+0x784>
   4f7a8:	b807883a 	mov	r3,r23
   4f7ac:	0005883a 	mov	r2,zero
   4f7b0:	000b883a 	mov	r5,zero
   4f7b4:	0025883a 	mov	r18,zero
   4f7b8:	003ecb06 	br	4f2e8 <__alt_data_end+0xfffcf2e8>
   4f7bc:	00800434 	movhi	r2,16
   4f7c0:	81400234 	orhi	r5,r16,8
   4f7c4:	10bfffc4 	addi	r2,r2,-1
   4f7c8:	a007883a 	mov	r3,r20
   4f7cc:	288a703a 	and	r5,r5,r2
   4f7d0:	003f2206 	br	4f45c <__alt_data_end+0xfffcf45c>
   4f7d4:	183fca26 	beq	r3,zero,4f700 <__alt_data_end+0xfffcf700>
   4f7d8:	e5ef883a 	add	r23,fp,r23
   4f7dc:	40bfffc4 	addi	r2,r8,-1
   4f7e0:	bf00392e 	bgeu	r23,fp,4f8c8 <__divdf3+0x75c>
   4f7e4:	1011883a 	mov	r8,r2
   4f7e8:	ba7fc41e 	bne	r23,r9,4f6fc <__alt_data_end+0xfffcf6fc>
   4f7ec:	b0ffc31e 	bne	r22,r3,4f6fc <__alt_data_end+0xfffcf6fc>
   4f7f0:	003fc306 	br	4f700 <__alt_data_end+0xfffcf700>
   4f7f4:	143ff604 	addi	r16,r2,-40
   4f7f8:	9c20983a 	sll	r16,r19,r16
   4f7fc:	0025883a 	mov	r18,zero
   4f800:	003ee206 	br	4f38c <__alt_data_end+0xfffcf38c>
   4f804:	d9800315 	stw	r6,12(sp)
   4f808:	d9c00215 	stw	r7,8(sp)
   4f80c:	00450040 	call	45004 <__clzsi2>
   4f810:	10800804 	addi	r2,r2,32
   4f814:	d9c00217 	ldw	r7,8(sp)
   4f818:	d9800317 	ldw	r6,12(sp)
   4f81c:	003ed106 	br	4f364 <__alt_data_end+0xfffcf364>
   4f820:	147ff604 	addi	r17,r2,-40
   4f824:	3462983a 	sll	r17,r6,r17
   4f828:	0011883a 	mov	r8,zero
   4f82c:	003ef506 	br	4f404 <__alt_data_end+0xfffcf404>
   4f830:	3009883a 	mov	r4,r6
   4f834:	d9800315 	stw	r6,12(sp)
   4f838:	da400115 	stw	r9,4(sp)
   4f83c:	00450040 	call	45004 <__clzsi2>
   4f840:	10800804 	addi	r2,r2,32
   4f844:	da400117 	ldw	r9,4(sp)
   4f848:	d9800317 	ldw	r6,12(sp)
   4f84c:	003ee306 	br	4f3dc <__alt_data_end+0xfffcf3dc>
   4f850:	85a1883a 	add	r16,r16,r22
   4f854:	8585803a 	cmpltu	r2,r16,r22
   4f858:	1705883a 	add	r2,r2,fp
   4f85c:	14a5883a 	add	r18,r2,r18
   4f860:	88bfffc4 	addi	r2,r17,-1
   4f864:	e4800c2e 	bgeu	fp,r18,4f898 <__divdf3+0x72c>
   4f868:	90c03e36 	bltu	r18,r3,4f964 <__divdf3+0x7f8>
   4f86c:	1c806926 	beq	r3,r18,4fa14 <__divdf3+0x8a8>
   4f870:	90c7c83a 	sub	r3,r18,r3
   4f874:	1023883a 	mov	r17,r2
   4f878:	003f5206 	br	4f5c4 <__alt_data_end+0xfffcf5c4>
   4f87c:	923f0436 	bltu	r18,r8,4f490 <__alt_data_end+0xfffcf490>
   4f880:	800897fa 	slli	r4,r16,31
   4f884:	9004d07a 	srli	r2,r18,1
   4f888:	8006d07a 	srli	r3,r16,1
   4f88c:	902097fa 	slli	r16,r18,31
   4f890:	20a4b03a 	or	r18,r4,r2
   4f894:	003f0106 	br	4f49c <__alt_data_end+0xfffcf49c>
   4f898:	e4bff51e 	bne	fp,r18,4f870 <__alt_data_end+0xfffcf870>
   4f89c:	85bff22e 	bgeu	r16,r22,4f868 <__alt_data_end+0xfffcf868>
   4f8a0:	e0c7c83a 	sub	r3,fp,r3
   4f8a4:	1023883a 	mov	r17,r2
   4f8a8:	003f4606 	br	4f5c4 <__alt_data_end+0xfffcf5c4>
   4f8ac:	100f883a 	mov	r7,r2
   4f8b0:	003f2b06 	br	4f560 <__alt_data_end+0xfffcf560>
   4f8b4:	180d883a 	mov	r6,r3
   4f8b8:	003f1306 	br	4f508 <__alt_data_end+0xfffcf508>
   4f8bc:	813fe436 	bltu	r16,r4,4f850 <__alt_data_end+0xfffcf850>
   4f8c0:	0007883a 	mov	r3,zero
   4f8c4:	003f3f06 	br	4f5c4 <__alt_data_end+0xfffcf5c4>
   4f8c8:	ba402c36 	bltu	r23,r9,4f97c <__divdf3+0x810>
   4f8cc:	4dc05426 	beq	r9,r23,4fa20 <__divdf3+0x8b4>
   4f8d0:	1011883a 	mov	r8,r2
   4f8d4:	003f8906 	br	4f6fc <__alt_data_end+0xfffcf6fc>
   4f8d8:	023fffc4 	movi	r8,-1
   4f8dc:	003f8806 	br	4f700 <__alt_data_end+0xfffcf700>
   4f8e0:	1811883a 	mov	r8,r3
   4f8e4:	003f5406 	br	4f638 <__alt_data_end+0xfffcf638>
   4f8e8:	1025883a 	mov	r18,r2
   4f8ec:	003f6d06 	br	4f6a4 <__alt_data_end+0xfffcf6a4>
   4f8f0:	b827883a 	mov	r19,r23
   4f8f4:	003f8206 	br	4f700 <__alt_data_end+0xfffcf700>
   4f8f8:	010007c4 	movi	r4,31
   4f8fc:	20c02616 	blt	r4,r3,4f998 <__divdf3+0x82c>
   4f900:	00800804 	movi	r2,32
   4f904:	10c5c83a 	sub	r2,r2,r3
   4f908:	888a983a 	sll	r5,r17,r2
   4f90c:	40c8d83a 	srl	r4,r8,r3
   4f910:	4084983a 	sll	r2,r8,r2
   4f914:	88e2d83a 	srl	r17,r17,r3
   4f918:	2906b03a 	or	r3,r5,r4
   4f91c:	1004c03a 	cmpne	r2,r2,zero
   4f920:	1886b03a 	or	r3,r3,r2
   4f924:	188001cc 	andi	r2,r3,7
   4f928:	10000726 	beq	r2,zero,4f948 <__divdf3+0x7dc>
   4f92c:	188003cc 	andi	r2,r3,15
   4f930:	01000104 	movi	r4,4
   4f934:	11000426 	beq	r2,r4,4f948 <__divdf3+0x7dc>
   4f938:	1805883a 	mov	r2,r3
   4f93c:	10c00104 	addi	r3,r2,4
   4f940:	1885803a 	cmpltu	r2,r3,r2
   4f944:	88a3883a 	add	r17,r17,r2
   4f948:	8880202c 	andhi	r2,r17,128
   4f94c:	10002726 	beq	r2,zero,4f9ec <__divdf3+0x880>
   4f950:	98c0004c 	andi	r3,r19,1
   4f954:	00800044 	movi	r2,1
   4f958:	000b883a 	mov	r5,zero
   4f95c:	0025883a 	mov	r18,zero
   4f960:	003e6106 	br	4f2e8 <__alt_data_end+0xfffcf2e8>
   4f964:	85a1883a 	add	r16,r16,r22
   4f968:	8585803a 	cmpltu	r2,r16,r22
   4f96c:	1705883a 	add	r2,r2,fp
   4f970:	14a5883a 	add	r18,r2,r18
   4f974:	8c7fff84 	addi	r17,r17,-2
   4f978:	003f1106 	br	4f5c0 <__alt_data_end+0xfffcf5c0>
   4f97c:	b589883a 	add	r4,r22,r22
   4f980:	25ad803a 	cmpltu	r22,r4,r22
   4f984:	b739883a 	add	fp,r22,fp
   4f988:	40bfff84 	addi	r2,r8,-2
   4f98c:	bf2f883a 	add	r23,r23,fp
   4f990:	202d883a 	mov	r22,r4
   4f994:	003f9306 	br	4f7e4 <__alt_data_end+0xfffcf7e4>
   4f998:	013ff844 	movi	r4,-31
   4f99c:	2085c83a 	sub	r2,r4,r2
   4f9a0:	8888d83a 	srl	r4,r17,r2
   4f9a4:	00800804 	movi	r2,32
   4f9a8:	18802126 	beq	r3,r2,4fa30 <__divdf3+0x8c4>
   4f9ac:	00801004 	movi	r2,64
   4f9b0:	10c5c83a 	sub	r2,r2,r3
   4f9b4:	8884983a 	sll	r2,r17,r2
   4f9b8:	1204b03a 	or	r2,r2,r8
   4f9bc:	1004c03a 	cmpne	r2,r2,zero
   4f9c0:	2084b03a 	or	r2,r4,r2
   4f9c4:	144001cc 	andi	r17,r2,7
   4f9c8:	88000d1e 	bne	r17,zero,4fa00 <__divdf3+0x894>
   4f9cc:	000b883a 	mov	r5,zero
   4f9d0:	1024d0fa 	srli	r18,r2,3
   4f9d4:	98c0004c 	andi	r3,r19,1
   4f9d8:	0005883a 	mov	r2,zero
   4f9dc:	9464b03a 	or	r18,r18,r17
   4f9e0:	003e4106 	br	4f2e8 <__alt_data_end+0xfffcf2e8>
   4f9e4:	1007883a 	mov	r3,r2
   4f9e8:	0023883a 	mov	r17,zero
   4f9ec:	880a927a 	slli	r5,r17,9
   4f9f0:	1805883a 	mov	r2,r3
   4f9f4:	8822977a 	slli	r17,r17,29
   4f9f8:	280ad33a 	srli	r5,r5,12
   4f9fc:	003ff406 	br	4f9d0 <__alt_data_end+0xfffcf9d0>
   4fa00:	10c003cc 	andi	r3,r2,15
   4fa04:	01000104 	movi	r4,4
   4fa08:	193ff626 	beq	r3,r4,4f9e4 <__alt_data_end+0xfffcf9e4>
   4fa0c:	0023883a 	mov	r17,zero
   4fa10:	003fca06 	br	4f93c <__alt_data_end+0xfffcf93c>
   4fa14:	813fd336 	bltu	r16,r4,4f964 <__alt_data_end+0xfffcf964>
   4fa18:	1023883a 	mov	r17,r2
   4fa1c:	003fa806 	br	4f8c0 <__alt_data_end+0xfffcf8c0>
   4fa20:	b0ffd636 	bltu	r22,r3,4f97c <__alt_data_end+0xfffcf97c>
   4fa24:	1011883a 	mov	r8,r2
   4fa28:	b0ff341e 	bne	r22,r3,4f6fc <__alt_data_end+0xfffcf6fc>
   4fa2c:	003f3406 	br	4f700 <__alt_data_end+0xfffcf700>
   4fa30:	0005883a 	mov	r2,zero
   4fa34:	003fe006 	br	4f9b8 <__alt_data_end+0xfffcf9b8>
   4fa38:	00800434 	movhi	r2,16
   4fa3c:	89400234 	orhi	r5,r17,8
   4fa40:	10bfffc4 	addi	r2,r2,-1
   4fa44:	b807883a 	mov	r3,r23
   4fa48:	288a703a 	and	r5,r5,r2
   4fa4c:	4025883a 	mov	r18,r8
   4fa50:	003e8206 	br	4f45c <__alt_data_end+0xfffcf45c>

0004fa54 <__ledf2>:
   4fa54:	2804d53a 	srli	r2,r5,20
   4fa58:	3810d53a 	srli	r8,r7,20
   4fa5c:	00c00434 	movhi	r3,16
   4fa60:	18ffffc4 	addi	r3,r3,-1
   4fa64:	1081ffcc 	andi	r2,r2,2047
   4fa68:	0241ffc4 	movi	r9,2047
   4fa6c:	28d4703a 	and	r10,r5,r3
   4fa70:	4201ffcc 	andi	r8,r8,2047
   4fa74:	38c6703a 	and	r3,r7,r3
   4fa78:	280ad7fa 	srli	r5,r5,31
   4fa7c:	380ed7fa 	srli	r7,r7,31
   4fa80:	12401f26 	beq	r2,r9,4fb00 <__ledf2+0xac>
   4fa84:	0241ffc4 	movi	r9,2047
   4fa88:	42401426 	beq	r8,r9,4fadc <__ledf2+0x88>
   4fa8c:	1000091e 	bne	r2,zero,4fab4 <__ledf2+0x60>
   4fa90:	2296b03a 	or	r11,r4,r10
   4fa94:	5813003a 	cmpeq	r9,r11,zero
   4fa98:	29403fcc 	andi	r5,r5,255
   4fa9c:	40000a1e 	bne	r8,zero,4fac8 <__ledf2+0x74>
   4faa0:	30d8b03a 	or	r12,r6,r3
   4faa4:	6000081e 	bne	r12,zero,4fac8 <__ledf2+0x74>
   4faa8:	0005883a 	mov	r2,zero
   4faac:	5800111e 	bne	r11,zero,4faf4 <__ledf2+0xa0>
   4fab0:	f800283a 	ret
   4fab4:	29403fcc 	andi	r5,r5,255
   4fab8:	40000c1e 	bne	r8,zero,4faec <__ledf2+0x98>
   4fabc:	30d2b03a 	or	r9,r6,r3
   4fac0:	48000c26 	beq	r9,zero,4faf4 <__ledf2+0xa0>
   4fac4:	0013883a 	mov	r9,zero
   4fac8:	39c03fcc 	andi	r7,r7,255
   4facc:	48000826 	beq	r9,zero,4faf0 <__ledf2+0x9c>
   4fad0:	38001126 	beq	r7,zero,4fb18 <__ledf2+0xc4>
   4fad4:	00800044 	movi	r2,1
   4fad8:	f800283a 	ret
   4fadc:	30d2b03a 	or	r9,r6,r3
   4fae0:	483fea26 	beq	r9,zero,4fa8c <__alt_data_end+0xfffcfa8c>
   4fae4:	00800084 	movi	r2,2
   4fae8:	f800283a 	ret
   4faec:	39c03fcc 	andi	r7,r7,255
   4faf0:	39400726 	beq	r7,r5,4fb10 <__ledf2+0xbc>
   4faf4:	2800081e 	bne	r5,zero,4fb18 <__ledf2+0xc4>
   4faf8:	00800044 	movi	r2,1
   4fafc:	f800283a 	ret
   4fb00:	2292b03a 	or	r9,r4,r10
   4fb04:	483fdf26 	beq	r9,zero,4fa84 <__alt_data_end+0xfffcfa84>
   4fb08:	00800084 	movi	r2,2
   4fb0c:	f800283a 	ret
   4fb10:	4080030e 	bge	r8,r2,4fb20 <__ledf2+0xcc>
   4fb14:	383fef26 	beq	r7,zero,4fad4 <__alt_data_end+0xfffcfad4>
   4fb18:	00bfffc4 	movi	r2,-1
   4fb1c:	f800283a 	ret
   4fb20:	123feb16 	blt	r2,r8,4fad0 <__alt_data_end+0xfffcfad0>
   4fb24:	1abff336 	bltu	r3,r10,4faf4 <__alt_data_end+0xfffcfaf4>
   4fb28:	50c00326 	beq	r10,r3,4fb38 <__ledf2+0xe4>
   4fb2c:	50c0042e 	bgeu	r10,r3,4fb40 <__ledf2+0xec>
   4fb30:	283fe81e 	bne	r5,zero,4fad4 <__alt_data_end+0xfffcfad4>
   4fb34:	003ff806 	br	4fb18 <__alt_data_end+0xfffcfb18>
   4fb38:	313fee36 	bltu	r6,r4,4faf4 <__alt_data_end+0xfffcfaf4>
   4fb3c:	21bffc36 	bltu	r4,r6,4fb30 <__alt_data_end+0xfffcfb30>
   4fb40:	0005883a 	mov	r2,zero
   4fb44:	f800283a 	ret

0004fb48 <__floatunsidf>:
   4fb48:	defffe04 	addi	sp,sp,-8
   4fb4c:	dc000015 	stw	r16,0(sp)
   4fb50:	dfc00115 	stw	ra,4(sp)
   4fb54:	2021883a 	mov	r16,r4
   4fb58:	20002226 	beq	r4,zero,4fbe4 <__floatunsidf+0x9c>
   4fb5c:	00450040 	call	45004 <__clzsi2>
   4fb60:	01010784 	movi	r4,1054
   4fb64:	2089c83a 	sub	r4,r4,r2
   4fb68:	01810cc4 	movi	r6,1075
   4fb6c:	310dc83a 	sub	r6,r6,r4
   4fb70:	00c007c4 	movi	r3,31
   4fb74:	1980120e 	bge	r3,r6,4fbc0 <__floatunsidf+0x78>
   4fb78:	00c104c4 	movi	r3,1043
   4fb7c:	1907c83a 	sub	r3,r3,r4
   4fb80:	80ca983a 	sll	r5,r16,r3
   4fb84:	00800434 	movhi	r2,16
   4fb88:	10bfffc4 	addi	r2,r2,-1
   4fb8c:	2101ffcc 	andi	r4,r4,2047
   4fb90:	0021883a 	mov	r16,zero
   4fb94:	288a703a 	and	r5,r5,r2
   4fb98:	2008953a 	slli	r4,r4,20
   4fb9c:	00c00434 	movhi	r3,16
   4fba0:	18ffffc4 	addi	r3,r3,-1
   4fba4:	28c6703a 	and	r3,r5,r3
   4fba8:	8005883a 	mov	r2,r16
   4fbac:	1906b03a 	or	r3,r3,r4
   4fbb0:	dfc00117 	ldw	ra,4(sp)
   4fbb4:	dc000017 	ldw	r16,0(sp)
   4fbb8:	dec00204 	addi	sp,sp,8
   4fbbc:	f800283a 	ret
   4fbc0:	00c002c4 	movi	r3,11
   4fbc4:	188bc83a 	sub	r5,r3,r2
   4fbc8:	814ad83a 	srl	r5,r16,r5
   4fbcc:	00c00434 	movhi	r3,16
   4fbd0:	18ffffc4 	addi	r3,r3,-1
   4fbd4:	81a0983a 	sll	r16,r16,r6
   4fbd8:	2101ffcc 	andi	r4,r4,2047
   4fbdc:	28ca703a 	and	r5,r5,r3
   4fbe0:	003fed06 	br	4fb98 <__alt_data_end+0xfffcfb98>
   4fbe4:	0009883a 	mov	r4,zero
   4fbe8:	000b883a 	mov	r5,zero
   4fbec:	003fea06 	br	4fb98 <__alt_data_end+0xfffcfb98>

0004fbf0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4fbf0:	defffe04 	addi	sp,sp,-8
   4fbf4:	dfc00115 	stw	ra,4(sp)
   4fbf8:	df000015 	stw	fp,0(sp)
   4fbfc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4fc00:	d0a00b17 	ldw	r2,-32724(gp)
   4fc04:	10000326 	beq	r2,zero,4fc14 <alt_get_errno+0x24>
   4fc08:	d0a00b17 	ldw	r2,-32724(gp)
   4fc0c:	103ee83a 	callr	r2
   4fc10:	00000106 	br	4fc18 <alt_get_errno+0x28>
   4fc14:	d0a6d704 	addi	r2,gp,-25764
}
   4fc18:	e037883a 	mov	sp,fp
   4fc1c:	dfc00117 	ldw	ra,4(sp)
   4fc20:	df000017 	ldw	fp,0(sp)
   4fc24:	dec00204 	addi	sp,sp,8
   4fc28:	f800283a 	ret

0004fc2c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4fc2c:	defffb04 	addi	sp,sp,-20
   4fc30:	dfc00415 	stw	ra,16(sp)
   4fc34:	df000315 	stw	fp,12(sp)
   4fc38:	df000304 	addi	fp,sp,12
   4fc3c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4fc40:	e0bfff17 	ldw	r2,-4(fp)
   4fc44:	10000616 	blt	r2,zero,4fc60 <close+0x34>
   4fc48:	e0bfff17 	ldw	r2,-4(fp)
   4fc4c:	10c00324 	muli	r3,r2,12
   4fc50:	00800174 	movhi	r2,5
   4fc54:	108cdd04 	addi	r2,r2,13172
   4fc58:	1885883a 	add	r2,r3,r2
   4fc5c:	00000106 	br	4fc64 <close+0x38>
   4fc60:	0005883a 	mov	r2,zero
   4fc64:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   4fc68:	e0bffd17 	ldw	r2,-12(fp)
   4fc6c:	10001926 	beq	r2,zero,4fcd4 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4fc70:	e0bffd17 	ldw	r2,-12(fp)
   4fc74:	10800017 	ldw	r2,0(r2)
   4fc78:	10800417 	ldw	r2,16(r2)
   4fc7c:	10000626 	beq	r2,zero,4fc98 <close+0x6c>
   4fc80:	e0bffd17 	ldw	r2,-12(fp)
   4fc84:	10800017 	ldw	r2,0(r2)
   4fc88:	10800417 	ldw	r2,16(r2)
   4fc8c:	e13ffd17 	ldw	r4,-12(fp)
   4fc90:	103ee83a 	callr	r2
   4fc94:	00000106 	br	4fc9c <close+0x70>
   4fc98:	0005883a 	mov	r2,zero
   4fc9c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4fca0:	e13fff17 	ldw	r4,-4(fp)
   4fca4:	00502ec0 	call	502ec <alt_release_fd>
    if (rval < 0)
   4fca8:	e0bffe17 	ldw	r2,-8(fp)
   4fcac:	1000070e 	bge	r2,zero,4fccc <close+0xa0>
    {
      ALT_ERRNO = -rval;
   4fcb0:	004fbf00 	call	4fbf0 <alt_get_errno>
   4fcb4:	1007883a 	mov	r3,r2
   4fcb8:	e0bffe17 	ldw	r2,-8(fp)
   4fcbc:	0085c83a 	sub	r2,zero,r2
   4fcc0:	18800015 	stw	r2,0(r3)
      return -1;
   4fcc4:	00bfffc4 	movi	r2,-1
   4fcc8:	00000706 	br	4fce8 <close+0xbc>
    }
    return 0;
   4fccc:	0005883a 	mov	r2,zero
   4fcd0:	00000506 	br	4fce8 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4fcd4:	004fbf00 	call	4fbf0 <alt_get_errno>
   4fcd8:	1007883a 	mov	r3,r2
   4fcdc:	00801444 	movi	r2,81
   4fce0:	18800015 	stw	r2,0(r3)
    return -1;
   4fce4:	00bfffc4 	movi	r2,-1
  }
}
   4fce8:	e037883a 	mov	sp,fp
   4fcec:	dfc00117 	ldw	ra,4(sp)
   4fcf0:	df000017 	ldw	fp,0(sp)
   4fcf4:	dec00204 	addi	sp,sp,8
   4fcf8:	f800283a 	ret

0004fcfc <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4fcfc:	defffc04 	addi	sp,sp,-16
   4fd00:	df000315 	stw	fp,12(sp)
   4fd04:	df000304 	addi	fp,sp,12
   4fd08:	e13ffd15 	stw	r4,-12(fp)
   4fd0c:	e17ffe15 	stw	r5,-8(fp)
   4fd10:	e1bfff15 	stw	r6,-4(fp)
  return len;
   4fd14:	e0bfff17 	ldw	r2,-4(fp)
}
   4fd18:	e037883a 	mov	sp,fp
   4fd1c:	df000017 	ldw	fp,0(sp)
   4fd20:	dec00104 	addi	sp,sp,4
   4fd24:	f800283a 	ret

0004fd28 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4fd28:	defffe04 	addi	sp,sp,-8
   4fd2c:	dfc00115 	stw	ra,4(sp)
   4fd30:	df000015 	stw	fp,0(sp)
   4fd34:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4fd38:	d0a00b17 	ldw	r2,-32724(gp)
   4fd3c:	10000326 	beq	r2,zero,4fd4c <alt_get_errno+0x24>
   4fd40:	d0a00b17 	ldw	r2,-32724(gp)
   4fd44:	103ee83a 	callr	r2
   4fd48:	00000106 	br	4fd50 <alt_get_errno+0x28>
   4fd4c:	d0a6d704 	addi	r2,gp,-25764
}
   4fd50:	e037883a 	mov	sp,fp
   4fd54:	dfc00117 	ldw	ra,4(sp)
   4fd58:	df000017 	ldw	fp,0(sp)
   4fd5c:	dec00204 	addi	sp,sp,8
   4fd60:	f800283a 	ret

0004fd64 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4fd64:	defffb04 	addi	sp,sp,-20
   4fd68:	dfc00415 	stw	ra,16(sp)
   4fd6c:	df000315 	stw	fp,12(sp)
   4fd70:	df000304 	addi	fp,sp,12
   4fd74:	e13ffe15 	stw	r4,-8(fp)
   4fd78:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4fd7c:	e0bffe17 	ldw	r2,-8(fp)
   4fd80:	10000616 	blt	r2,zero,4fd9c <fstat+0x38>
   4fd84:	e0bffe17 	ldw	r2,-8(fp)
   4fd88:	10c00324 	muli	r3,r2,12
   4fd8c:	00800174 	movhi	r2,5
   4fd90:	108cdd04 	addi	r2,r2,13172
   4fd94:	1885883a 	add	r2,r3,r2
   4fd98:	00000106 	br	4fda0 <fstat+0x3c>
   4fd9c:	0005883a 	mov	r2,zero
   4fda0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   4fda4:	e0bffd17 	ldw	r2,-12(fp)
   4fda8:	10001026 	beq	r2,zero,4fdec <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4fdac:	e0bffd17 	ldw	r2,-12(fp)
   4fdb0:	10800017 	ldw	r2,0(r2)
   4fdb4:	10800817 	ldw	r2,32(r2)
   4fdb8:	10000726 	beq	r2,zero,4fdd8 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   4fdbc:	e0bffd17 	ldw	r2,-12(fp)
   4fdc0:	10800017 	ldw	r2,0(r2)
   4fdc4:	10800817 	ldw	r2,32(r2)
   4fdc8:	e17fff17 	ldw	r5,-4(fp)
   4fdcc:	e13ffd17 	ldw	r4,-12(fp)
   4fdd0:	103ee83a 	callr	r2
   4fdd4:	00000a06 	br	4fe00 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4fdd8:	e0bfff17 	ldw	r2,-4(fp)
   4fddc:	00c80004 	movi	r3,8192
   4fde0:	10c00115 	stw	r3,4(r2)
      return 0;
   4fde4:	0005883a 	mov	r2,zero
   4fde8:	00000506 	br	4fe00 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4fdec:	004fd280 	call	4fd28 <alt_get_errno>
   4fdf0:	1007883a 	mov	r3,r2
   4fdf4:	00801444 	movi	r2,81
   4fdf8:	18800015 	stw	r2,0(r3)
    return -1;
   4fdfc:	00bfffc4 	movi	r2,-1
  }
}
   4fe00:	e037883a 	mov	sp,fp
   4fe04:	dfc00117 	ldw	ra,4(sp)
   4fe08:	df000017 	ldw	fp,0(sp)
   4fe0c:	dec00204 	addi	sp,sp,8
   4fe10:	f800283a 	ret

0004fe14 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4fe14:	defffe04 	addi	sp,sp,-8
   4fe18:	dfc00115 	stw	ra,4(sp)
   4fe1c:	df000015 	stw	fp,0(sp)
   4fe20:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4fe24:	d0a00b17 	ldw	r2,-32724(gp)
   4fe28:	10000326 	beq	r2,zero,4fe38 <alt_get_errno+0x24>
   4fe2c:	d0a00b17 	ldw	r2,-32724(gp)
   4fe30:	103ee83a 	callr	r2
   4fe34:	00000106 	br	4fe3c <alt_get_errno+0x28>
   4fe38:	d0a6d704 	addi	r2,gp,-25764
}
   4fe3c:	e037883a 	mov	sp,fp
   4fe40:	dfc00117 	ldw	ra,4(sp)
   4fe44:	df000017 	ldw	fp,0(sp)
   4fe48:	dec00204 	addi	sp,sp,8
   4fe4c:	f800283a 	ret

0004fe50 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4fe50:	deffed04 	addi	sp,sp,-76
   4fe54:	dfc01215 	stw	ra,72(sp)
   4fe58:	df001115 	stw	fp,68(sp)
   4fe5c:	df001104 	addi	fp,sp,68
   4fe60:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4fe64:	e0bfff17 	ldw	r2,-4(fp)
   4fe68:	10000616 	blt	r2,zero,4fe84 <isatty+0x34>
   4fe6c:	e0bfff17 	ldw	r2,-4(fp)
   4fe70:	10c00324 	muli	r3,r2,12
   4fe74:	00800174 	movhi	r2,5
   4fe78:	108cdd04 	addi	r2,r2,13172
   4fe7c:	1885883a 	add	r2,r3,r2
   4fe80:	00000106 	br	4fe88 <isatty+0x38>
   4fe84:	0005883a 	mov	r2,zero
   4fe88:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   4fe8c:	e0bfef17 	ldw	r2,-68(fp)
   4fe90:	10000e26 	beq	r2,zero,4fecc <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4fe94:	e0bfef17 	ldw	r2,-68(fp)
   4fe98:	10800017 	ldw	r2,0(r2)
   4fe9c:	10800817 	ldw	r2,32(r2)
   4fea0:	1000021e 	bne	r2,zero,4feac <isatty+0x5c>
    {
      return 1;
   4fea4:	00800044 	movi	r2,1
   4fea8:	00000d06 	br	4fee0 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4feac:	e0bff004 	addi	r2,fp,-64
   4feb0:	100b883a 	mov	r5,r2
   4feb4:	e13fff17 	ldw	r4,-4(fp)
   4feb8:	004fd640 	call	4fd64 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4febc:	e0bff117 	ldw	r2,-60(fp)
   4fec0:	10880020 	cmpeqi	r2,r2,8192
   4fec4:	10803fcc 	andi	r2,r2,255
   4fec8:	00000506 	br	4fee0 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4fecc:	004fe140 	call	4fe14 <alt_get_errno>
   4fed0:	1007883a 	mov	r3,r2
   4fed4:	00801444 	movi	r2,81
   4fed8:	18800015 	stw	r2,0(r3)
    return 0;
   4fedc:	0005883a 	mov	r2,zero
  }
}
   4fee0:	e037883a 	mov	sp,fp
   4fee4:	dfc00117 	ldw	ra,4(sp)
   4fee8:	df000017 	ldw	fp,0(sp)
   4feec:	dec00204 	addi	sp,sp,8
   4fef0:	f800283a 	ret

0004fef4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4fef4:	defffc04 	addi	sp,sp,-16
   4fef8:	df000315 	stw	fp,12(sp)
   4fefc:	df000304 	addi	fp,sp,12
   4ff00:	e13ffd15 	stw	r4,-12(fp)
   4ff04:	e17ffe15 	stw	r5,-8(fp)
   4ff08:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   4ff0c:	e0fffe17 	ldw	r3,-8(fp)
   4ff10:	e0bffd17 	ldw	r2,-12(fp)
   4ff14:	18800c26 	beq	r3,r2,4ff48 <alt_load_section+0x54>
  {
    while( to != end )
   4ff18:	00000806 	br	4ff3c <alt_load_section+0x48>
    {
      *to++ = *from++;
   4ff1c:	e0bffe17 	ldw	r2,-8(fp)
   4ff20:	10c00104 	addi	r3,r2,4
   4ff24:	e0fffe15 	stw	r3,-8(fp)
   4ff28:	e0fffd17 	ldw	r3,-12(fp)
   4ff2c:	19000104 	addi	r4,r3,4
   4ff30:	e13ffd15 	stw	r4,-12(fp)
   4ff34:	18c00017 	ldw	r3,0(r3)
   4ff38:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   4ff3c:	e0fffe17 	ldw	r3,-8(fp)
   4ff40:	e0bfff17 	ldw	r2,-4(fp)
   4ff44:	18bff51e 	bne	r3,r2,4ff1c <__alt_data_end+0xfffcff1c>
    {
      *to++ = *from++;
    }
  }
}
   4ff48:	0001883a 	nop
   4ff4c:	e037883a 	mov	sp,fp
   4ff50:	df000017 	ldw	fp,0(sp)
   4ff54:	dec00104 	addi	sp,sp,4
   4ff58:	f800283a 	ret

0004ff5c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4ff5c:	defffe04 	addi	sp,sp,-8
   4ff60:	dfc00115 	stw	ra,4(sp)
   4ff64:	df000015 	stw	fp,0(sp)
   4ff68:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4ff6c:	01800174 	movhi	r6,5
   4ff70:	31916504 	addi	r6,r6,17812
   4ff74:	01400174 	movhi	r5,5
   4ff78:	294aaa04 	addi	r5,r5,10920
   4ff7c:	01000174 	movhi	r4,5
   4ff80:	21116504 	addi	r4,r4,17812
   4ff84:	004fef40 	call	4fef4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4ff88:	01800134 	movhi	r6,4
   4ff8c:	31809104 	addi	r6,r6,580
   4ff90:	01400134 	movhi	r5,4
   4ff94:	29400804 	addi	r5,r5,32
   4ff98:	01000134 	movhi	r4,4
   4ff9c:	21000804 	addi	r4,r4,32
   4ffa0:	004fef40 	call	4fef4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4ffa4:	01800174 	movhi	r6,5
   4ffa8:	318aaa04 	addi	r6,r6,10920
   4ffac:	01400174 	movhi	r5,5
   4ffb0:	29490c04 	addi	r5,r5,9264
   4ffb4:	01000174 	movhi	r4,5
   4ffb8:	21090c04 	addi	r4,r4,9264
   4ffbc:	004fef40 	call	4fef4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4ffc0:	005131c0 	call	5131c <alt_dcache_flush_all>
  alt_icache_flush_all();
   4ffc4:	00515040 	call	51504 <alt_icache_flush_all>
}
   4ffc8:	0001883a 	nop
   4ffcc:	e037883a 	mov	sp,fp
   4ffd0:	dfc00117 	ldw	ra,4(sp)
   4ffd4:	df000017 	ldw	fp,0(sp)
   4ffd8:	dec00204 	addi	sp,sp,8
   4ffdc:	f800283a 	ret

0004ffe0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4ffe0:	defffe04 	addi	sp,sp,-8
   4ffe4:	dfc00115 	stw	ra,4(sp)
   4ffe8:	df000015 	stw	fp,0(sp)
   4ffec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4fff0:	d0a00b17 	ldw	r2,-32724(gp)
   4fff4:	10000326 	beq	r2,zero,50004 <alt_get_errno+0x24>
   4fff8:	d0a00b17 	ldw	r2,-32724(gp)
   4fffc:	103ee83a 	callr	r2
   50000:	00000106 	br	50008 <alt_get_errno+0x28>
   50004:	d0a6d704 	addi	r2,gp,-25764
}
   50008:	e037883a 	mov	sp,fp
   5000c:	dfc00117 	ldw	ra,4(sp)
   50010:	df000017 	ldw	fp,0(sp)
   50014:	dec00204 	addi	sp,sp,8
   50018:	f800283a 	ret

0005001c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   5001c:	defff904 	addi	sp,sp,-28
   50020:	dfc00615 	stw	ra,24(sp)
   50024:	df000515 	stw	fp,20(sp)
   50028:	df000504 	addi	fp,sp,20
   5002c:	e13ffd15 	stw	r4,-12(fp)
   50030:	e17ffe15 	stw	r5,-8(fp)
   50034:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   50038:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   5003c:	e0bffd17 	ldw	r2,-12(fp)
   50040:	10000616 	blt	r2,zero,5005c <lseek+0x40>
   50044:	e0bffd17 	ldw	r2,-12(fp)
   50048:	10c00324 	muli	r3,r2,12
   5004c:	00800174 	movhi	r2,5
   50050:	108cdd04 	addi	r2,r2,13172
   50054:	1885883a 	add	r2,r3,r2
   50058:	00000106 	br	50060 <lseek+0x44>
   5005c:	0005883a 	mov	r2,zero
   50060:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   50064:	e0bffc17 	ldw	r2,-16(fp)
   50068:	10001026 	beq	r2,zero,500ac <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   5006c:	e0bffc17 	ldw	r2,-16(fp)
   50070:	10800017 	ldw	r2,0(r2)
   50074:	10800717 	ldw	r2,28(r2)
   50078:	10000926 	beq	r2,zero,500a0 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   5007c:	e0bffc17 	ldw	r2,-16(fp)
   50080:	10800017 	ldw	r2,0(r2)
   50084:	10800717 	ldw	r2,28(r2)
   50088:	e1bfff17 	ldw	r6,-4(fp)
   5008c:	e17ffe17 	ldw	r5,-8(fp)
   50090:	e13ffc17 	ldw	r4,-16(fp)
   50094:	103ee83a 	callr	r2
   50098:	e0bffb15 	stw	r2,-20(fp)
   5009c:	00000506 	br	500b4 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   500a0:	00bfde84 	movi	r2,-134
   500a4:	e0bffb15 	stw	r2,-20(fp)
   500a8:	00000206 	br	500b4 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   500ac:	00bfebc4 	movi	r2,-81
   500b0:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   500b4:	e0bffb17 	ldw	r2,-20(fp)
   500b8:	1000070e 	bge	r2,zero,500d8 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   500bc:	004ffe00 	call	4ffe0 <alt_get_errno>
   500c0:	1007883a 	mov	r3,r2
   500c4:	e0bffb17 	ldw	r2,-20(fp)
   500c8:	0085c83a 	sub	r2,zero,r2
   500cc:	18800015 	stw	r2,0(r3)
    rc = -1;
   500d0:	00bfffc4 	movi	r2,-1
   500d4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   500d8:	e0bffb17 	ldw	r2,-20(fp)
}
   500dc:	e037883a 	mov	sp,fp
   500e0:	dfc00117 	ldw	ra,4(sp)
   500e4:	df000017 	ldw	fp,0(sp)
   500e8:	dec00204 	addi	sp,sp,8
   500ec:	f800283a 	ret

000500f0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   500f0:	defffd04 	addi	sp,sp,-12
   500f4:	dfc00215 	stw	ra,8(sp)
   500f8:	df000115 	stw	fp,4(sp)
   500fc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   50100:	0009883a 	mov	r4,zero
   50104:	00505680 	call	50568 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   50108:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   5010c:	00505a00 	call	505a0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   50110:	01800174 	movhi	r6,5
   50114:	318aa004 	addi	r6,r6,10880
   50118:	01400174 	movhi	r5,5
   5011c:	294aa004 	addi	r5,r5,10880
   50120:	01000174 	movhi	r4,5
   50124:	210aa004 	addi	r4,r4,10880
   50128:	005189c0 	call	5189c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   5012c:	00514440 	call	51444 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   50130:	01000174 	movhi	r4,5
   50134:	21052904 	addi	r4,r4,5284
   50138:	005209c0 	call	5209c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   5013c:	d0a6d817 	ldw	r2,-25760(gp)
   50140:	d0e6d917 	ldw	r3,-25756(gp)
   50144:	d126da17 	ldw	r4,-25752(gp)
   50148:	200d883a 	mov	r6,r4
   5014c:	180b883a 	mov	r5,r3
   50150:	1009883a 	mov	r4,r2
   50154:	0040c440 	call	40c44 <main>
   50158:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   5015c:	01000044 	movi	r4,1
   50160:	004fc2c0 	call	4fc2c <close>
  exit (result);
   50164:	e13fff17 	ldw	r4,-4(fp)
   50168:	00520b00 	call	520b0 <exit>

0005016c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   5016c:	defffe04 	addi	sp,sp,-8
   50170:	df000115 	stw	fp,4(sp)
   50174:	df000104 	addi	fp,sp,4
   50178:	e13fff15 	stw	r4,-4(fp)
}
   5017c:	0001883a 	nop
   50180:	e037883a 	mov	sp,fp
   50184:	df000017 	ldw	fp,0(sp)
   50188:	dec00104 	addi	sp,sp,4
   5018c:	f800283a 	ret

00050190 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   50190:	defffe04 	addi	sp,sp,-8
   50194:	df000115 	stw	fp,4(sp)
   50198:	df000104 	addi	fp,sp,4
   5019c:	e13fff15 	stw	r4,-4(fp)
}
   501a0:	0001883a 	nop
   501a4:	e037883a 	mov	sp,fp
   501a8:	df000017 	ldw	fp,0(sp)
   501ac:	dec00104 	addi	sp,sp,4
   501b0:	f800283a 	ret

000501b4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   501b4:	defffe04 	addi	sp,sp,-8
   501b8:	dfc00115 	stw	ra,4(sp)
   501bc:	df000015 	stw	fp,0(sp)
   501c0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   501c4:	d0a00b17 	ldw	r2,-32724(gp)
   501c8:	10000326 	beq	r2,zero,501d8 <alt_get_errno+0x24>
   501cc:	d0a00b17 	ldw	r2,-32724(gp)
   501d0:	103ee83a 	callr	r2
   501d4:	00000106 	br	501dc <alt_get_errno+0x28>
   501d8:	d0a6d704 	addi	r2,gp,-25764
}
   501dc:	e037883a 	mov	sp,fp
   501e0:	dfc00117 	ldw	ra,4(sp)
   501e4:	df000017 	ldw	fp,0(sp)
   501e8:	dec00204 	addi	sp,sp,8
   501ec:	f800283a 	ret

000501f0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   501f0:	defff904 	addi	sp,sp,-28
   501f4:	dfc00615 	stw	ra,24(sp)
   501f8:	df000515 	stw	fp,20(sp)
   501fc:	df000504 	addi	fp,sp,20
   50200:	e13ffd15 	stw	r4,-12(fp)
   50204:	e17ffe15 	stw	r5,-8(fp)
   50208:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   5020c:	e0bffd17 	ldw	r2,-12(fp)
   50210:	10000616 	blt	r2,zero,5022c <read+0x3c>
   50214:	e0bffd17 	ldw	r2,-12(fp)
   50218:	10c00324 	muli	r3,r2,12
   5021c:	00800174 	movhi	r2,5
   50220:	108cdd04 	addi	r2,r2,13172
   50224:	1885883a 	add	r2,r3,r2
   50228:	00000106 	br	50230 <read+0x40>
   5022c:	0005883a 	mov	r2,zero
   50230:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   50234:	e0bffb17 	ldw	r2,-20(fp)
   50238:	10002226 	beq	r2,zero,502c4 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   5023c:	e0bffb17 	ldw	r2,-20(fp)
   50240:	10800217 	ldw	r2,8(r2)
   50244:	108000cc 	andi	r2,r2,3
   50248:	10800060 	cmpeqi	r2,r2,1
   5024c:	1000181e 	bne	r2,zero,502b0 <read+0xc0>
        (fd->dev->read))
   50250:	e0bffb17 	ldw	r2,-20(fp)
   50254:	10800017 	ldw	r2,0(r2)
   50258:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   5025c:	10001426 	beq	r2,zero,502b0 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   50260:	e0bffb17 	ldw	r2,-20(fp)
   50264:	10800017 	ldw	r2,0(r2)
   50268:	10800517 	ldw	r2,20(r2)
   5026c:	e0ffff17 	ldw	r3,-4(fp)
   50270:	180d883a 	mov	r6,r3
   50274:	e17ffe17 	ldw	r5,-8(fp)
   50278:	e13ffb17 	ldw	r4,-20(fp)
   5027c:	103ee83a 	callr	r2
   50280:	e0bffc15 	stw	r2,-16(fp)
   50284:	e0bffc17 	ldw	r2,-16(fp)
   50288:	1000070e 	bge	r2,zero,502a8 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   5028c:	00501b40 	call	501b4 <alt_get_errno>
   50290:	1007883a 	mov	r3,r2
   50294:	e0bffc17 	ldw	r2,-16(fp)
   50298:	0085c83a 	sub	r2,zero,r2
   5029c:	18800015 	stw	r2,0(r3)
          return -1;
   502a0:	00bfffc4 	movi	r2,-1
   502a4:	00000c06 	br	502d8 <read+0xe8>
        }
        return rval;
   502a8:	e0bffc17 	ldw	r2,-16(fp)
   502ac:	00000a06 	br	502d8 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   502b0:	00501b40 	call	501b4 <alt_get_errno>
   502b4:	1007883a 	mov	r3,r2
   502b8:	00800344 	movi	r2,13
   502bc:	18800015 	stw	r2,0(r3)
   502c0:	00000406 	br	502d4 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   502c4:	00501b40 	call	501b4 <alt_get_errno>
   502c8:	1007883a 	mov	r3,r2
   502cc:	00801444 	movi	r2,81
   502d0:	18800015 	stw	r2,0(r3)
  }
  return -1;
   502d4:	00bfffc4 	movi	r2,-1
}
   502d8:	e037883a 	mov	sp,fp
   502dc:	dfc00117 	ldw	ra,4(sp)
   502e0:	df000017 	ldw	fp,0(sp)
   502e4:	dec00204 	addi	sp,sp,8
   502e8:	f800283a 	ret

000502ec <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   502ec:	defffe04 	addi	sp,sp,-8
   502f0:	df000115 	stw	fp,4(sp)
   502f4:	df000104 	addi	fp,sp,4
   502f8:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   502fc:	e0bfff17 	ldw	r2,-4(fp)
   50300:	108000d0 	cmplti	r2,r2,3
   50304:	10000d1e 	bne	r2,zero,5033c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   50308:	00800174 	movhi	r2,5
   5030c:	108cdd04 	addi	r2,r2,13172
   50310:	e0ffff17 	ldw	r3,-4(fp)
   50314:	18c00324 	muli	r3,r3,12
   50318:	10c5883a 	add	r2,r2,r3
   5031c:	10800204 	addi	r2,r2,8
   50320:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   50324:	00800174 	movhi	r2,5
   50328:	108cdd04 	addi	r2,r2,13172
   5032c:	e0ffff17 	ldw	r3,-4(fp)
   50330:	18c00324 	muli	r3,r3,12
   50334:	10c5883a 	add	r2,r2,r3
   50338:	10000015 	stw	zero,0(r2)
  }
}
   5033c:	0001883a 	nop
   50340:	e037883a 	mov	sp,fp
   50344:	df000017 	ldw	fp,0(sp)
   50348:	dec00104 	addi	sp,sp,4
   5034c:	f800283a 	ret

00050350 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   50350:	defff904 	addi	sp,sp,-28
   50354:	df000615 	stw	fp,24(sp)
   50358:	df000604 	addi	fp,sp,24
   5035c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50360:	0005303a 	rdctl	r2,status
   50364:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50368:	e0fffe17 	ldw	r3,-8(fp)
   5036c:	00bfff84 	movi	r2,-2
   50370:	1884703a 	and	r2,r3,r2
   50374:	1001703a 	wrctl	status,r2
  
  return context;
   50378:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   5037c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   50380:	d0a00c17 	ldw	r2,-32720(gp)
   50384:	10c000c4 	addi	r3,r2,3
   50388:	00bfff04 	movi	r2,-4
   5038c:	1884703a 	and	r2,r3,r2
   50390:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   50394:	d0e00c17 	ldw	r3,-32720(gp)
   50398:	e0bfff17 	ldw	r2,-4(fp)
   5039c:	1887883a 	add	r3,r3,r2
   503a0:	00800234 	movhi	r2,8
   503a4:	10800004 	addi	r2,r2,0
   503a8:	10c0062e 	bgeu	r2,r3,503c4 <sbrk+0x74>
   503ac:	e0bffb17 	ldw	r2,-20(fp)
   503b0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   503b4:	e0bffa17 	ldw	r2,-24(fp)
   503b8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   503bc:	00bfffc4 	movi	r2,-1
   503c0:	00000b06 	br	503f0 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   503c4:	d0a00c17 	ldw	r2,-32720(gp)
   503c8:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   503cc:	d0e00c17 	ldw	r3,-32720(gp)
   503d0:	e0bfff17 	ldw	r2,-4(fp)
   503d4:	1885883a 	add	r2,r3,r2
   503d8:	d0a00c15 	stw	r2,-32720(gp)
   503dc:	e0bffb17 	ldw	r2,-20(fp)
   503e0:	e0bffc15 	stw	r2,-16(fp)
   503e4:	e0bffc17 	ldw	r2,-16(fp)
   503e8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   503ec:	e0bffd17 	ldw	r2,-12(fp)
} 
   503f0:	e037883a 	mov	sp,fp
   503f4:	df000017 	ldw	fp,0(sp)
   503f8:	dec00104 	addi	sp,sp,4
   503fc:	f800283a 	ret

00050400 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   50400:	defffe04 	addi	sp,sp,-8
   50404:	dfc00115 	stw	ra,4(sp)
   50408:	df000015 	stw	fp,0(sp)
   5040c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   50410:	d0a00b17 	ldw	r2,-32724(gp)
   50414:	10000326 	beq	r2,zero,50424 <alt_get_errno+0x24>
   50418:	d0a00b17 	ldw	r2,-32724(gp)
   5041c:	103ee83a 	callr	r2
   50420:	00000106 	br	50428 <alt_get_errno+0x28>
   50424:	d0a6d704 	addi	r2,gp,-25764
}
   50428:	e037883a 	mov	sp,fp
   5042c:	dfc00117 	ldw	ra,4(sp)
   50430:	df000017 	ldw	fp,0(sp)
   50434:	dec00204 	addi	sp,sp,8
   50438:	f800283a 	ret

0005043c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   5043c:	defff904 	addi	sp,sp,-28
   50440:	dfc00615 	stw	ra,24(sp)
   50444:	df000515 	stw	fp,20(sp)
   50448:	df000504 	addi	fp,sp,20
   5044c:	e13ffd15 	stw	r4,-12(fp)
   50450:	e17ffe15 	stw	r5,-8(fp)
   50454:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   50458:	e0bffd17 	ldw	r2,-12(fp)
   5045c:	10000616 	blt	r2,zero,50478 <write+0x3c>
   50460:	e0bffd17 	ldw	r2,-12(fp)
   50464:	10c00324 	muli	r3,r2,12
   50468:	00800174 	movhi	r2,5
   5046c:	108cdd04 	addi	r2,r2,13172
   50470:	1885883a 	add	r2,r3,r2
   50474:	00000106 	br	5047c <write+0x40>
   50478:	0005883a 	mov	r2,zero
   5047c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   50480:	e0bffb17 	ldw	r2,-20(fp)
   50484:	10002126 	beq	r2,zero,5050c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   50488:	e0bffb17 	ldw	r2,-20(fp)
   5048c:	10800217 	ldw	r2,8(r2)
   50490:	108000cc 	andi	r2,r2,3
   50494:	10001826 	beq	r2,zero,504f8 <write+0xbc>
   50498:	e0bffb17 	ldw	r2,-20(fp)
   5049c:	10800017 	ldw	r2,0(r2)
   504a0:	10800617 	ldw	r2,24(r2)
   504a4:	10001426 	beq	r2,zero,504f8 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   504a8:	e0bffb17 	ldw	r2,-20(fp)
   504ac:	10800017 	ldw	r2,0(r2)
   504b0:	10800617 	ldw	r2,24(r2)
   504b4:	e0ffff17 	ldw	r3,-4(fp)
   504b8:	180d883a 	mov	r6,r3
   504bc:	e17ffe17 	ldw	r5,-8(fp)
   504c0:	e13ffb17 	ldw	r4,-20(fp)
   504c4:	103ee83a 	callr	r2
   504c8:	e0bffc15 	stw	r2,-16(fp)
   504cc:	e0bffc17 	ldw	r2,-16(fp)
   504d0:	1000070e 	bge	r2,zero,504f0 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   504d4:	00504000 	call	50400 <alt_get_errno>
   504d8:	1007883a 	mov	r3,r2
   504dc:	e0bffc17 	ldw	r2,-16(fp)
   504e0:	0085c83a 	sub	r2,zero,r2
   504e4:	18800015 	stw	r2,0(r3)
        return -1;
   504e8:	00bfffc4 	movi	r2,-1
   504ec:	00000c06 	br	50520 <write+0xe4>
      }
      return rval;
   504f0:	e0bffc17 	ldw	r2,-16(fp)
   504f4:	00000a06 	br	50520 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   504f8:	00504000 	call	50400 <alt_get_errno>
   504fc:	1007883a 	mov	r3,r2
   50500:	00800344 	movi	r2,13
   50504:	18800015 	stw	r2,0(r3)
   50508:	00000406 	br	5051c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   5050c:	00504000 	call	50400 <alt_get_errno>
   50510:	1007883a 	mov	r3,r2
   50514:	00801444 	movi	r2,81
   50518:	18800015 	stw	r2,0(r3)
  }
  return -1;
   5051c:	00bfffc4 	movi	r2,-1
}
   50520:	e037883a 	mov	sp,fp
   50524:	dfc00117 	ldw	ra,4(sp)
   50528:	df000017 	ldw	fp,0(sp)
   5052c:	dec00204 	addi	sp,sp,8
   50530:	f800283a 	ret

00050534 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   50534:	defffd04 	addi	sp,sp,-12
   50538:	dfc00215 	stw	ra,8(sp)
   5053c:	df000115 	stw	fp,4(sp)
   50540:	df000104 	addi	fp,sp,4
   50544:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   50548:	d1600804 	addi	r5,gp,-32736
   5054c:	e13fff17 	ldw	r4,-4(fp)
   50550:	00513a00 	call	513a0 <alt_dev_llist_insert>
}
   50554:	e037883a 	mov	sp,fp
   50558:	dfc00117 	ldw	ra,4(sp)
   5055c:	df000017 	ldw	fp,0(sp)
   50560:	dec00204 	addi	sp,sp,8
   50564:	f800283a 	ret

00050568 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   50568:	defffd04 	addi	sp,sp,-12
   5056c:	dfc00215 	stw	ra,8(sp)
   50570:	df000115 	stw	fp,4(sp)
   50574:	df000104 	addi	fp,sp,4
   50578:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   5057c:	0051d100 	call	51d10 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   50580:	00800044 	movi	r2,1
   50584:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   50588:	0001883a 	nop
   5058c:	e037883a 	mov	sp,fp
   50590:	dfc00117 	ldw	ra,4(sp)
   50594:	df000017 	ldw	fp,0(sp)
   50598:	dec00204 	addi	sp,sp,8
   5059c:	f800283a 	ret

000505a0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   505a0:	defffe04 	addi	sp,sp,-8
   505a4:	dfc00115 	stw	ra,4(sp)
   505a8:	df000015 	stw	fp,0(sp)
   505ac:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   505b0:	000d883a 	mov	r6,zero
   505b4:	000b883a 	mov	r5,zero
   505b8:	01000174 	movhi	r4,5
   505bc:	210d4704 	addi	r4,r4,13596
   505c0:	005075c0 	call	5075c <altera_avalon_jtag_uart_init>
   505c4:	01000174 	movhi	r4,5
   505c8:	210d3d04 	addi	r4,r4,13556
   505cc:	00505340 	call	50534 <alt_dev_reg>
    ALTERA_AVALON_PERFORMANCE_COUNTER_INIT ( PERFORMANCE_COUNTER_0, performance_counter_0);
   505d0:	00c00044 	movi	r3,1
   505d4:	00800234 	movhi	r2,8
   505d8:	10861004 	addi	r2,r2,6208
   505dc:	10c00035 	stwio	r3,0(r2)
}
   505e0:	0001883a 	nop
   505e4:	e037883a 	mov	sp,fp
   505e8:	dfc00117 	ldw	ra,4(sp)
   505ec:	df000017 	ldw	fp,0(sp)
   505f0:	dec00204 	addi	sp,sp,8
   505f4:	f800283a 	ret

000505f8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   505f8:	defffa04 	addi	sp,sp,-24
   505fc:	dfc00515 	stw	ra,20(sp)
   50600:	df000415 	stw	fp,16(sp)
   50604:	df000404 	addi	fp,sp,16
   50608:	e13ffd15 	stw	r4,-12(fp)
   5060c:	e17ffe15 	stw	r5,-8(fp)
   50610:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   50614:	e0bffd17 	ldw	r2,-12(fp)
   50618:	10800017 	ldw	r2,0(r2)
   5061c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   50620:	e0bffc17 	ldw	r2,-16(fp)
   50624:	10c00a04 	addi	r3,r2,40
   50628:	e0bffd17 	ldw	r2,-12(fp)
   5062c:	10800217 	ldw	r2,8(r2)
   50630:	100f883a 	mov	r7,r2
   50634:	e1bfff17 	ldw	r6,-4(fp)
   50638:	e17ffe17 	ldw	r5,-8(fp)
   5063c:	1809883a 	mov	r4,r3
   50640:	0050c200 	call	50c20 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   50644:	e037883a 	mov	sp,fp
   50648:	dfc00117 	ldw	ra,4(sp)
   5064c:	df000017 	ldw	fp,0(sp)
   50650:	dec00204 	addi	sp,sp,8
   50654:	f800283a 	ret

00050658 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   50658:	defffa04 	addi	sp,sp,-24
   5065c:	dfc00515 	stw	ra,20(sp)
   50660:	df000415 	stw	fp,16(sp)
   50664:	df000404 	addi	fp,sp,16
   50668:	e13ffd15 	stw	r4,-12(fp)
   5066c:	e17ffe15 	stw	r5,-8(fp)
   50670:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   50674:	e0bffd17 	ldw	r2,-12(fp)
   50678:	10800017 	ldw	r2,0(r2)
   5067c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   50680:	e0bffc17 	ldw	r2,-16(fp)
   50684:	10c00a04 	addi	r3,r2,40
   50688:	e0bffd17 	ldw	r2,-12(fp)
   5068c:	10800217 	ldw	r2,8(r2)
   50690:	100f883a 	mov	r7,r2
   50694:	e1bfff17 	ldw	r6,-4(fp)
   50698:	e17ffe17 	ldw	r5,-8(fp)
   5069c:	1809883a 	mov	r4,r3
   506a0:	0050e3c0 	call	50e3c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   506a4:	e037883a 	mov	sp,fp
   506a8:	dfc00117 	ldw	ra,4(sp)
   506ac:	df000017 	ldw	fp,0(sp)
   506b0:	dec00204 	addi	sp,sp,8
   506b4:	f800283a 	ret

000506b8 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   506b8:	defffc04 	addi	sp,sp,-16
   506bc:	dfc00315 	stw	ra,12(sp)
   506c0:	df000215 	stw	fp,8(sp)
   506c4:	df000204 	addi	fp,sp,8
   506c8:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   506cc:	e0bfff17 	ldw	r2,-4(fp)
   506d0:	10800017 	ldw	r2,0(r2)
   506d4:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   506d8:	e0bffe17 	ldw	r2,-8(fp)
   506dc:	10c00a04 	addi	r3,r2,40
   506e0:	e0bfff17 	ldw	r2,-4(fp)
   506e4:	10800217 	ldw	r2,8(r2)
   506e8:	100b883a 	mov	r5,r2
   506ec:	1809883a 	mov	r4,r3
   506f0:	0050ac80 	call	50ac8 <altera_avalon_jtag_uart_close>
}
   506f4:	e037883a 	mov	sp,fp
   506f8:	dfc00117 	ldw	ra,4(sp)
   506fc:	df000017 	ldw	fp,0(sp)
   50700:	dec00204 	addi	sp,sp,8
   50704:	f800283a 	ret

00050708 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   50708:	defffa04 	addi	sp,sp,-24
   5070c:	dfc00515 	stw	ra,20(sp)
   50710:	df000415 	stw	fp,16(sp)
   50714:	df000404 	addi	fp,sp,16
   50718:	e13ffd15 	stw	r4,-12(fp)
   5071c:	e17ffe15 	stw	r5,-8(fp)
   50720:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   50724:	e0bffd17 	ldw	r2,-12(fp)
   50728:	10800017 	ldw	r2,0(r2)
   5072c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   50730:	e0bffc17 	ldw	r2,-16(fp)
   50734:	10800a04 	addi	r2,r2,40
   50738:	e1bfff17 	ldw	r6,-4(fp)
   5073c:	e17ffe17 	ldw	r5,-8(fp)
   50740:	1009883a 	mov	r4,r2
   50744:	0050b300 	call	50b30 <altera_avalon_jtag_uart_ioctl>
}
   50748:	e037883a 	mov	sp,fp
   5074c:	dfc00117 	ldw	ra,4(sp)
   50750:	df000017 	ldw	fp,0(sp)
   50754:	dec00204 	addi	sp,sp,8
   50758:	f800283a 	ret

0005075c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   5075c:	defffa04 	addi	sp,sp,-24
   50760:	dfc00515 	stw	ra,20(sp)
   50764:	df000415 	stw	fp,16(sp)
   50768:	df000404 	addi	fp,sp,16
   5076c:	e13ffd15 	stw	r4,-12(fp)
   50770:	e17ffe15 	stw	r5,-8(fp)
   50774:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   50778:	e0bffd17 	ldw	r2,-12(fp)
   5077c:	00c00044 	movi	r3,1
   50780:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   50784:	e0bffd17 	ldw	r2,-12(fp)
   50788:	10800017 	ldw	r2,0(r2)
   5078c:	10800104 	addi	r2,r2,4
   50790:	1007883a 	mov	r3,r2
   50794:	e0bffd17 	ldw	r2,-12(fp)
   50798:	10800817 	ldw	r2,32(r2)
   5079c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   507a0:	e0bffe17 	ldw	r2,-8(fp)
   507a4:	e0ffff17 	ldw	r3,-4(fp)
   507a8:	d8000015 	stw	zero,0(sp)
   507ac:	e1fffd17 	ldw	r7,-12(fp)
   507b0:	01800174 	movhi	r6,5
   507b4:	31820704 	addi	r6,r6,2076
   507b8:	180b883a 	mov	r5,r3
   507bc:	1009883a 	mov	r4,r2
   507c0:	00515380 	call	51538 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   507c4:	e0bffd17 	ldw	r2,-12(fp)
   507c8:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   507cc:	e0bffd17 	ldw	r2,-12(fp)
   507d0:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   507d4:	d0e6dc17 	ldw	r3,-25744(gp)
   507d8:	e1fffd17 	ldw	r7,-12(fp)
   507dc:	01800174 	movhi	r6,5
   507e0:	31828a04 	addi	r6,r6,2600
   507e4:	180b883a 	mov	r5,r3
   507e8:	1009883a 	mov	r4,r2
   507ec:	00511f00 	call	511f0 <alt_alarm_start>
   507f0:	1000040e 	bge	r2,zero,50804 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   507f4:	e0fffd17 	ldw	r3,-12(fp)
   507f8:	00a00034 	movhi	r2,32768
   507fc:	10bfffc4 	addi	r2,r2,-1
   50800:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   50804:	0001883a 	nop
   50808:	e037883a 	mov	sp,fp
   5080c:	dfc00117 	ldw	ra,4(sp)
   50810:	df000017 	ldw	fp,0(sp)
   50814:	dec00204 	addi	sp,sp,8
   50818:	f800283a 	ret

0005081c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   5081c:	defff804 	addi	sp,sp,-32
   50820:	df000715 	stw	fp,28(sp)
   50824:	df000704 	addi	fp,sp,28
   50828:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   5082c:	e0bfff17 	ldw	r2,-4(fp)
   50830:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   50834:	e0bffb17 	ldw	r2,-20(fp)
   50838:	10800017 	ldw	r2,0(r2)
   5083c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   50840:	e0bffc17 	ldw	r2,-16(fp)
   50844:	10800104 	addi	r2,r2,4
   50848:	10800037 	ldwio	r2,0(r2)
   5084c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   50850:	e0bffd17 	ldw	r2,-12(fp)
   50854:	1080c00c 	andi	r2,r2,768
   50858:	10006d26 	beq	r2,zero,50a10 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   5085c:	e0bffd17 	ldw	r2,-12(fp)
   50860:	1080400c 	andi	r2,r2,256
   50864:	10003526 	beq	r2,zero,5093c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   50868:	00800074 	movhi	r2,1
   5086c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   50870:	e0bffb17 	ldw	r2,-20(fp)
   50874:	10800a17 	ldw	r2,40(r2)
   50878:	10800044 	addi	r2,r2,1
   5087c:	1081ffcc 	andi	r2,r2,2047
   50880:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   50884:	e0bffb17 	ldw	r2,-20(fp)
   50888:	10c00b17 	ldw	r3,44(r2)
   5088c:	e0bffe17 	ldw	r2,-8(fp)
   50890:	18801526 	beq	r3,r2,508e8 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   50894:	e0bffc17 	ldw	r2,-16(fp)
   50898:	10800037 	ldwio	r2,0(r2)
   5089c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   508a0:	e0bff917 	ldw	r2,-28(fp)
   508a4:	10a0000c 	andi	r2,r2,32768
   508a8:	10001126 	beq	r2,zero,508f0 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   508ac:	e0bffb17 	ldw	r2,-20(fp)
   508b0:	10800a17 	ldw	r2,40(r2)
   508b4:	e0fff917 	ldw	r3,-28(fp)
   508b8:	1809883a 	mov	r4,r3
   508bc:	e0fffb17 	ldw	r3,-20(fp)
   508c0:	1885883a 	add	r2,r3,r2
   508c4:	10800e04 	addi	r2,r2,56
   508c8:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   508cc:	e0bffb17 	ldw	r2,-20(fp)
   508d0:	10800a17 	ldw	r2,40(r2)
   508d4:	10800044 	addi	r2,r2,1
   508d8:	10c1ffcc 	andi	r3,r2,2047
   508dc:	e0bffb17 	ldw	r2,-20(fp)
   508e0:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   508e4:	003fe206 	br	50870 <__alt_data_end+0xfffd0870>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   508e8:	0001883a 	nop
   508ec:	00000106 	br	508f4 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   508f0:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   508f4:	e0bff917 	ldw	r2,-28(fp)
   508f8:	10bfffec 	andhi	r2,r2,65535
   508fc:	10000f26 	beq	r2,zero,5093c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   50900:	e0bffb17 	ldw	r2,-20(fp)
   50904:	10c00817 	ldw	r3,32(r2)
   50908:	00bfff84 	movi	r2,-2
   5090c:	1886703a 	and	r3,r3,r2
   50910:	e0bffb17 	ldw	r2,-20(fp)
   50914:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   50918:	e0bffc17 	ldw	r2,-16(fp)
   5091c:	10800104 	addi	r2,r2,4
   50920:	1007883a 	mov	r3,r2
   50924:	e0bffb17 	ldw	r2,-20(fp)
   50928:	10800817 	ldw	r2,32(r2)
   5092c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   50930:	e0bffc17 	ldw	r2,-16(fp)
   50934:	10800104 	addi	r2,r2,4
   50938:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   5093c:	e0bffd17 	ldw	r2,-12(fp)
   50940:	1080800c 	andi	r2,r2,512
   50944:	103fbe26 	beq	r2,zero,50840 <__alt_data_end+0xfffd0840>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   50948:	e0bffd17 	ldw	r2,-12(fp)
   5094c:	1004d43a 	srli	r2,r2,16
   50950:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   50954:	00001406 	br	509a8 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   50958:	e0bffc17 	ldw	r2,-16(fp)
   5095c:	e0fffb17 	ldw	r3,-20(fp)
   50960:	18c00d17 	ldw	r3,52(r3)
   50964:	e13ffb17 	ldw	r4,-20(fp)
   50968:	20c7883a 	add	r3,r4,r3
   5096c:	18c20e04 	addi	r3,r3,2104
   50970:	18c00003 	ldbu	r3,0(r3)
   50974:	18c03fcc 	andi	r3,r3,255
   50978:	18c0201c 	xori	r3,r3,128
   5097c:	18ffe004 	addi	r3,r3,-128
   50980:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   50984:	e0bffb17 	ldw	r2,-20(fp)
   50988:	10800d17 	ldw	r2,52(r2)
   5098c:	10800044 	addi	r2,r2,1
   50990:	10c1ffcc 	andi	r3,r2,2047
   50994:	e0bffb17 	ldw	r2,-20(fp)
   50998:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   5099c:	e0bffa17 	ldw	r2,-24(fp)
   509a0:	10bfffc4 	addi	r2,r2,-1
   509a4:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   509a8:	e0bffa17 	ldw	r2,-24(fp)
   509ac:	10000526 	beq	r2,zero,509c4 <altera_avalon_jtag_uart_irq+0x1a8>
   509b0:	e0bffb17 	ldw	r2,-20(fp)
   509b4:	10c00d17 	ldw	r3,52(r2)
   509b8:	e0bffb17 	ldw	r2,-20(fp)
   509bc:	10800c17 	ldw	r2,48(r2)
   509c0:	18bfe51e 	bne	r3,r2,50958 <__alt_data_end+0xfffd0958>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   509c4:	e0bffa17 	ldw	r2,-24(fp)
   509c8:	103f9d26 	beq	r2,zero,50840 <__alt_data_end+0xfffd0840>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   509cc:	e0bffb17 	ldw	r2,-20(fp)
   509d0:	10c00817 	ldw	r3,32(r2)
   509d4:	00bfff44 	movi	r2,-3
   509d8:	1886703a 	and	r3,r3,r2
   509dc:	e0bffb17 	ldw	r2,-20(fp)
   509e0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   509e4:	e0bffb17 	ldw	r2,-20(fp)
   509e8:	10800017 	ldw	r2,0(r2)
   509ec:	10800104 	addi	r2,r2,4
   509f0:	1007883a 	mov	r3,r2
   509f4:	e0bffb17 	ldw	r2,-20(fp)
   509f8:	10800817 	ldw	r2,32(r2)
   509fc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   50a00:	e0bffc17 	ldw	r2,-16(fp)
   50a04:	10800104 	addi	r2,r2,4
   50a08:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   50a0c:	003f8c06 	br	50840 <__alt_data_end+0xfffd0840>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   50a10:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   50a14:	0001883a 	nop
   50a18:	e037883a 	mov	sp,fp
   50a1c:	df000017 	ldw	fp,0(sp)
   50a20:	dec00104 	addi	sp,sp,4
   50a24:	f800283a 	ret

00050a28 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   50a28:	defff804 	addi	sp,sp,-32
   50a2c:	df000715 	stw	fp,28(sp)
   50a30:	df000704 	addi	fp,sp,28
   50a34:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   50a38:	e0bffb17 	ldw	r2,-20(fp)
   50a3c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   50a40:	e0bff917 	ldw	r2,-28(fp)
   50a44:	10800017 	ldw	r2,0(r2)
   50a48:	10800104 	addi	r2,r2,4
   50a4c:	10800037 	ldwio	r2,0(r2)
   50a50:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   50a54:	e0bffa17 	ldw	r2,-24(fp)
   50a58:	1081000c 	andi	r2,r2,1024
   50a5c:	10000b26 	beq	r2,zero,50a8c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   50a60:	e0bff917 	ldw	r2,-28(fp)
   50a64:	10800017 	ldw	r2,0(r2)
   50a68:	10800104 	addi	r2,r2,4
   50a6c:	1007883a 	mov	r3,r2
   50a70:	e0bff917 	ldw	r2,-28(fp)
   50a74:	10800817 	ldw	r2,32(r2)
   50a78:	10810014 	ori	r2,r2,1024
   50a7c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   50a80:	e0bff917 	ldw	r2,-28(fp)
   50a84:	10000915 	stw	zero,36(r2)
   50a88:	00000a06 	br	50ab4 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   50a8c:	e0bff917 	ldw	r2,-28(fp)
   50a90:	10c00917 	ldw	r3,36(r2)
   50a94:	00a00034 	movhi	r2,32768
   50a98:	10bfff04 	addi	r2,r2,-4
   50a9c:	10c00536 	bltu	r2,r3,50ab4 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   50aa0:	e0bff917 	ldw	r2,-28(fp)
   50aa4:	10800917 	ldw	r2,36(r2)
   50aa8:	10c00044 	addi	r3,r2,1
   50aac:	e0bff917 	ldw	r2,-28(fp)
   50ab0:	10c00915 	stw	r3,36(r2)
   50ab4:	d0a6dc17 	ldw	r2,-25744(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   50ab8:	e037883a 	mov	sp,fp
   50abc:	df000017 	ldw	fp,0(sp)
   50ac0:	dec00104 	addi	sp,sp,4
   50ac4:	f800283a 	ret

00050ac8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   50ac8:	defffd04 	addi	sp,sp,-12
   50acc:	df000215 	stw	fp,8(sp)
   50ad0:	df000204 	addi	fp,sp,8
   50ad4:	e13ffe15 	stw	r4,-8(fp)
   50ad8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   50adc:	00000506 	br	50af4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   50ae0:	e0bfff17 	ldw	r2,-4(fp)
   50ae4:	1090000c 	andi	r2,r2,16384
   50ae8:	10000226 	beq	r2,zero,50af4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   50aec:	00bffd44 	movi	r2,-11
   50af0:	00000b06 	br	50b20 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   50af4:	e0bffe17 	ldw	r2,-8(fp)
   50af8:	10c00d17 	ldw	r3,52(r2)
   50afc:	e0bffe17 	ldw	r2,-8(fp)
   50b00:	10800c17 	ldw	r2,48(r2)
   50b04:	18800526 	beq	r3,r2,50b1c <altera_avalon_jtag_uart_close+0x54>
   50b08:	e0bffe17 	ldw	r2,-8(fp)
   50b0c:	10c00917 	ldw	r3,36(r2)
   50b10:	e0bffe17 	ldw	r2,-8(fp)
   50b14:	10800117 	ldw	r2,4(r2)
   50b18:	18bff136 	bltu	r3,r2,50ae0 <__alt_data_end+0xfffd0ae0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   50b1c:	0005883a 	mov	r2,zero
}
   50b20:	e037883a 	mov	sp,fp
   50b24:	df000017 	ldw	fp,0(sp)
   50b28:	dec00104 	addi	sp,sp,4
   50b2c:	f800283a 	ret

00050b30 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   50b30:	defffa04 	addi	sp,sp,-24
   50b34:	df000515 	stw	fp,20(sp)
   50b38:	df000504 	addi	fp,sp,20
   50b3c:	e13ffd15 	stw	r4,-12(fp)
   50b40:	e17ffe15 	stw	r5,-8(fp)
   50b44:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   50b48:	00bff9c4 	movi	r2,-25
   50b4c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   50b50:	e0bffe17 	ldw	r2,-8(fp)
   50b54:	10da8060 	cmpeqi	r3,r2,27137
   50b58:	1800031e 	bne	r3,zero,50b68 <altera_avalon_jtag_uart_ioctl+0x38>
   50b5c:	109a80a0 	cmpeqi	r2,r2,27138
   50b60:	1000181e 	bne	r2,zero,50bc4 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   50b64:	00002906 	br	50c0c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   50b68:	e0bffd17 	ldw	r2,-12(fp)
   50b6c:	10c00117 	ldw	r3,4(r2)
   50b70:	00a00034 	movhi	r2,32768
   50b74:	10bfffc4 	addi	r2,r2,-1
   50b78:	18802126 	beq	r3,r2,50c00 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   50b7c:	e0bfff17 	ldw	r2,-4(fp)
   50b80:	10800017 	ldw	r2,0(r2)
   50b84:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   50b88:	e0bffc17 	ldw	r2,-16(fp)
   50b8c:	10800090 	cmplti	r2,r2,2
   50b90:	1000061e 	bne	r2,zero,50bac <altera_avalon_jtag_uart_ioctl+0x7c>
   50b94:	e0fffc17 	ldw	r3,-16(fp)
   50b98:	00a00034 	movhi	r2,32768
   50b9c:	10bfffc4 	addi	r2,r2,-1
   50ba0:	18800226 	beq	r3,r2,50bac <altera_avalon_jtag_uart_ioctl+0x7c>
   50ba4:	e0bffc17 	ldw	r2,-16(fp)
   50ba8:	00000206 	br	50bb4 <altera_avalon_jtag_uart_ioctl+0x84>
   50bac:	00a00034 	movhi	r2,32768
   50bb0:	10bfff84 	addi	r2,r2,-2
   50bb4:	e0fffd17 	ldw	r3,-12(fp)
   50bb8:	18800115 	stw	r2,4(r3)
      rc = 0;
   50bbc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   50bc0:	00000f06 	br	50c00 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   50bc4:	e0bffd17 	ldw	r2,-12(fp)
   50bc8:	10c00117 	ldw	r3,4(r2)
   50bcc:	00a00034 	movhi	r2,32768
   50bd0:	10bfffc4 	addi	r2,r2,-1
   50bd4:	18800c26 	beq	r3,r2,50c08 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   50bd8:	e0bffd17 	ldw	r2,-12(fp)
   50bdc:	10c00917 	ldw	r3,36(r2)
   50be0:	e0bffd17 	ldw	r2,-12(fp)
   50be4:	10800117 	ldw	r2,4(r2)
   50be8:	1885803a 	cmpltu	r2,r3,r2
   50bec:	10c03fcc 	andi	r3,r2,255
   50bf0:	e0bfff17 	ldw	r2,-4(fp)
   50bf4:	10c00015 	stw	r3,0(r2)
      rc = 0;
   50bf8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   50bfc:	00000206 	br	50c08 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   50c00:	0001883a 	nop
   50c04:	00000106 	br	50c0c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   50c08:	0001883a 	nop

  default:
    break;
  }

  return rc;
   50c0c:	e0bffb17 	ldw	r2,-20(fp)
}
   50c10:	e037883a 	mov	sp,fp
   50c14:	df000017 	ldw	fp,0(sp)
   50c18:	dec00104 	addi	sp,sp,4
   50c1c:	f800283a 	ret

00050c20 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   50c20:	defff304 	addi	sp,sp,-52
   50c24:	dfc00c15 	stw	ra,48(sp)
   50c28:	df000b15 	stw	fp,44(sp)
   50c2c:	df000b04 	addi	fp,sp,44
   50c30:	e13ffc15 	stw	r4,-16(fp)
   50c34:	e17ffd15 	stw	r5,-12(fp)
   50c38:	e1bffe15 	stw	r6,-8(fp)
   50c3c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   50c40:	e0bffd17 	ldw	r2,-12(fp)
   50c44:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   50c48:	00004706 	br	50d68 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   50c4c:	e0bffc17 	ldw	r2,-16(fp)
   50c50:	10800a17 	ldw	r2,40(r2)
   50c54:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   50c58:	e0bffc17 	ldw	r2,-16(fp)
   50c5c:	10800b17 	ldw	r2,44(r2)
   50c60:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   50c64:	e0fff717 	ldw	r3,-36(fp)
   50c68:	e0bff817 	ldw	r2,-32(fp)
   50c6c:	18800536 	bltu	r3,r2,50c84 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   50c70:	e0fff717 	ldw	r3,-36(fp)
   50c74:	e0bff817 	ldw	r2,-32(fp)
   50c78:	1885c83a 	sub	r2,r3,r2
   50c7c:	e0bff615 	stw	r2,-40(fp)
   50c80:	00000406 	br	50c94 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   50c84:	00c20004 	movi	r3,2048
   50c88:	e0bff817 	ldw	r2,-32(fp)
   50c8c:	1885c83a 	sub	r2,r3,r2
   50c90:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   50c94:	e0bff617 	ldw	r2,-40(fp)
   50c98:	10001e26 	beq	r2,zero,50d14 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   50c9c:	e0fffe17 	ldw	r3,-8(fp)
   50ca0:	e0bff617 	ldw	r2,-40(fp)
   50ca4:	1880022e 	bgeu	r3,r2,50cb0 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   50ca8:	e0bffe17 	ldw	r2,-8(fp)
   50cac:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   50cb0:	e0bffc17 	ldw	r2,-16(fp)
   50cb4:	10c00e04 	addi	r3,r2,56
   50cb8:	e0bff817 	ldw	r2,-32(fp)
   50cbc:	1885883a 	add	r2,r3,r2
   50cc0:	e1bff617 	ldw	r6,-40(fp)
   50cc4:	100b883a 	mov	r5,r2
   50cc8:	e13ff517 	ldw	r4,-44(fp)
   50ccc:	004ab340 	call	4ab34 <memcpy>
      ptr   += n;
   50cd0:	e0fff517 	ldw	r3,-44(fp)
   50cd4:	e0bff617 	ldw	r2,-40(fp)
   50cd8:	1885883a 	add	r2,r3,r2
   50cdc:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   50ce0:	e0fffe17 	ldw	r3,-8(fp)
   50ce4:	e0bff617 	ldw	r2,-40(fp)
   50ce8:	1885c83a 	sub	r2,r3,r2
   50cec:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   50cf0:	e0fff817 	ldw	r3,-32(fp)
   50cf4:	e0bff617 	ldw	r2,-40(fp)
   50cf8:	1885883a 	add	r2,r3,r2
   50cfc:	10c1ffcc 	andi	r3,r2,2047
   50d00:	e0bffc17 	ldw	r2,-16(fp)
   50d04:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   50d08:	e0bffe17 	ldw	r2,-8(fp)
   50d0c:	00bfcf16 	blt	zero,r2,50c4c <__alt_data_end+0xfffd0c4c>
   50d10:	00000106 	br	50d18 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   50d14:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   50d18:	e0fff517 	ldw	r3,-44(fp)
   50d1c:	e0bffd17 	ldw	r2,-12(fp)
   50d20:	1880141e 	bne	r3,r2,50d74 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   50d24:	e0bfff17 	ldw	r2,-4(fp)
   50d28:	1090000c 	andi	r2,r2,16384
   50d2c:	1000131e 	bne	r2,zero,50d7c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   50d30:	0001883a 	nop
   50d34:	e0bffc17 	ldw	r2,-16(fp)
   50d38:	10c00a17 	ldw	r3,40(r2)
   50d3c:	e0bff717 	ldw	r2,-36(fp)
   50d40:	1880051e 	bne	r3,r2,50d58 <altera_avalon_jtag_uart_read+0x138>
   50d44:	e0bffc17 	ldw	r2,-16(fp)
   50d48:	10c00917 	ldw	r3,36(r2)
   50d4c:	e0bffc17 	ldw	r2,-16(fp)
   50d50:	10800117 	ldw	r2,4(r2)
   50d54:	18bff736 	bltu	r3,r2,50d34 <__alt_data_end+0xfffd0d34>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   50d58:	e0bffc17 	ldw	r2,-16(fp)
   50d5c:	10c00a17 	ldw	r3,40(r2)
   50d60:	e0bff717 	ldw	r2,-36(fp)
   50d64:	18800726 	beq	r3,r2,50d84 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   50d68:	e0bffe17 	ldw	r2,-8(fp)
   50d6c:	00bfb716 	blt	zero,r2,50c4c <__alt_data_end+0xfffd0c4c>
   50d70:	00000506 	br	50d88 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   50d74:	0001883a 	nop
   50d78:	00000306 	br	50d88 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   50d7c:	0001883a 	nop
   50d80:	00000106 	br	50d88 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   50d84:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   50d88:	e0fff517 	ldw	r3,-44(fp)
   50d8c:	e0bffd17 	ldw	r2,-12(fp)
   50d90:	18801826 	beq	r3,r2,50df4 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50d94:	0005303a 	rdctl	r2,status
   50d98:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50d9c:	e0fffb17 	ldw	r3,-20(fp)
   50da0:	00bfff84 	movi	r2,-2
   50da4:	1884703a 	and	r2,r3,r2
   50da8:	1001703a 	wrctl	status,r2
  
  return context;
   50dac:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   50db0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   50db4:	e0bffc17 	ldw	r2,-16(fp)
   50db8:	10800817 	ldw	r2,32(r2)
   50dbc:	10c00054 	ori	r3,r2,1
   50dc0:	e0bffc17 	ldw	r2,-16(fp)
   50dc4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   50dc8:	e0bffc17 	ldw	r2,-16(fp)
   50dcc:	10800017 	ldw	r2,0(r2)
   50dd0:	10800104 	addi	r2,r2,4
   50dd4:	1007883a 	mov	r3,r2
   50dd8:	e0bffc17 	ldw	r2,-16(fp)
   50ddc:	10800817 	ldw	r2,32(r2)
   50de0:	18800035 	stwio	r2,0(r3)
   50de4:	e0bffa17 	ldw	r2,-24(fp)
   50de8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   50dec:	e0bff917 	ldw	r2,-28(fp)
   50df0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   50df4:	e0fff517 	ldw	r3,-44(fp)
   50df8:	e0bffd17 	ldw	r2,-12(fp)
   50dfc:	18800426 	beq	r3,r2,50e10 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   50e00:	e0fff517 	ldw	r3,-44(fp)
   50e04:	e0bffd17 	ldw	r2,-12(fp)
   50e08:	1885c83a 	sub	r2,r3,r2
   50e0c:	00000606 	br	50e28 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   50e10:	e0bfff17 	ldw	r2,-4(fp)
   50e14:	1090000c 	andi	r2,r2,16384
   50e18:	10000226 	beq	r2,zero,50e24 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   50e1c:	00bffd44 	movi	r2,-11
   50e20:	00000106 	br	50e28 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   50e24:	00bffec4 	movi	r2,-5
}
   50e28:	e037883a 	mov	sp,fp
   50e2c:	dfc00117 	ldw	ra,4(sp)
   50e30:	df000017 	ldw	fp,0(sp)
   50e34:	dec00204 	addi	sp,sp,8
   50e38:	f800283a 	ret

00050e3c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   50e3c:	defff304 	addi	sp,sp,-52
   50e40:	dfc00c15 	stw	ra,48(sp)
   50e44:	df000b15 	stw	fp,44(sp)
   50e48:	df000b04 	addi	fp,sp,44
   50e4c:	e13ffc15 	stw	r4,-16(fp)
   50e50:	e17ffd15 	stw	r5,-12(fp)
   50e54:	e1bffe15 	stw	r6,-8(fp)
   50e58:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   50e5c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   50e60:	e0bffd17 	ldw	r2,-12(fp)
   50e64:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   50e68:	00003706 	br	50f48 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   50e6c:	e0bffc17 	ldw	r2,-16(fp)
   50e70:	10800c17 	ldw	r2,48(r2)
   50e74:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   50e78:	e0bffc17 	ldw	r2,-16(fp)
   50e7c:	10800d17 	ldw	r2,52(r2)
   50e80:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   50e84:	e0fff917 	ldw	r3,-28(fp)
   50e88:	e0bff517 	ldw	r2,-44(fp)
   50e8c:	1880062e 	bgeu	r3,r2,50ea8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   50e90:	e0fff517 	ldw	r3,-44(fp)
   50e94:	e0bff917 	ldw	r2,-28(fp)
   50e98:	1885c83a 	sub	r2,r3,r2
   50e9c:	10bfffc4 	addi	r2,r2,-1
   50ea0:	e0bff615 	stw	r2,-40(fp)
   50ea4:	00000b06 	br	50ed4 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   50ea8:	e0bff517 	ldw	r2,-44(fp)
   50eac:	10000526 	beq	r2,zero,50ec4 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   50eb0:	00c20004 	movi	r3,2048
   50eb4:	e0bff917 	ldw	r2,-28(fp)
   50eb8:	1885c83a 	sub	r2,r3,r2
   50ebc:	e0bff615 	stw	r2,-40(fp)
   50ec0:	00000406 	br	50ed4 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   50ec4:	00c1ffc4 	movi	r3,2047
   50ec8:	e0bff917 	ldw	r2,-28(fp)
   50ecc:	1885c83a 	sub	r2,r3,r2
   50ed0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   50ed4:	e0bff617 	ldw	r2,-40(fp)
   50ed8:	10001e26 	beq	r2,zero,50f54 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   50edc:	e0fffe17 	ldw	r3,-8(fp)
   50ee0:	e0bff617 	ldw	r2,-40(fp)
   50ee4:	1880022e 	bgeu	r3,r2,50ef0 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   50ee8:	e0bffe17 	ldw	r2,-8(fp)
   50eec:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   50ef0:	e0bffc17 	ldw	r2,-16(fp)
   50ef4:	10c20e04 	addi	r3,r2,2104
   50ef8:	e0bff917 	ldw	r2,-28(fp)
   50efc:	1885883a 	add	r2,r3,r2
   50f00:	e1bff617 	ldw	r6,-40(fp)
   50f04:	e17ffd17 	ldw	r5,-12(fp)
   50f08:	1009883a 	mov	r4,r2
   50f0c:	004ab340 	call	4ab34 <memcpy>
      ptr   += n;
   50f10:	e0fffd17 	ldw	r3,-12(fp)
   50f14:	e0bff617 	ldw	r2,-40(fp)
   50f18:	1885883a 	add	r2,r3,r2
   50f1c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   50f20:	e0fffe17 	ldw	r3,-8(fp)
   50f24:	e0bff617 	ldw	r2,-40(fp)
   50f28:	1885c83a 	sub	r2,r3,r2
   50f2c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   50f30:	e0fff917 	ldw	r3,-28(fp)
   50f34:	e0bff617 	ldw	r2,-40(fp)
   50f38:	1885883a 	add	r2,r3,r2
   50f3c:	10c1ffcc 	andi	r3,r2,2047
   50f40:	e0bffc17 	ldw	r2,-16(fp)
   50f44:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   50f48:	e0bffe17 	ldw	r2,-8(fp)
   50f4c:	00bfc716 	blt	zero,r2,50e6c <__alt_data_end+0xfffd0e6c>
   50f50:	00000106 	br	50f58 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   50f54:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   50f58:	0005303a 	rdctl	r2,status
   50f5c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   50f60:	e0fffb17 	ldw	r3,-20(fp)
   50f64:	00bfff84 	movi	r2,-2
   50f68:	1884703a 	and	r2,r3,r2
   50f6c:	1001703a 	wrctl	status,r2
  
  return context;
   50f70:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   50f74:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   50f78:	e0bffc17 	ldw	r2,-16(fp)
   50f7c:	10800817 	ldw	r2,32(r2)
   50f80:	10c00094 	ori	r3,r2,2
   50f84:	e0bffc17 	ldw	r2,-16(fp)
   50f88:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   50f8c:	e0bffc17 	ldw	r2,-16(fp)
   50f90:	10800017 	ldw	r2,0(r2)
   50f94:	10800104 	addi	r2,r2,4
   50f98:	1007883a 	mov	r3,r2
   50f9c:	e0bffc17 	ldw	r2,-16(fp)
   50fa0:	10800817 	ldw	r2,32(r2)
   50fa4:	18800035 	stwio	r2,0(r3)
   50fa8:	e0bffa17 	ldw	r2,-24(fp)
   50fac:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   50fb0:	e0bff817 	ldw	r2,-32(fp)
   50fb4:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   50fb8:	e0bffe17 	ldw	r2,-8(fp)
   50fbc:	0080100e 	bge	zero,r2,51000 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   50fc0:	e0bfff17 	ldw	r2,-4(fp)
   50fc4:	1090000c 	andi	r2,r2,16384
   50fc8:	1000101e 	bne	r2,zero,5100c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   50fcc:	0001883a 	nop
   50fd0:	e0bffc17 	ldw	r2,-16(fp)
   50fd4:	10c00d17 	ldw	r3,52(r2)
   50fd8:	e0bff517 	ldw	r2,-44(fp)
   50fdc:	1880051e 	bne	r3,r2,50ff4 <altera_avalon_jtag_uart_write+0x1b8>
   50fe0:	e0bffc17 	ldw	r2,-16(fp)
   50fe4:	10c00917 	ldw	r3,36(r2)
   50fe8:	e0bffc17 	ldw	r2,-16(fp)
   50fec:	10800117 	ldw	r2,4(r2)
   50ff0:	18bff736 	bltu	r3,r2,50fd0 <__alt_data_end+0xfffd0fd0>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   50ff4:	e0bffc17 	ldw	r2,-16(fp)
   50ff8:	10800917 	ldw	r2,36(r2)
   50ffc:	1000051e 	bne	r2,zero,51014 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   51000:	e0bffe17 	ldw	r2,-8(fp)
   51004:	00bfd016 	blt	zero,r2,50f48 <__alt_data_end+0xfffd0f48>
   51008:	00000306 	br	51018 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   5100c:	0001883a 	nop
   51010:	00000106 	br	51018 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   51014:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   51018:	e0fffd17 	ldw	r3,-12(fp)
   5101c:	e0bff717 	ldw	r2,-36(fp)
   51020:	18800426 	beq	r3,r2,51034 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   51024:	e0fffd17 	ldw	r3,-12(fp)
   51028:	e0bff717 	ldw	r2,-36(fp)
   5102c:	1885c83a 	sub	r2,r3,r2
   51030:	00000606 	br	5104c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   51034:	e0bfff17 	ldw	r2,-4(fp)
   51038:	1090000c 	andi	r2,r2,16384
   5103c:	10000226 	beq	r2,zero,51048 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   51040:	00bffd44 	movi	r2,-11
   51044:	00000106 	br	5104c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   51048:	00bffec4 	movi	r2,-5
}
   5104c:	e037883a 	mov	sp,fp
   51050:	dfc00117 	ldw	ra,4(sp)
   51054:	df000017 	ldw	fp,0(sp)
   51058:	dec00204 	addi	sp,sp,8
   5105c:	f800283a 	ret

00051060 <perf_get_section_time>:

#include "altera_avalon_performance_counter.h"
#include "system.h"

alt_u64 perf_get_section_time (void* hw_base_address, int which_section)
{
   51060:	defff904 	addi	sp,sp,-28
   51064:	df000615 	stw	fp,24(sp)
   51068:	df000604 	addi	fp,sp,24
   5106c:	e13ffe15 	stw	r4,-8(fp)
   51070:	e17fff15 	stw	r5,-4(fp)
  alt_u32 lo;
  alt_u32 hi;
  alt_u64 result = 0;
   51074:	e03ffa15 	stw	zero,-24(fp)
   51078:	e03ffb15 	stw	zero,-20(fp)

  PERF_STOP_MEASURING(hw_base_address);
   5107c:	000b883a 	mov	r5,zero
   51080:	e13ffe17 	ldw	r4,-8(fp)
   51084:	21400035 	stwio	r5,0(r4)
  lo = IORD(hw_base_address, ( which_section*4   ));
   51088:	e13fff17 	ldw	r4,-4(fp)
   5108c:	2008913a 	slli	r4,r4,4
   51090:	200b883a 	mov	r5,r4
   51094:	e13ffe17 	ldw	r4,-8(fp)
   51098:	2149883a 	add	r4,r4,r5
   5109c:	21000037 	ldwio	r4,0(r4)
   510a0:	e13ffc15 	stw	r4,-16(fp)
  hi = IORD(hw_base_address, ((which_section*4)+1));
   510a4:	e13fff17 	ldw	r4,-4(fp)
   510a8:	2008913a 	slli	r4,r4,4
   510ac:	21000104 	addi	r4,r4,4
   510b0:	200b883a 	mov	r5,r4
   510b4:	e13ffe17 	ldw	r4,-8(fp)
   510b8:	2149883a 	add	r4,r4,r5
   510bc:	21000037 	ldwio	r4,0(r4)
   510c0:	e13ffd15 	stw	r4,-12(fp)

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
   510c4:	e13ffd17 	ldw	r4,-12(fp)
   510c8:	2011883a 	mov	r8,r4
   510cc:	0013883a 	mov	r9,zero
   510d0:	4006983a 	sll	r3,r8,zero
   510d4:	0005883a 	mov	r2,zero
           ((alt_u64)(((alt_u64) lo)                 ))  ;
   510d8:	e13ffc17 	ldw	r4,-16(fp)
   510dc:	200d883a 	mov	r6,r4
   510e0:	000f883a 	mov	r7,zero

  PERF_STOP_MEASURING(hw_base_address);
  lo = IORD(hw_base_address, ( which_section*4   ));
  hi = IORD(hw_base_address, ((which_section*4)+1));

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
   510e4:	1188b03a 	or	r4,r2,r6
   510e8:	e13ffa15 	stw	r4,-24(fp)
   510ec:	19c4b03a 	or	r2,r3,r7
   510f0:	e0bffb15 	stw	r2,-20(fp)
           ((alt_u64)(((alt_u64) lo)                 ))  ;
  return result;
   510f4:	e0bffa17 	ldw	r2,-24(fp)
   510f8:	e0fffb17 	ldw	r3,-20(fp)
   510fc:	1009883a 	mov	r4,r2
   51100:	180b883a 	mov	r5,r3
}
   51104:	2005883a 	mov	r2,r4
   51108:	2807883a 	mov	r3,r5
   5110c:	e037883a 	mov	sp,fp
   51110:	df000017 	ldw	fp,0(sp)
   51114:	dec00104 	addi	sp,sp,4
   51118:	f800283a 	ret

0005111c <perf_get_total_time>:

alt_u64 perf_get_total_time   (void* hw_base_address)
{
   5111c:	defffd04 	addi	sp,sp,-12
   51120:	dfc00215 	stw	ra,8(sp)
   51124:	df000115 	stw	fp,4(sp)
   51128:	df000104 	addi	fp,sp,4
   5112c:	e13fff15 	stw	r4,-4(fp)
  return perf_get_section_time (hw_base_address, 0);
   51130:	000b883a 	mov	r5,zero
   51134:	e13fff17 	ldw	r4,-4(fp)
   51138:	00510600 	call	51060 <perf_get_section_time>
   5113c:	100b883a 	mov	r5,r2
   51140:	180d883a 	mov	r6,r3
   51144:	2807883a 	mov	r3,r5
   51148:	3009883a 	mov	r4,r6
}
   5114c:	1805883a 	mov	r2,r3
   51150:	2007883a 	mov	r3,r4
   51154:	e037883a 	mov	sp,fp
   51158:	dfc00117 	ldw	ra,4(sp)
   5115c:	df000017 	ldw	fp,0(sp)
   51160:	dec00204 	addi	sp,sp,8
   51164:	f800283a 	ret

00051168 <perf_get_num_starts>:

alt_u32 perf_get_num_starts   (void* hw_base_address, int which_section)
{
   51168:	defffd04 	addi	sp,sp,-12
   5116c:	df000215 	stw	fp,8(sp)
   51170:	df000204 	addi	fp,sp,8
   51174:	e13ffe15 	stw	r4,-8(fp)
   51178:	e17fff15 	stw	r5,-4(fp)
  return IORD(hw_base_address, ((which_section*4)+2));
   5117c:	e0bfff17 	ldw	r2,-4(fp)
   51180:	1004913a 	slli	r2,r2,4
   51184:	10800204 	addi	r2,r2,8
   51188:	1007883a 	mov	r3,r2
   5118c:	e0bffe17 	ldw	r2,-8(fp)
   51190:	10c5883a 	add	r2,r2,r3
   51194:	10800037 	ldwio	r2,0(r2)
}
   51198:	e037883a 	mov	sp,fp
   5119c:	df000017 	ldw	fp,0(sp)
   511a0:	dec00104 	addi	sp,sp,4
   511a4:	f800283a 	ret

000511a8 <alt_get_performance_counter_base>:
 * in Nios II IDE just like is done for the system clock timer and
 * timestamp timer.
 */
void* 
alt_get_performance_counter_base()
{
   511a8:	deffff04 	addi	sp,sp,-4
   511ac:	df000015 	stw	fp,0(sp)
   511b0:	d839883a 	mov	fp,sp
#ifdef PERFORMANCE_COUNTER_0_BASE
    return (void*)PERFORMANCE_COUNTER_0_BASE;
   511b4:	00800234 	movhi	r2,8
   511b8:	10861004 	addi	r2,r2,6208
#else
    return (void*)0;
#endif
}
   511bc:	e037883a 	mov	sp,fp
   511c0:	df000017 	ldw	fp,0(sp)
   511c4:	dec00104 	addi	sp,sp,4
   511c8:	f800283a 	ret

000511cc <alt_get_cpu_freq>:
 * If the performance counter peripheral is in a different time domain,
 * this won't necessarily be the same frequency of the CPU.
 */
alt_u32 
alt_get_cpu_freq()
{
   511cc:	deffff04 	addi	sp,sp,-4
   511d0:	df000015 	stw	fp,0(sp)
   511d4:	d839883a 	mov	fp,sp
    return ALT_CPU_FREQ;
   511d8:	0080bef4 	movhi	r2,763
   511dc:	10bc2004 	addi	r2,r2,-3968
}
   511e0:	e037883a 	mov	sp,fp
   511e4:	df000017 	ldw	fp,0(sp)
   511e8:	dec00104 	addi	sp,sp,4
   511ec:	f800283a 	ret

000511f0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   511f0:	defff504 	addi	sp,sp,-44
   511f4:	df000a15 	stw	fp,40(sp)
   511f8:	df000a04 	addi	fp,sp,40
   511fc:	e13ffc15 	stw	r4,-16(fp)
   51200:	e17ffd15 	stw	r5,-12(fp)
   51204:	e1bffe15 	stw	r6,-8(fp)
   51208:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   5120c:	e03ff615 	stw	zero,-40(fp)
   51210:	d0a6dc17 	ldw	r2,-25744(gp)
  
  if (alt_ticks_per_second ())
   51214:	10003c26 	beq	r2,zero,51308 <alt_alarm_start+0x118>
  {
    if (alarm)
   51218:	e0bffc17 	ldw	r2,-16(fp)
   5121c:	10003826 	beq	r2,zero,51300 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   51220:	e0bffc17 	ldw	r2,-16(fp)
   51224:	e0fffe17 	ldw	r3,-8(fp)
   51228:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   5122c:	e0bffc17 	ldw	r2,-16(fp)
   51230:	e0ffff17 	ldw	r3,-4(fp)
   51234:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   51238:	0005303a 	rdctl	r2,status
   5123c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   51240:	e0fff917 	ldw	r3,-28(fp)
   51244:	00bfff84 	movi	r2,-2
   51248:	1884703a 	and	r2,r3,r2
   5124c:	1001703a 	wrctl	status,r2
  
  return context;
   51250:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   51254:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   51258:	d0a6dd17 	ldw	r2,-25740(gp)
      
      current_nticks = alt_nticks();
   5125c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   51260:	e0fffd17 	ldw	r3,-12(fp)
   51264:	e0bff617 	ldw	r2,-40(fp)
   51268:	1885883a 	add	r2,r3,r2
   5126c:	10c00044 	addi	r3,r2,1
   51270:	e0bffc17 	ldw	r2,-16(fp)
   51274:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   51278:	e0bffc17 	ldw	r2,-16(fp)
   5127c:	10c00217 	ldw	r3,8(r2)
   51280:	e0bff617 	ldw	r2,-40(fp)
   51284:	1880042e 	bgeu	r3,r2,51298 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   51288:	e0bffc17 	ldw	r2,-16(fp)
   5128c:	00c00044 	movi	r3,1
   51290:	10c00405 	stb	r3,16(r2)
   51294:	00000206 	br	512a0 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   51298:	e0bffc17 	ldw	r2,-16(fp)
   5129c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   512a0:	e0bffc17 	ldw	r2,-16(fp)
   512a4:	d0e00e04 	addi	r3,gp,-32712
   512a8:	e0fffa15 	stw	r3,-24(fp)
   512ac:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   512b0:	e0bffb17 	ldw	r2,-20(fp)
   512b4:	e0fffa17 	ldw	r3,-24(fp)
   512b8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   512bc:	e0bffa17 	ldw	r2,-24(fp)
   512c0:	10c00017 	ldw	r3,0(r2)
   512c4:	e0bffb17 	ldw	r2,-20(fp)
   512c8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   512cc:	e0bffa17 	ldw	r2,-24(fp)
   512d0:	10800017 	ldw	r2,0(r2)
   512d4:	e0fffb17 	ldw	r3,-20(fp)
   512d8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   512dc:	e0bffa17 	ldw	r2,-24(fp)
   512e0:	e0fffb17 	ldw	r3,-20(fp)
   512e4:	10c00015 	stw	r3,0(r2)
   512e8:	e0bff817 	ldw	r2,-32(fp)
   512ec:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   512f0:	e0bff717 	ldw	r2,-36(fp)
   512f4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   512f8:	0005883a 	mov	r2,zero
   512fc:	00000306 	br	5130c <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   51300:	00bffa84 	movi	r2,-22
   51304:	00000106 	br	5130c <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   51308:	00bfde84 	movi	r2,-134
  }
}
   5130c:	e037883a 	mov	sp,fp
   51310:	df000017 	ldw	fp,0(sp)
   51314:	dec00104 	addi	sp,sp,4
   51318:	f800283a 	ret

0005131c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   5131c:	defffe04 	addi	sp,sp,-8
   51320:	df000115 	stw	fp,4(sp)
   51324:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   51328:	e03fff15 	stw	zero,-4(fp)
   5132c:	00000506 	br	51344 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   51330:	e0bfff17 	ldw	r2,-4(fp)
   51334:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   51338:	e0bfff17 	ldw	r2,-4(fp)
   5133c:	10800804 	addi	r2,r2,32
   51340:	e0bfff15 	stw	r2,-4(fp)
   51344:	e0bfff17 	ldw	r2,-4(fp)
   51348:	10820030 	cmpltui	r2,r2,2048
   5134c:	103ff81e 	bne	r2,zero,51330 <__alt_data_end+0xfffd1330>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   51350:	0001883a 	nop
   51354:	e037883a 	mov	sp,fp
   51358:	df000017 	ldw	fp,0(sp)
   5135c:	dec00104 	addi	sp,sp,4
   51360:	f800283a 	ret

00051364 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   51364:	defffe04 	addi	sp,sp,-8
   51368:	dfc00115 	stw	ra,4(sp)
   5136c:	df000015 	stw	fp,0(sp)
   51370:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   51374:	d0a00b17 	ldw	r2,-32724(gp)
   51378:	10000326 	beq	r2,zero,51388 <alt_get_errno+0x24>
   5137c:	d0a00b17 	ldw	r2,-32724(gp)
   51380:	103ee83a 	callr	r2
   51384:	00000106 	br	5138c <alt_get_errno+0x28>
   51388:	d0a6d704 	addi	r2,gp,-25764
}
   5138c:	e037883a 	mov	sp,fp
   51390:	dfc00117 	ldw	ra,4(sp)
   51394:	df000017 	ldw	fp,0(sp)
   51398:	dec00204 	addi	sp,sp,8
   5139c:	f800283a 	ret

000513a0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   513a0:	defffa04 	addi	sp,sp,-24
   513a4:	dfc00515 	stw	ra,20(sp)
   513a8:	df000415 	stw	fp,16(sp)
   513ac:	df000404 	addi	fp,sp,16
   513b0:	e13ffe15 	stw	r4,-8(fp)
   513b4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   513b8:	e0bffe17 	ldw	r2,-8(fp)
   513bc:	10000326 	beq	r2,zero,513cc <alt_dev_llist_insert+0x2c>
   513c0:	e0bffe17 	ldw	r2,-8(fp)
   513c4:	10800217 	ldw	r2,8(r2)
   513c8:	1000061e 	bne	r2,zero,513e4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   513cc:	00513640 	call	51364 <alt_get_errno>
   513d0:	1007883a 	mov	r3,r2
   513d4:	00800584 	movi	r2,22
   513d8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   513dc:	00bffa84 	movi	r2,-22
   513e0:	00001306 	br	51430 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   513e4:	e0bffe17 	ldw	r2,-8(fp)
   513e8:	e0ffff17 	ldw	r3,-4(fp)
   513ec:	e0fffc15 	stw	r3,-16(fp)
   513f0:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   513f4:	e0bffd17 	ldw	r2,-12(fp)
   513f8:	e0fffc17 	ldw	r3,-16(fp)
   513fc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   51400:	e0bffc17 	ldw	r2,-16(fp)
   51404:	10c00017 	ldw	r3,0(r2)
   51408:	e0bffd17 	ldw	r2,-12(fp)
   5140c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   51410:	e0bffc17 	ldw	r2,-16(fp)
   51414:	10800017 	ldw	r2,0(r2)
   51418:	e0fffd17 	ldw	r3,-12(fp)
   5141c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   51420:	e0bffc17 	ldw	r2,-16(fp)
   51424:	e0fffd17 	ldw	r3,-12(fp)
   51428:	10c00015 	stw	r3,0(r2)

  return 0;  
   5142c:	0005883a 	mov	r2,zero
}
   51430:	e037883a 	mov	sp,fp
   51434:	dfc00117 	ldw	ra,4(sp)
   51438:	df000017 	ldw	fp,0(sp)
   5143c:	dec00204 	addi	sp,sp,8
   51440:	f800283a 	ret

00051444 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   51444:	defffd04 	addi	sp,sp,-12
   51448:	dfc00215 	stw	ra,8(sp)
   5144c:	df000115 	stw	fp,4(sp)
   51450:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   51454:	00800174 	movhi	r2,5
   51458:	10890b04 	addi	r2,r2,9260
   5145c:	e0bfff15 	stw	r2,-4(fp)
   51460:	00000606 	br	5147c <_do_ctors+0x38>
        (*ctor) (); 
   51464:	e0bfff17 	ldw	r2,-4(fp)
   51468:	10800017 	ldw	r2,0(r2)
   5146c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   51470:	e0bfff17 	ldw	r2,-4(fp)
   51474:	10bfff04 	addi	r2,r2,-4
   51478:	e0bfff15 	stw	r2,-4(fp)
   5147c:	e0ffff17 	ldw	r3,-4(fp)
   51480:	00800174 	movhi	r2,5
   51484:	10890c04 	addi	r2,r2,9264
   51488:	18bff62e 	bgeu	r3,r2,51464 <__alt_data_end+0xfffd1464>
        (*ctor) (); 
}
   5148c:	0001883a 	nop
   51490:	e037883a 	mov	sp,fp
   51494:	dfc00117 	ldw	ra,4(sp)
   51498:	df000017 	ldw	fp,0(sp)
   5149c:	dec00204 	addi	sp,sp,8
   514a0:	f800283a 	ret

000514a4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   514a4:	defffd04 	addi	sp,sp,-12
   514a8:	dfc00215 	stw	ra,8(sp)
   514ac:	df000115 	stw	fp,4(sp)
   514b0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   514b4:	00800174 	movhi	r2,5
   514b8:	10890b04 	addi	r2,r2,9260
   514bc:	e0bfff15 	stw	r2,-4(fp)
   514c0:	00000606 	br	514dc <_do_dtors+0x38>
        (*dtor) (); 
   514c4:	e0bfff17 	ldw	r2,-4(fp)
   514c8:	10800017 	ldw	r2,0(r2)
   514cc:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   514d0:	e0bfff17 	ldw	r2,-4(fp)
   514d4:	10bfff04 	addi	r2,r2,-4
   514d8:	e0bfff15 	stw	r2,-4(fp)
   514dc:	e0ffff17 	ldw	r3,-4(fp)
   514e0:	00800174 	movhi	r2,5
   514e4:	10890c04 	addi	r2,r2,9264
   514e8:	18bff62e 	bgeu	r3,r2,514c4 <__alt_data_end+0xfffd14c4>
        (*dtor) (); 
}
   514ec:	0001883a 	nop
   514f0:	e037883a 	mov	sp,fp
   514f4:	dfc00117 	ldw	ra,4(sp)
   514f8:	df000017 	ldw	fp,0(sp)
   514fc:	dec00204 	addi	sp,sp,8
   51500:	f800283a 	ret

00051504 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   51504:	defffe04 	addi	sp,sp,-8
   51508:	dfc00115 	stw	ra,4(sp)
   5150c:	df000015 	stw	fp,0(sp)
   51510:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   51514:	01440004 	movi	r5,4096
   51518:	0009883a 	mov	r4,zero
   5151c:	0051f700 	call	51f70 <alt_icache_flush>
#endif
}
   51520:	0001883a 	nop
   51524:	e037883a 	mov	sp,fp
   51528:	dfc00117 	ldw	ra,4(sp)
   5152c:	df000017 	ldw	fp,0(sp)
   51530:	dec00204 	addi	sp,sp,8
   51534:	f800283a 	ret

00051538 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   51538:	defff904 	addi	sp,sp,-28
   5153c:	dfc00615 	stw	ra,24(sp)
   51540:	df000515 	stw	fp,20(sp)
   51544:	df000504 	addi	fp,sp,20
   51548:	e13ffc15 	stw	r4,-16(fp)
   5154c:	e17ffd15 	stw	r5,-12(fp)
   51550:	e1bffe15 	stw	r6,-8(fp)
   51554:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   51558:	e0800217 	ldw	r2,8(fp)
   5155c:	d8800015 	stw	r2,0(sp)
   51560:	e1ffff17 	ldw	r7,-4(fp)
   51564:	e1bffe17 	ldw	r6,-8(fp)
   51568:	e17ffd17 	ldw	r5,-12(fp)
   5156c:	e13ffc17 	ldw	r4,-16(fp)
   51570:	00516e80 	call	516e8 <alt_iic_isr_register>
}  
   51574:	e037883a 	mov	sp,fp
   51578:	dfc00117 	ldw	ra,4(sp)
   5157c:	df000017 	ldw	fp,0(sp)
   51580:	dec00204 	addi	sp,sp,8
   51584:	f800283a 	ret

00051588 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   51588:	defff904 	addi	sp,sp,-28
   5158c:	df000615 	stw	fp,24(sp)
   51590:	df000604 	addi	fp,sp,24
   51594:	e13ffe15 	stw	r4,-8(fp)
   51598:	e17fff15 	stw	r5,-4(fp)
   5159c:	e0bfff17 	ldw	r2,-4(fp)
   515a0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   515a4:	0005303a 	rdctl	r2,status
   515a8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   515ac:	e0fffb17 	ldw	r3,-20(fp)
   515b0:	00bfff84 	movi	r2,-2
   515b4:	1884703a 	and	r2,r3,r2
   515b8:	1001703a 	wrctl	status,r2
  
  return context;
   515bc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   515c0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   515c4:	00c00044 	movi	r3,1
   515c8:	e0bffa17 	ldw	r2,-24(fp)
   515cc:	1884983a 	sll	r2,r3,r2
   515d0:	1007883a 	mov	r3,r2
   515d4:	d0a6db17 	ldw	r2,-25748(gp)
   515d8:	1884b03a 	or	r2,r3,r2
   515dc:	d0a6db15 	stw	r2,-25748(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   515e0:	d0a6db17 	ldw	r2,-25748(gp)
   515e4:	100170fa 	wrctl	ienable,r2
   515e8:	e0bffc17 	ldw	r2,-16(fp)
   515ec:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   515f0:	e0bffd17 	ldw	r2,-12(fp)
   515f4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   515f8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   515fc:	0001883a 	nop
}
   51600:	e037883a 	mov	sp,fp
   51604:	df000017 	ldw	fp,0(sp)
   51608:	dec00104 	addi	sp,sp,4
   5160c:	f800283a 	ret

00051610 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   51610:	defff904 	addi	sp,sp,-28
   51614:	df000615 	stw	fp,24(sp)
   51618:	df000604 	addi	fp,sp,24
   5161c:	e13ffe15 	stw	r4,-8(fp)
   51620:	e17fff15 	stw	r5,-4(fp)
   51624:	e0bfff17 	ldw	r2,-4(fp)
   51628:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   5162c:	0005303a 	rdctl	r2,status
   51630:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   51634:	e0fffb17 	ldw	r3,-20(fp)
   51638:	00bfff84 	movi	r2,-2
   5163c:	1884703a 	and	r2,r3,r2
   51640:	1001703a 	wrctl	status,r2
  
  return context;
   51644:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   51648:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   5164c:	00c00044 	movi	r3,1
   51650:	e0bffa17 	ldw	r2,-24(fp)
   51654:	1884983a 	sll	r2,r3,r2
   51658:	0084303a 	nor	r2,zero,r2
   5165c:	1007883a 	mov	r3,r2
   51660:	d0a6db17 	ldw	r2,-25748(gp)
   51664:	1884703a 	and	r2,r3,r2
   51668:	d0a6db15 	stw	r2,-25748(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   5166c:	d0a6db17 	ldw	r2,-25748(gp)
   51670:	100170fa 	wrctl	ienable,r2
   51674:	e0bffc17 	ldw	r2,-16(fp)
   51678:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   5167c:	e0bffd17 	ldw	r2,-12(fp)
   51680:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   51684:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   51688:	0001883a 	nop
}
   5168c:	e037883a 	mov	sp,fp
   51690:	df000017 	ldw	fp,0(sp)
   51694:	dec00104 	addi	sp,sp,4
   51698:	f800283a 	ret

0005169c <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   5169c:	defffc04 	addi	sp,sp,-16
   516a0:	df000315 	stw	fp,12(sp)
   516a4:	df000304 	addi	fp,sp,12
   516a8:	e13ffe15 	stw	r4,-8(fp)
   516ac:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   516b0:	000530fa 	rdctl	r2,ienable
   516b4:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   516b8:	00c00044 	movi	r3,1
   516bc:	e0bfff17 	ldw	r2,-4(fp)
   516c0:	1884983a 	sll	r2,r3,r2
   516c4:	1007883a 	mov	r3,r2
   516c8:	e0bffd17 	ldw	r2,-12(fp)
   516cc:	1884703a 	and	r2,r3,r2
   516d0:	1004c03a 	cmpne	r2,r2,zero
   516d4:	10803fcc 	andi	r2,r2,255
}
   516d8:	e037883a 	mov	sp,fp
   516dc:	df000017 	ldw	fp,0(sp)
   516e0:	dec00104 	addi	sp,sp,4
   516e4:	f800283a 	ret

000516e8 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   516e8:	defff504 	addi	sp,sp,-44
   516ec:	dfc00a15 	stw	ra,40(sp)
   516f0:	df000915 	stw	fp,36(sp)
   516f4:	df000904 	addi	fp,sp,36
   516f8:	e13ffc15 	stw	r4,-16(fp)
   516fc:	e17ffd15 	stw	r5,-12(fp)
   51700:	e1bffe15 	stw	r6,-8(fp)
   51704:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   51708:	00bffa84 	movi	r2,-22
   5170c:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   51710:	e0bffd17 	ldw	r2,-12(fp)
   51714:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   51718:	e0bff817 	ldw	r2,-32(fp)
   5171c:	10800808 	cmpgei	r2,r2,32
   51720:	1000271e 	bne	r2,zero,517c0 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   51724:	0005303a 	rdctl	r2,status
   51728:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   5172c:	e0fffb17 	ldw	r3,-20(fp)
   51730:	00bfff84 	movi	r2,-2
   51734:	1884703a 	and	r2,r3,r2
   51738:	1001703a 	wrctl	status,r2
  
  return context;
   5173c:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   51740:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   51744:	00800174 	movhi	r2,5
   51748:	10983e04 	addi	r2,r2,24824
   5174c:	e0fff817 	ldw	r3,-32(fp)
   51750:	180690fa 	slli	r3,r3,3
   51754:	10c5883a 	add	r2,r2,r3
   51758:	e0fffe17 	ldw	r3,-8(fp)
   5175c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   51760:	00800174 	movhi	r2,5
   51764:	10983e04 	addi	r2,r2,24824
   51768:	e0fff817 	ldw	r3,-32(fp)
   5176c:	180690fa 	slli	r3,r3,3
   51770:	10c5883a 	add	r2,r2,r3
   51774:	10800104 	addi	r2,r2,4
   51778:	e0ffff17 	ldw	r3,-4(fp)
   5177c:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   51780:	e0bffe17 	ldw	r2,-8(fp)
   51784:	10000526 	beq	r2,zero,5179c <alt_iic_isr_register+0xb4>
   51788:	e0bff817 	ldw	r2,-32(fp)
   5178c:	100b883a 	mov	r5,r2
   51790:	e13ffc17 	ldw	r4,-16(fp)
   51794:	00515880 	call	51588 <alt_ic_irq_enable>
   51798:	00000406 	br	517ac <alt_iic_isr_register+0xc4>
   5179c:	e0bff817 	ldw	r2,-32(fp)
   517a0:	100b883a 	mov	r5,r2
   517a4:	e13ffc17 	ldw	r4,-16(fp)
   517a8:	00516100 	call	51610 <alt_ic_irq_disable>
   517ac:	e0bff715 	stw	r2,-36(fp)
   517b0:	e0bffa17 	ldw	r2,-24(fp)
   517b4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   517b8:	e0bff917 	ldw	r2,-28(fp)
   517bc:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   517c0:	e0bff717 	ldw	r2,-36(fp)
}
   517c4:	e037883a 	mov	sp,fp
   517c8:	dfc00117 	ldw	ra,4(sp)
   517cc:	df000017 	ldw	fp,0(sp)
   517d0:	dec00204 	addi	sp,sp,8
   517d4:	f800283a 	ret

000517d8 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   517d8:	defff904 	addi	sp,sp,-28
   517dc:	dfc00615 	stw	ra,24(sp)
   517e0:	df000515 	stw	fp,20(sp)
   517e4:	df000504 	addi	fp,sp,20
   517e8:	e13ffc15 	stw	r4,-16(fp)
   517ec:	e17ffd15 	stw	r5,-12(fp)
   517f0:	e1bffe15 	stw	r6,-8(fp)
   517f4:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   517f8:	e1bfff17 	ldw	r6,-4(fp)
   517fc:	e17ffe17 	ldw	r5,-8(fp)
   51800:	e13ffd17 	ldw	r4,-12(fp)
   51804:	0051a180 	call	51a18 <open>
   51808:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   5180c:	e0bffb17 	ldw	r2,-20(fp)
   51810:	10001c16 	blt	r2,zero,51884 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   51814:	00800174 	movhi	r2,5
   51818:	108cdd04 	addi	r2,r2,13172
   5181c:	e0fffb17 	ldw	r3,-20(fp)
   51820:	18c00324 	muli	r3,r3,12
   51824:	10c5883a 	add	r2,r2,r3
   51828:	10c00017 	ldw	r3,0(r2)
   5182c:	e0bffc17 	ldw	r2,-16(fp)
   51830:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   51834:	00800174 	movhi	r2,5
   51838:	108cdd04 	addi	r2,r2,13172
   5183c:	e0fffb17 	ldw	r3,-20(fp)
   51840:	18c00324 	muli	r3,r3,12
   51844:	10c5883a 	add	r2,r2,r3
   51848:	10800104 	addi	r2,r2,4
   5184c:	10c00017 	ldw	r3,0(r2)
   51850:	e0bffc17 	ldw	r2,-16(fp)
   51854:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   51858:	00800174 	movhi	r2,5
   5185c:	108cdd04 	addi	r2,r2,13172
   51860:	e0fffb17 	ldw	r3,-20(fp)
   51864:	18c00324 	muli	r3,r3,12
   51868:	10c5883a 	add	r2,r2,r3
   5186c:	10800204 	addi	r2,r2,8
   51870:	10c00017 	ldw	r3,0(r2)
   51874:	e0bffc17 	ldw	r2,-16(fp)
   51878:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   5187c:	e13ffb17 	ldw	r4,-20(fp)
   51880:	00502ec0 	call	502ec <alt_release_fd>
  }
} 
   51884:	0001883a 	nop
   51888:	e037883a 	mov	sp,fp
   5188c:	dfc00117 	ldw	ra,4(sp)
   51890:	df000017 	ldw	fp,0(sp)
   51894:	dec00204 	addi	sp,sp,8
   51898:	f800283a 	ret

0005189c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   5189c:	defffb04 	addi	sp,sp,-20
   518a0:	dfc00415 	stw	ra,16(sp)
   518a4:	df000315 	stw	fp,12(sp)
   518a8:	df000304 	addi	fp,sp,12
   518ac:	e13ffd15 	stw	r4,-12(fp)
   518b0:	e17ffe15 	stw	r5,-8(fp)
   518b4:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   518b8:	01c07fc4 	movi	r7,511
   518bc:	01800044 	movi	r6,1
   518c0:	e17ffd17 	ldw	r5,-12(fp)
   518c4:	01000174 	movhi	r4,5
   518c8:	210ce004 	addi	r4,r4,13184
   518cc:	00517d80 	call	517d8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   518d0:	01c07fc4 	movi	r7,511
   518d4:	000d883a 	mov	r6,zero
   518d8:	e17ffe17 	ldw	r5,-8(fp)
   518dc:	01000174 	movhi	r4,5
   518e0:	210cdd04 	addi	r4,r4,13172
   518e4:	00517d80 	call	517d8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   518e8:	01c07fc4 	movi	r7,511
   518ec:	01800044 	movi	r6,1
   518f0:	e17fff17 	ldw	r5,-4(fp)
   518f4:	01000174 	movhi	r4,5
   518f8:	210ce304 	addi	r4,r4,13196
   518fc:	00517d80 	call	517d8 <alt_open_fd>
}  
   51900:	0001883a 	nop
   51904:	e037883a 	mov	sp,fp
   51908:	dfc00117 	ldw	ra,4(sp)
   5190c:	df000017 	ldw	fp,0(sp)
   51910:	dec00204 	addi	sp,sp,8
   51914:	f800283a 	ret

00051918 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   51918:	defffe04 	addi	sp,sp,-8
   5191c:	dfc00115 	stw	ra,4(sp)
   51920:	df000015 	stw	fp,0(sp)
   51924:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   51928:	d0a00b17 	ldw	r2,-32724(gp)
   5192c:	10000326 	beq	r2,zero,5193c <alt_get_errno+0x24>
   51930:	d0a00b17 	ldw	r2,-32724(gp)
   51934:	103ee83a 	callr	r2
   51938:	00000106 	br	51940 <alt_get_errno+0x28>
   5193c:	d0a6d704 	addi	r2,gp,-25764
}
   51940:	e037883a 	mov	sp,fp
   51944:	dfc00117 	ldw	ra,4(sp)
   51948:	df000017 	ldw	fp,0(sp)
   5194c:	dec00204 	addi	sp,sp,8
   51950:	f800283a 	ret

00051954 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   51954:	defffd04 	addi	sp,sp,-12
   51958:	df000215 	stw	fp,8(sp)
   5195c:	df000204 	addi	fp,sp,8
   51960:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   51964:	e0bfff17 	ldw	r2,-4(fp)
   51968:	10800217 	ldw	r2,8(r2)
   5196c:	10d00034 	orhi	r3,r2,16384
   51970:	e0bfff17 	ldw	r2,-4(fp)
   51974:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   51978:	e03ffe15 	stw	zero,-8(fp)
   5197c:	00001d06 	br	519f4 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   51980:	00800174 	movhi	r2,5
   51984:	108cdd04 	addi	r2,r2,13172
   51988:	e0fffe17 	ldw	r3,-8(fp)
   5198c:	18c00324 	muli	r3,r3,12
   51990:	10c5883a 	add	r2,r2,r3
   51994:	10c00017 	ldw	r3,0(r2)
   51998:	e0bfff17 	ldw	r2,-4(fp)
   5199c:	10800017 	ldw	r2,0(r2)
   519a0:	1880111e 	bne	r3,r2,519e8 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   519a4:	00800174 	movhi	r2,5
   519a8:	108cdd04 	addi	r2,r2,13172
   519ac:	e0fffe17 	ldw	r3,-8(fp)
   519b0:	18c00324 	muli	r3,r3,12
   519b4:	10c5883a 	add	r2,r2,r3
   519b8:	10800204 	addi	r2,r2,8
   519bc:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   519c0:	1000090e 	bge	r2,zero,519e8 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   519c4:	e0bffe17 	ldw	r2,-8(fp)
   519c8:	10c00324 	muli	r3,r2,12
   519cc:	00800174 	movhi	r2,5
   519d0:	108cdd04 	addi	r2,r2,13172
   519d4:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   519d8:	e0bfff17 	ldw	r2,-4(fp)
   519dc:	18800226 	beq	r3,r2,519e8 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   519e0:	00bffcc4 	movi	r2,-13
   519e4:	00000806 	br	51a08 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   519e8:	e0bffe17 	ldw	r2,-8(fp)
   519ec:	10800044 	addi	r2,r2,1
   519f0:	e0bffe15 	stw	r2,-8(fp)
   519f4:	d0a00a17 	ldw	r2,-32728(gp)
   519f8:	1007883a 	mov	r3,r2
   519fc:	e0bffe17 	ldw	r2,-8(fp)
   51a00:	18bfdf2e 	bgeu	r3,r2,51980 <__alt_data_end+0xfffd1980>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   51a04:	0005883a 	mov	r2,zero
}
   51a08:	e037883a 	mov	sp,fp
   51a0c:	df000017 	ldw	fp,0(sp)
   51a10:	dec00104 	addi	sp,sp,4
   51a14:	f800283a 	ret

00051a18 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   51a18:	defff604 	addi	sp,sp,-40
   51a1c:	dfc00915 	stw	ra,36(sp)
   51a20:	df000815 	stw	fp,32(sp)
   51a24:	df000804 	addi	fp,sp,32
   51a28:	e13ffd15 	stw	r4,-12(fp)
   51a2c:	e17ffe15 	stw	r5,-8(fp)
   51a30:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   51a34:	00bfffc4 	movi	r2,-1
   51a38:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   51a3c:	00bffb44 	movi	r2,-19
   51a40:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   51a44:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   51a48:	d1600804 	addi	r5,gp,-32736
   51a4c:	e13ffd17 	ldw	r4,-12(fp)
   51a50:	0051d340 	call	51d34 <alt_find_dev>
   51a54:	e0bff815 	stw	r2,-32(fp)
   51a58:	e0bff817 	ldw	r2,-32(fp)
   51a5c:	1000051e 	bne	r2,zero,51a74 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   51a60:	e13ffd17 	ldw	r4,-12(fp)
   51a64:	0051dc40 	call	51dc4 <alt_find_file>
   51a68:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   51a6c:	00800044 	movi	r2,1
   51a70:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   51a74:	e0bff817 	ldw	r2,-32(fp)
   51a78:	10002926 	beq	r2,zero,51b20 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   51a7c:	e13ff817 	ldw	r4,-32(fp)
   51a80:	0051ecc0 	call	51ecc <alt_get_fd>
   51a84:	e0bff915 	stw	r2,-28(fp)
   51a88:	e0bff917 	ldw	r2,-28(fp)
   51a8c:	1000030e 	bge	r2,zero,51a9c <open+0x84>
    {
      status = index;
   51a90:	e0bff917 	ldw	r2,-28(fp)
   51a94:	e0bffa15 	stw	r2,-24(fp)
   51a98:	00002306 	br	51b28 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   51a9c:	e0bff917 	ldw	r2,-28(fp)
   51aa0:	10c00324 	muli	r3,r2,12
   51aa4:	00800174 	movhi	r2,5
   51aa8:	108cdd04 	addi	r2,r2,13172
   51aac:	1885883a 	add	r2,r3,r2
   51ab0:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   51ab4:	e0fffe17 	ldw	r3,-8(fp)
   51ab8:	00900034 	movhi	r2,16384
   51abc:	10bfffc4 	addi	r2,r2,-1
   51ac0:	1886703a 	and	r3,r3,r2
   51ac4:	e0bffc17 	ldw	r2,-16(fp)
   51ac8:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   51acc:	e0bffb17 	ldw	r2,-20(fp)
   51ad0:	1000051e 	bne	r2,zero,51ae8 <open+0xd0>
   51ad4:	e13ffc17 	ldw	r4,-16(fp)
   51ad8:	00519540 	call	51954 <alt_file_locked>
   51adc:	e0bffa15 	stw	r2,-24(fp)
   51ae0:	e0bffa17 	ldw	r2,-24(fp)
   51ae4:	10001016 	blt	r2,zero,51b28 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   51ae8:	e0bff817 	ldw	r2,-32(fp)
   51aec:	10800317 	ldw	r2,12(r2)
   51af0:	10000826 	beq	r2,zero,51b14 <open+0xfc>
   51af4:	e0bff817 	ldw	r2,-32(fp)
   51af8:	10800317 	ldw	r2,12(r2)
   51afc:	e1ffff17 	ldw	r7,-4(fp)
   51b00:	e1bffe17 	ldw	r6,-8(fp)
   51b04:	e17ffd17 	ldw	r5,-12(fp)
   51b08:	e13ffc17 	ldw	r4,-16(fp)
   51b0c:	103ee83a 	callr	r2
   51b10:	00000106 	br	51b18 <open+0x100>
   51b14:	0005883a 	mov	r2,zero
   51b18:	e0bffa15 	stw	r2,-24(fp)
   51b1c:	00000206 	br	51b28 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   51b20:	00bffb44 	movi	r2,-19
   51b24:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   51b28:	e0bffa17 	ldw	r2,-24(fp)
   51b2c:	1000090e 	bge	r2,zero,51b54 <open+0x13c>
  {
    alt_release_fd (index);  
   51b30:	e13ff917 	ldw	r4,-28(fp)
   51b34:	00502ec0 	call	502ec <alt_release_fd>
    ALT_ERRNO = -status;
   51b38:	00519180 	call	51918 <alt_get_errno>
   51b3c:	1007883a 	mov	r3,r2
   51b40:	e0bffa17 	ldw	r2,-24(fp)
   51b44:	0085c83a 	sub	r2,zero,r2
   51b48:	18800015 	stw	r2,0(r3)
    return -1;
   51b4c:	00bfffc4 	movi	r2,-1
   51b50:	00000106 	br	51b58 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   51b54:	e0bff917 	ldw	r2,-28(fp)
}
   51b58:	e037883a 	mov	sp,fp
   51b5c:	dfc00117 	ldw	ra,4(sp)
   51b60:	df000017 	ldw	fp,0(sp)
   51b64:	dec00204 	addi	sp,sp,8
   51b68:	f800283a 	ret

00051b6c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   51b6c:	defffa04 	addi	sp,sp,-24
   51b70:	df000515 	stw	fp,20(sp)
   51b74:	df000504 	addi	fp,sp,20
   51b78:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   51b7c:	0005303a 	rdctl	r2,status
   51b80:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   51b84:	e0fffc17 	ldw	r3,-16(fp)
   51b88:	00bfff84 	movi	r2,-2
   51b8c:	1884703a 	and	r2,r3,r2
   51b90:	1001703a 	wrctl	status,r2
  
  return context;
   51b94:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   51b98:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   51b9c:	e0bfff17 	ldw	r2,-4(fp)
   51ba0:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   51ba4:	e0bffd17 	ldw	r2,-12(fp)
   51ba8:	10800017 	ldw	r2,0(r2)
   51bac:	e0fffd17 	ldw	r3,-12(fp)
   51bb0:	18c00117 	ldw	r3,4(r3)
   51bb4:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   51bb8:	e0bffd17 	ldw	r2,-12(fp)
   51bbc:	10800117 	ldw	r2,4(r2)
   51bc0:	e0fffd17 	ldw	r3,-12(fp)
   51bc4:	18c00017 	ldw	r3,0(r3)
   51bc8:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   51bcc:	e0bffd17 	ldw	r2,-12(fp)
   51bd0:	e0fffd17 	ldw	r3,-12(fp)
   51bd4:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   51bd8:	e0bffd17 	ldw	r2,-12(fp)
   51bdc:	e0fffd17 	ldw	r3,-12(fp)
   51be0:	10c00015 	stw	r3,0(r2)
   51be4:	e0bffb17 	ldw	r2,-20(fp)
   51be8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   51bec:	e0bffe17 	ldw	r2,-8(fp)
   51bf0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   51bf4:	0001883a 	nop
   51bf8:	e037883a 	mov	sp,fp
   51bfc:	df000017 	ldw	fp,0(sp)
   51c00:	dec00104 	addi	sp,sp,4
   51c04:	f800283a 	ret

00051c08 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   51c08:	defffb04 	addi	sp,sp,-20
   51c0c:	dfc00415 	stw	ra,16(sp)
   51c10:	df000315 	stw	fp,12(sp)
   51c14:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   51c18:	d0a00e17 	ldw	r2,-32712(gp)
   51c1c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   51c20:	d0a6dd17 	ldw	r2,-25740(gp)
   51c24:	10800044 	addi	r2,r2,1
   51c28:	d0a6dd15 	stw	r2,-25740(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   51c2c:	00002e06 	br	51ce8 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   51c30:	e0bffd17 	ldw	r2,-12(fp)
   51c34:	10800017 	ldw	r2,0(r2)
   51c38:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   51c3c:	e0bffd17 	ldw	r2,-12(fp)
   51c40:	10800403 	ldbu	r2,16(r2)
   51c44:	10803fcc 	andi	r2,r2,255
   51c48:	10000426 	beq	r2,zero,51c5c <alt_tick+0x54>
   51c4c:	d0a6dd17 	ldw	r2,-25740(gp)
   51c50:	1000021e 	bne	r2,zero,51c5c <alt_tick+0x54>
    {
      alarm->rollover = 0;
   51c54:	e0bffd17 	ldw	r2,-12(fp)
   51c58:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   51c5c:	e0bffd17 	ldw	r2,-12(fp)
   51c60:	10800217 	ldw	r2,8(r2)
   51c64:	d0e6dd17 	ldw	r3,-25740(gp)
   51c68:	18801d36 	bltu	r3,r2,51ce0 <alt_tick+0xd8>
   51c6c:	e0bffd17 	ldw	r2,-12(fp)
   51c70:	10800403 	ldbu	r2,16(r2)
   51c74:	10803fcc 	andi	r2,r2,255
   51c78:	1000191e 	bne	r2,zero,51ce0 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   51c7c:	e0bffd17 	ldw	r2,-12(fp)
   51c80:	10800317 	ldw	r2,12(r2)
   51c84:	e0fffd17 	ldw	r3,-12(fp)
   51c88:	18c00517 	ldw	r3,20(r3)
   51c8c:	1809883a 	mov	r4,r3
   51c90:	103ee83a 	callr	r2
   51c94:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   51c98:	e0bfff17 	ldw	r2,-4(fp)
   51c9c:	1000031e 	bne	r2,zero,51cac <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   51ca0:	e13ffd17 	ldw	r4,-12(fp)
   51ca4:	0051b6c0 	call	51b6c <alt_alarm_stop>
   51ca8:	00000d06 	br	51ce0 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   51cac:	e0bffd17 	ldw	r2,-12(fp)
   51cb0:	10c00217 	ldw	r3,8(r2)
   51cb4:	e0bfff17 	ldw	r2,-4(fp)
   51cb8:	1887883a 	add	r3,r3,r2
   51cbc:	e0bffd17 	ldw	r2,-12(fp)
   51cc0:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   51cc4:	e0bffd17 	ldw	r2,-12(fp)
   51cc8:	10c00217 	ldw	r3,8(r2)
   51ccc:	d0a6dd17 	ldw	r2,-25740(gp)
   51cd0:	1880032e 	bgeu	r3,r2,51ce0 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   51cd4:	e0bffd17 	ldw	r2,-12(fp)
   51cd8:	00c00044 	movi	r3,1
   51cdc:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   51ce0:	e0bffe17 	ldw	r2,-8(fp)
   51ce4:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   51ce8:	e0fffd17 	ldw	r3,-12(fp)
   51cec:	d0a00e04 	addi	r2,gp,-32712
   51cf0:	18bfcf1e 	bne	r3,r2,51c30 <__alt_data_end+0xfffd1c30>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   51cf4:	0001883a 	nop
}
   51cf8:	0001883a 	nop
   51cfc:	e037883a 	mov	sp,fp
   51d00:	dfc00117 	ldw	ra,4(sp)
   51d04:	df000017 	ldw	fp,0(sp)
   51d08:	dec00204 	addi	sp,sp,8
   51d0c:	f800283a 	ret

00051d10 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   51d10:	deffff04 	addi	sp,sp,-4
   51d14:	df000015 	stw	fp,0(sp)
   51d18:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   51d1c:	000170fa 	wrctl	ienable,zero
}
   51d20:	0001883a 	nop
   51d24:	e037883a 	mov	sp,fp
   51d28:	df000017 	ldw	fp,0(sp)
   51d2c:	dec00104 	addi	sp,sp,4
   51d30:	f800283a 	ret

00051d34 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   51d34:	defffa04 	addi	sp,sp,-24
   51d38:	dfc00515 	stw	ra,20(sp)
   51d3c:	df000415 	stw	fp,16(sp)
   51d40:	df000404 	addi	fp,sp,16
   51d44:	e13ffe15 	stw	r4,-8(fp)
   51d48:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   51d4c:	e0bfff17 	ldw	r2,-4(fp)
   51d50:	10800017 	ldw	r2,0(r2)
   51d54:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   51d58:	e13ffe17 	ldw	r4,-8(fp)
   51d5c:	00451a80 	call	451a8 <strlen>
   51d60:	10800044 	addi	r2,r2,1
   51d64:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   51d68:	00000d06 	br	51da0 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   51d6c:	e0bffc17 	ldw	r2,-16(fp)
   51d70:	10800217 	ldw	r2,8(r2)
   51d74:	e0fffd17 	ldw	r3,-12(fp)
   51d78:	180d883a 	mov	r6,r3
   51d7c:	e17ffe17 	ldw	r5,-8(fp)
   51d80:	1009883a 	mov	r4,r2
   51d84:	00520e80 	call	520e8 <memcmp>
   51d88:	1000021e 	bne	r2,zero,51d94 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   51d8c:	e0bffc17 	ldw	r2,-16(fp)
   51d90:	00000706 	br	51db0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   51d94:	e0bffc17 	ldw	r2,-16(fp)
   51d98:	10800017 	ldw	r2,0(r2)
   51d9c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   51da0:	e0fffc17 	ldw	r3,-16(fp)
   51da4:	e0bfff17 	ldw	r2,-4(fp)
   51da8:	18bff01e 	bne	r3,r2,51d6c <__alt_data_end+0xfffd1d6c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   51dac:	0005883a 	mov	r2,zero
}
   51db0:	e037883a 	mov	sp,fp
   51db4:	dfc00117 	ldw	ra,4(sp)
   51db8:	df000017 	ldw	fp,0(sp)
   51dbc:	dec00204 	addi	sp,sp,8
   51dc0:	f800283a 	ret

00051dc4 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   51dc4:	defffb04 	addi	sp,sp,-20
   51dc8:	dfc00415 	stw	ra,16(sp)
   51dcc:	df000315 	stw	fp,12(sp)
   51dd0:	df000304 	addi	fp,sp,12
   51dd4:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   51dd8:	d0a00617 	ldw	r2,-32744(gp)
   51ddc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   51de0:	00003106 	br	51ea8 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   51de4:	e0bffd17 	ldw	r2,-12(fp)
   51de8:	10800217 	ldw	r2,8(r2)
   51dec:	1009883a 	mov	r4,r2
   51df0:	00451a80 	call	451a8 <strlen>
   51df4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   51df8:	e0bffd17 	ldw	r2,-12(fp)
   51dfc:	10c00217 	ldw	r3,8(r2)
   51e00:	e0bffe17 	ldw	r2,-8(fp)
   51e04:	10bfffc4 	addi	r2,r2,-1
   51e08:	1885883a 	add	r2,r3,r2
   51e0c:	10800003 	ldbu	r2,0(r2)
   51e10:	10803fcc 	andi	r2,r2,255
   51e14:	1080201c 	xori	r2,r2,128
   51e18:	10bfe004 	addi	r2,r2,-128
   51e1c:	10800bd8 	cmpnei	r2,r2,47
   51e20:	1000031e 	bne	r2,zero,51e30 <alt_find_file+0x6c>
    {
      len -= 1;
   51e24:	e0bffe17 	ldw	r2,-8(fp)
   51e28:	10bfffc4 	addi	r2,r2,-1
   51e2c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   51e30:	e0bffe17 	ldw	r2,-8(fp)
   51e34:	e0ffff17 	ldw	r3,-4(fp)
   51e38:	1885883a 	add	r2,r3,r2
   51e3c:	10800003 	ldbu	r2,0(r2)
   51e40:	10803fcc 	andi	r2,r2,255
   51e44:	1080201c 	xori	r2,r2,128
   51e48:	10bfe004 	addi	r2,r2,-128
   51e4c:	10800be0 	cmpeqi	r2,r2,47
   51e50:	1000081e 	bne	r2,zero,51e74 <alt_find_file+0xb0>
   51e54:	e0bffe17 	ldw	r2,-8(fp)
   51e58:	e0ffff17 	ldw	r3,-4(fp)
   51e5c:	1885883a 	add	r2,r3,r2
   51e60:	10800003 	ldbu	r2,0(r2)
   51e64:	10803fcc 	andi	r2,r2,255
   51e68:	1080201c 	xori	r2,r2,128
   51e6c:	10bfe004 	addi	r2,r2,-128
   51e70:	10000a1e 	bne	r2,zero,51e9c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   51e74:	e0bffd17 	ldw	r2,-12(fp)
   51e78:	10800217 	ldw	r2,8(r2)
   51e7c:	e0fffe17 	ldw	r3,-8(fp)
   51e80:	180d883a 	mov	r6,r3
   51e84:	e17fff17 	ldw	r5,-4(fp)
   51e88:	1009883a 	mov	r4,r2
   51e8c:	00520e80 	call	520e8 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   51e90:	1000021e 	bne	r2,zero,51e9c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   51e94:	e0bffd17 	ldw	r2,-12(fp)
   51e98:	00000706 	br	51eb8 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   51e9c:	e0bffd17 	ldw	r2,-12(fp)
   51ea0:	10800017 	ldw	r2,0(r2)
   51ea4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   51ea8:	e0fffd17 	ldw	r3,-12(fp)
   51eac:	d0a00604 	addi	r2,gp,-32744
   51eb0:	18bfcc1e 	bne	r3,r2,51de4 <__alt_data_end+0xfffd1de4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   51eb4:	0005883a 	mov	r2,zero
}
   51eb8:	e037883a 	mov	sp,fp
   51ebc:	dfc00117 	ldw	ra,4(sp)
   51ec0:	df000017 	ldw	fp,0(sp)
   51ec4:	dec00204 	addi	sp,sp,8
   51ec8:	f800283a 	ret

00051ecc <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   51ecc:	defffc04 	addi	sp,sp,-16
   51ed0:	df000315 	stw	fp,12(sp)
   51ed4:	df000304 	addi	fp,sp,12
   51ed8:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   51edc:	00bffa04 	movi	r2,-24
   51ee0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   51ee4:	e03ffd15 	stw	zero,-12(fp)
   51ee8:	00001906 	br	51f50 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   51eec:	00800174 	movhi	r2,5
   51ef0:	108cdd04 	addi	r2,r2,13172
   51ef4:	e0fffd17 	ldw	r3,-12(fp)
   51ef8:	18c00324 	muli	r3,r3,12
   51efc:	10c5883a 	add	r2,r2,r3
   51f00:	10800017 	ldw	r2,0(r2)
   51f04:	10000f1e 	bne	r2,zero,51f44 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   51f08:	00800174 	movhi	r2,5
   51f0c:	108cdd04 	addi	r2,r2,13172
   51f10:	e0fffd17 	ldw	r3,-12(fp)
   51f14:	18c00324 	muli	r3,r3,12
   51f18:	10c5883a 	add	r2,r2,r3
   51f1c:	e0ffff17 	ldw	r3,-4(fp)
   51f20:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   51f24:	d0e00a17 	ldw	r3,-32728(gp)
   51f28:	e0bffd17 	ldw	r2,-12(fp)
   51f2c:	1880020e 	bge	r3,r2,51f38 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   51f30:	e0bffd17 	ldw	r2,-12(fp)
   51f34:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   51f38:	e0bffd17 	ldw	r2,-12(fp)
   51f3c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   51f40:	00000606 	br	51f5c <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   51f44:	e0bffd17 	ldw	r2,-12(fp)
   51f48:	10800044 	addi	r2,r2,1
   51f4c:	e0bffd15 	stw	r2,-12(fp)
   51f50:	e0bffd17 	ldw	r2,-12(fp)
   51f54:	10800810 	cmplti	r2,r2,32
   51f58:	103fe41e 	bne	r2,zero,51eec <__alt_data_end+0xfffd1eec>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   51f5c:	e0bffe17 	ldw	r2,-8(fp)
}
   51f60:	e037883a 	mov	sp,fp
   51f64:	df000017 	ldw	fp,0(sp)
   51f68:	dec00104 	addi	sp,sp,4
   51f6c:	f800283a 	ret

00051f70 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   51f70:	defffb04 	addi	sp,sp,-20
   51f74:	df000415 	stw	fp,16(sp)
   51f78:	df000404 	addi	fp,sp,16
   51f7c:	e13ffe15 	stw	r4,-8(fp)
   51f80:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   51f84:	e0bfff17 	ldw	r2,-4(fp)
   51f88:	10840070 	cmpltui	r2,r2,4097
   51f8c:	1000021e 	bne	r2,zero,51f98 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   51f90:	00840004 	movi	r2,4096
   51f94:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   51f98:	e0fffe17 	ldw	r3,-8(fp)
   51f9c:	e0bfff17 	ldw	r2,-4(fp)
   51fa0:	1885883a 	add	r2,r3,r2
   51fa4:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   51fa8:	e0bffe17 	ldw	r2,-8(fp)
   51fac:	e0bffc15 	stw	r2,-16(fp)
   51fb0:	00000506 	br	51fc8 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   51fb4:	e0bffc17 	ldw	r2,-16(fp)
   51fb8:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   51fbc:	e0bffc17 	ldw	r2,-16(fp)
   51fc0:	10800804 	addi	r2,r2,32
   51fc4:	e0bffc15 	stw	r2,-16(fp)
   51fc8:	e0fffc17 	ldw	r3,-16(fp)
   51fcc:	e0bffd17 	ldw	r2,-12(fp)
   51fd0:	18bff836 	bltu	r3,r2,51fb4 <__alt_data_end+0xfffd1fb4>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   51fd4:	e0bffe17 	ldw	r2,-8(fp)
   51fd8:	108007cc 	andi	r2,r2,31
   51fdc:	10000226 	beq	r2,zero,51fe8 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   51fe0:	e0bffc17 	ldw	r2,-16(fp)
   51fe4:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   51fe8:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   51fec:	0001883a 	nop
   51ff0:	e037883a 	mov	sp,fp
   51ff4:	df000017 	ldw	fp,0(sp)
   51ff8:	dec00104 	addi	sp,sp,4
   51ffc:	f800283a 	ret

00052000 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   52000:	defffe04 	addi	sp,sp,-8
   52004:	df000115 	stw	fp,4(sp)
   52008:	df000104 	addi	fp,sp,4
   5200c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   52010:	e0bfff17 	ldw	r2,-4(fp)
   52014:	10bffe84 	addi	r2,r2,-6
   52018:	10c00428 	cmpgeui	r3,r2,16
   5201c:	18001a1e 	bne	r3,zero,52088 <alt_exception_cause_generated_bad_addr+0x88>
   52020:	100690ba 	slli	r3,r2,2
   52024:	00800174 	movhi	r2,5
   52028:	10880e04 	addi	r2,r2,8248
   5202c:	1885883a 	add	r2,r3,r2
   52030:	10800017 	ldw	r2,0(r2)
   52034:	1000683a 	jmp	r2
   52038:	00052078 	rdprs	zero,zero,5249
   5203c:	00052078 	rdprs	zero,zero,5249
   52040:	00052088 	cmpgei	zero,zero,5250
   52044:	00052088 	cmpgei	zero,zero,5250
   52048:	00052088 	cmpgei	zero,zero,5250
   5204c:	00052078 	rdprs	zero,zero,5249
   52050:	00052080 	call	5208 <__reset-0x3adf8>
   52054:	00052088 	cmpgei	zero,zero,5250
   52058:	00052078 	rdprs	zero,zero,5249
   5205c:	00052078 	rdprs	zero,zero,5249
   52060:	00052088 	cmpgei	zero,zero,5250
   52064:	00052078 	rdprs	zero,zero,5249
   52068:	00052080 	call	5208 <__reset-0x3adf8>
   5206c:	00052088 	cmpgei	zero,zero,5250
   52070:	00052088 	cmpgei	zero,zero,5250
   52074:	00052078 	rdprs	zero,zero,5249
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   52078:	00800044 	movi	r2,1
   5207c:	00000306 	br	5208c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   52080:	0005883a 	mov	r2,zero
   52084:	00000106 	br	5208c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   52088:	0005883a 	mov	r2,zero
  }
}
   5208c:	e037883a 	mov	sp,fp
   52090:	df000017 	ldw	fp,0(sp)
   52094:	dec00104 	addi	sp,sp,4
   52098:	f800283a 	ret

0005209c <atexit>:
   5209c:	200b883a 	mov	r5,r4
   520a0:	000f883a 	mov	r7,zero
   520a4:	000d883a 	mov	r6,zero
   520a8:	0009883a 	mov	r4,zero
   520ac:	00521641 	jmpi	52164 <__register_exitproc>

000520b0 <exit>:
   520b0:	defffe04 	addi	sp,sp,-8
   520b4:	000b883a 	mov	r5,zero
   520b8:	dc000015 	stw	r16,0(sp)
   520bc:	dfc00115 	stw	ra,4(sp)
   520c0:	2021883a 	mov	r16,r4
   520c4:	005227c0 	call	5227c <__call_exitprocs>
   520c8:	00800174 	movhi	r2,5
   520cc:	10915504 	addi	r2,r2,17748
   520d0:	11000017 	ldw	r4,0(r2)
   520d4:	20800f17 	ldw	r2,60(r4)
   520d8:	10000126 	beq	r2,zero,520e0 <exit+0x30>
   520dc:	103ee83a 	callr	r2
   520e0:	8009883a 	mov	r4,r16
   520e4:	00523fc0 	call	523fc <_exit>

000520e8 <memcmp>:
   520e8:	01c000c4 	movi	r7,3
   520ec:	3980192e 	bgeu	r7,r6,52154 <memcmp+0x6c>
   520f0:	2144b03a 	or	r2,r4,r5
   520f4:	11c4703a 	and	r2,r2,r7
   520f8:	10000f26 	beq	r2,zero,52138 <memcmp+0x50>
   520fc:	20800003 	ldbu	r2,0(r4)
   52100:	28c00003 	ldbu	r3,0(r5)
   52104:	10c0151e 	bne	r2,r3,5215c <memcmp+0x74>
   52108:	31bfff84 	addi	r6,r6,-2
   5210c:	01ffffc4 	movi	r7,-1
   52110:	00000406 	br	52124 <memcmp+0x3c>
   52114:	20800003 	ldbu	r2,0(r4)
   52118:	28c00003 	ldbu	r3,0(r5)
   5211c:	31bfffc4 	addi	r6,r6,-1
   52120:	10c00e1e 	bne	r2,r3,5215c <memcmp+0x74>
   52124:	21000044 	addi	r4,r4,1
   52128:	29400044 	addi	r5,r5,1
   5212c:	31fff91e 	bne	r6,r7,52114 <__alt_data_end+0xfffd2114>
   52130:	0005883a 	mov	r2,zero
   52134:	f800283a 	ret
   52138:	20c00017 	ldw	r3,0(r4)
   5213c:	28800017 	ldw	r2,0(r5)
   52140:	18bfee1e 	bne	r3,r2,520fc <__alt_data_end+0xfffd20fc>
   52144:	31bfff04 	addi	r6,r6,-4
   52148:	21000104 	addi	r4,r4,4
   5214c:	29400104 	addi	r5,r5,4
   52150:	39bff936 	bltu	r7,r6,52138 <__alt_data_end+0xfffd2138>
   52154:	303fe91e 	bne	r6,zero,520fc <__alt_data_end+0xfffd20fc>
   52158:	003ff506 	br	52130 <__alt_data_end+0xfffd2130>
   5215c:	10c5c83a 	sub	r2,r2,r3
   52160:	f800283a 	ret

00052164 <__register_exitproc>:
   52164:	defffa04 	addi	sp,sp,-24
   52168:	dc000315 	stw	r16,12(sp)
   5216c:	04000174 	movhi	r16,5
   52170:	84115504 	addi	r16,r16,17748
   52174:	80c00017 	ldw	r3,0(r16)
   52178:	dc400415 	stw	r17,16(sp)
   5217c:	dfc00515 	stw	ra,20(sp)
   52180:	18805217 	ldw	r2,328(r3)
   52184:	2023883a 	mov	r17,r4
   52188:	10003726 	beq	r2,zero,52268 <__register_exitproc+0x104>
   5218c:	10c00117 	ldw	r3,4(r2)
   52190:	010007c4 	movi	r4,31
   52194:	20c00e16 	blt	r4,r3,521d0 <__register_exitproc+0x6c>
   52198:	1a000044 	addi	r8,r3,1
   5219c:	8800221e 	bne	r17,zero,52228 <__register_exitproc+0xc4>
   521a0:	18c00084 	addi	r3,r3,2
   521a4:	18c7883a 	add	r3,r3,r3
   521a8:	18c7883a 	add	r3,r3,r3
   521ac:	12000115 	stw	r8,4(r2)
   521b0:	10c7883a 	add	r3,r2,r3
   521b4:	19400015 	stw	r5,0(r3)
   521b8:	0005883a 	mov	r2,zero
   521bc:	dfc00517 	ldw	ra,20(sp)
   521c0:	dc400417 	ldw	r17,16(sp)
   521c4:	dc000317 	ldw	r16,12(sp)
   521c8:	dec00604 	addi	sp,sp,24
   521cc:	f800283a 	ret
   521d0:	00800034 	movhi	r2,0
   521d4:	10800004 	addi	r2,r2,0
   521d8:	10002626 	beq	r2,zero,52274 <__register_exitproc+0x110>
   521dc:	01006404 	movi	r4,400
   521e0:	d9400015 	stw	r5,0(sp)
   521e4:	d9800115 	stw	r6,4(sp)
   521e8:	d9c00215 	stw	r7,8(sp)
   521ec:	00000000 	call	0 <__reset-0x40000>
   521f0:	d9400017 	ldw	r5,0(sp)
   521f4:	d9800117 	ldw	r6,4(sp)
   521f8:	d9c00217 	ldw	r7,8(sp)
   521fc:	10001d26 	beq	r2,zero,52274 <__register_exitproc+0x110>
   52200:	81000017 	ldw	r4,0(r16)
   52204:	10000115 	stw	zero,4(r2)
   52208:	02000044 	movi	r8,1
   5220c:	22405217 	ldw	r9,328(r4)
   52210:	0007883a 	mov	r3,zero
   52214:	12400015 	stw	r9,0(r2)
   52218:	20805215 	stw	r2,328(r4)
   5221c:	10006215 	stw	zero,392(r2)
   52220:	10006315 	stw	zero,396(r2)
   52224:	883fde26 	beq	r17,zero,521a0 <__alt_data_end+0xfffd21a0>
   52228:	18c9883a 	add	r4,r3,r3
   5222c:	2109883a 	add	r4,r4,r4
   52230:	1109883a 	add	r4,r2,r4
   52234:	21802215 	stw	r6,136(r4)
   52238:	01800044 	movi	r6,1
   5223c:	12406217 	ldw	r9,392(r2)
   52240:	30cc983a 	sll	r6,r6,r3
   52244:	4992b03a 	or	r9,r9,r6
   52248:	12406215 	stw	r9,392(r2)
   5224c:	21c04215 	stw	r7,264(r4)
   52250:	01000084 	movi	r4,2
   52254:	893fd21e 	bne	r17,r4,521a0 <__alt_data_end+0xfffd21a0>
   52258:	11006317 	ldw	r4,396(r2)
   5225c:	218cb03a 	or	r6,r4,r6
   52260:	11806315 	stw	r6,396(r2)
   52264:	003fce06 	br	521a0 <__alt_data_end+0xfffd21a0>
   52268:	18805304 	addi	r2,r3,332
   5226c:	18805215 	stw	r2,328(r3)
   52270:	003fc606 	br	5218c <__alt_data_end+0xfffd218c>
   52274:	00bfffc4 	movi	r2,-1
   52278:	003fd006 	br	521bc <__alt_data_end+0xfffd21bc>

0005227c <__call_exitprocs>:
   5227c:	defff504 	addi	sp,sp,-44
   52280:	df000915 	stw	fp,36(sp)
   52284:	dd400615 	stw	r21,24(sp)
   52288:	dc800315 	stw	r18,12(sp)
   5228c:	dfc00a15 	stw	ra,40(sp)
   52290:	ddc00815 	stw	r23,32(sp)
   52294:	dd800715 	stw	r22,28(sp)
   52298:	dd000515 	stw	r20,20(sp)
   5229c:	dcc00415 	stw	r19,16(sp)
   522a0:	dc400215 	stw	r17,8(sp)
   522a4:	dc000115 	stw	r16,4(sp)
   522a8:	d9000015 	stw	r4,0(sp)
   522ac:	2839883a 	mov	fp,r5
   522b0:	04800044 	movi	r18,1
   522b4:	057fffc4 	movi	r21,-1
   522b8:	00800174 	movhi	r2,5
   522bc:	10915504 	addi	r2,r2,17748
   522c0:	12000017 	ldw	r8,0(r2)
   522c4:	45005217 	ldw	r20,328(r8)
   522c8:	44c05204 	addi	r19,r8,328
   522cc:	a0001c26 	beq	r20,zero,52340 <__call_exitprocs+0xc4>
   522d0:	a0800117 	ldw	r2,4(r20)
   522d4:	15ffffc4 	addi	r23,r2,-1
   522d8:	b8000d16 	blt	r23,zero,52310 <__call_exitprocs+0x94>
   522dc:	14000044 	addi	r16,r2,1
   522e0:	8421883a 	add	r16,r16,r16
   522e4:	8421883a 	add	r16,r16,r16
   522e8:	84402004 	addi	r17,r16,128
   522ec:	a463883a 	add	r17,r20,r17
   522f0:	a421883a 	add	r16,r20,r16
   522f4:	e0001e26 	beq	fp,zero,52370 <__call_exitprocs+0xf4>
   522f8:	80804017 	ldw	r2,256(r16)
   522fc:	e0801c26 	beq	fp,r2,52370 <__call_exitprocs+0xf4>
   52300:	bdffffc4 	addi	r23,r23,-1
   52304:	843fff04 	addi	r16,r16,-4
   52308:	8c7fff04 	addi	r17,r17,-4
   5230c:	bd7ff91e 	bne	r23,r21,522f4 <__alt_data_end+0xfffd22f4>
   52310:	00800034 	movhi	r2,0
   52314:	10800004 	addi	r2,r2,0
   52318:	10000926 	beq	r2,zero,52340 <__call_exitprocs+0xc4>
   5231c:	a0800117 	ldw	r2,4(r20)
   52320:	1000301e 	bne	r2,zero,523e4 <__call_exitprocs+0x168>
   52324:	a0800017 	ldw	r2,0(r20)
   52328:	10003226 	beq	r2,zero,523f4 <__call_exitprocs+0x178>
   5232c:	a009883a 	mov	r4,r20
   52330:	98800015 	stw	r2,0(r19)
   52334:	00000000 	call	0 <__reset-0x40000>
   52338:	9d000017 	ldw	r20,0(r19)
   5233c:	a03fe41e 	bne	r20,zero,522d0 <__alt_data_end+0xfffd22d0>
   52340:	dfc00a17 	ldw	ra,40(sp)
   52344:	df000917 	ldw	fp,36(sp)
   52348:	ddc00817 	ldw	r23,32(sp)
   5234c:	dd800717 	ldw	r22,28(sp)
   52350:	dd400617 	ldw	r21,24(sp)
   52354:	dd000517 	ldw	r20,20(sp)
   52358:	dcc00417 	ldw	r19,16(sp)
   5235c:	dc800317 	ldw	r18,12(sp)
   52360:	dc400217 	ldw	r17,8(sp)
   52364:	dc000117 	ldw	r16,4(sp)
   52368:	dec00b04 	addi	sp,sp,44
   5236c:	f800283a 	ret
   52370:	a0800117 	ldw	r2,4(r20)
   52374:	80c00017 	ldw	r3,0(r16)
   52378:	10bfffc4 	addi	r2,r2,-1
   5237c:	15c01426 	beq	r2,r23,523d0 <__call_exitprocs+0x154>
   52380:	80000015 	stw	zero,0(r16)
   52384:	183fde26 	beq	r3,zero,52300 <__alt_data_end+0xfffd2300>
   52388:	95c8983a 	sll	r4,r18,r23
   5238c:	a0806217 	ldw	r2,392(r20)
   52390:	a5800117 	ldw	r22,4(r20)
   52394:	2084703a 	and	r2,r4,r2
   52398:	10000b26 	beq	r2,zero,523c8 <__call_exitprocs+0x14c>
   5239c:	a0806317 	ldw	r2,396(r20)
   523a0:	2088703a 	and	r4,r4,r2
   523a4:	20000c1e 	bne	r4,zero,523d8 <__call_exitprocs+0x15c>
   523a8:	89400017 	ldw	r5,0(r17)
   523ac:	d9000017 	ldw	r4,0(sp)
   523b0:	183ee83a 	callr	r3
   523b4:	a0800117 	ldw	r2,4(r20)
   523b8:	15bfbf1e 	bne	r2,r22,522b8 <__alt_data_end+0xfffd22b8>
   523bc:	98800017 	ldw	r2,0(r19)
   523c0:	153fcf26 	beq	r2,r20,52300 <__alt_data_end+0xfffd2300>
   523c4:	003fbc06 	br	522b8 <__alt_data_end+0xfffd22b8>
   523c8:	183ee83a 	callr	r3
   523cc:	003ff906 	br	523b4 <__alt_data_end+0xfffd23b4>
   523d0:	a5c00115 	stw	r23,4(r20)
   523d4:	003feb06 	br	52384 <__alt_data_end+0xfffd2384>
   523d8:	89000017 	ldw	r4,0(r17)
   523dc:	183ee83a 	callr	r3
   523e0:	003ff406 	br	523b4 <__alt_data_end+0xfffd23b4>
   523e4:	a0800017 	ldw	r2,0(r20)
   523e8:	a027883a 	mov	r19,r20
   523ec:	1029883a 	mov	r20,r2
   523f0:	003fb606 	br	522cc <__alt_data_end+0xfffd22cc>
   523f4:	0005883a 	mov	r2,zero
   523f8:	003ffb06 	br	523e8 <__alt_data_end+0xfffd23e8>

000523fc <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   523fc:	defffd04 	addi	sp,sp,-12
   52400:	df000215 	stw	fp,8(sp)
   52404:	df000204 	addi	fp,sp,8
   52408:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   5240c:	0001883a 	nop
   52410:	e0bfff17 	ldw	r2,-4(fp)
   52414:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   52418:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   5241c:	10000226 	beq	r2,zero,52428 <_exit+0x2c>
    ALT_SIM_FAIL();
   52420:	002af070 	cmpltui	zero,zero,43969
   52424:	00000106 	br	5242c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   52428:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   5242c:	003fff06 	br	5242c <__alt_data_end+0xfffd242c>

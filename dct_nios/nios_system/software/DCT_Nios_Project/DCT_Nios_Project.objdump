
DCT_Nios_Project.elf:     file format elf32-littlenios2
DCT_Nios_Project.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040244

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x00013d48 memsz 0x00013d48 flags r-x
    LOAD off    0x00014d68 vaddr 0x00053d68 paddr 0x00055854 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00017340 vaddr 0x00057340 paddr 0x00057340 align 2**12
         filesz 0x00000000 memsz 0x00000178 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000134ac  00040244  00040244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000678  000536f0  000536f0  000146f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  00053d68  00055854  00014d68  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000178  00057340  00057340  00017340  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  000574b8  000574b8  00016854  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00016854  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001098  00000000  00000000  00016878  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00025b6b  00000000  00000000  00017910  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000a01a  00000000  00000000  0003d47b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000cfa5  00000000  00000000  00047495  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002760  00000000  00000000  0005443c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00004026  00000000  00000000  00056b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001c1d6  00000000  00000000  0005abc2  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00076d98  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001db0  00000000  00000000  00076dc8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0007c1c1  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0007c1c4  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0007c1d0  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0007c1d1  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0007c1d2  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0007c1dd  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0007c1e8  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000008  00000000  00000000  0007c1f3  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000046  00000000  00000000  0007c1fb  2**0
                  CONTENTS, READONLY
 26 .sopcinfo     0003c731  00000000  00000000  0007c241  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040244 l    d  .text	00000000 .text
000536f0 l    d  .rodata	00000000 .rodata
00053d68 l    d  .rwdata	00000000 .rwdata
00057340 l    d  .bss	00000000 .bss
000574b8 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../DCT_Nios_Project_bsp//obj/HAL/src/crt0.o
0004028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00057340 l     O .bss	00000004 context
00040290 l     F .text	00000060 pre_measurement
000402f0 l     F .text	00000040 post_measurement
00040330 l     F .text	00000044 get_runtime
000403bc l     F .text	00000048 FLOAT_TO_FIXED
00040404 l     F .text	0000004c FIXED_TO_FLOAT
00040450 l     F .text	00000030 FIXED_MULT
00040480 l     F .text	0000003c float_abs
00000000 l    df *ABS*	00000000 s_sin.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
00053910 l     O .rodata	00000108 two_over_pi
00053890 l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
00053a58 l     O .rodata	00000010 init_jk
00053a18 l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00053bae l     O .rodata	00000010 zeroes.4404
00048714 l     F .text	000000bc __sbprintf
00053bbe l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00048924 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0004a454 l     F .text	00000008 __fp_unlock
0004a468 l     F .text	0000019c __sinit.part.1
0004a604 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00053d68 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
000541ac l     O .rwdata	00000020 lc_ctype_charset
0005418c l     O .rwdata	00000020 lc_message_charset
000541cc l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00053bf0 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0004da00 l     F .text	000000fc __sprint_r.part.0
00053d24 l     O .rodata	00000010 blanks.4348
00053d14 l     O .rodata	00000010 zeroes.4349
0004ef8c l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
00050eb0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
00050fbc l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00050fe8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
000510d4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
000511b4 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
000512a0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00051474 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00055844 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
000516c0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
000517f4 l     F .text	00000034 alt_dev_reg
000547b4 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00051adc l     F .text	0000020c altera_avalon_jtag_uart_irq
00051ce8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_performance_counter.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00052624 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00052a98 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00052bd8 l     F .text	0000003c alt_get_errno
00052c14 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0005738c g     O .bss	00000004 alt_instruction_exception_handler
0004d044 g     F .text	00000074 _mprec_log10
0004d130 g     F .text	0000008c __any_on
0004f528 g     F .text	00000054 _isatty_r
00053bfc g     O .rodata	00000028 __mprec_tinytens
000513b0 g     F .text	0000007c alt_main
00046394 g     F .text	000000c0 _puts_r
000573b8 g     O .bss	00000100 alt_irq
00042d38 g     F .text	00000014 fabs
0004f57c g     F .text	00000060 _lseek_r
00055854 g       *ABS*	00000000 __flash_rwdata_start
00044d38 g     F .text	00000088 .hidden __eqdf2
000574b8 g       *ABS*	00000000 __alt_heap_start
00046358 g     F .text	0000003c printf
0004f794 g     F .text	0000009c _wcrtomb_r
0004d8c0 g     F .text	0000005c __sseek
0004a7a4 g     F .text	00000010 __sinit
0005248c g     F .text	00000024 alt_get_cpu_freq
0004f63c g     F .text	00000140 __swbuf_r
0004b26c g     F .text	0000007c _setlocale_r
0004a60c g     F .text	00000068 __sfmoreglue
00051450 g     F .text	00000024 __malloc_unlock
0004376c g     F .text	00000440 .hidden __divsf3
000404bc g     F .text	0000016c float_sin
0004bf3c g     F .text	0000015c memmove
0004a78c g     F .text	00000018 _cleanup
0004c1c0 g     F .text	000000a8 _Balloc
00057344 g     O .bss	00000004 Q_M
00044dc0 g     F .text	000000dc .hidden __gtdf2
00052fd0 g     F .text	00000024 altera_nios2_gen2_irq_init
00040000 g     F .entry	0000001c __reset
00040020 g       *ABS*	00000000 __flash_exceptions_start
0004f4cc g     F .text	0000005c _fstat_r
00057370 g     O .bss	00000004 errno
00042d4c g     F .text	000001ec floor
0004d83c g     F .text	00000008 __seofread
00057378 g     O .bss	00000004 alt_argv
0005d814 g       *ABS*	00000000 _gp
00043fa8 g     F .text	000004e4 .hidden __subsf3
00054634 g     O .rwdata	00000180 alt_fd_list
000410cc g     F .text	0000076c __ieee754_rem_pio2
00052ff4 g     F .text	00000090 alt_find_dev
0004bdf4 g     F .text	00000148 memcpy
0004a45c g     F .text	0000000c _cleanup_r
00045f30 g     F .text	000000dc .hidden __floatsidf
00052b5c g     F .text	0000007c alt_io_redirect
00050d14 g     F .text	000000f4 .hidden __ltdf2
00040374 g     F .text	00000048 SET_Q_FORMAT
000536f0 g       *ABS*	00000000 __DTOR_END__
00046454 g     F .text	00000014 puts
000532c0 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0004d720 g     F .text	00000074 __fpclassifyd
0004cfa0 g     F .text	000000a4 __ratio
0004ef70 g     F .text	0000001c __vfiprintf_internal
00051ee0 g     F .text	0000021c altera_avalon_jtag_uart_read
00046328 g     F .text	00000030 _printf_r
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
000431e8 g     F .text	00000064 .hidden __udivsi3
00051110 g     F .text	000000a4 isatty
00053c4c g     O .rodata	000000c8 __mprec_tens
00057350 g     O .bss	00000004 num_fixed
0004b2e8 g     F .text	0000000c __locale_charset
00041838 g     F .text	000004a4 __kernel_cos
00053230 g     F .text	00000090 alt_icache_flush
0005736c g     O .bss	00000004 __malloc_top_pad
00052428 g     F .text	00000040 perf_get_num_starts
0005581c g     O .rwdata	00000004 __mb_cur_max
0004b318 g     F .text	0000000c _localeconv_r
0004c5cc g     F .text	0000003c __i2b
0004ac28 g     F .text	000004bc __sfvwrite_r
0005734c g     O .bss	00000004 F_ONE
00040c48 g     F .text	000000d4 tune_QM_sin
0004d794 g     F .text	00000054 _sbrk_r
0004f5dc g     F .text	00000060 _read_r
0005583c g     O .rwdata	00000004 alt_max_fd
0004f1c0 g     F .text	000000f0 _fclose_r
0004a424 g     F .text	00000030 fflush
00057368 g     O .bss	00000004 __malloc_max_sbrked_mem
00042a6c g     F .text	000002cc __kernel_sin
0004600c g     F .text	00000110 .hidden __extendsfdf2
0004448c g     F .text	000008ac .hidden __adddf3
0004cd48 g     F .text	0000010c __b2d
0004fef4 g     F .text	00000538 .hidden __umoddi3
000512dc g     F .text	000000d4 lseek
00055814 g     O .rwdata	00000004 _global_impure_ptr
0004d1bc g     F .text	00000564 _realloc_r
000574b8 g       *ABS*	00000000 __bss_end
000529a8 g     F .text	000000f0 alt_iic_isr_register
00052ec8 g     F .text	00000108 alt_tick
0004f97c g     F .text	00000578 .hidden __udivdi3
0004f428 g     F .text	00000024 _fputwc_r
00053c24 g     O .rodata	00000028 __mprec_bigtens
0004c3b0 g     F .text	00000104 __s2b
00050e08 g     F .text	000000a8 .hidden __floatunsidf
0004ca88 g     F .text	00000060 __mcmp
0004a7c4 g     F .text	00000018 __fp_lock_all
0005295c g     F .text	0000004c alt_ic_irq_enabled
00052e2c g     F .text	0000009c alt_alarm_stop
00057380 g     O .bss	00000004 alt_irq_active
000400fc g     F .exceptions	000000d4 alt_irq_handler
0005460c g     O .rwdata	00000028 alt_dev_null
00041cdc g     F .text	00000d90 __kernel_rem_pio2
000525dc g     F .text	00000048 alt_dcache_flush_all
0004c4b4 g     F .text	00000068 __hi0bits
00045eb0 g     F .text	00000080 .hidden __fixdfsi
00055854 g       *ABS*	00000000 __ram_rwdata_end
00055834 g     O .rwdata	00000008 alt_dev_list
000516fc g     F .text	000000f8 write
00040afc g     F .text	0000014c test_sin_fixed
00053d68 g       *ABS*	00000000 __ram_rodata_end
00051024 g     F .text	000000b0 fstat
00057348 g     O .bss	00000004 Q_N
000407b4 g     F .text	000000d0 optimized_fixed_sin
00050d14 g     F .text	000000f4 .hidden __ledf2
0004c800 g     F .text	00000140 __pow5mult
0004db14 g     F .text	0000145c ___vfiprintf_internal_r
00057360 g     O .bss	00000004 __nlocale_changed
0004324c g     F .text	00000058 .hidden __umodsi3
000574b8 g       *ABS*	00000000 end
00051a1c g     F .text	000000c0 altera_avalon_jtag_uart_init
000401d0 g     F .exceptions	00000074 alt_instruction_exception_entry
000536f0 g       *ABS*	00000000 __CTOR_LIST__
00080000 g       *ABS*	00000000 __alt_stack_pointer
000462c4 g     F .text	00000064 .hidden __clzsi2
000520fc g     F .text	00000224 altera_avalon_jtag_uart_write
0004a7b4 g     F .text	00000004 __sfp_lock_acquire
0004bd10 g     F .text	000000e4 memchr
00046500 g     F .text	000021f8 ___vfprintf_internal_r
0004a918 g     F .text	00000310 _free_r
0004b2f4 g     F .text	00000010 __locale_mb_cur_max
0005353c g     F .text	00000180 __call_exitprocs
0005735c g     O .bss	00000004 __mlocale_changed
00055820 g     O .rwdata	00000004 __malloc_sbrk_base
00040244 g     F .text	0000004c _start
00057384 g     O .bss	00000004 _alt_tick_rate
00040fdc g     F .text	000000f0 sin
00057354 g     O .bss	00000004 num_float
0004c940 g     F .text	00000148 __lshift
00057388 g     O .bss	00000004 _alt_nticks
000514b0 g     F .text	000000fc read
00051860 g     F .text	00000058 alt_sys_init
00053424 g     F .text	00000118 __register_exitproc
000409ac g     F .text	00000150 test_sin_float
0004c608 g     F .text	000001f8 __multiply
00051d88 g     F .text	00000068 altera_avalon_jtag_uart_close
00053d68 g       *ABS*	00000000 __ram_rwdata_start
000536f0 g       *ABS*	00000000 __ram_rodata_start
00057390 g     O .bss	00000028 __malloc_current_mallinfo
0004ce54 g     F .text	0000014c __d2b
000518b8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0005318c g     F .text	000000a4 alt_get_fd
0004f0a8 g     F .text	00000054 _close_r
00052320 g     F .text	000000bc perf_get_section_time
000533a8 g     F .text	0000007c memcmp
00051978 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
000574b8 g       *ABS*	00000000 __alt_stack_base
000519c8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000487d0 g     F .text	00000154 __swsetup_r
0005042c g     F .text	000008e8 .hidden __divdf3
0004a674 g     F .text	00000118 __sfp
0004d0b8 g     F .text	00000078 __copybits
000523dc g     F .text	0000004c perf_get_total_time
00054204 g     O .rwdata	00000408 __malloc_av_
0004a7c0 g     F .text	00000004 __sinit_lock_release
00044e9c g     F .text	00000718 .hidden __muldf3
0004d7e8 g     F .text	00000054 __sread
00053084 g     F .text	00000108 alt_find_file
00052660 g     F .text	000000a4 alt_dev_llist_insert
0005142c g     F .text	00000024 __malloc_lock
00051610 g     F .text	000000b0 sbrk
0004a3c8 g     F .text	0000005c _fflush_r
0004f0fc g     F .text	000000c4 _calloc_r
00057340 g       *ABS*	00000000 __bss_start
0004c098 g     F .text	00000128 memset
00040d1c g     F .text	000002c0 main
0005737c g     O .bss	00000004 alt_envp
00057364 g     O .bss	00000004 __malloc_max_total_mem
00051918 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0004f77c g     F .text	00000018 __swbuf
0004d91c g     F .text	00000008 __sclose
00080000 g       *ABS*	00000000 __alt_heap_limit
0004f2b0 g     F .text	00000014 fclose
0004611c g     F .text	000001a8 .hidden __truncdfsf2
00048b24 g     F .text	00001688 _dtoa_r
0004b504 g     F .text	0000080c _malloc_r
0004f8f0 g     F .text	00000030 __ascii_wctomb
00055840 g     O .rwdata	00000004 alt_errno
0004b0e4 g     F .text	000000c4 _fwalk
000430f0 g     F .text	00000084 .hidden __divsi3
0004a7f4 g     F .text	00000124 _malloc_trim_r
000536f0 g       *ABS*	00000000 __CTOR_END__
00043bac g     F .text	000003fc .hidden __mulsf3
0004d924 g     F .text	000000dc strcmp
000536f0 g       *ABS*	00000000 __flash_rodata_start
000536f0 g       *ABS*	00000000 __DTOR_LIST__
000430d4 g     F .text	0000001c copysign
00044d38 g     F .text	00000088 .hidden __nedf2
00051828 g     F .text	00000038 alt_irq_init
000515ac g     F .text	00000064 alt_release_fd
00053a68 g     O .rodata	00000100 .hidden __clz_tab
00057358 g     O .bss	00000004 _PathLocale
0005335c g     F .text	00000014 atexit
0004f048 g     F .text	00000060 _write_r
0004b324 g     F .text	00000018 setlocale
00055818 g     O .rwdata	00000004 _impure_ptr
00057374 g     O .bss	00000004 alt_argc
0004a1ac g     F .text	0000021c __sflush_r
00042f38 g     F .text	0000019c scalbn
00052764 g     F .text	00000060 _do_dtors
0004b310 g     F .text	00000008 __locale_cjk_lang
00040628 g     F .text	0000018c optimized_float_sin
00040020 g       .exceptions	00000000 alt_irq_entry
0004cce4 g     F .text	00000064 __ulp
0004a7dc g     F .text	00000018 __fp_unlock_all
0005582c g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
0004b33c g     F .text	0000000c localeconv
000527f8 g     F .text	00000050 alt_ic_isr_register
00055854 g       *ABS*	00000000 _edata
000574b8 g       *ABS*	00000000 _end
0004f2c4 g     F .text	00000164 __fputwc
00040244 g       *ABS*	00000000 __ram_exceptions_end
00051df0 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
000528d0 g     F .text	0000008c alt_ic_irq_disable
0004d844 g     F .text	0000007c __swrite
00055824 g     O .rwdata	00000004 __malloc_trim_threshold
00052468 g     F .text	00000024 alt_get_performance_counter_base
0004b304 g     F .text	0000000c __locale_msgcharset
00053370 g     F .text	00000038 exit
0004b1a8 g     F .text	000000c4 _fwalk_reent
0004cae8 g     F .text	000001fc __mdiff
00043174 g     F .text	00000074 .hidden __modsi3
00080000 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
0004a7b8 g     F .text	00000004 __sfp_lock_release
000536bc g     F .text	00000034 _exit
00040884 g     F .text	00000128 fixed_sin
000524b0 g     F .text	0000012c alt_alarm_start
0004b348 g     F .text	000001bc __smakebuf_r
00046468 g     F .text	00000098 strlen
00052cd8 g     F .text	00000154 open
00044dc0 g     F .text	000000dc .hidden __gedf2
00055828 g     O .rwdata	00000004 __wctomb
0004dafc g     F .text	00000018 __sprint_r
000527c4 g     F .text	00000034 alt_icache_flush_all
00055848 g     O .rwdata	00000004 alt_priority_mask
00052848 g     F .text	00000088 alt_ic_irq_enable
000486f8 g     F .text	0000001c __vfprintf_internal
0004f920 g     F .text	0000005c _wctomb_r
000455b4 g     F .text	000008fc .hidden __subdf3
0004c51c g     F .text	000000b0 __lo0bits
0005584c g     O .rwdata	00000008 alt_alarm_list
00052704 g     F .text	00000060 _do_ctors
0004f830 g     F .text	000000c0 wcrtomb
00050eec g     F .text	000000d0 close
000432a4 g     F .text	000004c8 .hidden __addsf3
0005121c g     F .text	00000084 alt_load
0004f44c g     F .text	00000080 fputwc
0004a7bc g     F .text	00000004 __sinit_lock_acquire
0004c290 g     F .text	00000120 __multadd
0004c268 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__alt_data_end+0xfffc0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08409114 	ori	at,at,580
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	00401d00 	call	401d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   40118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0fffb17 	ldw	r3,-20(fp)
   40130:	e0bffc17 	ldw	r2,-16(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001426 	beq	r2,zero,4018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	00800174 	movhi	r2,5
   40140:	109cee04 	addi	r2,r2,29624
   40144:	e0fffd17 	ldw	r3,-12(fp)
   40148:	180690fa 	slli	r3,r3,3
   4014c:	10c5883a 	add	r2,r2,r3
   40150:	10c00017 	ldw	r3,0(r2)
   40154:	00800174 	movhi	r2,5
   40158:	109cee04 	addi	r2,r2,29624
   4015c:	e13ffd17 	ldw	r4,-12(fp)
   40160:	200890fa 	slli	r4,r4,3
   40164:	1105883a 	add	r2,r2,r4
   40168:	10800104 	addi	r2,r2,4
   4016c:	10800017 	ldw	r2,0(r2)
   40170:	1009883a 	mov	r4,r2
   40174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   40178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   4017c:	0005313a 	rdctl	r2,ipending
   40180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   40184:	e0bfff17 	ldw	r2,-4(fp)
   40188:	00000706 	br	401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   4018c:	e0bffc17 	ldw	r2,-16(fp)
   40190:	1085883a 	add	r2,r2,r2
   40194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   40198:	e0bffd17 	ldw	r2,-12(fp)
   4019c:	10800044 	addi	r2,r2,1
   401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   401a4:	003fe106 	br	4012c <__alt_data_end+0xfffc012c>

    active = alt_irq_pending ();
   401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   401ac:	e0bffb17 	ldw	r2,-20(fp)
   401b0:	103fdb1e 	bne	r2,zero,40120 <__alt_data_end+0xfffc0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401b4:	0001883a 	nop
}
   401b8:	0001883a 	nop
   401bc:	e037883a 	mov	sp,fp
   401c0:	dfc00117 	ldw	ra,4(sp)
   401c4:	df000017 	ldw	fp,0(sp)
   401c8:	dec00204 	addi	sp,sp,8
   401cc:	f800283a 	ret

000401d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401d0:	defffb04 	addi	sp,sp,-20
   401d4:	dfc00415 	stw	ra,16(sp)
   401d8:	df000315 	stw	fp,12(sp)
   401dc:	df000304 	addi	fp,sp,12
   401e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   401e4:	000531fa 	rdctl	r2,exception
   401e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   401ec:	e0bffd17 	ldw	r2,-12(fp)
   401f0:	10801f0c 	andi	r2,r2,124
   401f4:	1004d0ba 	srli	r2,r2,2
   401f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   401fc:	0005333a 	rdctl	r2,badaddr
   40200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   40204:	d0a6de17 	ldw	r2,-25736(gp)
   40208:	10000726 	beq	r2,zero,40228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   4020c:	d0a6de17 	ldw	r2,-25736(gp)
   40210:	e0fffd17 	ldw	r3,-12(fp)
   40214:	e1bffe17 	ldw	r6,-8(fp)
   40218:	e17fff17 	ldw	r5,-4(fp)
   4021c:	1809883a 	mov	r4,r3
   40220:	103ee83a 	callr	r2
   40224:	00000206 	br	40230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   40228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   4022c:	0005883a 	mov	r2,zero
}
   40230:	e037883a 	mov	sp,fp
   40234:	dfc00117 	ldw	ra,4(sp)
   40238:	df000017 	ldw	fp,0(sp)
   4023c:	dec00204 	addi	sp,sp,8
   40240:	f800283a 	ret

Disassembly of section .text:

00040244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   40244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   40248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   4024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   40250:	00bffd16 	blt	zero,r2,40248 <__alt_data_end+0xfffc0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40254:	06c00234 	movhi	sp,8
    ori sp, sp, %lo(__alt_stack_pointer)
   40258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   4025c:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   40260:	d6b60514 	ori	gp,gp,55316
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40264:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   40268:	109cd014 	ori	r2,r2,29504

    movhi r3, %hi(__bss_end)
   4026c:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   40270:	18dd2e14 	ori	r3,r3,29880

    beq r2, r3, 1f
   40274:	10c00326 	beq	r2,r3,40284 <_start+0x40>

0:
    stw zero, (r2)
   40278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   4027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   40280:	10fffd36 	bltu	r2,r3,40278 <__alt_data_end+0xfffc0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40284:	005121c0 	call	5121c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   40288:	00513b00 	call	513b0 <alt_main>

0004028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   4028c:	003fff06 	br	4028c <__alt_data_end+0xfffc028c>

00040290 <pre_measurement>:

static alt_irq_context context; /* Use when disabling interrupts. */



static void pre_measurement(void){
   40290:	defffe04 	addi	sp,sp,-8
   40294:	df000115 	stw	fp,4(sp)
   40298:	df000104 	addi	fp,sp,4

  PERF_RESET (PERFORMANCE_COUNTER_0_BASE);
   4029c:	00c00044 	movi	r3,1
   402a0:	00800234 	movhi	r2,8
   402a4:	10861004 	addi	r2,r2,6208
   402a8:	10c00035 	stwio	r3,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   402ac:	0005303a 	rdctl	r2,status
   402b0:	e0bfff15 	stw	r2,-4(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   402b4:	e0ffff17 	ldw	r3,-4(fp)
   402b8:	00bfff84 	movi	r2,-2
   402bc:	1884703a 	and	r2,r3,r2
   402c0:	1001703a 	wrctl	status,r2
  
  return context;
   402c4:	e0bfff17 	ldw	r2,-4(fp)

  context = alt_irq_disable_all();
   402c8:	d0a6cb15 	stw	r2,-25812(gp)

  PERF_START_MEASURING (PERFORMANCE_COUNTER_0_BASE);
   402cc:	0007883a 	mov	r3,zero
   402d0:	00800234 	movhi	r2,8
   402d4:	10861104 	addi	r2,r2,6212
   402d8:	10c00035 	stwio	r3,0(r2)

}
   402dc:	0001883a 	nop
   402e0:	e037883a 	mov	sp,fp
   402e4:	df000017 	ldw	fp,0(sp)
   402e8:	dec00104 	addi	sp,sp,4
   402ec:	f800283a 	ret

000402f0 <post_measurement>:



static void post_measurement(void){
   402f0:	defffe04 	addi	sp,sp,-8
   402f4:	df000115 	stw	fp,4(sp)
   402f8:	df000104 	addi	fp,sp,4

	alt_irq_enable_all(context);
   402fc:	d0a6cb17 	ldw	r2,-25812(gp)
   40300:	e0bfff15 	stw	r2,-4(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   40304:	e0bfff17 	ldw	r2,-4(fp)
   40308:	1001703a 	wrctl	status,r2

	PERF_STOP_MEASURING (PERFORMANCE_COUNTER_0_BASE);
   4030c:	0007883a 	mov	r3,zero
   40310:	00800234 	movhi	r2,8
   40314:	10861004 	addi	r2,r2,6208
   40318:	10c00035 	stwio	r3,0(r2)

}
   4031c:	0001883a 	nop
   40320:	e037883a 	mov	sp,fp
   40324:	df000017 	ldw	fp,0(sp)
   40328:	dec00104 	addi	sp,sp,4
   4032c:	f800283a 	ret

00040330 <get_runtime>:



static inline int get_runtime(int sec) {
   40330:	defffd04 	addi	sp,sp,-12
   40334:	dfc00215 	stw	ra,8(sp)
   40338:	df000115 	stw	fp,4(sp)
   4033c:	df000104 	addi	fp,sp,4
   40340:	e13fff15 	stw	r4,-4(fp)

	return (int)perf_get_section_time ((void*)PERFORMANCE_COUNTER_0_BASE, sec);
   40344:	e17fff17 	ldw	r5,-4(fp)
   40348:	01000234 	movhi	r4,8
   4034c:	21061004 	addi	r4,r4,6208
   40350:	00523200 	call	52320 <perf_get_section_time>
   40354:	1009883a 	mov	r4,r2
   40358:	180b883a 	mov	r5,r3
   4035c:	2005883a 	mov	r2,r4

}
   40360:	e037883a 	mov	sp,fp
   40364:	dfc00117 	ldw	ra,4(sp)
   40368:	df000017 	ldw	fp,0(sp)
   4036c:	dec00204 	addi	sp,sp,8
   40370:	f800283a 	ret

00040374 <SET_Q_FORMAT>:

int F_ONE = 0;



void SET_Q_FORMAT(int M, int N) {
   40374:	defffd04 	addi	sp,sp,-12
   40378:	df000215 	stw	fp,8(sp)
   4037c:	df000204 	addi	fp,sp,8
   40380:	e13ffe15 	stw	r4,-8(fp)
   40384:	e17fff15 	stw	r5,-4(fp)

    Q_M = M;
   40388:	e0bffe17 	ldw	r2,-8(fp)
   4038c:	d0a6cc15 	stw	r2,-25808(gp)

    Q_N = N;
   40390:	e0bfff17 	ldw	r2,-4(fp)
   40394:	d0a6cd15 	stw	r2,-25804(gp)

    F_ONE = 1 << N;
   40398:	00c00044 	movi	r3,1
   4039c:	e0bfff17 	ldw	r2,-4(fp)
   403a0:	1884983a 	sll	r2,r3,r2
   403a4:	d0a6ce15 	stw	r2,-25800(gp)

}
   403a8:	0001883a 	nop
   403ac:	e037883a 	mov	sp,fp
   403b0:	df000017 	ldw	fp,0(sp)
   403b4:	dec00104 	addi	sp,sp,4
   403b8:	f800283a 	ret

000403bc <FLOAT_TO_FIXED>:



static inline fixed FLOAT_TO_FIXED(register float f) {
   403bc:	defffe04 	addi	sp,sp,-8
   403c0:	dfc00115 	stw	ra,4(sp)
   403c4:	df000015 	stw	fp,0(sp)
   403c8:	d839883a 	mov	fp,sp
   403cc:	2007883a 	mov	r3,r4

    return (fixed)(f * F_ONE);
   403d0:	d0a6ce17 	ldw	r2,-25800(gp)
   403d4:	1005feb2 	custom	250,r2,r2,zero
   403d8:	180b883a 	mov	r5,r3
   403dc:	1009883a 	mov	r4,r2
   403e0:	0043bac0 	call	43bac <__mulsf3>
   403e4:	1007883a 	mov	r3,r2
   403e8:	1805883a 	mov	r2,r3
   403ec:	1005fe72 	custom	249,r2,r2,zero

}
   403f0:	e037883a 	mov	sp,fp
   403f4:	dfc00117 	ldw	ra,4(sp)
   403f8:	df000017 	ldw	fp,0(sp)
   403fc:	dec00204 	addi	sp,sp,8
   40400:	f800283a 	ret

00040404 <FIXED_TO_FLOAT>:



static inline float FIXED_TO_FLOAT(register fixed f){
   40404:	defffe04 	addi	sp,sp,-8
   40408:	dfc00115 	stw	ra,4(sp)
   4040c:	df000015 	stw	fp,0(sp)
   40410:	d839883a 	mov	fp,sp
   40414:	2005883a 	mov	r2,r4

    return (float)(f)/F_ONE;
   40418:	1007feb2 	custom	250,r3,r2,zero
   4041c:	d0a6ce17 	ldw	r2,-25800(gp)
   40420:	1005feb2 	custom	250,r2,r2,zero
   40424:	100b883a 	mov	r5,r2
   40428:	1809883a 	mov	r4,r3
   4042c:	004376c0 	call	4376c <__divsf3>
   40430:	1009883a 	mov	r4,r2
   40434:	2007883a 	mov	r3,r4
   40438:	1805883a 	mov	r2,r3

}
   4043c:	e037883a 	mov	sp,fp
   40440:	dfc00117 	ldw	ra,4(sp)
   40444:	df000017 	ldw	fp,0(sp)
   40448:	dec00204 	addi	sp,sp,8
   4044c:	f800283a 	ret

00040450 <FIXED_MULT>:



static inline fixed FIXED_MULT(register fixed op1, register fixed op2) {
   40450:	deffff04 	addi	sp,sp,-4
   40454:	df000015 	stw	fp,0(sp)
   40458:	d839883a 	mov	fp,sp
   4045c:	2007883a 	mov	r3,r4
   40460:	2805883a 	mov	r2,r5

    return (fixed)op1*op2 >> Q_N;
   40464:	1887383a 	mul	r3,r3,r2
   40468:	d0a6cd17 	ldw	r2,-25804(gp)
   4046c:	1885d83a 	sra	r2,r3,r2

}
   40470:	e037883a 	mov	sp,fp
   40474:	df000017 	ldw	fp,0(sp)
   40478:	dec00104 	addi	sp,sp,4
   4047c:	f800283a 	ret

00040480 <float_abs>:



static inline float float_abs(register float x) {
   40480:	deffff04 	addi	sp,sp,-4
   40484:	df000015 	stw	fp,0(sp)
   40488:	d839883a 	mov	fp,sp
   4048c:	2005883a 	mov	r2,r4

    if (x >= 0) return x;
   40490:	0007883a 	mov	r3,zero
   40494:	10c7f932 	custom	228,r3,r2,r3
   40498:	18000226 	beq	r3,zero,404a4 <float_abs+0x24>
   4049c:	1007883a 	mov	r3,r2
   404a0:	00000106 	br	404a8 <float_abs+0x28>

    else return -x;
   404a4:	1007f872 	custom	225,r3,r2,zero
   404a8:	1805883a 	mov	r2,r3

}
   404ac:	e037883a 	mov	sp,fp
   404b0:	df000017 	ldw	fp,0(sp)
   404b4:	dec00104 	addi	sp,sp,4
   404b8:	f800283a 	ret

000404bc <float_sin>:

int num_float;

int num_fixed;

float float_sin(register float x, register int terms) {
   404bc:	defff704 	addi	sp,sp,-36
   404c0:	dfc00815 	stw	ra,32(sp)
   404c4:	df000715 	stw	fp,28(sp)
   404c8:	dd400615 	stw	r21,24(sp)
   404cc:	dd000515 	stw	r20,20(sp)
   404d0:	dcc00415 	stw	r19,16(sp)
   404d4:	dc800315 	stw	r18,12(sp)
   404d8:	dc400215 	stw	r17,8(sp)
   404dc:	dc000115 	stw	r16,4(sp)
   404e0:	df000704 	addi	fp,sp,28
   404e4:	2021883a 	mov	r16,r4
   404e8:	2829883a 	mov	r20,r5

    num_float++;
   404ec:	d0a6d017 	ldw	r2,-25792(gp)
   404f0:	10800044 	addi	r2,r2,1
   404f4:	d0a6d015 	stw	r2,-25792(gp)

    PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 2);
   404f8:	0007883a 	mov	r3,zero
   404fc:	00800234 	movhi	r2,8
   40500:	10861904 	addi	r2,r2,6244
   40504:	10c00035 	stwio	r3,0(r2)

    register float result = x;
   40508:	8025883a 	mov	r18,r16

    register float x2 = x*x;
   4050c:	800b883a 	mov	r5,r16
   40510:	8009883a 	mov	r4,r16
   40514:	0043bac0 	call	43bac <__mulsf3>
   40518:	1007883a 	mov	r3,r2
   4051c:	182b883a 	mov	r21,r3

    register float num = x;
   40520:	8027883a 	mov	r19,r16

    register int den = 1;
   40524:	04000044 	movi	r16,1

    register int neg = 1;
   40528:	04400044 	movi	r17,1

    for (int i = 1; i < terms; i++) {
   4052c:	00800044 	movi	r2,1
   40530:	e0bff915 	stw	r2,-28(fp)
   40534:	00002906 	br	405dc <float_sin+0x120>

        num *= x2;
   40538:	a80b883a 	mov	r5,r21
   4053c:	9809883a 	mov	r4,r19
   40540:	0043bac0 	call	43bac <__mulsf3>
   40544:	1007883a 	mov	r3,r2
   40548:	1827883a 	mov	r19,r3

        den *= (2*i+1)*(2*i);
   4054c:	e0bff917 	ldw	r2,-28(fp)
   40550:	1085883a 	add	r2,r2,r2
   40554:	10c00044 	addi	r3,r2,1
   40558:	e0bff917 	ldw	r2,-28(fp)
   4055c:	1085883a 	add	r2,r2,r2
   40560:	1885383a 	mul	r2,r3,r2
   40564:	80a1383a 	mul	r16,r16,r2

        if (!neg)
   40568:	88000c1e 	bne	r17,zero,4059c <float_sin+0xe0>

            result += num/den;
   4056c:	8005feb2 	custom	250,r2,r16,zero
   40570:	100b883a 	mov	r5,r2
   40574:	9809883a 	mov	r4,r19
   40578:	004376c0 	call	4376c <__divsf3>
   4057c:	1007883a 	mov	r3,r2
   40580:	1805883a 	mov	r2,r3
   40584:	100b883a 	mov	r5,r2
   40588:	9009883a 	mov	r4,r18
   4058c:	00432a40 	call	432a4 <__addsf3>
   40590:	1007883a 	mov	r3,r2
   40594:	1825883a 	mov	r18,r3
   40598:	00000b06 	br	405c8 <float_sin+0x10c>

        else

            result -= num/den;
   4059c:	8005feb2 	custom	250,r2,r16,zero
   405a0:	100b883a 	mov	r5,r2
   405a4:	9809883a 	mov	r4,r19
   405a8:	004376c0 	call	4376c <__divsf3>
   405ac:	1007883a 	mov	r3,r2
   405b0:	1805883a 	mov	r2,r3
   405b4:	100b883a 	mov	r5,r2
   405b8:	9009883a 	mov	r4,r18
   405bc:	0043fa80 	call	43fa8 <__subsf3>
   405c0:	1007883a 	mov	r3,r2
   405c4:	1825883a 	mov	r18,r3

        neg = !neg;
   405c8:	8805003a 	cmpeq	r2,r17,zero
   405cc:	14403fcc 	andi	r17,r2,255

    register int den = 1;

    register int neg = 1;

    for (int i = 1; i < terms; i++) {
   405d0:	e0bff917 	ldw	r2,-28(fp)
   405d4:	10800044 	addi	r2,r2,1
   405d8:	e0bff915 	stw	r2,-28(fp)
   405dc:	e0bff917 	ldw	r2,-28(fp)
   405e0:	153fd516 	blt	r2,r20,40538 <__alt_data_end+0xfffc0538>

        neg = !neg;

    }

    PERF_END (PERFORMANCE_COUNTER_0_BASE, 2);
   405e4:	0007883a 	mov	r3,zero
   405e8:	00800234 	movhi	r2,8
   405ec:	10861804 	addi	r2,r2,6240
   405f0:	10c00035 	stwio	r3,0(r2)

    return result;
   405f4:	9007883a 	mov	r3,r18
   405f8:	1805883a 	mov	r2,r3

}
   405fc:	e6fffa04 	addi	sp,fp,-24
   40600:	dfc00717 	ldw	ra,28(sp)
   40604:	df000617 	ldw	fp,24(sp)
   40608:	dd400517 	ldw	r21,20(sp)
   4060c:	dd000417 	ldw	r20,16(sp)
   40610:	dcc00317 	ldw	r19,12(sp)
   40614:	dc800217 	ldw	r18,8(sp)
   40618:	dc400117 	ldw	r17,4(sp)
   4061c:	dc000017 	ldw	r16,0(sp)
   40620:	dec00804 	addi	sp,sp,32
   40624:	f800283a 	ret

00040628 <optimized_float_sin>:



float optimized_float_sin(register float x) {
   40628:	defffb04 	addi	sp,sp,-20
   4062c:	dfc00415 	stw	ra,16(sp)
   40630:	df000315 	stw	fp,12(sp)
   40634:	dc800215 	stw	r18,8(sp)
   40638:	dc400115 	stw	r17,4(sp)
   4063c:	dc000015 	stw	r16,0(sp)
   40640:	df000304 	addi	fp,sp,12
   40644:	2021883a 	mov	r16,r4

    num_float++;
   40648:	d0a6d017 	ldw	r2,-25792(gp)
   4064c:	10800044 	addi	r2,r2,1
   40650:	d0a6d015 	stw	r2,-25792(gp)

    PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 2);
   40654:	0007883a 	mov	r3,zero
   40658:	00800234 	movhi	r2,8
   4065c:	10861904 	addi	r2,r2,6244
   40660:	10c00035 	stwio	r3,0(r2)

    register float result = x;
   40664:	8023883a 	mov	r17,r16

    register float x2 = x*x;
   40668:	800b883a 	mov	r5,r16
   4066c:	8009883a 	mov	r4,r16
   40670:	0043bac0 	call	43bac <__mulsf3>
   40674:	1007883a 	mov	r3,r2
   40678:	1825883a 	mov	r18,r3



    register float powx = x2*x; //x^3
   4067c:	800b883a 	mov	r5,r16
   40680:	9009883a 	mov	r4,r18
   40684:	0043bac0 	call	43bac <__mulsf3>
   40688:	1007883a 	mov	r3,r2
   4068c:	1821883a 	mov	r16,r3

    result -= powx * (0.166666f);//1/3!
   40690:	014f8af4 	movhi	r5,15915
   40694:	296a9f84 	addi	r5,r5,-21890
   40698:	8009883a 	mov	r4,r16
   4069c:	0043bac0 	call	43bac <__mulsf3>
   406a0:	1007883a 	mov	r3,r2
   406a4:	1805883a 	mov	r2,r3
   406a8:	100b883a 	mov	r5,r2
   406ac:	8809883a 	mov	r4,r17
   406b0:	0043fa80 	call	43fa8 <__subsf3>
   406b4:	1007883a 	mov	r3,r2
   406b8:	1823883a 	mov	r17,r3



    powx *= x2; //x^5
   406bc:	900b883a 	mov	r5,r18
   406c0:	8009883a 	mov	r4,r16
   406c4:	0043bac0 	call	43bac <__mulsf3>
   406c8:	1007883a 	mov	r3,r2
   406cc:	1821883a 	mov	r16,r3

    result += powx * (0.0083333f);//1/5!
   406d0:	014f0274 	movhi	r5,15369
   406d4:	29621944 	addi	r5,r5,-30619
   406d8:	8009883a 	mov	r4,r16
   406dc:	0043bac0 	call	43bac <__mulsf3>
   406e0:	1007883a 	mov	r3,r2
   406e4:	1805883a 	mov	r2,r3
   406e8:	100b883a 	mov	r5,r2
   406ec:	8809883a 	mov	r4,r17
   406f0:	00432a40 	call	432a4 <__addsf3>
   406f4:	1007883a 	mov	r3,r2
   406f8:	1823883a 	mov	r17,r3



    powx *= x2; //x^7
   406fc:	900b883a 	mov	r5,r18
   40700:	8009883a 	mov	r4,r16
   40704:	0043bac0 	call	43bac <__mulsf3>
   40708:	1007883a 	mov	r3,r2
   4070c:	1821883a 	mov	r16,r3

    result -= powx * (0.0001984126f); //1/7!
   40710:	014e5434 	movhi	r5,14672
   40714:	29433e84 	addi	r5,r5,3322
   40718:	8009883a 	mov	r4,r16
   4071c:	0043bac0 	call	43bac <__mulsf3>
   40720:	1007883a 	mov	r3,r2
   40724:	1805883a 	mov	r2,r3
   40728:	100b883a 	mov	r5,r2
   4072c:	8809883a 	mov	r4,r17
   40730:	0043fa80 	call	43fa8 <__subsf3>
   40734:	1007883a 	mov	r3,r2
   40738:	1823883a 	mov	r17,r3



    powx *= x2; //x^9
   4073c:	900b883a 	mov	r5,r18
   40740:	8009883a 	mov	r4,r16
   40744:	0043bac0 	call	43bac <__mulsf3>
   40748:	1007883a 	mov	r3,r2
   4074c:	1821883a 	mov	r16,r3

    result += powx * (0.000002755731f);//1/9!
   40750:	014d8e74 	movhi	r5,13881
   40754:	297bc644 	addi	r5,r5,-4327
   40758:	8009883a 	mov	r4,r16
   4075c:	0043bac0 	call	43bac <__mulsf3>
   40760:	1007883a 	mov	r3,r2
   40764:	1805883a 	mov	r2,r3
   40768:	100b883a 	mov	r5,r2
   4076c:	8809883a 	mov	r4,r17
   40770:	00432a40 	call	432a4 <__addsf3>
   40774:	1007883a 	mov	r3,r2
   40778:	1823883a 	mov	r17,r3

    PERF_END (PERFORMANCE_COUNTER_0_BASE, 2);
   4077c:	0007883a 	mov	r3,zero
   40780:	00800234 	movhi	r2,8
   40784:	10861804 	addi	r2,r2,6240
   40788:	10c00035 	stwio	r3,0(r2)

    return result;
   4078c:	8807883a 	mov	r3,r17
   40790:	1805883a 	mov	r2,r3

}
   40794:	e6fffd04 	addi	sp,fp,-12
   40798:	dfc00417 	ldw	ra,16(sp)
   4079c:	df000317 	ldw	fp,12(sp)
   407a0:	dc800217 	ldw	r18,8(sp)
   407a4:	dc400117 	ldw	r17,4(sp)
   407a8:	dc000017 	ldw	r16,0(sp)
   407ac:	dec00504 	addi	sp,sp,20
   407b0:	f800283a 	ret

000407b4 <optimized_fixed_sin>:



fixed optimized_fixed_sin(register fixed x) {
   407b4:	defffb04 	addi	sp,sp,-20
   407b8:	df000415 	stw	fp,16(sp)
   407bc:	dcc00315 	stw	r19,12(sp)
   407c0:	dc800215 	stw	r18,8(sp)
   407c4:	dc400115 	stw	r17,4(sp)
   407c8:	dc000015 	stw	r16,0(sp)
   407cc:	df000404 	addi	fp,sp,16
   407d0:	2007883a 	mov	r3,r4

    num_fixed++;
   407d4:	d0a6cf17 	ldw	r2,-25796(gp)
   407d8:	10800044 	addi	r2,r2,1
   407dc:	d0a6cf15 	stw	r2,-25796(gp)

    register q_val = Q_N;
   407e0:	d4a6cd17 	ldw	r18,-25804(gp)

    PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 1);
   407e4:	0009883a 	mov	r4,zero
   407e8:	00800234 	movhi	r2,8
   407ec:	10861504 	addi	r2,r2,6228
   407f0:	11000035 	stwio	r4,0(r2)



    register fixed result = x;
   407f4:	1823883a 	mov	r17,r3

    register fixed x2 = (x * x) >> q_val;
   407f8:	18c5383a 	mul	r2,r3,r3
   407fc:	14a7d83a 	sra	r19,r2,r18



    register fixed powx = (x2*x) >> q_val;          //x^3
   40800:	98c5383a 	mul	r2,r19,r3
   40804:	14a1d83a 	sra	r16,r2,r18

    result -= (powx * 10923) >> 16 ;     //1/3!
   40808:	808aaae4 	muli	r2,r16,10923
   4080c:	1005d43a 	srai	r2,r2,16
   40810:	88a3c83a 	sub	r17,r17,r2



    powx = (powx * x2) >> q_val;            //x^5
   40814:	84c5383a 	mul	r2,r16,r19
   40818:	14a1d83a 	sra	r16,r2,r18

    result += (powx * 17) >> 11;          //1/5!
   4081c:	80800464 	muli	r2,r16,17
   40820:	1005d2fa 	srai	r2,r2,11
   40824:	88a3883a 	add	r17,r17,r2



    powx = (powx * x2) >> q_val;            //x^5
   40828:	84c5383a 	mul	r2,r16,r19
   4082c:	14a1d83a 	sra	r16,r2,r18

    result -= (powx * 13) >>16;          //1/7!
   40830:	80800364 	muli	r2,r16,13
   40834:	1005d43a 	srai	r2,r2,16
   40838:	88a3c83a 	sub	r17,r17,r2



    powx = (powx * x2) >> q_val;           //x^5
   4083c:	84c5383a 	mul	r2,r16,r19
   40840:	14a1d83a 	sra	r16,r2,r18

    result += (powx * 23) >> 23;         //1/9!
   40844:	808005e4 	muli	r2,r16,23
   40848:	1005d5fa 	srai	r2,r2,23
   4084c:	88a3883a 	add	r17,r17,r2

    PERF_END (PERFORMANCE_COUNTER_0_BASE, 1);
   40850:	0007883a 	mov	r3,zero
   40854:	00800234 	movhi	r2,8
   40858:	10861404 	addi	r2,r2,6224
   4085c:	10c00035 	stwio	r3,0(r2)

    return result;
   40860:	8805883a 	mov	r2,r17

}
   40864:	e6fffc04 	addi	sp,fp,-16
   40868:	df000417 	ldw	fp,16(sp)
   4086c:	dcc00317 	ldw	r19,12(sp)
   40870:	dc800217 	ldw	r18,8(sp)
   40874:	dc400117 	ldw	r17,4(sp)
   40878:	dc000017 	ldw	r16,0(sp)
   4087c:	dec00504 	addi	sp,sp,20
   40880:	f800283a 	ret

00040884 <fixed_sin>:



fixed fixed_sin(register fixed x, register int terms) {
   40884:	defff604 	addi	sp,sp,-40
   40888:	dfc00915 	stw	ra,36(sp)
   4088c:	df000815 	stw	fp,32(sp)
   40890:	dd800715 	stw	r22,28(sp)
   40894:	dd400615 	stw	r21,24(sp)
   40898:	dd000515 	stw	r20,20(sp)
   4089c:	dcc00415 	stw	r19,16(sp)
   408a0:	dc800315 	stw	r18,12(sp)
   408a4:	dc400215 	stw	r17,8(sp)
   408a8:	dc000115 	stw	r16,4(sp)
   408ac:	df000804 	addi	fp,sp,32
   408b0:	2023883a 	mov	r17,r4
   408b4:	282b883a 	mov	r21,r5

    num_fixed++;
   408b8:	d0a6cf17 	ldw	r2,-25796(gp)
   408bc:	10800044 	addi	r2,r2,1
   408c0:	d0a6cf15 	stw	r2,-25796(gp)

    PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 1);
   408c4:	0007883a 	mov	r3,zero
   408c8:	00800234 	movhi	r2,8
   408cc:	10861504 	addi	r2,r2,6228
   408d0:	10c00035 	stwio	r3,0(r2)

    register fixed result = x;
   408d4:	8821883a 	mov	r16,r17

    register fixed x2 = FIXED_MULT(x,x);
   408d8:	880b883a 	mov	r5,r17
   408dc:	8809883a 	mov	r4,r17
   408e0:	00404500 	call	40450 <FIXED_MULT>
   408e4:	102d883a 	mov	r22,r2

    register fixed num = x;
   408e8:	8829883a 	mov	r20,r17

    register int den = 1;
   408ec:	04800044 	movi	r18,1

    register int neg = 1;
   408f0:	04400044 	movi	r17,1

    register fixed term;

    for (int i = 1; i < terms; i++) {
   408f4:	00800044 	movi	r2,1
   408f8:	e0bff815 	stw	r2,-32(fp)
   408fc:	00001806 	br	40960 <fixed_sin+0xdc>

        num = FIXED_MULT(num, x2);
   40900:	b00b883a 	mov	r5,r22
   40904:	a009883a 	mov	r4,r20
   40908:	00404500 	call	40450 <FIXED_MULT>
   4090c:	1029883a 	mov	r20,r2

        den *= (2*i+1)*(2*i);
   40910:	e0bff817 	ldw	r2,-32(fp)
   40914:	1085883a 	add	r2,r2,r2
   40918:	10c00044 	addi	r3,r2,1
   4091c:	e0bff817 	ldw	r2,-32(fp)
   40920:	1085883a 	add	r2,r2,r2
   40924:	1885383a 	mul	r2,r3,r2
   40928:	90a5383a 	mul	r18,r18,r2

        term = num / den; //fixed / int can just use direct integer divide. No need to shift at all.
   4092c:	900b883a 	mov	r5,r18
   40930:	a009883a 	mov	r4,r20
   40934:	00430f00 	call	430f0 <__divsi3>
   40938:	1027883a 	mov	r19,r2

        if (!neg)
   4093c:	8800021e 	bne	r17,zero,40948 <fixed_sin+0xc4>

            result += term;
   40940:	84e1883a 	add	r16,r16,r19
   40944:	00000106 	br	4094c <fixed_sin+0xc8>

        else

            result -= term;
   40948:	84e1c83a 	sub	r16,r16,r19

        neg = !neg;
   4094c:	8805003a 	cmpeq	r2,r17,zero
   40950:	14403fcc 	andi	r17,r2,255

    register int neg = 1;

    register fixed term;

    for (int i = 1; i < terms; i++) {
   40954:	e0bff817 	ldw	r2,-32(fp)
   40958:	10800044 	addi	r2,r2,1
   4095c:	e0bff815 	stw	r2,-32(fp)
   40960:	e0bff817 	ldw	r2,-32(fp)
   40964:	157fe616 	blt	r2,r21,40900 <__alt_data_end+0xfffc0900>

        neg = !neg;

    }

    PERF_END (PERFORMANCE_COUNTER_0_BASE, 1);
   40968:	0007883a 	mov	r3,zero
   4096c:	00800234 	movhi	r2,8
   40970:	10861404 	addi	r2,r2,6224
   40974:	10c00035 	stwio	r3,0(r2)

    return result;
   40978:	8005883a 	mov	r2,r16

}
   4097c:	e6fff904 	addi	sp,fp,-28
   40980:	dfc00817 	ldw	ra,32(sp)
   40984:	df000717 	ldw	fp,28(sp)
   40988:	dd800617 	ldw	r22,24(sp)
   4098c:	dd400517 	ldw	r21,20(sp)
   40990:	dd000417 	ldw	r20,16(sp)
   40994:	dcc00317 	ldw	r19,12(sp)
   40998:	dc800217 	ldw	r18,8(sp)
   4099c:	dc400117 	ldw	r17,4(sp)
   409a0:	dc000017 	ldw	r16,0(sp)
   409a4:	dec00904 	addi	sp,sp,36
   409a8:	f800283a 	ret

000409ac <test_sin_float>:

#define PI 3.14159265f

#define SAMPLES 20

void test_sin_float(int terms) {
   409ac:	defff604 	addi	sp,sp,-40
   409b0:	dfc00915 	stw	ra,36(sp)
   409b4:	df000815 	stw	fp,32(sp)
   409b8:	df000804 	addi	fp,sp,32
   409bc:	e13fff15 	stw	r4,-4(fp)

    float dx = 2*PI/SAMPLES;
   409c0:	008fa874 	movhi	r2,16033
   409c4:	10b65f04 	addi	r2,r2,-9860
   409c8:	e0bffd15 	stw	r2,-12(fp)

    float x = -PI;
   409cc:	00b01274 	movhi	r2,49225
   409d0:	1083f6c4 	addi	r2,r2,4059
   409d4:	e0bff915 	stw	r2,-28(fp)

    float err = 0;
   409d8:	e03ffa15 	stw	zero,-24(fp)

    for (int i = 0; i < SAMPLES; i++) {
   409dc:	e03ffb15 	stw	zero,-20(fp)
   409e0:	00002d06 	br	40a98 <test_sin_float+0xec>

        x += dx;
   409e4:	e17ffd17 	ldw	r5,-12(fp)
   409e8:	e13ff917 	ldw	r4,-28(fp)
   409ec:	00432a40 	call	432a4 <__addsf3>
   409f0:	1007883a 	mov	r3,r2
   409f4:	e0fff915 	stw	r3,-28(fp)

        float result;

        if (terms >= 0)
   409f8:	e0bfff17 	ldw	r2,-4(fp)
   409fc:	10000516 	blt	r2,zero,40a14 <test_sin_float+0x68>

            result = float_sin(x, terms);
   40a00:	e17fff17 	ldw	r5,-4(fp)
   40a04:	e13ff917 	ldw	r4,-28(fp)
   40a08:	00404bc0 	call	404bc <float_sin>
   40a0c:	e0bffc15 	stw	r2,-16(fp)
   40a10:	00000306 	br	40a20 <test_sin_float+0x74>

        else

            result = optimized_float_sin(x);
   40a14:	e13ff917 	ldw	r4,-28(fp)
   40a18:	00406280 	call	40628 <optimized_float_sin>
   40a1c:	e0bffc15 	stw	r2,-16(fp)

        float math_res = sin(x);
   40a20:	e13ff917 	ldw	r4,-28(fp)
   40a24:	004600c0 	call	4600c <__extendsfdf2>
   40a28:	100b883a 	mov	r5,r2
   40a2c:	180d883a 	mov	r6,r3
   40a30:	2809883a 	mov	r4,r5
   40a34:	300b883a 	mov	r5,r6
   40a38:	0040fdc0 	call	40fdc <sin>
   40a3c:	100b883a 	mov	r5,r2
   40a40:	180d883a 	mov	r6,r3
   40a44:	2809883a 	mov	r4,r5
   40a48:	300b883a 	mov	r5,r6
   40a4c:	004611c0 	call	4611c <__truncdfsf2>
   40a50:	1007883a 	mov	r3,r2
   40a54:	e0fffe15 	stw	r3,-8(fp)

        err += float_abs(result - math_res);
   40a58:	e17ffe17 	ldw	r5,-8(fp)
   40a5c:	e13ffc17 	ldw	r4,-16(fp)
   40a60:	0043fa80 	call	43fa8 <__subsf3>
   40a64:	1007883a 	mov	r3,r2
   40a68:	1805883a 	mov	r2,r3
   40a6c:	1009883a 	mov	r4,r2
   40a70:	00404800 	call	40480 <float_abs>
   40a74:	1007883a 	mov	r3,r2
   40a78:	180b883a 	mov	r5,r3
   40a7c:	e13ffa17 	ldw	r4,-24(fp)
   40a80:	00432a40 	call	432a4 <__addsf3>
   40a84:	1007883a 	mov	r3,r2
   40a88:	e0fffa15 	stw	r3,-24(fp)

    float x = -PI;

    float err = 0;

    for (int i = 0; i < SAMPLES; i++) {
   40a8c:	e0bffb17 	ldw	r2,-20(fp)
   40a90:	10800044 	addi	r2,r2,1
   40a94:	e0bffb15 	stw	r2,-20(fp)
   40a98:	e0bffb17 	ldw	r2,-20(fp)
   40a9c:	10800510 	cmplti	r2,r2,20
   40aa0:	103fd01e 	bne	r2,zero,409e4 <__alt_data_end+0xfffc09e4>

        //printf("sin(%f) = %f\n", x, result);

    }

    err /= SAMPLES;
   40aa4:	01506834 	movhi	r5,16800
   40aa8:	e13ffa17 	ldw	r4,-24(fp)
   40aac:	004376c0 	call	4376c <__divsf3>
   40ab0:	1007883a 	mov	r3,r2
   40ab4:	e0fffa15 	stw	r3,-24(fp)

    printf("SIN_FLOAT (N=%d, Terms=%d) Mean Error: %f\n", SAMPLES, terms, err);
   40ab8:	e13ffa17 	ldw	r4,-24(fp)
   40abc:	004600c0 	call	4600c <__extendsfdf2>
   40ac0:	1009883a 	mov	r4,r2
   40ac4:	180b883a 	mov	r5,r3
   40ac8:	d9400015 	stw	r5,0(sp)
   40acc:	200f883a 	mov	r7,r4
   40ad0:	e1bfff17 	ldw	r6,-4(fp)
   40ad4:	01400504 	movi	r5,20
   40ad8:	01000174 	movhi	r4,5
   40adc:	210dbc04 	addi	r4,r4,14064
   40ae0:	00463580 	call	46358 <printf>

}
   40ae4:	0001883a 	nop
   40ae8:	e037883a 	mov	sp,fp
   40aec:	dfc00117 	ldw	ra,4(sp)
   40af0:	df000017 	ldw	fp,0(sp)
   40af4:	dec00204 	addi	sp,sp,8
   40af8:	f800283a 	ret

00040afc <test_sin_fixed>:



float test_sin_fixed(int terms) {
   40afc:	defff704 	addi	sp,sp,-36
   40b00:	dfc00815 	stw	ra,32(sp)
   40b04:	df000715 	stw	fp,28(sp)
   40b08:	df000704 	addi	fp,sp,28
   40b0c:	e13fff15 	stw	r4,-4(fp)

    float dx = 2*PI/SAMPLES;
   40b10:	008fa874 	movhi	r2,16033
   40b14:	10b65f04 	addi	r2,r2,-9860
   40b18:	e0bffd15 	stw	r2,-12(fp)

    float x = -PI;
   40b1c:	00b01274 	movhi	r2,49225
   40b20:	1083f6c4 	addi	r2,r2,4059
   40b24:	e0bff915 	stw	r2,-28(fp)

    float err = 0;
   40b28:	e03ffa15 	stw	zero,-24(fp)

    for (int i = 0; i < SAMPLES; i++) {
   40b2c:	e03ffb15 	stw	zero,-20(fp)
   40b30:	00003506 	br	40c08 <test_sin_fixed+0x10c>

        x += dx;
   40b34:	e17ffd17 	ldw	r5,-12(fp)
   40b38:	e13ff917 	ldw	r4,-28(fp)
   40b3c:	00432a40 	call	432a4 <__addsf3>
   40b40:	1007883a 	mov	r3,r2
   40b44:	e0fff915 	stw	r3,-28(fp)

        float result;

        if (terms >= 0)
   40b48:	e0bfff17 	ldw	r2,-4(fp)
   40b4c:	10000916 	blt	r2,zero,40b74 <test_sin_fixed+0x78>

            result = FIXED_TO_FLOAT(fixed_sin(FLOAT_TO_FIXED(x), terms));
   40b50:	e13ff917 	ldw	r4,-28(fp)
   40b54:	00403bc0 	call	403bc <FLOAT_TO_FIXED>
   40b58:	e17fff17 	ldw	r5,-4(fp)
   40b5c:	1009883a 	mov	r4,r2
   40b60:	00408840 	call	40884 <fixed_sin>
   40b64:	1009883a 	mov	r4,r2
   40b68:	00404040 	call	40404 <FIXED_TO_FLOAT>
   40b6c:	e0bffc15 	stw	r2,-16(fp)
   40b70:	00000706 	br	40b90 <test_sin_fixed+0x94>

        else

            result = FIXED_TO_FLOAT(optimized_fixed_sin(FLOAT_TO_FIXED(x)));
   40b74:	e13ff917 	ldw	r4,-28(fp)
   40b78:	00403bc0 	call	403bc <FLOAT_TO_FIXED>
   40b7c:	1009883a 	mov	r4,r2
   40b80:	00407b40 	call	407b4 <optimized_fixed_sin>
   40b84:	1009883a 	mov	r4,r2
   40b88:	00404040 	call	40404 <FIXED_TO_FLOAT>
   40b8c:	e0bffc15 	stw	r2,-16(fp)

        float math_res = sin(x);
   40b90:	e13ff917 	ldw	r4,-28(fp)
   40b94:	004600c0 	call	4600c <__extendsfdf2>
   40b98:	100b883a 	mov	r5,r2
   40b9c:	180d883a 	mov	r6,r3
   40ba0:	2809883a 	mov	r4,r5
   40ba4:	300b883a 	mov	r5,r6
   40ba8:	0040fdc0 	call	40fdc <sin>
   40bac:	100b883a 	mov	r5,r2
   40bb0:	180d883a 	mov	r6,r3
   40bb4:	2809883a 	mov	r4,r5
   40bb8:	300b883a 	mov	r5,r6
   40bbc:	004611c0 	call	4611c <__truncdfsf2>
   40bc0:	1007883a 	mov	r3,r2
   40bc4:	e0fffe15 	stw	r3,-8(fp)

        err += float_abs(result - math_res);
   40bc8:	e17ffe17 	ldw	r5,-8(fp)
   40bcc:	e13ffc17 	ldw	r4,-16(fp)
   40bd0:	0043fa80 	call	43fa8 <__subsf3>
   40bd4:	1007883a 	mov	r3,r2
   40bd8:	1805883a 	mov	r2,r3
   40bdc:	1009883a 	mov	r4,r2
   40be0:	00404800 	call	40480 <float_abs>
   40be4:	1007883a 	mov	r3,r2
   40be8:	180b883a 	mov	r5,r3
   40bec:	e13ffa17 	ldw	r4,-24(fp)
   40bf0:	00432a40 	call	432a4 <__addsf3>
   40bf4:	1007883a 	mov	r3,r2
   40bf8:	e0fffa15 	stw	r3,-24(fp)

    float x = -PI;

    float err = 0;

    for (int i = 0; i < SAMPLES; i++) {
   40bfc:	e0bffb17 	ldw	r2,-20(fp)
   40c00:	10800044 	addi	r2,r2,1
   40c04:	e0bffb15 	stw	r2,-20(fp)
   40c08:	e0bffb17 	ldw	r2,-20(fp)
   40c0c:	10800510 	cmplti	r2,r2,20
   40c10:	103fc81e 	bne	r2,zero,40b34 <__alt_data_end+0xfffc0b34>

        //printf("sin(%f) = %f\n", x, result);

    }

    err /= SAMPLES;
   40c14:	01506834 	movhi	r5,16800
   40c18:	e13ffa17 	ldw	r4,-24(fp)
   40c1c:	004376c0 	call	4376c <__divsf3>
   40c20:	1007883a 	mov	r3,r2
   40c24:	e0fffa15 	stw	r3,-24(fp)

    return err;
   40c28:	e0bffa17 	ldw	r2,-24(fp)
   40c2c:	1007883a 	mov	r3,r2

}
   40c30:	1805883a 	mov	r2,r3
   40c34:	e037883a 	mov	sp,fp
   40c38:	dfc00117 	ldw	ra,4(sp)
   40c3c:	df000017 	ldw	fp,0(sp)
   40c40:	dec00204 	addi	sp,sp,8
   40c44:	f800283a 	ret

00040c48 <tune_QM_sin>:



/*Returns best M value*/

int tune_QM_sin(int terms) {
   40c48:	defff704 	addi	sp,sp,-36
   40c4c:	dfc00815 	stw	ra,32(sp)
   40c50:	df000715 	stw	fp,28(sp)
   40c54:	df000704 	addi	fp,sp,28
   40c58:	e13fff15 	stw	r4,-4(fp)

    float best_err = 1000000; //very large initial number
   40c5c:	00925d34 	movhi	r2,18804
   40c60:	10890004 	addi	r2,r2,9216
   40c64:	e0bffa15 	stw	r2,-24(fp)

    int bestM = 0;
   40c68:	e03ffb15 	stw	zero,-20(fp)

    for (int M = 1; M <= 31; M++) {
   40c6c:	00800044 	movi	r2,1
   40c70:	e0bffc15 	stw	r2,-16(fp)
   40c74:	00002006 	br	40cf8 <tune_QM_sin+0xb0>

        int N = 31-M;
   40c78:	00c007c4 	movi	r3,31
   40c7c:	e0bffc17 	ldw	r2,-16(fp)
   40c80:	1885c83a 	sub	r2,r3,r2
   40c84:	e0bffd15 	stw	r2,-12(fp)

        SET_Q_FORMAT(M, N);
   40c88:	e17ffd17 	ldw	r5,-12(fp)
   40c8c:	e13ffc17 	ldw	r4,-16(fp)
   40c90:	00403740 	call	40374 <SET_Q_FORMAT>

        float err = test_sin_fixed(terms);
   40c94:	e13fff17 	ldw	r4,-4(fp)
   40c98:	0040afc0 	call	40afc <test_sin_fixed>
   40c9c:	e0bffe15 	stw	r2,-8(fp)

        if (err < best_err) {
   40ca0:	e0fffe17 	ldw	r3,-8(fp)
   40ca4:	e0bffa17 	ldw	r2,-24(fp)
   40ca8:	1885f9f2 	custom	231,r2,r3,r2
   40cac:	10000f26 	beq	r2,zero,40cec <tune_QM_sin+0xa4>

            best_err = err;
   40cb0:	e0bffe17 	ldw	r2,-8(fp)
   40cb4:	e0bffa15 	stw	r2,-24(fp)

            bestM = M;
   40cb8:	e0bffc17 	ldw	r2,-16(fp)
   40cbc:	e0bffb15 	stw	r2,-20(fp)

            printf("New Best (M,N)=(%d,%d): Error = %f\n", M, N, best_err);
   40cc0:	e13ffa17 	ldw	r4,-24(fp)
   40cc4:	004600c0 	call	4600c <__extendsfdf2>
   40cc8:	1009883a 	mov	r4,r2
   40ccc:	180b883a 	mov	r5,r3
   40cd0:	d9400015 	stw	r5,0(sp)
   40cd4:	200f883a 	mov	r7,r4
   40cd8:	e1bffd17 	ldw	r6,-12(fp)
   40cdc:	e17ffc17 	ldw	r5,-16(fp)
   40ce0:	01000174 	movhi	r4,5
   40ce4:	210dc704 	addi	r4,r4,14108
   40ce8:	00463580 	call	46358 <printf>

    float best_err = 1000000; //very large initial number

    int bestM = 0;

    for (int M = 1; M <= 31; M++) {
   40cec:	e0bffc17 	ldw	r2,-16(fp)
   40cf0:	10800044 	addi	r2,r2,1
   40cf4:	e0bffc15 	stw	r2,-16(fp)
   40cf8:	e0bffc17 	ldw	r2,-16(fp)
   40cfc:	10800810 	cmplti	r2,r2,32
   40d00:	103fdd1e 	bne	r2,zero,40c78 <__alt_data_end+0xfffc0c78>

        }

    }

    return bestM;
   40d04:	e0bffb17 	ldw	r2,-20(fp)

}
   40d08:	e037883a 	mov	sp,fp
   40d0c:	dfc00117 	ldw	ra,4(sp)
   40d10:	df000017 	ldw	fp,0(sp)
   40d14:	dec00204 	addi	sp,sp,8
   40d18:	f800283a 	ret

00040d1c <main>:

#define NUM_ITEMS 100



int main(void){
   40d1c:	defff404 	addi	sp,sp,-48
   40d20:	dfc00b15 	stw	ra,44(sp)
   40d24:	df000a15 	stw	fp,40(sp)
   40d28:	dc000915 	stw	r16,36(sp)
   40d2c:	df000a04 	addi	fp,sp,40



	volatile int a = 234;
   40d30:	00803a84 	movi	r2,234
   40d34:	e0bffd15 	stw	r2,-12(fp)

	volatile int result;



	pre_measurement();
   40d38:	00402900 	call	40290 <pre_measurement>



	for (int i=0; i<NUM_ITEMS; i++){
   40d3c:	e03ff915 	stw	zero,-28(fp)
   40d40:	00000f06 	br	40d80 <main+0x64>

		PERF_BEGIN (PERFORMANCE_COUNTER_0_BASE, 1);
   40d44:	0007883a 	mov	r3,zero
   40d48:	00800234 	movhi	r2,8
   40d4c:	10861504 	addi	r2,r2,6228
   40d50:	10c00035 	stwio	r3,0(r2)

		result = a^a;
   40d54:	e0fffd17 	ldw	r3,-12(fp)
   40d58:	e0bffd17 	ldw	r2,-12(fp)
   40d5c:	1884f03a 	xor	r2,r3,r2
   40d60:	e0bffe15 	stw	r2,-8(fp)

		PERF_END (PERFORMANCE_COUNTER_0_BASE, 1);
   40d64:	0007883a 	mov	r3,zero
   40d68:	00800234 	movhi	r2,8
   40d6c:	10861404 	addi	r2,r2,6224
   40d70:	10c00035 	stwio	r3,0(r2)

	pre_measurement();



	for (int i=0; i<NUM_ITEMS; i++){
   40d74:	e0bff917 	ldw	r2,-28(fp)
   40d78:	10800044 	addi	r2,r2,1
   40d7c:	e0bff915 	stw	r2,-28(fp)
   40d80:	e0bff917 	ldw	r2,-28(fp)
   40d84:	10801910 	cmplti	r2,r2,100
   40d88:	103fee1e 	bne	r2,zero,40d44 <__alt_data_end+0xfffc0d44>

	}



	post_measurement();
   40d8c:	00402f00 	call	402f0 <post_measurement>



	int overhead_cycles = get_runtime(1)/NUM_ITEMS;
   40d90:	01000044 	movi	r4,1
   40d94:	00403300 	call	40330 <get_runtime>
   40d98:	01401904 	movi	r5,100
   40d9c:	1009883a 	mov	r4,r2
   40da0:	00430f00 	call	430f0 <__divsi3>
   40da4:	e0bffb15 	stw	r2,-20(fp)



	printf("Mean Overhead Per PERF: %f\n", (float)overhead_cycles);
   40da8:	e0bffb17 	ldw	r2,-20(fp)
   40dac:	1005feb2 	custom	250,r2,r2,zero
   40db0:	1009883a 	mov	r4,r2
   40db4:	004600c0 	call	4600c <__extendsfdf2>
   40db8:	100d883a 	mov	r6,r2
   40dbc:	180f883a 	mov	r7,r3
   40dc0:	300b883a 	mov	r5,r6
   40dc4:	380d883a 	mov	r6,r7
   40dc8:	01000174 	movhi	r4,5
   40dcc:	210dd004 	addi	r4,r4,14144
   40dd0:	00463580 	call	46358 <printf>

	/*Inserting my code*/



    SET_Q_FORMAT(15, 14);
   40dd4:	01400384 	movi	r5,14
   40dd8:	010003c4 	movi	r4,15
   40ddc:	00403740 	call	40374 <SET_Q_FORMAT>

    //test_sin_float(5);

    //test_sin_fixed(20);

    int M = tune_QM_sin(5);
   40de0:	01000144 	movi	r4,5
   40de4:	0040c480 	call	40c48 <tune_QM_sin>
   40de8:	e0bffc15 	stw	r2,-16(fp)

    SET_Q_FORMAT(M, 31-M); //this is what we use from now on
   40dec:	00c007c4 	movi	r3,31
   40df0:	e0bffc17 	ldw	r2,-16(fp)
   40df4:	1885c83a 	sub	r2,r3,r2
   40df8:	100b883a 	mov	r5,r2
   40dfc:	e13ffc17 	ldw	r4,-16(fp)
   40e00:	00403740 	call	40374 <SET_Q_FORMAT>



    for (int terms = 1; terms < 7; terms++) {
   40e04:	00800044 	movi	r2,1
   40e08:	e0bffa15 	stw	r2,-24(fp)
   40e0c:	00003a06 	br	40ef8 <main+0x1dc>

        pre_measurement();
   40e10:	00402900 	call	40290 <pre_measurement>

        num_float = 0;
   40e14:	d026d015 	stw	zero,-25792(gp)

        num_fixed = 0;
   40e18:	d026cf15 	stw	zero,-25796(gp)

        test_sin_float(terms);
   40e1c:	e13ffa17 	ldw	r4,-24(fp)
   40e20:	00409ac0 	call	409ac <test_sin_float>

        printf("SIN_FIXED (Terms=%d, Samples=%d, M=%d, N=%d) Mean Error: %f\n", terms, SAMPLES, M, 31-M, test_sin_fixed(terms));
   40e24:	00c007c4 	movi	r3,31
   40e28:	e0bffc17 	ldw	r2,-16(fp)
   40e2c:	18a1c83a 	sub	r16,r3,r2
   40e30:	e13ffa17 	ldw	r4,-24(fp)
   40e34:	0040afc0 	call	40afc <test_sin_fixed>
   40e38:	1007883a 	mov	r3,r2
   40e3c:	1809883a 	mov	r4,r3
   40e40:	004600c0 	call	4600c <__extendsfdf2>
   40e44:	1009883a 	mov	r4,r2
   40e48:	180b883a 	mov	r5,r3
   40e4c:	d9000115 	stw	r4,4(sp)
   40e50:	d9400215 	stw	r5,8(sp)
   40e54:	dc000015 	stw	r16,0(sp)
   40e58:	e1fffc17 	ldw	r7,-16(fp)
   40e5c:	01800504 	movi	r6,20
   40e60:	e17ffa17 	ldw	r5,-24(fp)
   40e64:	01000174 	movhi	r4,5
   40e68:	210dd704 	addi	r4,r4,14172
   40e6c:	00463580 	call	46358 <printf>

        post_measurement();
   40e70:	00402f00 	call	402f0 <post_measurement>

        printf("Mean Fixed Sin Cycles (terms=%d): %d\n", terms, get_runtime(1)/num_fixed - overhead_cycles);
   40e74:	01000044 	movi	r4,1
   40e78:	00403300 	call	40330 <get_runtime>
   40e7c:	1007883a 	mov	r3,r2
   40e80:	d0a6cf17 	ldw	r2,-25796(gp)
   40e84:	100b883a 	mov	r5,r2
   40e88:	1809883a 	mov	r4,r3
   40e8c:	00430f00 	call	430f0 <__divsi3>
   40e90:	1007883a 	mov	r3,r2
   40e94:	e0bffb17 	ldw	r2,-20(fp)
   40e98:	1885c83a 	sub	r2,r3,r2
   40e9c:	100d883a 	mov	r6,r2
   40ea0:	e17ffa17 	ldw	r5,-24(fp)
   40ea4:	01000174 	movhi	r4,5
   40ea8:	210de704 	addi	r4,r4,14236
   40eac:	00463580 	call	46358 <printf>

        printf("Mean Float Sin Cycles (terms=%d): %d\n\n", terms, get_runtime(2)/num_float - overhead_cycles);
   40eb0:	01000084 	movi	r4,2
   40eb4:	00403300 	call	40330 <get_runtime>
   40eb8:	1007883a 	mov	r3,r2
   40ebc:	d0a6d017 	ldw	r2,-25792(gp)
   40ec0:	100b883a 	mov	r5,r2
   40ec4:	1809883a 	mov	r4,r3
   40ec8:	00430f00 	call	430f0 <__divsi3>
   40ecc:	1007883a 	mov	r3,r2
   40ed0:	e0bffb17 	ldw	r2,-20(fp)
   40ed4:	1885c83a 	sub	r2,r3,r2
   40ed8:	100d883a 	mov	r6,r2
   40edc:	e17ffa17 	ldw	r5,-24(fp)
   40ee0:	01000174 	movhi	r4,5
   40ee4:	210df104 	addi	r4,r4,14276
   40ee8:	00463580 	call	46358 <printf>

    SET_Q_FORMAT(M, 31-M); //this is what we use from now on



    for (int terms = 1; terms < 7; terms++) {
   40eec:	e0bffa17 	ldw	r2,-24(fp)
   40ef0:	10800044 	addi	r2,r2,1
   40ef4:	e0bffa15 	stw	r2,-24(fp)
   40ef8:	e0bffa17 	ldw	r2,-24(fp)
   40efc:	108001d0 	cmplti	r2,r2,7
   40f00:	103fc31e 	bne	r2,zero,40e10 <__alt_data_end+0xfffc0e10>



    /*For the optimized stuff*/

    pre_measurement();
   40f04:	00402900 	call	40290 <pre_measurement>

    printf("Optimized Sine Test\n");
   40f08:	01000174 	movhi	r4,5
   40f0c:	210dfb04 	addi	r4,r4,14316
   40f10:	00464540 	call	46454 <puts>

    test_sin_float(-1); //-1 is flag for optimized test
   40f14:	013fffc4 	movi	r4,-1
   40f18:	00409ac0 	call	409ac <test_sin_float>

    printf("SIN_FIXED (Optimized, Samples=%d, M=%d, N=%d) Mean Error: %f\n", SAMPLES, M, 31-M, test_sin_fixed(-1));
   40f1c:	00c007c4 	movi	r3,31
   40f20:	e0bffc17 	ldw	r2,-16(fp)
   40f24:	18a1c83a 	sub	r16,r3,r2
   40f28:	013fffc4 	movi	r4,-1
   40f2c:	0040afc0 	call	40afc <test_sin_fixed>
   40f30:	1007883a 	mov	r3,r2
   40f34:	1809883a 	mov	r4,r3
   40f38:	004600c0 	call	4600c <__extendsfdf2>
   40f3c:	1009883a 	mov	r4,r2
   40f40:	180b883a 	mov	r5,r3
   40f44:	d9000015 	stw	r4,0(sp)
   40f48:	d9400115 	stw	r5,4(sp)
   40f4c:	800f883a 	mov	r7,r16
   40f50:	e1bffc17 	ldw	r6,-16(fp)
   40f54:	01400504 	movi	r5,20
   40f58:	01000174 	movhi	r4,5
   40f5c:	210e0004 	addi	r4,r4,14336
   40f60:	00463580 	call	46358 <printf>

    printf("Mean Fixed Sin Cycles (optimized): %d\n", get_runtime(1)/num_fixed - overhead_cycles);
   40f64:	01000044 	movi	r4,1
   40f68:	00403300 	call	40330 <get_runtime>
   40f6c:	1007883a 	mov	r3,r2
   40f70:	d0a6cf17 	ldw	r2,-25796(gp)
   40f74:	100b883a 	mov	r5,r2
   40f78:	1809883a 	mov	r4,r3
   40f7c:	00430f00 	call	430f0 <__divsi3>
   40f80:	1007883a 	mov	r3,r2
   40f84:	e0bffb17 	ldw	r2,-20(fp)
   40f88:	1885c83a 	sub	r2,r3,r2
   40f8c:	100b883a 	mov	r5,r2
   40f90:	01000174 	movhi	r4,5
   40f94:	210e1004 	addi	r4,r4,14400
   40f98:	00463580 	call	46358 <printf>

    printf("Mean Float Sin Cycles (optimized): %d\n\n", get_runtime(2)/num_float - overhead_cycles);
   40f9c:	01000084 	movi	r4,2
   40fa0:	00403300 	call	40330 <get_runtime>
   40fa4:	1007883a 	mov	r3,r2
   40fa8:	d0a6d017 	ldw	r2,-25792(gp)
   40fac:	100b883a 	mov	r5,r2
   40fb0:	1809883a 	mov	r4,r3
   40fb4:	00430f00 	call	430f0 <__divsi3>
   40fb8:	1007883a 	mov	r3,r2
   40fbc:	e0bffb17 	ldw	r2,-20(fp)
   40fc0:	1885c83a 	sub	r2,r3,r2
   40fc4:	100b883a 	mov	r5,r2
   40fc8:	01000174 	movhi	r4,5
   40fcc:	210e1a04 	addi	r4,r4,14440
   40fd0:	00463580 	call	46358 <printf>

    post_measurement();
   40fd4:	00402f00 	call	402f0 <post_measurement>





	while(1);
   40fd8:	003fff06 	br	40fd8 <__alt_data_end+0xfffc0fd8>

00040fdc <sin>:
   40fdc:	00a00034 	movhi	r2,32768
   40fe0:	defffa04 	addi	sp,sp,-24
   40fe4:	10bfffc4 	addi	r2,r2,-1
   40fe8:	00cffa74 	movhi	r3,16361
   40fec:	dfc00515 	stw	ra,20(sp)
   40ff0:	2884703a 	and	r2,r5,r2
   40ff4:	18c87ec4 	addi	r3,r3,8699
   40ff8:	1880180e 	bge	r3,r2,4105c <sin+0x80>
   40ffc:	00dffc34 	movhi	r3,32752
   41000:	18ffffc4 	addi	r3,r3,-1
   41004:	1880060e 	bge	r3,r2,41020 <sin+0x44>
   41008:	280f883a 	mov	r7,r5
   4100c:	200d883a 	mov	r6,r4
   41010:	00455b40 	call	455b4 <__subdf3>
   41014:	dfc00517 	ldw	ra,20(sp)
   41018:	dec00604 	addi	sp,sp,24
   4101c:	f800283a 	ret
   41020:	d9800104 	addi	r6,sp,4
   41024:	00410cc0 	call	410cc <__ieee754_rem_pio2>
   41028:	108000cc 	andi	r2,r2,3
   4102c:	00c00044 	movi	r3,1
   41030:	10c01926 	beq	r2,r3,41098 <sin+0xbc>
   41034:	01000084 	movi	r4,2
   41038:	11000f26 	beq	r2,r4,41078 <sin+0x9c>
   4103c:	10001c26 	beq	r2,zero,410b0 <sin+0xd4>
   41040:	d9800317 	ldw	r6,12(sp)
   41044:	d9c00417 	ldw	r7,16(sp)
   41048:	d9000117 	ldw	r4,4(sp)
   4104c:	d9400217 	ldw	r5,8(sp)
   41050:	00418380 	call	41838 <__kernel_cos>
   41054:	18e0003c 	xorhi	r3,r3,32768
   41058:	003fee06 	br	41014 <__alt_data_end+0xfffc1014>
   4105c:	d8000015 	stw	zero,0(sp)
   41060:	000d883a 	mov	r6,zero
   41064:	000f883a 	mov	r7,zero
   41068:	0042a6c0 	call	42a6c <__kernel_sin>
   4106c:	dfc00517 	ldw	ra,20(sp)
   41070:	dec00604 	addi	sp,sp,24
   41074:	f800283a 	ret
   41078:	d9800317 	ldw	r6,12(sp)
   4107c:	d9c00417 	ldw	r7,16(sp)
   41080:	d9000117 	ldw	r4,4(sp)
   41084:	d9400217 	ldw	r5,8(sp)
   41088:	d8c00015 	stw	r3,0(sp)
   4108c:	0042a6c0 	call	42a6c <__kernel_sin>
   41090:	18e0003c 	xorhi	r3,r3,32768
   41094:	003fdf06 	br	41014 <__alt_data_end+0xfffc1014>
   41098:	d9800317 	ldw	r6,12(sp)
   4109c:	d9c00417 	ldw	r7,16(sp)
   410a0:	d9000117 	ldw	r4,4(sp)
   410a4:	d9400217 	ldw	r5,8(sp)
   410a8:	00418380 	call	41838 <__kernel_cos>
   410ac:	003fd906 	br	41014 <__alt_data_end+0xfffc1014>
   410b0:	d9800317 	ldw	r6,12(sp)
   410b4:	d9c00417 	ldw	r7,16(sp)
   410b8:	d9000117 	ldw	r4,4(sp)
   410bc:	d9400217 	ldw	r5,8(sp)
   410c0:	d8c00015 	stw	r3,0(sp)
   410c4:	0042a6c0 	call	42a6c <__kernel_sin>
   410c8:	003fd206 	br	41014 <__alt_data_end+0xfffc1014>

000410cc <__ieee754_rem_pio2>:
   410cc:	02200034 	movhi	r8,32768
   410d0:	deffea04 	addi	sp,sp,-88
   410d4:	423fffc4 	addi	r8,r8,-1
   410d8:	00cffa74 	movhi	r3,16361
   410dc:	ddc01315 	stw	r23,76(sp)
   410e0:	dc400d15 	stw	r17,52(sp)
   410e4:	dfc01515 	stw	ra,84(sp)
   410e8:	df001415 	stw	fp,80(sp)
   410ec:	dd801215 	stw	r22,72(sp)
   410f0:	dd401115 	stw	r21,68(sp)
   410f4:	dd001015 	stw	r20,64(sp)
   410f8:	dcc00f15 	stw	r19,60(sp)
   410fc:	dc800e15 	stw	r18,56(sp)
   41100:	dc000c15 	stw	r16,48(sp)
   41104:	2a2e703a 	and	r23,r5,r8
   41108:	18c87ec4 	addi	r3,r3,8699
   4110c:	2823883a 	mov	r17,r5
   41110:	1dc0790e 	bge	r3,r23,412f8 <__ieee754_rem_pio2+0x22c>
   41114:	009000f4 	movhi	r2,16387
   41118:	10b65ec4 	addi	r2,r2,-9861
   4111c:	3021883a 	mov	r16,r6
   41120:	2027883a 	mov	r19,r4
   41124:	15c02316 	blt	r2,r23,411b4 <__ieee754_rem_pio2+0xe8>
   41128:	01cffe74 	movhi	r7,16377
   4112c:	39c87ec4 	addi	r7,r7,8699
   41130:	01951034 	movhi	r6,21568
   41134:	01417a0e 	bge	zero,r5,41720 <__ieee754_rem_pio2+0x654>
   41138:	00455b40 	call	455b4 <__subdf3>
   4113c:	1025883a 	mov	r18,r2
   41140:	008ffe74 	movhi	r2,16377
   41144:	10887ec4 	addi	r2,r2,8699
   41148:	1823883a 	mov	r17,r3
   4114c:	b8808426 	beq	r23,r2,41360 <__ieee754_rem_pio2+0x294>
   41150:	018698b4 	movhi	r6,6754
   41154:	01cf7474 	movhi	r7,15825
   41158:	3198cc44 	addi	r6,r6,25393
   4115c:	39ed1844 	addi	r7,r7,-19359
   41160:	9009883a 	mov	r4,r18
   41164:	180b883a 	mov	r5,r3
   41168:	00455b40 	call	455b4 <__subdf3>
   4116c:	100d883a 	mov	r6,r2
   41170:	180f883a 	mov	r7,r3
   41174:	9009883a 	mov	r4,r18
   41178:	880b883a 	mov	r5,r17
   4117c:	80800015 	stw	r2,0(r16)
   41180:	80c00115 	stw	r3,4(r16)
   41184:	00455b40 	call	455b4 <__subdf3>
   41188:	018698b4 	movhi	r6,6754
   4118c:	01cf7474 	movhi	r7,15825
   41190:	3198cc44 	addi	r6,r6,25393
   41194:	39ed1844 	addi	r7,r7,-19359
   41198:	1009883a 	mov	r4,r2
   4119c:	180b883a 	mov	r5,r3
   411a0:	00455b40 	call	455b4 <__subdf3>
   411a4:	80800215 	stw	r2,8(r16)
   411a8:	80c00315 	stw	r3,12(r16)
   411ac:	00800044 	movi	r2,1
   411b0:	00005606 	br	4130c <__ieee754_rem_pio2+0x240>
   411b4:	00904e74 	movhi	r2,16697
   411b8:	10887ec4 	addi	r2,r2,8699
   411bc:	15c0830e 	bge	r2,r23,413cc <__ieee754_rem_pio2+0x300>
   411c0:	009ffc34 	movhi	r2,32752
   411c4:	10bfffc4 	addi	r2,r2,-1
   411c8:	15c05c16 	blt	r2,r23,4133c <__ieee754_rem_pio2+0x270>
   411cc:	b829d53a 	srai	r20,r23,20
   411d0:	a53efa84 	addi	r20,r20,-1046
   411d4:	a024953a 	slli	r18,r20,20
   411d8:	bca5c83a 	sub	r18,r23,r18
   411dc:	900b883a 	mov	r5,r18
   411e0:	0045eb00 	call	45eb0 <__fixdfsi>
   411e4:	1009883a 	mov	r4,r2
   411e8:	0045f300 	call	45f30 <__floatsidf>
   411ec:	9809883a 	mov	r4,r19
   411f0:	900b883a 	mov	r5,r18
   411f4:	100d883a 	mov	r6,r2
   411f8:	180f883a 	mov	r7,r3
   411fc:	d8800215 	stw	r2,8(sp)
   41200:	d8c00315 	stw	r3,12(sp)
   41204:	00455b40 	call	455b4 <__subdf3>
   41208:	000d883a 	mov	r6,zero
   4120c:	01d05c34 	movhi	r7,16752
   41210:	1009883a 	mov	r4,r2
   41214:	180b883a 	mov	r5,r3
   41218:	0044e9c0 	call	44e9c <__muldf3>
   4121c:	180b883a 	mov	r5,r3
   41220:	1009883a 	mov	r4,r2
   41224:	182b883a 	mov	r21,r3
   41228:	102d883a 	mov	r22,r2
   4122c:	0045eb00 	call	45eb0 <__fixdfsi>
   41230:	1009883a 	mov	r4,r2
   41234:	0045f300 	call	45f30 <__floatsidf>
   41238:	100d883a 	mov	r6,r2
   4123c:	180f883a 	mov	r7,r3
   41240:	b009883a 	mov	r4,r22
   41244:	a80b883a 	mov	r5,r21
   41248:	1027883a 	mov	r19,r2
   4124c:	1825883a 	mov	r18,r3
   41250:	d8800415 	stw	r2,16(sp)
   41254:	d8c00515 	stw	r3,20(sp)
   41258:	00455b40 	call	455b4 <__subdf3>
   4125c:	000d883a 	mov	r6,zero
   41260:	01d05c34 	movhi	r7,16752
   41264:	1009883a 	mov	r4,r2
   41268:	180b883a 	mov	r5,r3
   4126c:	0044e9c0 	call	44e9c <__muldf3>
   41270:	000d883a 	mov	r6,zero
   41274:	000f883a 	mov	r7,zero
   41278:	1009883a 	mov	r4,r2
   4127c:	180b883a 	mov	r5,r3
   41280:	d8800615 	stw	r2,24(sp)
   41284:	d8c00715 	stw	r3,28(sp)
   41288:	0044d380 	call	44d38 <__eqdf2>
   4128c:	1001431e 	bne	r2,zero,4179c <__ieee754_rem_pio2+0x6d0>
   41290:	000f883a 	mov	r7,zero
   41294:	000d883a 	mov	r6,zero
   41298:	9809883a 	mov	r4,r19
   4129c:	900b883a 	mov	r5,r18
   412a0:	0044d380 	call	44d38 <__eqdf2>
   412a4:	100f003a 	cmpeq	r7,r2,zero
   412a8:	00800084 	movi	r2,2
   412ac:	11cfc83a 	sub	r7,r2,r7
   412b0:	00800084 	movi	r2,2
   412b4:	d8800015 	stw	r2,0(sp)
   412b8:	00800174 	movhi	r2,5
   412bc:	108e4404 	addi	r2,r2,14608
   412c0:	d8800115 	stw	r2,4(sp)
   412c4:	a00d883a 	mov	r6,r20
   412c8:	800b883a 	mov	r5,r16
   412cc:	d9000204 	addi	r4,sp,8
   412d0:	0041cdc0 	call	41cdc <__kernel_rem_pio2>
   412d4:	88000d0e 	bge	r17,zero,4130c <__ieee754_rem_pio2+0x240>
   412d8:	81000117 	ldw	r4,4(r16)
   412dc:	80c00317 	ldw	r3,12(r16)
   412e0:	0085c83a 	sub	r2,zero,r2
   412e4:	2120003c 	xorhi	r4,r4,32768
   412e8:	18e0003c 	xorhi	r3,r3,32768
   412ec:	81000115 	stw	r4,4(r16)
   412f0:	80c00315 	stw	r3,12(r16)
   412f4:	00000506 	br	4130c <__ieee754_rem_pio2+0x240>
   412f8:	31000015 	stw	r4,0(r6)
   412fc:	31400115 	stw	r5,4(r6)
   41300:	30000215 	stw	zero,8(r6)
   41304:	30000315 	stw	zero,12(r6)
   41308:	0005883a 	mov	r2,zero
   4130c:	dfc01517 	ldw	ra,84(sp)
   41310:	df001417 	ldw	fp,80(sp)
   41314:	ddc01317 	ldw	r23,76(sp)
   41318:	dd801217 	ldw	r22,72(sp)
   4131c:	dd401117 	ldw	r21,68(sp)
   41320:	dd001017 	ldw	r20,64(sp)
   41324:	dcc00f17 	ldw	r19,60(sp)
   41328:	dc800e17 	ldw	r18,56(sp)
   4132c:	dc400d17 	ldw	r17,52(sp)
   41330:	dc000c17 	ldw	r16,48(sp)
   41334:	dec01604 	addi	sp,sp,88
   41338:	f800283a 	ret
   4133c:	200d883a 	mov	r6,r4
   41340:	280f883a 	mov	r7,r5
   41344:	00455b40 	call	455b4 <__subdf3>
   41348:	80800215 	stw	r2,8(r16)
   4134c:	80800015 	stw	r2,0(r16)
   41350:	80c00315 	stw	r3,12(r16)
   41354:	80c00115 	stw	r3,4(r16)
   41358:	0005883a 	mov	r2,zero
   4135c:	003feb06 	br	4130c <__alt_data_end+0xfffc130c>
   41360:	01cf7474 	movhi	r7,15825
   41364:	9009883a 	mov	r4,r18
   41368:	39ed1844 	addi	r7,r7,-19359
   4136c:	01869834 	movhi	r6,6752
   41370:	180b883a 	mov	r5,r3
   41374:	00455b40 	call	455b4 <__subdf3>
   41378:	018b80f4 	movhi	r6,11779
   4137c:	01cee8f4 	movhi	r7,15267
   41380:	319c1cc4 	addi	r6,r6,28787
   41384:	39c66284 	addi	r7,r7,6538
   41388:	1009883a 	mov	r4,r2
   4138c:	180b883a 	mov	r5,r3
   41390:	1025883a 	mov	r18,r2
   41394:	1823883a 	mov	r17,r3
   41398:	00455b40 	call	455b4 <__subdf3>
   4139c:	100d883a 	mov	r6,r2
   413a0:	180f883a 	mov	r7,r3
   413a4:	9009883a 	mov	r4,r18
   413a8:	880b883a 	mov	r5,r17
   413ac:	80800015 	stw	r2,0(r16)
   413b0:	80c00115 	stw	r3,4(r16)
   413b4:	00455b40 	call	455b4 <__subdf3>
   413b8:	018b80f4 	movhi	r6,11779
   413bc:	01cee8f4 	movhi	r7,15267
   413c0:	319c1cc4 	addi	r6,r6,28787
   413c4:	39c66284 	addi	r7,r7,6538
   413c8:	003f7306 	br	41198 <__alt_data_end+0xfffc1198>
   413cc:	0042d380 	call	42d38 <fabs>
   413d0:	019b72b4 	movhi	r6,28106
   413d4:	01cff934 	movhi	r7,16356
   413d8:	31b220c4 	addi	r6,r6,-14205
   413dc:	39d7cc04 	addi	r7,r7,24368
   413e0:	1009883a 	mov	r4,r2
   413e4:	180b883a 	mov	r5,r3
   413e8:	102d883a 	mov	r22,r2
   413ec:	182b883a 	mov	r21,r3
   413f0:	0044e9c0 	call	44e9c <__muldf3>
   413f4:	000d883a 	mov	r6,zero
   413f8:	01cff834 	movhi	r7,16352
   413fc:	1009883a 	mov	r4,r2
   41400:	180b883a 	mov	r5,r3
   41404:	004448c0 	call	4448c <__adddf3>
   41408:	180b883a 	mov	r5,r3
   4140c:	1009883a 	mov	r4,r2
   41410:	0045eb00 	call	45eb0 <__fixdfsi>
   41414:	1009883a 	mov	r4,r2
   41418:	1025883a 	mov	r18,r2
   4141c:	0045f300 	call	45f30 <__floatsidf>
   41420:	01cffe74 	movhi	r7,16377
   41424:	39c87ec4 	addi	r7,r7,8699
   41428:	01951034 	movhi	r6,21568
   4142c:	1009883a 	mov	r4,r2
   41430:	180b883a 	mov	r5,r3
   41434:	1029883a 	mov	r20,r2
   41438:	1827883a 	mov	r19,r3
   4143c:	0044e9c0 	call	44e9c <__muldf3>
   41440:	b009883a 	mov	r4,r22
   41444:	a80b883a 	mov	r5,r21
   41448:	100d883a 	mov	r6,r2
   4144c:	180f883a 	mov	r7,r3
   41450:	00455b40 	call	455b4 <__subdf3>
   41454:	018698b4 	movhi	r6,6754
   41458:	01cf7474 	movhi	r7,15825
   4145c:	a009883a 	mov	r4,r20
   41460:	3198cc44 	addi	r6,r6,25393
   41464:	39ed1844 	addi	r7,r7,-19359
   41468:	980b883a 	mov	r5,r19
   4146c:	1039883a 	mov	fp,r2
   41470:	d8c00815 	stw	r3,32(sp)
   41474:	0044e9c0 	call	44e9c <__muldf3>
   41478:	010007c4 	movi	r4,31
   4147c:	e017883a 	mov	r11,fp
   41480:	da800817 	ldw	r10,32(sp)
   41484:	102d883a 	mov	r22,r2
   41488:	182b883a 	mov	r21,r3
   4148c:	24802816 	blt	r4,r18,41530 <__ieee754_rem_pio2+0x464>
   41490:	913fffc4 	addi	r4,r18,-1
   41494:	2109883a 	add	r4,r4,r4
   41498:	01400174 	movhi	r5,5
   4149c:	2109883a 	add	r4,r4,r4
   414a0:	294e2404 	addi	r5,r5,14480
   414a4:	2909883a 	add	r4,r5,r4
   414a8:	21000017 	ldw	r4,0(r4)
   414ac:	b9002026 	beq	r23,r4,41530 <__ieee754_rem_pio2+0x464>
   414b0:	100d883a 	mov	r6,r2
   414b4:	180f883a 	mov	r7,r3
   414b8:	e009883a 	mov	r4,fp
   414bc:	500b883a 	mov	r5,r10
   414c0:	da800b15 	stw	r10,44(sp)
   414c4:	df000a15 	stw	fp,40(sp)
   414c8:	00455b40 	call	455b4 <__subdf3>
   414cc:	da800b17 	ldw	r10,44(sp)
   414d0:	dac00a17 	ldw	r11,40(sp)
   414d4:	1019883a 	mov	r12,r2
   414d8:	1813883a 	mov	r9,r3
   414dc:	80800015 	stw	r2,0(r16)
   414e0:	80c00115 	stw	r3,4(r16)
   414e4:	600d883a 	mov	r6,r12
   414e8:	480f883a 	mov	r7,r9
   414ec:	5809883a 	mov	r4,r11
   414f0:	500b883a 	mov	r5,r10
   414f4:	da400b15 	stw	r9,44(sp)
   414f8:	db000a15 	stw	r12,40(sp)
   414fc:	00455b40 	call	455b4 <__subdf3>
   41500:	b00d883a 	mov	r6,r22
   41504:	a80f883a 	mov	r7,r21
   41508:	1009883a 	mov	r4,r2
   4150c:	180b883a 	mov	r5,r3
   41510:	00455b40 	call	455b4 <__subdf3>
   41514:	80800215 	stw	r2,8(r16)
   41518:	80c00315 	stw	r3,12(r16)
   4151c:	da400b17 	ldw	r9,44(sp)
   41520:	db000a17 	ldw	r12,40(sp)
   41524:	88009f16 	blt	r17,zero,417a4 <__ieee754_rem_pio2+0x6d8>
   41528:	9005883a 	mov	r2,r18
   4152c:	003f7706 	br	4130c <__alt_data_end+0xfffc130c>
   41530:	d9400817 	ldw	r5,32(sp)
   41534:	100d883a 	mov	r6,r2
   41538:	180f883a 	mov	r7,r3
   4153c:	e009883a 	mov	r4,fp
   41540:	da800b15 	stw	r10,44(sp)
   41544:	dac00a15 	stw	r11,40(sp)
   41548:	00455b40 	call	455b4 <__subdf3>
   4154c:	1019883a 	mov	r12,r2
   41550:	1804d53a 	srli	r2,r3,20
   41554:	b811d53a 	srai	r8,r23,20
   41558:	1813883a 	mov	r9,r3
   4155c:	1081ffcc 	andi	r2,r2,2047
   41560:	80c00115 	stw	r3,4(r16)
   41564:	83000015 	stw	r12,0(r16)
   41568:	4085c83a 	sub	r2,r8,r2
   4156c:	00c00404 	movi	r3,16
   41570:	da800b17 	ldw	r10,44(sp)
   41574:	dac00a17 	ldw	r11,40(sp)
   41578:	18bfda0e 	bge	r3,r2,414e4 <__alt_data_end+0xfffc14e4>
   4157c:	01cf7474 	movhi	r7,15825
   41580:	39ed1844 	addi	r7,r7,-19359
   41584:	01869834 	movhi	r6,6752
   41588:	a009883a 	mov	r4,r20
   4158c:	980b883a 	mov	r5,r19
   41590:	da000a15 	stw	r8,40(sp)
   41594:	0044e9c0 	call	44e9c <__muldf3>
   41598:	d9400817 	ldw	r5,32(sp)
   4159c:	100d883a 	mov	r6,r2
   415a0:	180f883a 	mov	r7,r3
   415a4:	e009883a 	mov	r4,fp
   415a8:	102d883a 	mov	r22,r2
   415ac:	182b883a 	mov	r21,r3
   415b0:	00455b40 	call	455b4 <__subdf3>
   415b4:	d9400817 	ldw	r5,32(sp)
   415b8:	100d883a 	mov	r6,r2
   415bc:	180f883a 	mov	r7,r3
   415c0:	e009883a 	mov	r4,fp
   415c4:	182f883a 	mov	r23,r3
   415c8:	d8800915 	stw	r2,36(sp)
   415cc:	00455b40 	call	455b4 <__subdf3>
   415d0:	b00d883a 	mov	r6,r22
   415d4:	a80f883a 	mov	r7,r21
   415d8:	1009883a 	mov	r4,r2
   415dc:	180b883a 	mov	r5,r3
   415e0:	00455b40 	call	455b4 <__subdf3>
   415e4:	018b80f4 	movhi	r6,11779
   415e8:	01cee8f4 	movhi	r7,15267
   415ec:	319c1cc4 	addi	r6,r6,28787
   415f0:	39c66284 	addi	r7,r7,6538
   415f4:	a009883a 	mov	r4,r20
   415f8:	980b883a 	mov	r5,r19
   415fc:	102d883a 	mov	r22,r2
   41600:	182b883a 	mov	r21,r3
   41604:	0044e9c0 	call	44e9c <__muldf3>
   41608:	b00d883a 	mov	r6,r22
   4160c:	a80f883a 	mov	r7,r21
   41610:	1009883a 	mov	r4,r2
   41614:	180b883a 	mov	r5,r3
   41618:	00455b40 	call	455b4 <__subdf3>
   4161c:	d9000917 	ldw	r4,36(sp)
   41620:	100d883a 	mov	r6,r2
   41624:	180f883a 	mov	r7,r3
   41628:	b80b883a 	mov	r5,r23
   4162c:	102d883a 	mov	r22,r2
   41630:	182b883a 	mov	r21,r3
   41634:	00455b40 	call	455b4 <__subdf3>
   41638:	1019883a 	mov	r12,r2
   4163c:	1804d53a 	srli	r2,r3,20
   41640:	da000a17 	ldw	r8,40(sp)
   41644:	83000015 	stw	r12,0(r16)
   41648:	1081ffcc 	andi	r2,r2,2047
   4164c:	4091c83a 	sub	r8,r8,r2
   41650:	80c00115 	stw	r3,4(r16)
   41654:	00800c44 	movi	r2,49
   41658:	1813883a 	mov	r9,r3
   4165c:	1200730e 	bge	r2,r8,4182c <__ieee754_rem_pio2+0x760>
   41660:	01cee8f4 	movhi	r7,15267
   41664:	39c66284 	addi	r7,r7,6538
   41668:	018b8034 	movhi	r6,11776
   4166c:	a009883a 	mov	r4,r20
   41670:	980b883a 	mov	r5,r19
   41674:	0044e9c0 	call	44e9c <__muldf3>
   41678:	d9000917 	ldw	r4,36(sp)
   4167c:	100d883a 	mov	r6,r2
   41680:	180f883a 	mov	r7,r3
   41684:	b80b883a 	mov	r5,r23
   41688:	102d883a 	mov	r22,r2
   4168c:	182b883a 	mov	r21,r3
   41690:	00455b40 	call	455b4 <__subdf3>
   41694:	d9000917 	ldw	r4,36(sp)
   41698:	100d883a 	mov	r6,r2
   4169c:	180f883a 	mov	r7,r3
   416a0:	b80b883a 	mov	r5,r23
   416a4:	d8c00b15 	stw	r3,44(sp)
   416a8:	d8800a15 	stw	r2,40(sp)
   416ac:	00455b40 	call	455b4 <__subdf3>
   416b0:	b00d883a 	mov	r6,r22
   416b4:	a80f883a 	mov	r7,r21
   416b8:	1009883a 	mov	r4,r2
   416bc:	180b883a 	mov	r5,r3
   416c0:	00455b40 	call	455b4 <__subdf3>
   416c4:	01894834 	movhi	r6,9504
   416c8:	01ce5f34 	movhi	r7,14716
   416cc:	31927044 	addi	r6,r6,18881
   416d0:	39e0e684 	addi	r7,r7,-31846
   416d4:	a009883a 	mov	r4,r20
   416d8:	980b883a 	mov	r5,r19
   416dc:	102d883a 	mov	r22,r2
   416e0:	182b883a 	mov	r21,r3
   416e4:	0044e9c0 	call	44e9c <__muldf3>
   416e8:	b00d883a 	mov	r6,r22
   416ec:	a80f883a 	mov	r7,r21
   416f0:	1009883a 	mov	r4,r2
   416f4:	180b883a 	mov	r5,r3
   416f8:	00455b40 	call	455b4 <__subdf3>
   416fc:	dac00a17 	ldw	r11,40(sp)
   41700:	da800b17 	ldw	r10,44(sp)
   41704:	102d883a 	mov	r22,r2
   41708:	182b883a 	mov	r21,r3
   4170c:	100d883a 	mov	r6,r2
   41710:	180f883a 	mov	r7,r3
   41714:	5809883a 	mov	r4,r11
   41718:	500b883a 	mov	r5,r10
   4171c:	003f6a06 	br	414c8 <__alt_data_end+0xfffc14c8>
   41720:	004448c0 	call	4448c <__adddf3>
   41724:	1025883a 	mov	r18,r2
   41728:	008ffe74 	movhi	r2,16377
   4172c:	10887ec4 	addi	r2,r2,8699
   41730:	1823883a 	mov	r17,r3
   41734:	b8802226 	beq	r23,r2,417c0 <__ieee754_rem_pio2+0x6f4>
   41738:	018698b4 	movhi	r6,6754
   4173c:	01cf7474 	movhi	r7,15825
   41740:	3198cc44 	addi	r6,r6,25393
   41744:	39ed1844 	addi	r7,r7,-19359
   41748:	9009883a 	mov	r4,r18
   4174c:	180b883a 	mov	r5,r3
   41750:	004448c0 	call	4448c <__adddf3>
   41754:	100d883a 	mov	r6,r2
   41758:	180f883a 	mov	r7,r3
   4175c:	9009883a 	mov	r4,r18
   41760:	880b883a 	mov	r5,r17
   41764:	80800015 	stw	r2,0(r16)
   41768:	80c00115 	stw	r3,4(r16)
   4176c:	00455b40 	call	455b4 <__subdf3>
   41770:	018698b4 	movhi	r6,6754
   41774:	01cf7474 	movhi	r7,15825
   41778:	3198cc44 	addi	r6,r6,25393
   4177c:	39ed1844 	addi	r7,r7,-19359
   41780:	1009883a 	mov	r4,r2
   41784:	180b883a 	mov	r5,r3
   41788:	004448c0 	call	4448c <__adddf3>
   4178c:	80800215 	stw	r2,8(r16)
   41790:	80c00315 	stw	r3,12(r16)
   41794:	00bfffc4 	movi	r2,-1
   41798:	003edc06 	br	4130c <__alt_data_end+0xfffc130c>
   4179c:	01c000c4 	movi	r7,3
   417a0:	003ec306 	br	412b0 <__alt_data_end+0xfffc12b0>
   417a4:	4a60003c 	xorhi	r9,r9,32768
   417a8:	18e0003c 	xorhi	r3,r3,32768
   417ac:	83000015 	stw	r12,0(r16)
   417b0:	82400115 	stw	r9,4(r16)
   417b4:	80c00315 	stw	r3,12(r16)
   417b8:	0485c83a 	sub	r2,zero,r18
   417bc:	003ed306 	br	4130c <__alt_data_end+0xfffc130c>
   417c0:	01cf7474 	movhi	r7,15825
   417c4:	9009883a 	mov	r4,r18
   417c8:	39ed1844 	addi	r7,r7,-19359
   417cc:	01869834 	movhi	r6,6752
   417d0:	180b883a 	mov	r5,r3
   417d4:	004448c0 	call	4448c <__adddf3>
   417d8:	018b80f4 	movhi	r6,11779
   417dc:	01cee8f4 	movhi	r7,15267
   417e0:	319c1cc4 	addi	r6,r6,28787
   417e4:	39c66284 	addi	r7,r7,6538
   417e8:	1009883a 	mov	r4,r2
   417ec:	180b883a 	mov	r5,r3
   417f0:	1025883a 	mov	r18,r2
   417f4:	1823883a 	mov	r17,r3
   417f8:	004448c0 	call	4448c <__adddf3>
   417fc:	100d883a 	mov	r6,r2
   41800:	180f883a 	mov	r7,r3
   41804:	9009883a 	mov	r4,r18
   41808:	880b883a 	mov	r5,r17
   4180c:	80800015 	stw	r2,0(r16)
   41810:	80c00115 	stw	r3,4(r16)
   41814:	00455b40 	call	455b4 <__subdf3>
   41818:	018b80f4 	movhi	r6,11779
   4181c:	01cee8f4 	movhi	r7,15267
   41820:	319c1cc4 	addi	r6,r6,28787
   41824:	39c66284 	addi	r7,r7,6538
   41828:	003fd506 	br	41780 <__alt_data_end+0xfffc1780>
   4182c:	dac00917 	ldw	r11,36(sp)
   41830:	b815883a 	mov	r10,r23
   41834:	003f2b06 	br	414e4 <__alt_data_end+0xfffc14e4>

00041838 <__kernel_cos>:
   41838:	defff304 	addi	sp,sp,-52
   4183c:	dc000315 	stw	r16,12(sp)
   41840:	04200034 	movhi	r16,32768
   41844:	843fffc4 	addi	r16,r16,-1
   41848:	008f9034 	movhi	r2,15936
   4184c:	df000b15 	stw	fp,44(sp)
   41850:	ddc00a15 	stw	r23,40(sp)
   41854:	dd800915 	stw	r22,36(sp)
   41858:	dcc00615 	stw	r19,24(sp)
   4185c:	dfc00c15 	stw	ra,48(sp)
   41860:	dd400815 	stw	r21,32(sp)
   41864:	dd000715 	stw	r20,28(sp)
   41868:	dc800515 	stw	r18,20(sp)
   4186c:	dc400415 	stw	r17,16(sp)
   41870:	2c20703a 	and	r16,r5,r16
   41874:	10bfffc4 	addi	r2,r2,-1
   41878:	2827883a 	mov	r19,r5
   4187c:	202d883a 	mov	r22,r4
   41880:	302f883a 	mov	r23,r6
   41884:	3839883a 	mov	fp,r7
   41888:	14007516 	blt	r2,r16,41a60 <__kernel_cos+0x228>
   4188c:	0045eb00 	call	45eb0 <__fixdfsi>
   41890:	10010f26 	beq	r2,zero,41cd0 <__kernel_cos+0x498>
   41894:	b00d883a 	mov	r6,r22
   41898:	980f883a 	mov	r7,r19
   4189c:	b009883a 	mov	r4,r22
   418a0:	980b883a 	mov	r5,r19
   418a4:	0044e9c0 	call	44e9c <__muldf3>
   418a8:	01afa234 	movhi	r6,48776
   418ac:	01ef6a74 	movhi	r7,48553
   418b0:	318e3504 	addi	r6,r6,14548
   418b4:	39feba44 	addi	r7,r7,-1303
   418b8:	1009883a 	mov	r4,r2
   418bc:	180b883a 	mov	r5,r3
   418c0:	102b883a 	mov	r21,r2
   418c4:	1829883a 	mov	r20,r3
   418c8:	0044e9c0 	call	44e9c <__muldf3>
   418cc:	01af6d74 	movhi	r6,48565
   418d0:	01cf88b4 	movhi	r7,15906
   418d4:	31ac7104 	addi	r6,r6,-20028
   418d8:	39fba784 	addi	r7,r7,-4450
   418dc:	1009883a 	mov	r4,r2
   418e0:	180b883a 	mov	r5,r3
   418e4:	004448c0 	call	4448c <__adddf3>
   418e8:	a80d883a 	mov	r6,r21
   418ec:	a00f883a 	mov	r7,r20
   418f0:	1009883a 	mov	r4,r2
   418f4:	180b883a 	mov	r5,r3
   418f8:	0044e9c0 	call	44e9c <__muldf3>
   418fc:	01a02734 	movhi	r6,32924
   41900:	01cfa4b4 	movhi	r7,16018
   41904:	3194ab44 	addi	r6,r6,21165
   41908:	39df93c4 	addi	r7,r7,32335
   4190c:	1009883a 	mov	r4,r2
   41910:	180b883a 	mov	r5,r3
   41914:	00455b40 	call	455b4 <__subdf3>
   41918:	a80d883a 	mov	r6,r21
   4191c:	a00f883a 	mov	r7,r20
   41920:	1009883a 	mov	r4,r2
   41924:	180b883a 	mov	r5,r3
   41928:	0044e9c0 	call	44e9c <__muldf3>
   4192c:	018672f4 	movhi	r6,6603
   41930:	01cfbeb4 	movhi	r7,16122
   41934:	31856404 	addi	r6,r6,5520
   41938:	39c06804 	addi	r7,r7,416
   4193c:	1009883a 	mov	r4,r2
   41940:	180b883a 	mov	r5,r3
   41944:	004448c0 	call	4448c <__adddf3>
   41948:	a80d883a 	mov	r6,r21
   4194c:	a00f883a 	mov	r7,r20
   41950:	1009883a 	mov	r4,r2
   41954:	180b883a 	mov	r5,r3
   41958:	0044e9c0 	call	44e9c <__muldf3>
   4195c:	0185b074 	movhi	r6,5825
   41960:	01cfd5f4 	movhi	r7,16215
   41964:	31945dc4 	addi	r6,r6,20855
   41968:	39f05b04 	addi	r7,r7,-16020
   4196c:	1009883a 	mov	r4,r2
   41970:	180b883a 	mov	r5,r3
   41974:	00455b40 	call	455b4 <__subdf3>
   41978:	a80d883a 	mov	r6,r21
   4197c:	a00f883a 	mov	r7,r20
   41980:	1009883a 	mov	r4,r2
   41984:	180b883a 	mov	r5,r3
   41988:	0044e9c0 	call	44e9c <__muldf3>
   4198c:	01955574 	movhi	r6,21845
   41990:	01cfe974 	movhi	r7,16293
   41994:	31955304 	addi	r6,r6,21836
   41998:	39d55544 	addi	r7,r7,21845
   4199c:	1009883a 	mov	r4,r2
   419a0:	180b883a 	mov	r5,r3
   419a4:	004448c0 	call	4448c <__adddf3>
   419a8:	a80d883a 	mov	r6,r21
   419ac:	a00f883a 	mov	r7,r20
   419b0:	1009883a 	mov	r4,r2
   419b4:	180b883a 	mov	r5,r3
   419b8:	0044e9c0 	call	44e9c <__muldf3>
   419bc:	1017883a 	mov	r11,r2
   419c0:	1815883a 	mov	r10,r3
   419c4:	a809883a 	mov	r4,r21
   419c8:	a00b883a 	mov	r5,r20
   419cc:	000d883a 	mov	r6,zero
   419d0:	01cff834 	movhi	r7,16352
   419d4:	da800215 	stw	r10,8(sp)
   419d8:	dac00115 	stw	r11,4(sp)
   419dc:	0044e9c0 	call	44e9c <__muldf3>
   419e0:	dac00117 	ldw	r11,4(sp)
   419e4:	da800217 	ldw	r10,8(sp)
   419e8:	a809883a 	mov	r4,r21
   419ec:	580d883a 	mov	r6,r11
   419f0:	500f883a 	mov	r7,r10
   419f4:	a00b883a 	mov	r5,r20
   419f8:	1023883a 	mov	r17,r2
   419fc:	1821883a 	mov	r16,r3
   41a00:	0044e9c0 	call	44e9c <__muldf3>
   41a04:	b80d883a 	mov	r6,r23
   41a08:	e00f883a 	mov	r7,fp
   41a0c:	b009883a 	mov	r4,r22
   41a10:	980b883a 	mov	r5,r19
   41a14:	1029883a 	mov	r20,r2
   41a18:	1825883a 	mov	r18,r3
   41a1c:	0044e9c0 	call	44e9c <__muldf3>
   41a20:	a009883a 	mov	r4,r20
   41a24:	900b883a 	mov	r5,r18
   41a28:	100d883a 	mov	r6,r2
   41a2c:	180f883a 	mov	r7,r3
   41a30:	00455b40 	call	455b4 <__subdf3>
   41a34:	8809883a 	mov	r4,r17
   41a38:	800b883a 	mov	r5,r16
   41a3c:	100d883a 	mov	r6,r2
   41a40:	180f883a 	mov	r7,r3
   41a44:	00455b40 	call	455b4 <__subdf3>
   41a48:	100d883a 	mov	r6,r2
   41a4c:	180f883a 	mov	r7,r3
   41a50:	0009883a 	mov	r4,zero
   41a54:	014ffc34 	movhi	r5,16368
   41a58:	00455b40 	call	455b4 <__subdf3>
   41a5c:	00008b06 	br	41c8c <__kernel_cos+0x454>
   41a60:	200d883a 	mov	r6,r4
   41a64:	280f883a 	mov	r7,r5
   41a68:	0044e9c0 	call	44e9c <__muldf3>
   41a6c:	01afa234 	movhi	r6,48776
   41a70:	01ef6a74 	movhi	r7,48553
   41a74:	318e3504 	addi	r6,r6,14548
   41a78:	39feba44 	addi	r7,r7,-1303
   41a7c:	1009883a 	mov	r4,r2
   41a80:	180b883a 	mov	r5,r3
   41a84:	1025883a 	mov	r18,r2
   41a88:	1823883a 	mov	r17,r3
   41a8c:	0044e9c0 	call	44e9c <__muldf3>
   41a90:	01af6d74 	movhi	r6,48565
   41a94:	01cf88b4 	movhi	r7,15906
   41a98:	31ac7104 	addi	r6,r6,-20028
   41a9c:	39fba784 	addi	r7,r7,-4450
   41aa0:	1009883a 	mov	r4,r2
   41aa4:	180b883a 	mov	r5,r3
   41aa8:	004448c0 	call	4448c <__adddf3>
   41aac:	900d883a 	mov	r6,r18
   41ab0:	880f883a 	mov	r7,r17
   41ab4:	1009883a 	mov	r4,r2
   41ab8:	180b883a 	mov	r5,r3
   41abc:	0044e9c0 	call	44e9c <__muldf3>
   41ac0:	01a02734 	movhi	r6,32924
   41ac4:	01cfa4b4 	movhi	r7,16018
   41ac8:	3194ab44 	addi	r6,r6,21165
   41acc:	39df93c4 	addi	r7,r7,32335
   41ad0:	1009883a 	mov	r4,r2
   41ad4:	180b883a 	mov	r5,r3
   41ad8:	00455b40 	call	455b4 <__subdf3>
   41adc:	900d883a 	mov	r6,r18
   41ae0:	880f883a 	mov	r7,r17
   41ae4:	1009883a 	mov	r4,r2
   41ae8:	180b883a 	mov	r5,r3
   41aec:	0044e9c0 	call	44e9c <__muldf3>
   41af0:	018672f4 	movhi	r6,6603
   41af4:	01cfbeb4 	movhi	r7,16122
   41af8:	31856404 	addi	r6,r6,5520
   41afc:	39c06804 	addi	r7,r7,416
   41b00:	1009883a 	mov	r4,r2
   41b04:	180b883a 	mov	r5,r3
   41b08:	004448c0 	call	4448c <__adddf3>
   41b0c:	900d883a 	mov	r6,r18
   41b10:	880f883a 	mov	r7,r17
   41b14:	1009883a 	mov	r4,r2
   41b18:	180b883a 	mov	r5,r3
   41b1c:	0044e9c0 	call	44e9c <__muldf3>
   41b20:	0185b074 	movhi	r6,5825
   41b24:	01cfd5f4 	movhi	r7,16215
   41b28:	31945dc4 	addi	r6,r6,20855
   41b2c:	39f05b04 	addi	r7,r7,-16020
   41b30:	1009883a 	mov	r4,r2
   41b34:	180b883a 	mov	r5,r3
   41b38:	00455b40 	call	455b4 <__subdf3>
   41b3c:	900d883a 	mov	r6,r18
   41b40:	880f883a 	mov	r7,r17
   41b44:	1009883a 	mov	r4,r2
   41b48:	180b883a 	mov	r5,r3
   41b4c:	0044e9c0 	call	44e9c <__muldf3>
   41b50:	01955574 	movhi	r6,21845
   41b54:	01cfe974 	movhi	r7,16293
   41b58:	31955304 	addi	r6,r6,21836
   41b5c:	39d55544 	addi	r7,r7,21845
   41b60:	1009883a 	mov	r4,r2
   41b64:	180b883a 	mov	r5,r3
   41b68:	004448c0 	call	4448c <__adddf3>
   41b6c:	900d883a 	mov	r6,r18
   41b70:	880f883a 	mov	r7,r17
   41b74:	1009883a 	mov	r4,r2
   41b78:	180b883a 	mov	r5,r3
   41b7c:	0044e9c0 	call	44e9c <__muldf3>
   41b80:	1013883a 	mov	r9,r2
   41b84:	1017883a 	mov	r11,r2
   41b88:	008ff4f4 	movhi	r2,16339
   41b8c:	108ccc84 	addi	r2,r2,13106
   41b90:	1811883a 	mov	r8,r3
   41b94:	902b883a 	mov	r21,r18
   41b98:	8829883a 	mov	r20,r17
   41b9c:	1815883a 	mov	r10,r3
   41ba0:	143f880e 	bge	r2,r16,419c4 <__alt_data_end+0xfffc19c4>
   41ba4:	008ffa74 	movhi	r2,16361
   41ba8:	14004416 	blt	r2,r16,41cbc <__kernel_cos+0x484>
   41bac:	00bff834 	movhi	r2,65504
   41bb0:	80a1883a 	add	r16,r16,r2
   41bb4:	000d883a 	mov	r6,zero
   41bb8:	800f883a 	mov	r7,r16
   41bbc:	0009883a 	mov	r4,zero
   41bc0:	014ffc34 	movhi	r5,16368
   41bc4:	da400115 	stw	r9,4(sp)
   41bc8:	d8c00215 	stw	r3,8(sp)
   41bcc:	00455b40 	call	455b4 <__subdf3>
   41bd0:	da000217 	ldw	r8,8(sp)
   41bd4:	da400117 	ldw	r9,4(sp)
   41bd8:	102b883a 	mov	r21,r2
   41bdc:	d8c00015 	stw	r3,0(sp)
   41be0:	9009883a 	mov	r4,r18
   41be4:	880b883a 	mov	r5,r17
   41be8:	000d883a 	mov	r6,zero
   41bec:	01cff834 	movhi	r7,16352
   41bf0:	da000215 	stw	r8,8(sp)
   41bf4:	da400115 	stw	r9,4(sp)
   41bf8:	0044e9c0 	call	44e9c <__muldf3>
   41bfc:	800f883a 	mov	r7,r16
   41c00:	000d883a 	mov	r6,zero
   41c04:	1009883a 	mov	r4,r2
   41c08:	180b883a 	mov	r5,r3
   41c0c:	00455b40 	call	455b4 <__subdf3>
   41c10:	da400117 	ldw	r9,4(sp)
   41c14:	da000217 	ldw	r8,8(sp)
   41c18:	9009883a 	mov	r4,r18
   41c1c:	480d883a 	mov	r6,r9
   41c20:	400f883a 	mov	r7,r8
   41c24:	880b883a 	mov	r5,r17
   41c28:	1029883a 	mov	r20,r2
   41c2c:	1821883a 	mov	r16,r3
   41c30:	0044e9c0 	call	44e9c <__muldf3>
   41c34:	b80d883a 	mov	r6,r23
   41c38:	e00f883a 	mov	r7,fp
   41c3c:	b009883a 	mov	r4,r22
   41c40:	980b883a 	mov	r5,r19
   41c44:	1025883a 	mov	r18,r2
   41c48:	1823883a 	mov	r17,r3
   41c4c:	0044e9c0 	call	44e9c <__muldf3>
   41c50:	100d883a 	mov	r6,r2
   41c54:	180f883a 	mov	r7,r3
   41c58:	9009883a 	mov	r4,r18
   41c5c:	880b883a 	mov	r5,r17
   41c60:	00455b40 	call	455b4 <__subdf3>
   41c64:	100d883a 	mov	r6,r2
   41c68:	180f883a 	mov	r7,r3
   41c6c:	a009883a 	mov	r4,r20
   41c70:	800b883a 	mov	r5,r16
   41c74:	00455b40 	call	455b4 <__subdf3>
   41c78:	d9400017 	ldw	r5,0(sp)
   41c7c:	100d883a 	mov	r6,r2
   41c80:	180f883a 	mov	r7,r3
   41c84:	a809883a 	mov	r4,r21
   41c88:	00455b40 	call	455b4 <__subdf3>
   41c8c:	dfc00c17 	ldw	ra,48(sp)
   41c90:	df000b17 	ldw	fp,44(sp)
   41c94:	ddc00a17 	ldw	r23,40(sp)
   41c98:	dd800917 	ldw	r22,36(sp)
   41c9c:	dd400817 	ldw	r21,32(sp)
   41ca0:	dd000717 	ldw	r20,28(sp)
   41ca4:	dcc00617 	ldw	r19,24(sp)
   41ca8:	dc800517 	ldw	r18,20(sp)
   41cac:	dc400417 	ldw	r17,16(sp)
   41cb0:	dc000317 	ldw	r16,12(sp)
   41cb4:	dec00d04 	addi	sp,sp,52
   41cb8:	f800283a 	ret
   41cbc:	008ff9f4 	movhi	r2,16359
   41cc0:	002b883a 	mov	r21,zero
   41cc4:	d8800015 	stw	r2,0(sp)
   41cc8:	040ff4b4 	movhi	r16,16338
   41ccc:	003fc406 	br	41be0 <__alt_data_end+0xfffc1be0>
   41cd0:	0005883a 	mov	r2,zero
   41cd4:	00cffc34 	movhi	r3,16368
   41cd8:	003fec06 	br	41c8c <__alt_data_end+0xfffc1c8c>

00041cdc <__kernel_rem_pio2>:
   41cdc:	deff5a04 	addi	sp,sp,-664
   41ce0:	da00a617 	ldw	r8,664(sp)
   41ce4:	00c00174 	movhi	r3,5
   41ce8:	18ce9604 	addi	r3,r3,14936
   41cec:	4205883a 	add	r2,r8,r8
   41cf0:	1085883a 	add	r2,r2,r2
   41cf4:	1885883a 	add	r2,r3,r2
   41cf8:	d9008e15 	stw	r4,568(sp)
   41cfc:	d9408f15 	stw	r5,572(sp)
   41d00:	313fff44 	addi	r4,r6,-3
   41d04:	01400604 	movi	r5,24
   41d08:	dd80a215 	stw	r22,648(sp)
   41d0c:	dc009c15 	stw	r16,624(sp)
   41d10:	dfc0a515 	stw	ra,660(sp)
   41d14:	df00a415 	stw	fp,656(sp)
   41d18:	ddc0a315 	stw	r23,652(sp)
   41d1c:	dd40a115 	stw	r21,644(sp)
   41d20:	dd00a015 	stw	r20,640(sp)
   41d24:	dcc09f15 	stw	r19,636(sp)
   41d28:	dc809e15 	stw	r18,632(sp)
   41d2c:	dc409d15 	stw	r17,628(sp)
   41d30:	3021883a 	mov	r16,r6
   41d34:	d9c09315 	stw	r7,588(sp)
   41d38:	15800017 	ldw	r22,0(r2)
   41d3c:	00430f00 	call	430f0 <__divsi3>
   41d40:	da009317 	ldw	r8,588(sp)
   41d44:	d8809215 	stw	r2,584(sp)
   41d48:	423fffc4 	addi	r8,r8,-1
   41d4c:	da008d15 	stw	r8,564(sp)
   41d50:	10033b16 	blt	r2,zero,42a40 <__kernel_rem_pio2+0xd64>
   41d54:	da009217 	ldw	r8,584(sp)
   41d58:	d9009217 	ldw	r4,584(sp)
   41d5c:	42000044 	addi	r8,r8,1
   41d60:	40fffa24 	muli	r3,r8,-24
   41d64:	da009515 	stw	r8,596(sp)
   41d68:	da008d17 	ldw	r8,564(sp)
   41d6c:	1c07883a 	add	r3,r3,r16
   41d70:	d8c09015 	stw	r3,576(sp)
   41d74:	b205883a 	add	r2,r22,r8
   41d78:	2223c83a 	sub	r17,r4,r8
   41d7c:	10001016 	blt	r2,zero,41dc0 <__kernel_rem_pio2+0xe4>
   41d80:	da00a717 	ldw	r8,668(sp)
   41d84:	8c65883a 	add	r18,r17,r17
   41d88:	94a5883a 	add	r18,r18,r18
   41d8c:	1445883a 	add	r2,r2,r17
   41d90:	dcc05004 	addi	r19,sp,320
   41d94:	44a5883a 	add	r18,r8,r18
   41d98:	14000044 	addi	r16,r2,1
   41d9c:	88015316 	blt	r17,zero,422ec <__kernel_rem_pio2+0x610>
   41da0:	91000017 	ldw	r4,0(r18)
   41da4:	0045f300 	call	45f30 <__floatsidf>
   41da8:	98800015 	stw	r2,0(r19)
   41dac:	98c00115 	stw	r3,4(r19)
   41db0:	8c400044 	addi	r17,r17,1
   41db4:	9cc00204 	addi	r19,r19,8
   41db8:	94800104 	addi	r18,r18,4
   41dbc:	8c3ff71e 	bne	r17,r16,41d9c <__alt_data_end+0xfffc1d9c>
   41dc0:	b0002816 	blt	r22,zero,41e64 <__kernel_rem_pio2+0x188>
   41dc4:	da008d17 	ldw	r8,564(sp)
   41dc8:	b4c00044 	addi	r19,r22,1
   41dcc:	982690fa 	slli	r19,r19,3
   41dd0:	402490fa 	slli	r18,r8,3
   41dd4:	da008e17 	ldw	r8,568(sp)
   41dd8:	d8805004 	addi	r2,sp,320
   41ddc:	94000204 	addi	r16,r18,8
   41de0:	d823883a 	mov	r17,sp
   41de4:	14a5883a 	add	r18,r2,r18
   41de8:	dcef883a 	add	r23,sp,r19
   41dec:	4421883a 	add	r16,r8,r16
   41df0:	dd809115 	stw	r22,580(sp)
   41df4:	4039883a 	mov	fp,r8
   41df8:	da008d17 	ldw	r8,564(sp)
   41dfc:	40016016 	blt	r8,zero,42380 <__kernel_rem_pio2+0x6a4>
   41e00:	e027883a 	mov	r19,fp
   41e04:	9029883a 	mov	r20,r18
   41e08:	002d883a 	mov	r22,zero
   41e0c:	002b883a 	mov	r21,zero
   41e10:	a1800017 	ldw	r6,0(r20)
   41e14:	a1c00117 	ldw	r7,4(r20)
   41e18:	99000017 	ldw	r4,0(r19)
   41e1c:	99400117 	ldw	r5,4(r19)
   41e20:	9cc00204 	addi	r19,r19,8
   41e24:	a53ffe04 	addi	r20,r20,-8
   41e28:	0044e9c0 	call	44e9c <__muldf3>
   41e2c:	b009883a 	mov	r4,r22
   41e30:	a80b883a 	mov	r5,r21
   41e34:	100d883a 	mov	r6,r2
   41e38:	180f883a 	mov	r7,r3
   41e3c:	004448c0 	call	4448c <__adddf3>
   41e40:	102d883a 	mov	r22,r2
   41e44:	182b883a 	mov	r21,r3
   41e48:	9c3ff11e 	bne	r19,r16,41e10 <__alt_data_end+0xfffc1e10>
   41e4c:	8d800015 	stw	r22,0(r17)
   41e50:	8d400115 	stw	r21,4(r17)
   41e54:	8c400204 	addi	r17,r17,8
   41e58:	94800204 	addi	r18,r18,8
   41e5c:	8dffe61e 	bne	r17,r23,41df8 <__alt_data_end+0xfffc1df8>
   41e60:	dd809117 	ldw	r22,580(sp)
   41e64:	00d00034 	movhi	r3,16384
   41e68:	da009317 	ldw	r8,588(sp)
   41e6c:	18ffff84 	addi	r3,r3,-2
   41e70:	b0c7883a 	add	r3,r22,r3
   41e74:	18c7883a 	add	r3,r3,r3
   41e78:	402090fa 	slli	r16,r8,3
   41e7c:	18c7883a 	add	r3,r3,r3
   41e80:	da007804 	addi	r8,sp,480
   41e84:	40d1883a 	add	r8,r8,r3
   41e88:	b0bfffc4 	addi	r2,r22,-1
   41e8c:	da009615 	stw	r8,600(sp)
   41e90:	da008e17 	ldw	r8,568(sp)
   41e94:	1085883a 	add	r2,r2,r2
   41e98:	1085883a 	add	r2,r2,r2
   41e9c:	19000104 	addi	r4,r3,4
   41ea0:	d885883a 	add	r2,sp,r2
   41ea4:	4421883a 	add	r16,r8,r16
   41ea8:	da007804 	addi	r8,sp,480
   41eac:	4111883a 	add	r8,r8,r4
   41eb0:	10807804 	addi	r2,r2,480
   41eb4:	da009715 	stw	r8,604(sp)
   41eb8:	b025883a 	mov	r18,r22
   41ebc:	d8809815 	stw	r2,608(sp)
   41ec0:	dd809415 	stw	r22,592(sp)
   41ec4:	900490fa 	slli	r2,r18,3
   41ec8:	d885883a 	add	r2,sp,r2
   41ecc:	17000017 	ldw	fp,0(r2)
   41ed0:	15400117 	ldw	r21,4(r2)
   41ed4:	04802b0e 	bge	zero,r18,41f84 <__kernel_rem_pio2+0x2a8>
   41ed8:	00880034 	movhi	r2,8192
   41edc:	10bfffc4 	addi	r2,r2,-1
   41ee0:	90a9883a 	add	r20,r18,r2
   41ee4:	a02890fa 	slli	r20,r20,3
   41ee8:	dc407804 	addi	r17,sp,480
   41eec:	dcfffe04 	addi	r19,sp,-8
   41ef0:	dd29883a 	add	r20,sp,r20
   41ef4:	000d883a 	mov	r6,zero
   41ef8:	01cf9c34 	movhi	r7,15984
   41efc:	e009883a 	mov	r4,fp
   41f00:	a80b883a 	mov	r5,r21
   41f04:	0044e9c0 	call	44e9c <__muldf3>
   41f08:	180b883a 	mov	r5,r3
   41f0c:	1009883a 	mov	r4,r2
   41f10:	0045eb00 	call	45eb0 <__fixdfsi>
   41f14:	1009883a 	mov	r4,r2
   41f18:	0045f300 	call	45f30 <__floatsidf>
   41f1c:	000d883a 	mov	r6,zero
   41f20:	01d05c34 	movhi	r7,16752
   41f24:	1009883a 	mov	r4,r2
   41f28:	180b883a 	mov	r5,r3
   41f2c:	102f883a 	mov	r23,r2
   41f30:	182d883a 	mov	r22,r3
   41f34:	0044e9c0 	call	44e9c <__muldf3>
   41f38:	100d883a 	mov	r6,r2
   41f3c:	180f883a 	mov	r7,r3
   41f40:	e009883a 	mov	r4,fp
   41f44:	a80b883a 	mov	r5,r21
   41f48:	00455b40 	call	455b4 <__subdf3>
   41f4c:	180b883a 	mov	r5,r3
   41f50:	1009883a 	mov	r4,r2
   41f54:	0045eb00 	call	45eb0 <__fixdfsi>
   41f58:	a1800017 	ldw	r6,0(r20)
   41f5c:	a1c00117 	ldw	r7,4(r20)
   41f60:	88800015 	stw	r2,0(r17)
   41f64:	b809883a 	mov	r4,r23
   41f68:	b00b883a 	mov	r5,r22
   41f6c:	004448c0 	call	4448c <__adddf3>
   41f70:	a53ffe04 	addi	r20,r20,-8
   41f74:	1039883a 	mov	fp,r2
   41f78:	182b883a 	mov	r21,r3
   41f7c:	8c400104 	addi	r17,r17,4
   41f80:	a4ffdc1e 	bne	r20,r19,41ef4 <__alt_data_end+0xfffc1ef4>
   41f84:	d9809017 	ldw	r6,576(sp)
   41f88:	a80b883a 	mov	r5,r21
   41f8c:	e009883a 	mov	r4,fp
   41f90:	0042f380 	call	42f38 <scalbn>
   41f94:	000d883a 	mov	r6,zero
   41f98:	01cff034 	movhi	r7,16320
   41f9c:	1009883a 	mov	r4,r2
   41fa0:	180b883a 	mov	r5,r3
   41fa4:	1027883a 	mov	r19,r2
   41fa8:	1823883a 	mov	r17,r3
   41fac:	0044e9c0 	call	44e9c <__muldf3>
   41fb0:	1009883a 	mov	r4,r2
   41fb4:	180b883a 	mov	r5,r3
   41fb8:	0042d4c0 	call	42d4c <floor>
   41fbc:	000d883a 	mov	r6,zero
   41fc0:	01d00834 	movhi	r7,16416
   41fc4:	1009883a 	mov	r4,r2
   41fc8:	180b883a 	mov	r5,r3
   41fcc:	0044e9c0 	call	44e9c <__muldf3>
   41fd0:	100d883a 	mov	r6,r2
   41fd4:	180f883a 	mov	r7,r3
   41fd8:	9809883a 	mov	r4,r19
   41fdc:	880b883a 	mov	r5,r17
   41fe0:	00455b40 	call	455b4 <__subdf3>
   41fe4:	180b883a 	mov	r5,r3
   41fe8:	1009883a 	mov	r4,r2
   41fec:	1827883a 	mov	r19,r3
   41ff0:	1029883a 	mov	r20,r2
   41ff4:	0045eb00 	call	45eb0 <__fixdfsi>
   41ff8:	1009883a 	mov	r4,r2
   41ffc:	1023883a 	mov	r17,r2
   42000:	0045f300 	call	45f30 <__floatsidf>
   42004:	a009883a 	mov	r4,r20
   42008:	100d883a 	mov	r6,r2
   4200c:	180f883a 	mov	r7,r3
   42010:	980b883a 	mov	r5,r19
   42014:	00455b40 	call	455b4 <__subdf3>
   42018:	d9009017 	ldw	r4,576(sp)
   4201c:	1013883a 	mov	r9,r2
   42020:	102b883a 	mov	r21,r2
   42024:	1811883a 	mov	r8,r3
   42028:	0100b30e 	bge	zero,r4,422f8 <__kernel_rem_pio2+0x61c>
   4202c:	90bfffc4 	addi	r2,r18,-1
   42030:	1085883a 	add	r2,r2,r2
   42034:	1085883a 	add	r2,r2,r2
   42038:	d885883a 	add	r2,sp,r2
   4203c:	10807804 	addi	r2,r2,480
   42040:	d9809017 	ldw	r6,576(sp)
   42044:	11400017 	ldw	r5,0(r2)
   42048:	01000604 	movi	r4,24
   4204c:	2189c83a 	sub	r4,r4,r6
   42050:	290dd83a 	sra	r6,r5,r4
   42054:	d9c09017 	ldw	r7,576(sp)
   42058:	04c005c4 	movi	r19,23
   4205c:	3108983a 	sll	r4,r6,r4
   42060:	99e7c83a 	sub	r19,r19,r7
   42064:	89a3883a 	add	r17,r17,r6
   42068:	2909c83a 	sub	r4,r5,r4
   4206c:	24e7d83a 	sra	r19,r4,r19
   42070:	11000015 	stw	r4,0(r2)
   42074:	04c02a0e 	bge	zero,r19,42120 <__kernel_rem_pio2+0x444>
   42078:	8c400044 	addi	r17,r17,1
   4207c:	0481570e 	bge	zero,r18,425dc <__kernel_rem_pio2+0x900>
   42080:	02804034 	movhi	r10,256
   42084:	52bfffc4 	addi	r10,r10,-1
   42088:	d8807804 	addi	r2,sp,480
   4208c:	000b883a 	mov	r5,zero
   42090:	0029883a 	mov	r20,zero
   42094:	01c04034 	movhi	r7,256
   42098:	00000706 	br	420b8 <__kernel_rem_pio2+0x3dc>
   4209c:	390dc83a 	sub	r6,r7,r4
   420a0:	20000226 	beq	r4,zero,420ac <__kernel_rem_pio2+0x3d0>
   420a4:	11800015 	stw	r6,0(r2)
   420a8:	05000044 	movi	r20,1
   420ac:	29400044 	addi	r5,r5,1
   420b0:	10800104 	addi	r2,r2,4
   420b4:	2c80080e 	bge	r5,r18,420d8 <__kernel_rem_pio2+0x3fc>
   420b8:	11000017 	ldw	r4,0(r2)
   420bc:	a03ff726 	beq	r20,zero,4209c <__alt_data_end+0xfffc209c>
   420c0:	5109c83a 	sub	r4,r10,r4
   420c4:	11000015 	stw	r4,0(r2)
   420c8:	29400044 	addi	r5,r5,1
   420cc:	05000044 	movi	r20,1
   420d0:	10800104 	addi	r2,r2,4
   420d4:	2cbff816 	blt	r5,r18,420b8 <__alt_data_end+0xfffc20b8>
   420d8:	d9009017 	ldw	r4,576(sp)
   420dc:	01000e0e 	bge	zero,r4,42118 <__kernel_rem_pio2+0x43c>
   420e0:	00800044 	movi	r2,1
   420e4:	20808d26 	beq	r4,r2,4231c <__kernel_rem_pio2+0x640>
   420e8:	00800084 	movi	r2,2
   420ec:	20800a1e 	bne	r4,r2,42118 <__kernel_rem_pio2+0x43c>
   420f0:	90bfffc4 	addi	r2,r18,-1
   420f4:	1085883a 	add	r2,r2,r2
   420f8:	1085883a 	add	r2,r2,r2
   420fc:	d885883a 	add	r2,sp,r2
   42100:	10807804 	addi	r2,r2,480
   42104:	11400017 	ldw	r5,0(r2)
   42108:	01001034 	movhi	r4,64
   4210c:	213fffc4 	addi	r4,r4,-1
   42110:	2908703a 	and	r4,r5,r4
   42114:	11000015 	stw	r4,0(r2)
   42118:	00800084 	movi	r2,2
   4211c:	98805d26 	beq	r19,r2,42294 <__kernel_rem_pio2+0x5b8>
   42120:	400b883a 	mov	r5,r8
   42124:	000d883a 	mov	r6,zero
   42128:	000f883a 	mov	r7,zero
   4212c:	a809883a 	mov	r4,r21
   42130:	da009b15 	stw	r8,620(sp)
   42134:	0044d380 	call	44d38 <__eqdf2>
   42138:	da009b17 	ldw	r8,620(sp)
   4213c:	10012b1e 	bne	r2,zero,425ec <__kernel_rem_pio2+0x910>
   42140:	da009417 	ldw	r8,592(sp)
   42144:	917fffc4 	addi	r5,r18,-1
   42148:	2a000e16 	blt	r5,r8,42184 <__kernel_rem_pio2+0x4a8>
   4214c:	00900034 	movhi	r2,16384
   42150:	10bfffc4 	addi	r2,r2,-1
   42154:	9085883a 	add	r2,r18,r2
   42158:	1085883a 	add	r2,r2,r2
   4215c:	d9809717 	ldw	r6,604(sp)
   42160:	1085883a 	add	r2,r2,r2
   42164:	d9007804 	addi	r4,sp,480
   42168:	0007883a 	mov	r3,zero
   4216c:	2085883a 	add	r2,r4,r2
   42170:	11000017 	ldw	r4,0(r2)
   42174:	10bfff04 	addi	r2,r2,-4
   42178:	1906b03a 	or	r3,r3,r4
   4217c:	11bffc1e 	bne	r2,r6,42170 <__alt_data_end+0xfffc2170>
   42180:	1800821e 	bne	r3,zero,4238c <__kernel_rem_pio2+0x6b0>
   42184:	da009817 	ldw	r8,608(sp)
   42188:	40800017 	ldw	r2,0(r8)
   4218c:	1001151e 	bne	r2,zero,425e4 <__kernel_rem_pio2+0x908>
   42190:	d8809617 	ldw	r2,600(sp)
   42194:	05000044 	movi	r20,1
   42198:	10bfff04 	addi	r2,r2,-4
   4219c:	10c00117 	ldw	r3,4(r2)
   421a0:	a5000044 	addi	r20,r20,1
   421a4:	183ffc26 	beq	r3,zero,42198 <__alt_data_end+0xfffc2198>
   421a8:	9529883a 	add	r20,r18,r20
   421ac:	90800044 	addi	r2,r18,1
   421b0:	dd009115 	stw	r20,580(sp)
   421b4:	a0803216 	blt	r20,r2,42280 <__kernel_rem_pio2+0x5a4>
   421b8:	da009317 	ldw	r8,588(sp)
   421bc:	d8c09117 	ldw	r3,580(sp)
   421c0:	44a3883a 	add	r17,r8,r18
   421c4:	da009217 	ldw	r8,584(sp)
   421c8:	882290fa 	slli	r17,r17,3
   421cc:	40a5883a 	add	r18,r8,r2
   421d0:	da009517 	ldw	r8,596(sp)
   421d4:	100490fa 	slli	r2,r2,3
   421d8:	94a5883a 	add	r18,r18,r18
   421dc:	40eb883a 	add	r21,r8,r3
   421e0:	da00a717 	ldw	r8,668(sp)
   421e4:	ad6b883a 	add	r21,r21,r21
   421e8:	94a5883a 	add	r18,r18,r18
   421ec:	ad6b883a 	add	r21,r21,r21
   421f0:	d8c05004 	addi	r3,sp,320
   421f4:	44a5883a 	add	r18,r8,r18
   421f8:	1c63883a 	add	r17,r3,r17
   421fc:	d8a7883a 	add	r19,sp,r2
   42200:	456b883a 	add	r21,r8,r21
   42204:	91000017 	ldw	r4,0(r18)
   42208:	0045f300 	call	45f30 <__floatsidf>
   4220c:	da008d17 	ldw	r8,564(sp)
   42210:	88800015 	stw	r2,0(r17)
   42214:	88c00115 	stw	r3,4(r17)
   42218:	40001b16 	blt	r8,zero,42288 <__kernel_rem_pio2+0x5ac>
   4221c:	dd008e17 	ldw	r20,568(sp)
   42220:	882d883a 	mov	r22,r17
   42224:	002f883a 	mov	r23,zero
   42228:	0039883a 	mov	fp,zero
   4222c:	b1800017 	ldw	r6,0(r22)
   42230:	b1c00117 	ldw	r7,4(r22)
   42234:	a1000017 	ldw	r4,0(r20)
   42238:	a1400117 	ldw	r5,4(r20)
   4223c:	a5000204 	addi	r20,r20,8
   42240:	b5bffe04 	addi	r22,r22,-8
   42244:	0044e9c0 	call	44e9c <__muldf3>
   42248:	b809883a 	mov	r4,r23
   4224c:	e00b883a 	mov	r5,fp
   42250:	100d883a 	mov	r6,r2
   42254:	180f883a 	mov	r7,r3
   42258:	004448c0 	call	4448c <__adddf3>
   4225c:	102f883a 	mov	r23,r2
   42260:	1839883a 	mov	fp,r3
   42264:	a43ff11e 	bne	r20,r16,4222c <__alt_data_end+0xfffc222c>
   42268:	9dc00015 	stw	r23,0(r19)
   4226c:	9f000115 	stw	fp,4(r19)
   42270:	94800104 	addi	r18,r18,4
   42274:	8c400204 	addi	r17,r17,8
   42278:	9cc00204 	addi	r19,r19,8
   4227c:	957fe11e 	bne	r18,r21,42204 <__alt_data_end+0xfffc2204>
   42280:	dc809117 	ldw	r18,580(sp)
   42284:	003f0f06 	br	41ec4 <__alt_data_end+0xfffc1ec4>
   42288:	002f883a 	mov	r23,zero
   4228c:	0039883a 	mov	fp,zero
   42290:	003ff506 	br	42268 <__alt_data_end+0xfffc2268>
   42294:	480d883a 	mov	r6,r9
   42298:	180f883a 	mov	r7,r3
   4229c:	0009883a 	mov	r4,zero
   422a0:	014ffc34 	movhi	r5,16368
   422a4:	00455b40 	call	455b4 <__subdf3>
   422a8:	102b883a 	mov	r21,r2
   422ac:	1811883a 	mov	r8,r3
   422b0:	a03f9b26 	beq	r20,zero,42120 <__alt_data_end+0xfffc2120>
   422b4:	d9809017 	ldw	r6,576(sp)
   422b8:	0009883a 	mov	r4,zero
   422bc:	014ffc34 	movhi	r5,16368
   422c0:	d8c09b15 	stw	r3,620(sp)
   422c4:	0042f380 	call	42f38 <scalbn>
   422c8:	da009b17 	ldw	r8,620(sp)
   422cc:	a809883a 	mov	r4,r21
   422d0:	100d883a 	mov	r6,r2
   422d4:	400b883a 	mov	r5,r8
   422d8:	180f883a 	mov	r7,r3
   422dc:	00455b40 	call	455b4 <__subdf3>
   422e0:	102b883a 	mov	r21,r2
   422e4:	1811883a 	mov	r8,r3
   422e8:	003f8d06 	br	42120 <__alt_data_end+0xfffc2120>
   422ec:	0005883a 	mov	r2,zero
   422f0:	0007883a 	mov	r3,zero
   422f4:	003eac06 	br	41da8 <__alt_data_end+0xfffc1da8>
   422f8:	d8809017 	ldw	r2,576(sp)
   422fc:	1000121e 	bne	r2,zero,42348 <__kernel_rem_pio2+0x66c>
   42300:	90bfffc4 	addi	r2,r18,-1
   42304:	1085883a 	add	r2,r2,r2
   42308:	1085883a 	add	r2,r2,r2
   4230c:	d885883a 	add	r2,sp,r2
   42310:	14c07817 	ldw	r19,480(r2)
   42314:	9827d5fa 	srai	r19,r19,23
   42318:	003f5606 	br	42074 <__alt_data_end+0xfffc2074>
   4231c:	90bfffc4 	addi	r2,r18,-1
   42320:	1085883a 	add	r2,r2,r2
   42324:	1085883a 	add	r2,r2,r2
   42328:	d885883a 	add	r2,sp,r2
   4232c:	10807804 	addi	r2,r2,480
   42330:	11000017 	ldw	r4,0(r2)
   42334:	01402034 	movhi	r5,128
   42338:	297fffc4 	addi	r5,r5,-1
   4233c:	2148703a 	and	r4,r4,r5
   42340:	11000015 	stw	r4,0(r2)
   42344:	003f7406 	br	42118 <__alt_data_end+0xfffc2118>
   42348:	4809883a 	mov	r4,r9
   4234c:	180b883a 	mov	r5,r3
   42350:	000d883a 	mov	r6,zero
   42354:	01cff834 	movhi	r7,16352
   42358:	d8c09a15 	stw	r3,616(sp)
   4235c:	d8c09b15 	stw	r3,620(sp)
   42360:	da409915 	stw	r9,612(sp)
   42364:	0044dc00 	call	44dc0 <__gedf2>
   42368:	d8c09a17 	ldw	r3,616(sp)
   4236c:	da009b17 	ldw	r8,620(sp)
   42370:	da409917 	ldw	r9,612(sp)
   42374:	1000920e 	bge	r2,zero,425c0 <__kernel_rem_pio2+0x8e4>
   42378:	0027883a 	mov	r19,zero
   4237c:	003f6806 	br	42120 <__alt_data_end+0xfffc2120>
   42380:	002d883a 	mov	r22,zero
   42384:	002b883a 	mov	r21,zero
   42388:	003eb006 	br	41e4c <__alt_data_end+0xfffc1e4c>
   4238c:	2945883a 	add	r2,r5,r5
   42390:	da009017 	ldw	r8,576(sp)
   42394:	1085883a 	add	r2,r2,r2
   42398:	d885883a 	add	r2,sp,r2
   4239c:	10807817 	ldw	r2,480(r2)
   423a0:	423ffa04 	addi	r8,r8,-24
   423a4:	dc409115 	stw	r17,580(sp)
   423a8:	dcc08d15 	stw	r19,564(sp)
   423ac:	da009015 	stw	r8,576(sp)
   423b0:	dd809417 	ldw	r22,592(sp)
   423b4:	2823883a 	mov	r17,r5
   423b8:	10000e1e 	bne	r2,zero,423f4 <__kernel_rem_pio2+0x718>
   423bc:	00900034 	movhi	r2,16384
   423c0:	10bfffc4 	addi	r2,r2,-1
   423c4:	2885883a 	add	r2,r5,r2
   423c8:	1085883a 	add	r2,r2,r2
   423cc:	d8c07804 	addi	r3,sp,480
   423d0:	1085883a 	add	r2,r2,r2
   423d4:	1885883a 	add	r2,r3,r2
   423d8:	4007883a 	mov	r3,r8
   423dc:	10bfff04 	addi	r2,r2,-4
   423e0:	11000117 	ldw	r4,4(r2)
   423e4:	8c7fffc4 	addi	r17,r17,-1
   423e8:	18fffa04 	addi	r3,r3,-24
   423ec:	203ffb26 	beq	r4,zero,423dc <__alt_data_end+0xfffc23dc>
   423f0:	d8c09015 	stw	r3,576(sp)
   423f4:	d9809017 	ldw	r6,576(sp)
   423f8:	0009883a 	mov	r4,zero
   423fc:	014ffc34 	movhi	r5,16368
   42400:	0042f380 	call	42f38 <scalbn>
   42404:	1029883a 	mov	r20,r2
   42408:	182b883a 	mov	r21,r3
   4240c:	88018416 	blt	r17,zero,42a20 <__kernel_rem_pio2+0xd44>
   42410:	881090fa 	slli	r8,r17,3
   42414:	d8c07804 	addi	r3,sp,480
   42418:	da008e15 	stw	r8,568(sp)
   4241c:	d8808e17 	ldw	r2,568(sp)
   42420:	8c51883a 	add	r8,r17,r17
   42424:	4211883a 	add	r8,r8,r8
   42428:	d8a1883a 	add	r16,sp,r2
   4242c:	1a25883a 	add	r18,r3,r8
   42430:	da3ffe04 	addi	r8,sp,-8
   42434:	da008c15 	stw	r8,560(sp)
   42438:	8039883a 	mov	fp,r16
   4243c:	91000017 	ldw	r4,0(r18)
   42440:	e73ffe04 	addi	fp,fp,-8
   42444:	94bfff04 	addi	r18,r18,-4
   42448:	0045f300 	call	45f30 <__floatsidf>
   4244c:	a00d883a 	mov	r6,r20
   42450:	a80f883a 	mov	r7,r21
   42454:	1009883a 	mov	r4,r2
   42458:	180b883a 	mov	r5,r3
   4245c:	0044e9c0 	call	44e9c <__muldf3>
   42460:	a009883a 	mov	r4,r20
   42464:	a80b883a 	mov	r5,r21
   42468:	e0800215 	stw	r2,8(fp)
   4246c:	e0c00315 	stw	r3,12(fp)
   42470:	000d883a 	mov	r6,zero
   42474:	01cf9c34 	movhi	r7,15984
   42478:	0044e9c0 	call	44e9c <__muldf3>
   4247c:	da008c17 	ldw	r8,560(sp)
   42480:	1029883a 	mov	r20,r2
   42484:	182b883a 	mov	r21,r3
   42488:	e23fec1e 	bne	fp,r8,4243c <__alt_data_end+0xfffc243c>
   4248c:	0029883a 	mov	r20,zero
   42490:	b0004f16 	blt	r22,zero,425d0 <__kernel_rem_pio2+0x8f4>
   42494:	05400174 	movhi	r21,5
   42498:	014ffe74 	movhi	r5,16377
   4249c:	ad4e8804 	addi	r21,r21,14880
   424a0:	8027883a 	mov	r19,r16
   424a4:	01100034 	movhi	r4,16384
   424a8:	29487ec4 	addi	r5,r5,8699
   424ac:	0039883a 	mov	fp,zero
   424b0:	002f883a 	mov	r23,zero
   424b4:	0025883a 	mov	r18,zero
   424b8:	00000506 	br	424d0 <__kernel_rem_pio2+0x7f4>
   424bc:	9cc00204 	addi	r19,r19,8
   424c0:	a4800f16 	blt	r20,r18,42500 <__kernel_rem_pio2+0x824>
   424c4:	a9000017 	ldw	r4,0(r21)
   424c8:	a9400117 	ldw	r5,4(r21)
   424cc:	ad400204 	addi	r21,r21,8
   424d0:	99800017 	ldw	r6,0(r19)
   424d4:	99c00117 	ldw	r7,4(r19)
   424d8:	94800044 	addi	r18,r18,1
   424dc:	0044e9c0 	call	44e9c <__muldf3>
   424e0:	e009883a 	mov	r4,fp
   424e4:	b80b883a 	mov	r5,r23
   424e8:	100d883a 	mov	r6,r2
   424ec:	180f883a 	mov	r7,r3
   424f0:	004448c0 	call	4448c <__adddf3>
   424f4:	1039883a 	mov	fp,r2
   424f8:	182f883a 	mov	r23,r3
   424fc:	b4bfef0e 	bge	r22,r18,424bc <__alt_data_end+0xfffc24bc>
   42500:	a00490fa 	slli	r2,r20,3
   42504:	da008c17 	ldw	r8,560(sp)
   42508:	843ffe04 	addi	r16,r16,-8
   4250c:	d885883a 	add	r2,sp,r2
   42510:	10802804 	addi	r2,r2,160
   42514:	17000015 	stw	fp,0(r2)
   42518:	15c00115 	stw	r23,4(r2)
   4251c:	a5000044 	addi	r20,r20,1
   42520:	823fdb1e 	bne	r16,r8,42490 <__alt_data_end+0xfffc2490>
   42524:	da00a617 	ldw	r8,664(sp)
   42528:	00800084 	movi	r2,2
   4252c:	12006616 	blt	r2,r8,426c8 <__kernel_rem_pio2+0x9ec>
   42530:	0200de16 	blt	zero,r8,428ac <__kernel_rem_pio2+0xbd0>
   42534:	4000141e 	bne	r8,zero,42588 <__kernel_rem_pio2+0x8ac>
   42538:	da008e17 	ldw	r8,568(sp)
   4253c:	d8802804 	addi	r2,sp,160
   42540:	0007883a 	mov	r3,zero
   42544:	1225883a 	add	r18,r2,r8
   42548:	043fffc4 	movi	r16,-1
   4254c:	0005883a 	mov	r2,zero
   42550:	91800017 	ldw	r6,0(r18)
   42554:	91c00117 	ldw	r7,4(r18)
   42558:	1009883a 	mov	r4,r2
   4255c:	180b883a 	mov	r5,r3
   42560:	8c7fffc4 	addi	r17,r17,-1
   42564:	004448c0 	call	4448c <__adddf3>
   42568:	94bffe04 	addi	r18,r18,-8
   4256c:	8c3ff81e 	bne	r17,r16,42550 <__alt_data_end+0xfffc2550>
   42570:	da008d17 	ldw	r8,564(sp)
   42574:	40000126 	beq	r8,zero,4257c <__kernel_rem_pio2+0x8a0>
   42578:	18e0003c 	xorhi	r3,r3,32768
   4257c:	da008f17 	ldw	r8,572(sp)
   42580:	40800015 	stw	r2,0(r8)
   42584:	40c00115 	stw	r3,4(r8)
   42588:	da009117 	ldw	r8,580(sp)
   4258c:	408001cc 	andi	r2,r8,7
   42590:	dfc0a517 	ldw	ra,660(sp)
   42594:	df00a417 	ldw	fp,656(sp)
   42598:	ddc0a317 	ldw	r23,652(sp)
   4259c:	dd80a217 	ldw	r22,648(sp)
   425a0:	dd40a117 	ldw	r21,644(sp)
   425a4:	dd00a017 	ldw	r20,640(sp)
   425a8:	dcc09f17 	ldw	r19,636(sp)
   425ac:	dc809e17 	ldw	r18,632(sp)
   425b0:	dc409d17 	ldw	r17,628(sp)
   425b4:	dc009c17 	ldw	r16,624(sp)
   425b8:	dec0a604 	addi	sp,sp,664
   425bc:	f800283a 	ret
   425c0:	8c400044 	addi	r17,r17,1
   425c4:	04810d0e 	bge	zero,r18,429fc <__kernel_rem_pio2+0xd20>
   425c8:	04c00084 	movi	r19,2
   425cc:	003eac06 	br	42080 <__alt_data_end+0xfffc2080>
   425d0:	0039883a 	mov	fp,zero
   425d4:	002f883a 	mov	r23,zero
   425d8:	003fc906 	br	42500 <__alt_data_end+0xfffc2500>
   425dc:	0029883a 	mov	r20,zero
   425e0:	003ebd06 	br	420d8 <__alt_data_end+0xfffc20d8>
   425e4:	05000044 	movi	r20,1
   425e8:	003eef06 	br	421a8 <__alt_data_end+0xfffc21a8>
   425ec:	4029883a 	mov	r20,r8
   425f0:	da009017 	ldw	r8,576(sp)
   425f4:	a809883a 	mov	r4,r21
   425f8:	a00b883a 	mov	r5,r20
   425fc:	020dc83a 	sub	r6,zero,r8
   42600:	dc409115 	stw	r17,580(sp)
   42604:	dd809417 	ldw	r22,592(sp)
   42608:	dcc08d15 	stw	r19,564(sp)
   4260c:	0042f380 	call	42f38 <scalbn>
   42610:	000d883a 	mov	r6,zero
   42614:	01d05c34 	movhi	r7,16752
   42618:	1009883a 	mov	r4,r2
   4261c:	180b883a 	mov	r5,r3
   42620:	102b883a 	mov	r21,r2
   42624:	1823883a 	mov	r17,r3
   42628:	0044dc00 	call	44dc0 <__gedf2>
   4262c:	1000e916 	blt	r2,zero,429d4 <__kernel_rem_pio2+0xcf8>
   42630:	000d883a 	mov	r6,zero
   42634:	01cf9c34 	movhi	r7,15984
   42638:	880b883a 	mov	r5,r17
   4263c:	a809883a 	mov	r4,r21
   42640:	0044e9c0 	call	44e9c <__muldf3>
   42644:	180b883a 	mov	r5,r3
   42648:	1009883a 	mov	r4,r2
   4264c:	0045eb00 	call	45eb0 <__fixdfsi>
   42650:	1029883a 	mov	r20,r2
   42654:	9485883a 	add	r2,r18,r18
   42658:	1085883a 	add	r2,r2,r2
   4265c:	a009883a 	mov	r4,r20
   42660:	d8a1883a 	add	r16,sp,r2
   42664:	0045f300 	call	45f30 <__floatsidf>
   42668:	000d883a 	mov	r6,zero
   4266c:	01d05c34 	movhi	r7,16752
   42670:	1009883a 	mov	r4,r2
   42674:	180b883a 	mov	r5,r3
   42678:	0044e9c0 	call	44e9c <__muldf3>
   4267c:	880b883a 	mov	r5,r17
   42680:	100d883a 	mov	r6,r2
   42684:	180f883a 	mov	r7,r3
   42688:	a809883a 	mov	r4,r21
   4268c:	00455b40 	call	455b4 <__subdf3>
   42690:	180b883a 	mov	r5,r3
   42694:	1009883a 	mov	r4,r2
   42698:	0045eb00 	call	45eb0 <__fixdfsi>
   4269c:	da009017 	ldw	r8,576(sp)
   426a0:	94400044 	addi	r17,r18,1
   426a4:	8c47883a 	add	r3,r17,r17
   426a8:	84007804 	addi	r16,r16,480
   426ac:	18c7883a 	add	r3,r3,r3
   426b0:	80800015 	stw	r2,0(r16)
   426b4:	d8c7883a 	add	r3,sp,r3
   426b8:	42000604 	addi	r8,r8,24
   426bc:	da009015 	stw	r8,576(sp)
   426c0:	1d007815 	stw	r20,480(r3)
   426c4:	003f4b06 	br	423f4 <__alt_data_end+0xfffc23f4>
   426c8:	da00a617 	ldw	r8,664(sp)
   426cc:	008000c4 	movi	r2,3
   426d0:	40bfad1e 	bne	r8,r2,42588 <__alt_data_end+0xfffc2588>
   426d4:	0440bc0e 	bge	zero,r17,429c8 <__kernel_rem_pio2+0xcec>
   426d8:	da008e17 	ldw	r8,568(sp)
   426dc:	882090fa 	slli	r16,r17,3
   426e0:	dd402804 	addi	r21,sp,160
   426e4:	da05883a 	add	r2,sp,r8
   426e8:	10802804 	addi	r2,r2,160
   426ec:	15c00017 	ldw	r23,0(r2)
   426f0:	15800117 	ldw	r22,4(r2)
   426f4:	8029883a 	mov	r20,r16
   426f8:	843ffe04 	addi	r16,r16,-8
   426fc:	ac21883a 	add	r16,r21,r16
   42700:	ad29883a 	add	r20,r21,r20
   42704:	dac02604 	addi	r11,sp,152
   42708:	8811883a 	mov	r8,r17
   4270c:	84400017 	ldw	r17,0(r16)
   42710:	87000117 	ldw	fp,4(r16)
   42714:	b80d883a 	mov	r6,r23
   42718:	b00f883a 	mov	r7,r22
   4271c:	8809883a 	mov	r4,r17
   42720:	e00b883a 	mov	r5,fp
   42724:	da009b15 	stw	r8,620(sp)
   42728:	dac09915 	stw	r11,612(sp)
   4272c:	004448c0 	call	4448c <__adddf3>
   42730:	100d883a 	mov	r6,r2
   42734:	180f883a 	mov	r7,r3
   42738:	8809883a 	mov	r4,r17
   4273c:	e00b883a 	mov	r5,fp
   42740:	1027883a 	mov	r19,r2
   42744:	1825883a 	mov	r18,r3
   42748:	00455b40 	call	455b4 <__subdf3>
   4274c:	b80d883a 	mov	r6,r23
   42750:	b00f883a 	mov	r7,r22
   42754:	1009883a 	mov	r4,r2
   42758:	180b883a 	mov	r5,r3
   4275c:	004448c0 	call	4448c <__adddf3>
   42760:	dac09917 	ldw	r11,612(sp)
   42764:	a0800015 	stw	r2,0(r20)
   42768:	a0c00115 	stw	r3,4(r20)
   4276c:	84c00015 	stw	r19,0(r16)
   42770:	84800115 	stw	r18,4(r16)
   42774:	843ffe04 	addi	r16,r16,-8
   42778:	a53ffe04 	addi	r20,r20,-8
   4277c:	982f883a 	mov	r23,r19
   42780:	902d883a 	mov	r22,r18
   42784:	da009b17 	ldw	r8,620(sp)
   42788:	5c3fe01e 	bne	r11,r16,4270c <__alt_data_end+0xfffc270c>
   4278c:	00800044 	movi	r2,1
   42790:	12008d0e 	bge	r2,r8,429c8 <__kernel_rem_pio2+0xcec>
   42794:	402090fa 	slli	r16,r8,3
   42798:	da008e17 	ldw	r8,568(sp)
   4279c:	8023883a 	mov	r17,r16
   427a0:	da05883a 	add	r2,sp,r8
   427a4:	10802804 	addi	r2,r2,160
   427a8:	15800017 	ldw	r22,0(r2)
   427ac:	15000117 	ldw	r20,4(r2)
   427b0:	ac63883a 	add	r17,r21,r17
   427b4:	843ffe04 	addi	r16,r16,-8
   427b8:	ac21883a 	add	r16,r21,r16
   427bc:	8825883a 	mov	r18,r17
   427c0:	8811883a 	mov	r8,r17
   427c4:	84400017 	ldw	r17,0(r16)
   427c8:	87000117 	ldw	fp,4(r16)
   427cc:	b009883a 	mov	r4,r22
   427d0:	a00b883a 	mov	r5,r20
   427d4:	880d883a 	mov	r6,r17
   427d8:	e00f883a 	mov	r7,fp
   427dc:	da009b15 	stw	r8,620(sp)
   427e0:	004448c0 	call	4448c <__adddf3>
   427e4:	100d883a 	mov	r6,r2
   427e8:	180f883a 	mov	r7,r3
   427ec:	8809883a 	mov	r4,r17
   427f0:	e00b883a 	mov	r5,fp
   427f4:	102f883a 	mov	r23,r2
   427f8:	1827883a 	mov	r19,r3
   427fc:	00455b40 	call	455b4 <__subdf3>
   42800:	b00d883a 	mov	r6,r22
   42804:	a00f883a 	mov	r7,r20
   42808:	1009883a 	mov	r4,r2
   4280c:	180b883a 	mov	r5,r3
   42810:	004448c0 	call	4448c <__adddf3>
   42814:	90800015 	stw	r2,0(r18)
   42818:	90c00115 	stw	r3,4(r18)
   4281c:	85c00015 	stw	r23,0(r16)
   42820:	84c00115 	stw	r19,4(r16)
   42824:	843ffe04 	addi	r16,r16,-8
   42828:	94bffe04 	addi	r18,r18,-8
   4282c:	b82d883a 	mov	r22,r23
   42830:	9829883a 	mov	r20,r19
   42834:	da009b17 	ldw	r8,620(sp)
   42838:	ac3fe21e 	bne	r21,r16,427c4 <__alt_data_end+0xfffc27c4>
   4283c:	4023883a 	mov	r17,r8
   42840:	dc002a04 	addi	r16,sp,168
   42844:	0005883a 	mov	r2,zero
   42848:	0007883a 	mov	r3,zero
   4284c:	89800017 	ldw	r6,0(r17)
   42850:	89c00117 	ldw	r7,4(r17)
   42854:	1009883a 	mov	r4,r2
   42858:	8c7ffe04 	addi	r17,r17,-8
   4285c:	180b883a 	mov	r5,r3
   42860:	004448c0 	call	4448c <__adddf3>
   42864:	847ff91e 	bne	r16,r17,4284c <__alt_data_end+0xfffc284c>
   42868:	da008d17 	ldw	r8,564(sp)
   4286c:	40004726 	beq	r8,zero,4298c <__kernel_rem_pio2+0xcb0>
   42870:	d9002b17 	ldw	r4,172(sp)
   42874:	d9402917 	ldw	r5,164(sp)
   42878:	d9802a17 	ldw	r6,168(sp)
   4287c:	da008f17 	ldw	r8,572(sp)
   42880:	d9c02817 	ldw	r7,160(sp)
   42884:	2960003c 	xorhi	r5,r5,32768
   42888:	2120003c 	xorhi	r4,r4,32768
   4288c:	18e0003c 	xorhi	r3,r3,32768
   42890:	41c00015 	stw	r7,0(r8)
   42894:	41400115 	stw	r5,4(r8)
   42898:	41800215 	stw	r6,8(r8)
   4289c:	41000315 	stw	r4,12(r8)
   428a0:	40800415 	stw	r2,16(r8)
   428a4:	40c00515 	stw	r3,20(r8)
   428a8:	003f3706 	br	42588 <__alt_data_end+0xfffc2588>
   428ac:	da008e17 	ldw	r8,568(sp)
   428b0:	d8802804 	addi	r2,sp,160
   428b4:	dc002604 	addi	r16,sp,152
   428b8:	1225883a 	add	r18,r2,r8
   428bc:	0007883a 	mov	r3,zero
   428c0:	0005883a 	mov	r2,zero
   428c4:	91800017 	ldw	r6,0(r18)
   428c8:	91c00117 	ldw	r7,4(r18)
   428cc:	1009883a 	mov	r4,r2
   428d0:	94bffe04 	addi	r18,r18,-8
   428d4:	180b883a 	mov	r5,r3
   428d8:	004448c0 	call	4448c <__adddf3>
   428dc:	943ff91e 	bne	r18,r16,428c4 <__alt_data_end+0xfffc28c4>
   428e0:	da008d17 	ldw	r8,564(sp)
   428e4:	d9002817 	ldw	r4,160(sp)
   428e8:	d9402917 	ldw	r5,164(sp)
   428ec:	40001a26 	beq	r8,zero,42958 <__kernel_rem_pio2+0xc7c>
   428f0:	da008f17 	ldw	r8,572(sp)
   428f4:	19a0003c 	xorhi	r6,r3,32768
   428f8:	180f883a 	mov	r7,r3
   428fc:	41800115 	stw	r6,4(r8)
   42900:	40800015 	stw	r2,0(r8)
   42904:	100d883a 	mov	r6,r2
   42908:	00455b40 	call	455b4 <__subdf3>
   4290c:	04400c0e 	bge	zero,r17,42940 <__kernel_rem_pio2+0xc64>
   42910:	dc002a04 	addi	r16,sp,168
   42914:	04800044 	movi	r18,1
   42918:	81800017 	ldw	r6,0(r16)
   4291c:	81c00117 	ldw	r7,4(r16)
   42920:	1009883a 	mov	r4,r2
   42924:	180b883a 	mov	r5,r3
   42928:	94800044 	addi	r18,r18,1
   4292c:	004448c0 	call	4448c <__adddf3>
   42930:	84000204 	addi	r16,r16,8
   42934:	8cbff80e 	bge	r17,r18,42918 <__alt_data_end+0xfffc2918>
   42938:	da008d17 	ldw	r8,564(sp)
   4293c:	40004226 	beq	r8,zero,42a48 <__kernel_rem_pio2+0xd6c>
   42940:	da008f17 	ldw	r8,572(sp)
   42944:	1009883a 	mov	r4,r2
   42948:	18a0003c 	xorhi	r2,r3,32768
   4294c:	41000215 	stw	r4,8(r8)
   42950:	40800315 	stw	r2,12(r8)
   42954:	003f0c06 	br	42588 <__alt_data_end+0xfffc2588>
   42958:	da008f17 	ldw	r8,572(sp)
   4295c:	100d883a 	mov	r6,r2
   42960:	180f883a 	mov	r7,r3
   42964:	40800015 	stw	r2,0(r8)
   42968:	40c00115 	stw	r3,4(r8)
   4296c:	00455b40 	call	455b4 <__subdf3>
   42970:	047fe716 	blt	zero,r17,42910 <__alt_data_end+0xfffc2910>
   42974:	da008f17 	ldw	r8,572(sp)
   42978:	1009883a 	mov	r4,r2
   4297c:	1805883a 	mov	r2,r3
   42980:	41000215 	stw	r4,8(r8)
   42984:	40800315 	stw	r2,12(r8)
   42988:	003eff06 	br	42588 <__alt_data_end+0xfffc2588>
   4298c:	da008f17 	ldw	r8,572(sp)
   42990:	d9802817 	ldw	r6,160(sp)
   42994:	d9402a17 	ldw	r5,168(sp)
   42998:	d9002b17 	ldw	r4,172(sp)
   4299c:	41800015 	stw	r6,0(r8)
   429a0:	d9802917 	ldw	r6,164(sp)
   429a4:	41400215 	stw	r5,8(r8)
   429a8:	41000315 	stw	r4,12(r8)
   429ac:	41800115 	stw	r6,4(r8)
   429b0:	40800415 	stw	r2,16(r8)
   429b4:	40c00515 	stw	r3,20(r8)
   429b8:	003ef306 	br	42588 <__alt_data_end+0xfffc2588>
   429bc:	da00a617 	ldw	r8,664(sp)
   429c0:	008000c4 	movi	r2,3
   429c4:	40bef01e 	bne	r8,r2,42588 <__alt_data_end+0xfffc2588>
   429c8:	0005883a 	mov	r2,zero
   429cc:	0007883a 	mov	r3,zero
   429d0:	003fa506 	br	42868 <__alt_data_end+0xfffc2868>
   429d4:	9485883a 	add	r2,r18,r18
   429d8:	1085883a 	add	r2,r2,r2
   429dc:	d8a1883a 	add	r16,sp,r2
   429e0:	880b883a 	mov	r5,r17
   429e4:	a809883a 	mov	r4,r21
   429e8:	84007804 	addi	r16,r16,480
   429ec:	0045eb00 	call	45eb0 <__fixdfsi>
   429f0:	80800015 	stw	r2,0(r16)
   429f4:	9023883a 	mov	r17,r18
   429f8:	003e7e06 	br	423f4 <__alt_data_end+0xfffc23f4>
   429fc:	a80d883a 	mov	r6,r21
   42a00:	400f883a 	mov	r7,r8
   42a04:	0009883a 	mov	r4,zero
   42a08:	014ffc34 	movhi	r5,16368
   42a0c:	00455b40 	call	455b4 <__subdf3>
   42a10:	102b883a 	mov	r21,r2
   42a14:	1811883a 	mov	r8,r3
   42a18:	04c00084 	movi	r19,2
   42a1c:	003dc006 	br	42120 <__alt_data_end+0xfffc2120>
   42a20:	da00a617 	ldw	r8,664(sp)
   42a24:	00800084 	movi	r2,2
   42a28:	123fe416 	blt	r2,r8,429bc <__alt_data_end+0xfffc29bc>
   42a2c:	02000c16 	blt	zero,r8,42a60 <__kernel_rem_pio2+0xd84>
   42a30:	403ed51e 	bne	r8,zero,42588 <__alt_data_end+0xfffc2588>
   42a34:	0005883a 	mov	r2,zero
   42a38:	0007883a 	mov	r3,zero
   42a3c:	003ecc06 	br	42570 <__alt_data_end+0xfffc2570>
   42a40:	d8009215 	stw	zero,584(sp)
   42a44:	003cc306 	br	41d54 <__alt_data_end+0xfffc1d54>
   42a48:	da008f17 	ldw	r8,572(sp)
   42a4c:	1009883a 	mov	r4,r2
   42a50:	1805883a 	mov	r2,r3
   42a54:	41000215 	stw	r4,8(r8)
   42a58:	40800315 	stw	r2,12(r8)
   42a5c:	003eca06 	br	42588 <__alt_data_end+0xfffc2588>
   42a60:	0005883a 	mov	r2,zero
   42a64:	0007883a 	mov	r3,zero
   42a68:	003f9d06 	br	428e0 <__alt_data_end+0xfffc28e0>

00042a6c <__kernel_sin>:
   42a6c:	00a00034 	movhi	r2,32768
   42a70:	defff404 	addi	sp,sp,-48
   42a74:	10bfffc4 	addi	r2,r2,-1
   42a78:	00cf9034 	movhi	r3,15936
   42a7c:	ddc00915 	stw	r23,36(sp)
   42a80:	dd800815 	stw	r22,32(sp)
   42a84:	dc400315 	stw	r17,12(sp)
   42a88:	dc000215 	stw	r16,8(sp)
   42a8c:	dfc00b15 	stw	ra,44(sp)
   42a90:	df000a15 	stw	fp,40(sp)
   42a94:	dd400715 	stw	r21,28(sp)
   42a98:	dd000615 	stw	r20,24(sp)
   42a9c:	dcc00515 	stw	r19,20(sp)
   42aa0:	dc800415 	stw	r18,16(sp)
   42aa4:	2884703a 	and	r2,r5,r2
   42aa8:	18ffffc4 	addi	r3,r3,-1
   42aac:	2821883a 	mov	r16,r5
   42ab0:	2023883a 	mov	r17,r4
   42ab4:	302f883a 	mov	r23,r6
   42ab8:	382d883a 	mov	r22,r7
   42abc:	18800216 	blt	r3,r2,42ac8 <__kernel_sin+0x5c>
   42ac0:	0045eb00 	call	45eb0 <__fixdfsi>
   42ac4:	10009926 	beq	r2,zero,42d2c <__kernel_sin+0x2c0>
   42ac8:	880d883a 	mov	r6,r17
   42acc:	800f883a 	mov	r7,r16
   42ad0:	8809883a 	mov	r4,r17
   42ad4:	800b883a 	mov	r5,r16
   42ad8:	0044e9c0 	call	44e9c <__muldf3>
   42adc:	100d883a 	mov	r6,r2
   42ae0:	180f883a 	mov	r7,r3
   42ae4:	8809883a 	mov	r4,r17
   42ae8:	800b883a 	mov	r5,r16
   42aec:	1027883a 	mov	r19,r2
   42af0:	1825883a 	mov	r18,r3
   42af4:	0044e9c0 	call	44e9c <__muldf3>
   42af8:	0196b434 	movhi	r6,23248
   42afc:	01cf79b4 	movhi	r7,15846
   42b00:	31b55f04 	addi	r6,r6,-10884
   42b04:	39f64e84 	addi	r7,r7,-9926
   42b08:	9809883a 	mov	r4,r19
   42b0c:	900b883a 	mov	r5,r18
   42b10:	102b883a 	mov	r21,r2
   42b14:	1829883a 	mov	r20,r3
   42b18:	0044e9c0 	call	44e9c <__muldf3>
   42b1c:	01a28b34 	movhi	r6,35372
   42b20:	01cf96f4 	movhi	r7,15963
   42b24:	31a73ac4 	addi	r6,r6,-25365
   42b28:	39f97984 	addi	r7,r7,-6682
   42b2c:	1009883a 	mov	r4,r2
   42b30:	180b883a 	mov	r5,r3
   42b34:	00455b40 	call	455b4 <__subdf3>
   42b38:	980d883a 	mov	r6,r19
   42b3c:	900f883a 	mov	r7,r18
   42b40:	1009883a 	mov	r4,r2
   42b44:	180b883a 	mov	r5,r3
   42b48:	0044e9c0 	call	44e9c <__muldf3>
   42b4c:	0195ecb4 	movhi	r6,22450
   42b50:	01cfb1f4 	movhi	r7,16071
   42b54:	31bf9f44 	addi	r6,r6,-387
   42b58:	39c778c4 	addi	r7,r7,7651
   42b5c:	1009883a 	mov	r4,r2
   42b60:	180b883a 	mov	r5,r3
   42b64:	004448c0 	call	4448c <__adddf3>
   42b68:	980d883a 	mov	r6,r19
   42b6c:	900f883a 	mov	r7,r18
   42b70:	1009883a 	mov	r4,r2
   42b74:	180b883a 	mov	r5,r3
   42b78:	0044e9c0 	call	44e9c <__muldf3>
   42b7c:	01867074 	movhi	r6,6593
   42b80:	01cfcab4 	movhi	r7,16170
   42b84:	31987544 	addi	r6,r6,25045
   42b88:	39c06804 	addi	r7,r7,416
   42b8c:	1009883a 	mov	r4,r2
   42b90:	180b883a 	mov	r5,r3
   42b94:	00455b40 	call	455b4 <__subdf3>
   42b98:	980d883a 	mov	r6,r19
   42b9c:	900f883a 	mov	r7,r18
   42ba0:	1009883a 	mov	r4,r2
   42ba4:	180b883a 	mov	r5,r3
   42ba8:	0044e9c0 	call	44e9c <__muldf3>
   42bac:	01844474 	movhi	r6,4369
   42bb0:	01cfe074 	movhi	r7,16257
   42bb4:	31be2984 	addi	r6,r6,-1882
   42bb8:	39c44444 	addi	r7,r7,4369
   42bbc:	1009883a 	mov	r4,r2
   42bc0:	180b883a 	mov	r5,r3
   42bc4:	004448c0 	call	4448c <__adddf3>
   42bc8:	1011883a 	mov	r8,r2
   42bcc:	d8800c17 	ldw	r2,48(sp)
   42bd0:	1839883a 	mov	fp,r3
   42bd4:	10003e26 	beq	r2,zero,42cd0 <__kernel_sin+0x264>
   42bd8:	000d883a 	mov	r6,zero
   42bdc:	01cff834 	movhi	r7,16352
   42be0:	b809883a 	mov	r4,r23
   42be4:	b00b883a 	mov	r5,r22
   42be8:	da000015 	stw	r8,0(sp)
   42bec:	0044e9c0 	call	44e9c <__muldf3>
   42bf0:	da000017 	ldw	r8,0(sp)
   42bf4:	e00f883a 	mov	r7,fp
   42bf8:	a809883a 	mov	r4,r21
   42bfc:	400d883a 	mov	r6,r8
   42c00:	a00b883a 	mov	r5,r20
   42c04:	d8c00115 	stw	r3,4(sp)
   42c08:	d8800015 	stw	r2,0(sp)
   42c0c:	0044e9c0 	call	44e9c <__muldf3>
   42c10:	da800017 	ldw	r10,0(sp)
   42c14:	da400117 	ldw	r9,4(sp)
   42c18:	100d883a 	mov	r6,r2
   42c1c:	5009883a 	mov	r4,r10
   42c20:	480b883a 	mov	r5,r9
   42c24:	180f883a 	mov	r7,r3
   42c28:	00455b40 	call	455b4 <__subdf3>
   42c2c:	980d883a 	mov	r6,r19
   42c30:	900f883a 	mov	r7,r18
   42c34:	1009883a 	mov	r4,r2
   42c38:	180b883a 	mov	r5,r3
   42c3c:	0044e9c0 	call	44e9c <__muldf3>
   42c40:	b80d883a 	mov	r6,r23
   42c44:	b00f883a 	mov	r7,r22
   42c48:	1009883a 	mov	r4,r2
   42c4c:	180b883a 	mov	r5,r3
   42c50:	00455b40 	call	455b4 <__subdf3>
   42c54:	01955574 	movhi	r6,21845
   42c58:	01cff174 	movhi	r7,16325
   42c5c:	31955244 	addi	r6,r6,21833
   42c60:	39d55544 	addi	r7,r7,21845
   42c64:	a809883a 	mov	r4,r21
   42c68:	a00b883a 	mov	r5,r20
   42c6c:	1027883a 	mov	r19,r2
   42c70:	1825883a 	mov	r18,r3
   42c74:	0044e9c0 	call	44e9c <__muldf3>
   42c78:	100d883a 	mov	r6,r2
   42c7c:	180f883a 	mov	r7,r3
   42c80:	9809883a 	mov	r4,r19
   42c84:	900b883a 	mov	r5,r18
   42c88:	004448c0 	call	4448c <__adddf3>
   42c8c:	100d883a 	mov	r6,r2
   42c90:	180f883a 	mov	r7,r3
   42c94:	8809883a 	mov	r4,r17
   42c98:	800b883a 	mov	r5,r16
   42c9c:	00455b40 	call	455b4 <__subdf3>
   42ca0:	dfc00b17 	ldw	ra,44(sp)
   42ca4:	df000a17 	ldw	fp,40(sp)
   42ca8:	ddc00917 	ldw	r23,36(sp)
   42cac:	dd800817 	ldw	r22,32(sp)
   42cb0:	dd400717 	ldw	r21,28(sp)
   42cb4:	dd000617 	ldw	r20,24(sp)
   42cb8:	dcc00517 	ldw	r19,20(sp)
   42cbc:	dc800417 	ldw	r18,16(sp)
   42cc0:	dc400317 	ldw	r17,12(sp)
   42cc4:	dc000217 	ldw	r16,8(sp)
   42cc8:	dec00c04 	addi	sp,sp,48
   42ccc:	f800283a 	ret
   42cd0:	400d883a 	mov	r6,r8
   42cd4:	9809883a 	mov	r4,r19
   42cd8:	900b883a 	mov	r5,r18
   42cdc:	180f883a 	mov	r7,r3
   42ce0:	0044e9c0 	call	44e9c <__muldf3>
   42ce4:	01955574 	movhi	r6,21845
   42ce8:	01cff174 	movhi	r7,16325
   42cec:	31955244 	addi	r6,r6,21833
   42cf0:	39d55544 	addi	r7,r7,21845
   42cf4:	1009883a 	mov	r4,r2
   42cf8:	180b883a 	mov	r5,r3
   42cfc:	00455b40 	call	455b4 <__subdf3>
   42d00:	a80d883a 	mov	r6,r21
   42d04:	a00f883a 	mov	r7,r20
   42d08:	1009883a 	mov	r4,r2
   42d0c:	180b883a 	mov	r5,r3
   42d10:	0044e9c0 	call	44e9c <__muldf3>
   42d14:	880d883a 	mov	r6,r17
   42d18:	800f883a 	mov	r7,r16
   42d1c:	1009883a 	mov	r4,r2
   42d20:	180b883a 	mov	r5,r3
   42d24:	004448c0 	call	4448c <__adddf3>
   42d28:	003fdd06 	br	42ca0 <__alt_data_end+0xfffc2ca0>
   42d2c:	8805883a 	mov	r2,r17
   42d30:	8007883a 	mov	r3,r16
   42d34:	003fda06 	br	42ca0 <__alt_data_end+0xfffc2ca0>

00042d38 <fabs>:
   42d38:	00e00034 	movhi	r3,32768
   42d3c:	18ffffc4 	addi	r3,r3,-1
   42d40:	2005883a 	mov	r2,r4
   42d44:	28c6703a 	and	r3,r5,r3
   42d48:	f800283a 	ret

00042d4c <floor>:
   42d4c:	2811d53a 	srai	r8,r5,20
   42d50:	defffa04 	addi	sp,sp,-24
   42d54:	dcc00315 	stw	r19,12(sp)
   42d58:	4201ffcc 	andi	r8,r8,2047
   42d5c:	dc800215 	stw	r18,8(sp)
   42d60:	dc400115 	stw	r17,4(sp)
   42d64:	dc000015 	stw	r16,0(sp)
   42d68:	dfc00515 	stw	ra,20(sp)
   42d6c:	dd000415 	stw	r20,16(sp)
   42d70:	44bf0044 	addi	r18,r8,-1023
   42d74:	018004c4 	movi	r6,19
   42d78:	2821883a 	mov	r16,r5
   42d7c:	2005883a 	mov	r2,r4
   42d80:	280f883a 	mov	r7,r5
   42d84:	2827883a 	mov	r19,r5
   42d88:	2023883a 	mov	r17,r4
   42d8c:	34801916 	blt	r6,r18,42df4 <floor+0xa8>
   42d90:	90003c16 	blt	r18,zero,42e84 <floor+0x138>
   42d94:	05000434 	movhi	r20,16
   42d98:	a53fffc4 	addi	r20,r20,-1
   42d9c:	a4a9d83a 	sra	r20,r20,r18
   42da0:	2d0c703a 	and	r6,r5,r20
   42da4:	310cb03a 	or	r6,r6,r4
   42da8:	30001626 	beq	r6,zero,42e04 <floor+0xb8>
   42dac:	01a20034 	movhi	r6,34816
   42db0:	01df8e34 	movhi	r7,32312
   42db4:	319d6704 	addi	r6,r6,30108
   42db8:	39f90f04 	addi	r7,r7,-7108
   42dbc:	004448c0 	call	4448c <__adddf3>
   42dc0:	000d883a 	mov	r6,zero
   42dc4:	000f883a 	mov	r7,zero
   42dc8:	1009883a 	mov	r4,r2
   42dcc:	180b883a 	mov	r5,r3
   42dd0:	0044dc00 	call	44dc0 <__gedf2>
   42dd4:	0080040e 	bge	zero,r2,42de8 <floor+0x9c>
   42dd8:	80003c16 	blt	r16,zero,42ecc <floor+0x180>
   42ddc:	0520303a 	nor	r16,zero,r20
   42de0:	84e0703a 	and	r16,r16,r19
   42de4:	0023883a 	mov	r17,zero
   42de8:	8805883a 	mov	r2,r17
   42dec:	8007883a 	mov	r3,r16
   42df0:	00000506 	br	42e08 <floor+0xbc>
   42df4:	01800cc4 	movi	r6,51
   42df8:	34800b0e 	bge	r6,r18,42e28 <floor+0xdc>
   42dfc:	01810004 	movi	r6,1024
   42e00:	91802f26 	beq	r18,r6,42ec0 <floor+0x174>
   42e04:	3807883a 	mov	r3,r7
   42e08:	dfc00517 	ldw	ra,20(sp)
   42e0c:	dd000417 	ldw	r20,16(sp)
   42e10:	dcc00317 	ldw	r19,12(sp)
   42e14:	dc800217 	ldw	r18,8(sp)
   42e18:	dc400117 	ldw	r17,4(sp)
   42e1c:	dc000017 	ldw	r16,0(sp)
   42e20:	dec00604 	addi	sp,sp,24
   42e24:	f800283a 	ret
   42e28:	423efb44 	addi	r8,r8,-1043
   42e2c:	053fffc4 	movi	r20,-1
   42e30:	a228d83a 	srl	r20,r20,r8
   42e34:	250c703a 	and	r6,r4,r20
   42e38:	303ff226 	beq	r6,zero,42e04 <__alt_data_end+0xfffc2e04>
   42e3c:	01a20034 	movhi	r6,34816
   42e40:	01df8e34 	movhi	r7,32312
   42e44:	319d6704 	addi	r6,r6,30108
   42e48:	39f90f04 	addi	r7,r7,-7108
   42e4c:	004448c0 	call	4448c <__adddf3>
   42e50:	000d883a 	mov	r6,zero
   42e54:	000f883a 	mov	r7,zero
   42e58:	1009883a 	mov	r4,r2
   42e5c:	180b883a 	mov	r5,r3
   42e60:	0044dc00 	call	44dc0 <__gedf2>
   42e64:	00bfe00e 	bge	zero,r2,42de8 <__alt_data_end+0xfffc2de8>
   42e68:	80001c16 	blt	r16,zero,42edc <floor+0x190>
   42e6c:	0510303a 	nor	r8,zero,r20
   42e70:	9821883a 	mov	r16,r19
   42e74:	8a22703a 	and	r17,r17,r8
   42e78:	8805883a 	mov	r2,r17
   42e7c:	8007883a 	mov	r3,r16
   42e80:	003fe106 	br	42e08 <__alt_data_end+0xfffc2e08>
   42e84:	01a20034 	movhi	r6,34816
   42e88:	01df8e34 	movhi	r7,32312
   42e8c:	319d6704 	addi	r6,r6,30108
   42e90:	39f90f04 	addi	r7,r7,-7108
   42e94:	004448c0 	call	4448c <__adddf3>
   42e98:	000d883a 	mov	r6,zero
   42e9c:	000f883a 	mov	r7,zero
   42ea0:	1009883a 	mov	r4,r2
   42ea4:	180b883a 	mov	r5,r3
   42ea8:	0044dc00 	call	44dc0 <__gedf2>
   42eac:	00bfce0e 	bge	zero,r2,42de8 <__alt_data_end+0xfffc2de8>
   42eb0:	80001516 	blt	r16,zero,42f08 <floor+0x1bc>
   42eb4:	0023883a 	mov	r17,zero
   42eb8:	0021883a 	mov	r16,zero
   42ebc:	003fca06 	br	42de8 <__alt_data_end+0xfffc2de8>
   42ec0:	200d883a 	mov	r6,r4
   42ec4:	004448c0 	call	4448c <__adddf3>
   42ec8:	003fcf06 	br	42e08 <__alt_data_end+0xfffc2e08>
   42ecc:	00800434 	movhi	r2,16
   42ed0:	14a5d83a 	sra	r18,r2,r18
   42ed4:	84a7883a 	add	r19,r16,r18
   42ed8:	003fc006 	br	42ddc <__alt_data_end+0xfffc2ddc>
   42edc:	00800504 	movi	r2,20
   42ee0:	90801326 	beq	r18,r2,42f30 <floor+0x1e4>
   42ee4:	00800d04 	movi	r2,52
   42ee8:	14a5c83a 	sub	r18,r2,r18
   42eec:	00800044 	movi	r2,1
   42ef0:	1484983a 	sll	r2,r2,r18
   42ef4:	1445883a 	add	r2,r2,r17
   42ef8:	14400b2e 	bgeu	r2,r17,42f28 <floor+0x1dc>
   42efc:	84c00044 	addi	r19,r16,1
   42f00:	1023883a 	mov	r17,r2
   42f04:	003fd906 	br	42e6c <__alt_data_end+0xfffc2e6c>
   42f08:	00a00034 	movhi	r2,32768
   42f0c:	10bfffc4 	addi	r2,r2,-1
   42f10:	8084703a 	and	r2,r16,r2
   42f14:	1462b03a 	or	r17,r2,r17
   42f18:	883fb326 	beq	r17,zero,42de8 <__alt_data_end+0xfffc2de8>
   42f1c:	0023883a 	mov	r17,zero
   42f20:	042ffc34 	movhi	r16,49136
   42f24:	003fb006 	br	42de8 <__alt_data_end+0xfffc2de8>
   42f28:	1023883a 	mov	r17,r2
   42f2c:	003fcf06 	br	42e6c <__alt_data_end+0xfffc2e6c>
   42f30:	84c00044 	addi	r19,r16,1
   42f34:	003fcd06 	br	42e6c <__alt_data_end+0xfffc2e6c>

00042f38 <scalbn>:
   42f38:	2a1ffc2c 	andhi	r8,r5,32752
   42f3c:	4011d53a 	srai	r8,r8,20
   42f40:	defffe04 	addi	sp,sp,-8
   42f44:	dc000015 	stw	r16,0(sp)
   42f48:	dfc00115 	stw	ra,4(sp)
   42f4c:	280f883a 	mov	r7,r5
   42f50:	2015883a 	mov	r10,r4
   42f54:	3021883a 	mov	r16,r6
   42f58:	40001e1e 	bne	r8,zero,42fd4 <scalbn+0x9c>
   42f5c:	00a00034 	movhi	r2,32768
   42f60:	10bfffc4 	addi	r2,r2,-1
   42f64:	2884703a 	and	r2,r5,r2
   42f68:	1104b03a 	or	r2,r2,r4
   42f6c:	10002226 	beq	r2,zero,42ff8 <scalbn+0xc0>
   42f70:	01d0d434 	movhi	r7,17232
   42f74:	000d883a 	mov	r6,zero
   42f78:	0044e9c0 	call	44e9c <__muldf3>
   42f7c:	013ffff4 	movhi	r4,65535
   42f80:	210f2c04 	addi	r4,r4,15536
   42f84:	1015883a 	mov	r10,r2
   42f88:	180f883a 	mov	r7,r3
   42f8c:	81002a16 	blt	r16,r4,43038 <scalbn+0x100>
   42f90:	191ffc2c 	andhi	r4,r3,32752
   42f94:	2009d53a 	srai	r4,r4,20
   42f98:	223ff284 	addi	r8,r4,-54
   42f9c:	8211883a 	add	r8,r16,r8
   42fa0:	0081ff84 	movi	r2,2046
   42fa4:	12002f16 	blt	r2,r8,43064 <scalbn+0x12c>
   42fa8:	0200190e 	bge	zero,r8,43010 <scalbn+0xd8>
   42fac:	4010953a 	slli	r8,r8,20
   42fb0:	01600434 	movhi	r5,32784
   42fb4:	297fffc4 	addi	r5,r5,-1
   42fb8:	194e703a 	and	r7,r3,r5
   42fbc:	5005883a 	mov	r2,r10
   42fc0:	3a06b03a 	or	r3,r7,r8
   42fc4:	dfc00117 	ldw	ra,4(sp)
   42fc8:	dc000017 	ldw	r16,0(sp)
   42fcc:	dec00204 	addi	sp,sp,8
   42fd0:	f800283a 	ret
   42fd4:	0081ffc4 	movi	r2,2047
   42fd8:	2807883a 	mov	r3,r5
   42fdc:	40bfef1e 	bne	r8,r2,42f9c <__alt_data_end+0xfffc2f9c>
   42fe0:	200d883a 	mov	r6,r4
   42fe4:	004448c0 	call	4448c <__adddf3>
   42fe8:	dfc00117 	ldw	ra,4(sp)
   42fec:	dc000017 	ldw	r16,0(sp)
   42ff0:	dec00204 	addi	sp,sp,8
   42ff4:	f800283a 	ret
   42ff8:	2005883a 	mov	r2,r4
   42ffc:	2807883a 	mov	r3,r5
   43000:	dfc00117 	ldw	ra,4(sp)
   43004:	dc000017 	ldw	r16,0(sp)
   43008:	dec00204 	addi	sp,sp,8
   4300c:	f800283a 	ret
   43010:	00bff2c4 	movi	r2,-53
   43014:	4080240e 	bge	r8,r2,430a8 <scalbn+0x170>
   43018:	00b0d414 	movui	r2,50000
   4301c:	14001116 	blt	r2,r16,43064 <scalbn+0x12c>
   43020:	0130be74 	movhi	r4,49913
   43024:	01406974 	movhi	r5,421
   43028:	213cd644 	addi	r4,r4,-3239
   4302c:	295b87c4 	addi	r5,r5,28191
   43030:	500d883a 	mov	r6,r10
   43034:	00430d40 	call	430d4 <copysign>
   43038:	01b0be74 	movhi	r6,49913
   4303c:	01c06974 	movhi	r7,421
   43040:	31bcd644 	addi	r6,r6,-3239
   43044:	39db87c4 	addi	r7,r7,28191
   43048:	1009883a 	mov	r4,r2
   4304c:	180b883a 	mov	r5,r3
   43050:	0044e9c0 	call	44e9c <__muldf3>
   43054:	dfc00117 	ldw	ra,4(sp)
   43058:	dc000017 	ldw	r16,0(sp)
   4305c:	dec00204 	addi	sp,sp,8
   43060:	f800283a 	ret
   43064:	01220034 	movhi	r4,34816
   43068:	015f8e34 	movhi	r5,32312
   4306c:	500d883a 	mov	r6,r10
   43070:	211d6704 	addi	r4,r4,30108
   43074:	29790f04 	addi	r5,r5,-7108
   43078:	00430d40 	call	430d4 <copysign>
   4307c:	01a20034 	movhi	r6,34816
   43080:	01df8e34 	movhi	r7,32312
   43084:	319d6704 	addi	r6,r6,30108
   43088:	39f90f04 	addi	r7,r7,-7108
   4308c:	1009883a 	mov	r4,r2
   43090:	180b883a 	mov	r5,r3
   43094:	0044e9c0 	call	44e9c <__muldf3>
   43098:	dfc00117 	ldw	ra,4(sp)
   4309c:	dc000017 	ldw	r16,0(sp)
   430a0:	dec00204 	addi	sp,sp,8
   430a4:	f800283a 	ret
   430a8:	42000d84 	addi	r8,r8,54
   430ac:	4012953a 	slli	r9,r8,20
   430b0:	01e00434 	movhi	r7,32784
   430b4:	39ffffc4 	addi	r7,r7,-1
   430b8:	19ca703a 	and	r5,r3,r7
   430bc:	000d883a 	mov	r6,zero
   430c0:	01cf2434 	movhi	r7,15504
   430c4:	5009883a 	mov	r4,r10
   430c8:	494ab03a 	or	r5,r9,r5
   430cc:	0044e9c0 	call	44e9c <__muldf3>
   430d0:	003fbc06 	br	42fc4 <__alt_data_end+0xfffc2fc4>

000430d4 <copysign>:
   430d4:	2005883a 	mov	r2,r4
   430d8:	01200034 	movhi	r4,32768
   430dc:	213fffc4 	addi	r4,r4,-1
   430e0:	38e0002c 	andhi	r3,r7,32768
   430e4:	290a703a 	and	r5,r5,r4
   430e8:	28c6b03a 	or	r3,r5,r3
   430ec:	f800283a 	ret

000430f0 <__divsi3>:
   430f0:	20001b16 	blt	r4,zero,43160 <__divsi3+0x70>
   430f4:	000f883a 	mov	r7,zero
   430f8:	28001616 	blt	r5,zero,43154 <__divsi3+0x64>
   430fc:	200d883a 	mov	r6,r4
   43100:	29001a2e 	bgeu	r5,r4,4316c <__divsi3+0x7c>
   43104:	00800804 	movi	r2,32
   43108:	00c00044 	movi	r3,1
   4310c:	00000106 	br	43114 <__divsi3+0x24>
   43110:	10000d26 	beq	r2,zero,43148 <__divsi3+0x58>
   43114:	294b883a 	add	r5,r5,r5
   43118:	10bfffc4 	addi	r2,r2,-1
   4311c:	18c7883a 	add	r3,r3,r3
   43120:	293ffb36 	bltu	r5,r4,43110 <__alt_data_end+0xfffc3110>
   43124:	0005883a 	mov	r2,zero
   43128:	18000726 	beq	r3,zero,43148 <__divsi3+0x58>
   4312c:	0005883a 	mov	r2,zero
   43130:	31400236 	bltu	r6,r5,4313c <__divsi3+0x4c>
   43134:	314dc83a 	sub	r6,r6,r5
   43138:	10c4b03a 	or	r2,r2,r3
   4313c:	1806d07a 	srli	r3,r3,1
   43140:	280ad07a 	srli	r5,r5,1
   43144:	183ffa1e 	bne	r3,zero,43130 <__alt_data_end+0xfffc3130>
   43148:	38000126 	beq	r7,zero,43150 <__divsi3+0x60>
   4314c:	0085c83a 	sub	r2,zero,r2
   43150:	f800283a 	ret
   43154:	014bc83a 	sub	r5,zero,r5
   43158:	39c0005c 	xori	r7,r7,1
   4315c:	003fe706 	br	430fc <__alt_data_end+0xfffc30fc>
   43160:	0109c83a 	sub	r4,zero,r4
   43164:	01c00044 	movi	r7,1
   43168:	003fe306 	br	430f8 <__alt_data_end+0xfffc30f8>
   4316c:	00c00044 	movi	r3,1
   43170:	003fee06 	br	4312c <__alt_data_end+0xfffc312c>

00043174 <__modsi3>:
   43174:	20001716 	blt	r4,zero,431d4 <__modsi3+0x60>
   43178:	000f883a 	mov	r7,zero
   4317c:	2005883a 	mov	r2,r4
   43180:	28001216 	blt	r5,zero,431cc <__modsi3+0x58>
   43184:	2900162e 	bgeu	r5,r4,431e0 <__modsi3+0x6c>
   43188:	01800804 	movi	r6,32
   4318c:	00c00044 	movi	r3,1
   43190:	00000106 	br	43198 <__modsi3+0x24>
   43194:	30000a26 	beq	r6,zero,431c0 <__modsi3+0x4c>
   43198:	294b883a 	add	r5,r5,r5
   4319c:	31bfffc4 	addi	r6,r6,-1
   431a0:	18c7883a 	add	r3,r3,r3
   431a4:	293ffb36 	bltu	r5,r4,43194 <__alt_data_end+0xfffc3194>
   431a8:	18000526 	beq	r3,zero,431c0 <__modsi3+0x4c>
   431ac:	1806d07a 	srli	r3,r3,1
   431b0:	11400136 	bltu	r2,r5,431b8 <__modsi3+0x44>
   431b4:	1145c83a 	sub	r2,r2,r5
   431b8:	280ad07a 	srli	r5,r5,1
   431bc:	183ffb1e 	bne	r3,zero,431ac <__alt_data_end+0xfffc31ac>
   431c0:	38000126 	beq	r7,zero,431c8 <__modsi3+0x54>
   431c4:	0085c83a 	sub	r2,zero,r2
   431c8:	f800283a 	ret
   431cc:	014bc83a 	sub	r5,zero,r5
   431d0:	003fec06 	br	43184 <__alt_data_end+0xfffc3184>
   431d4:	0109c83a 	sub	r4,zero,r4
   431d8:	01c00044 	movi	r7,1
   431dc:	003fe706 	br	4317c <__alt_data_end+0xfffc317c>
   431e0:	00c00044 	movi	r3,1
   431e4:	003ff106 	br	431ac <__alt_data_end+0xfffc31ac>

000431e8 <__udivsi3>:
   431e8:	200d883a 	mov	r6,r4
   431ec:	2900152e 	bgeu	r5,r4,43244 <__udivsi3+0x5c>
   431f0:	28001416 	blt	r5,zero,43244 <__udivsi3+0x5c>
   431f4:	00800804 	movi	r2,32
   431f8:	00c00044 	movi	r3,1
   431fc:	00000206 	br	43208 <__udivsi3+0x20>
   43200:	10000e26 	beq	r2,zero,4323c <__udivsi3+0x54>
   43204:	28000516 	blt	r5,zero,4321c <__udivsi3+0x34>
   43208:	294b883a 	add	r5,r5,r5
   4320c:	10bfffc4 	addi	r2,r2,-1
   43210:	18c7883a 	add	r3,r3,r3
   43214:	293ffa36 	bltu	r5,r4,43200 <__alt_data_end+0xfffc3200>
   43218:	18000826 	beq	r3,zero,4323c <__udivsi3+0x54>
   4321c:	0005883a 	mov	r2,zero
   43220:	31400236 	bltu	r6,r5,4322c <__udivsi3+0x44>
   43224:	314dc83a 	sub	r6,r6,r5
   43228:	10c4b03a 	or	r2,r2,r3
   4322c:	1806d07a 	srli	r3,r3,1
   43230:	280ad07a 	srli	r5,r5,1
   43234:	183ffa1e 	bne	r3,zero,43220 <__alt_data_end+0xfffc3220>
   43238:	f800283a 	ret
   4323c:	0005883a 	mov	r2,zero
   43240:	f800283a 	ret
   43244:	00c00044 	movi	r3,1
   43248:	003ff406 	br	4321c <__alt_data_end+0xfffc321c>

0004324c <__umodsi3>:
   4324c:	2005883a 	mov	r2,r4
   43250:	2900122e 	bgeu	r5,r4,4329c <__umodsi3+0x50>
   43254:	28001116 	blt	r5,zero,4329c <__umodsi3+0x50>
   43258:	01800804 	movi	r6,32
   4325c:	00c00044 	movi	r3,1
   43260:	00000206 	br	4326c <__umodsi3+0x20>
   43264:	30000c26 	beq	r6,zero,43298 <__umodsi3+0x4c>
   43268:	28000516 	blt	r5,zero,43280 <__umodsi3+0x34>
   4326c:	294b883a 	add	r5,r5,r5
   43270:	31bfffc4 	addi	r6,r6,-1
   43274:	18c7883a 	add	r3,r3,r3
   43278:	293ffa36 	bltu	r5,r4,43264 <__alt_data_end+0xfffc3264>
   4327c:	18000626 	beq	r3,zero,43298 <__umodsi3+0x4c>
   43280:	1806d07a 	srli	r3,r3,1
   43284:	11400136 	bltu	r2,r5,4328c <__umodsi3+0x40>
   43288:	1145c83a 	sub	r2,r2,r5
   4328c:	280ad07a 	srli	r5,r5,1
   43290:	183ffb1e 	bne	r3,zero,43280 <__alt_data_end+0xfffc3280>
   43294:	f800283a 	ret
   43298:	f800283a 	ret
   4329c:	00c00044 	movi	r3,1
   432a0:	003ff706 	br	43280 <__alt_data_end+0xfffc3280>

000432a4 <__addsf3>:
   432a4:	defffc04 	addi	sp,sp,-16
   432a8:	2004d7fa 	srli	r2,r4,31
   432ac:	280cd5fa 	srli	r6,r5,23
   432b0:	dc000015 	stw	r16,0(sp)
   432b4:	00c02034 	movhi	r3,128
   432b8:	2020d5fa 	srli	r16,r4,23
   432bc:	280ed7fa 	srli	r7,r5,31
   432c0:	18ffffc4 	addi	r3,r3,-1
   432c4:	dc400115 	stw	r17,4(sp)
   432c8:	1908703a 	and	r4,r3,r4
   432cc:	194a703a 	and	r5,r3,r5
   432d0:	dfc00315 	stw	ra,12(sp)
   432d4:	dc800215 	stw	r18,8(sp)
   432d8:	14403fcc 	andi	r17,r2,255
   432dc:	84003fcc 	andi	r16,r16,255
   432e0:	200890fa 	slli	r4,r4,3
   432e4:	31803fcc 	andi	r6,r6,255
   432e8:	280a90fa 	slli	r5,r5,3
   432ec:	89c05026 	beq	r17,r7,43430 <__addsf3+0x18c>
   432f0:	8185c83a 	sub	r2,r16,r6
   432f4:	00807a0e 	bge	zero,r2,434e0 <__addsf3+0x23c>
   432f8:	30001e1e 	bne	r6,zero,43374 <__addsf3+0xd0>
   432fc:	28006d1e 	bne	r5,zero,434b4 <__addsf3+0x210>
   43300:	208001cc 	andi	r2,r4,7
   43304:	10000426 	beq	r2,zero,43318 <__addsf3+0x74>
   43308:	208003cc 	andi	r2,r4,15
   4330c:	00c00104 	movi	r3,4
   43310:	10c00126 	beq	r2,r3,43318 <__addsf3+0x74>
   43314:	20c9883a 	add	r4,r4,r3
   43318:	2081002c 	andhi	r2,r4,1024
   4331c:	10003926 	beq	r2,zero,43404 <__addsf3+0x160>
   43320:	84000044 	addi	r16,r16,1
   43324:	00803fc4 	movi	r2,255
   43328:	80807826 	beq	r16,r2,4350c <__addsf3+0x268>
   4332c:	200891ba 	slli	r4,r4,6
   43330:	8805883a 	mov	r2,r17
   43334:	2008d27a 	srli	r4,r4,9
   43338:	84003fcc 	andi	r16,r16,255
   4333c:	800695fa 	slli	r3,r16,23
   43340:	10803fcc 	andi	r2,r2,255
   43344:	04002034 	movhi	r16,128
   43348:	843fffc4 	addi	r16,r16,-1
   4334c:	100497fa 	slli	r2,r2,31
   43350:	2408703a 	and	r4,r4,r16
   43354:	20e0b03a 	or	r16,r4,r3
   43358:	8084b03a 	or	r2,r16,r2
   4335c:	dfc00317 	ldw	ra,12(sp)
   43360:	dc800217 	ldw	r18,8(sp)
   43364:	dc400117 	ldw	r17,4(sp)
   43368:	dc000017 	ldw	r16,0(sp)
   4336c:	dec00404 	addi	sp,sp,16
   43370:	f800283a 	ret
   43374:	00c03fc4 	movi	r3,255
   43378:	80ffe126 	beq	r16,r3,43300 <__alt_data_end+0xfffc3300>
   4337c:	29410034 	orhi	r5,r5,1024
   43380:	00c006c4 	movi	r3,27
   43384:	18807516 	blt	r3,r2,4355c <__addsf3+0x2b8>
   43388:	00c00804 	movi	r3,32
   4338c:	1887c83a 	sub	r3,r3,r2
   43390:	28c6983a 	sll	r3,r5,r3
   43394:	288ad83a 	srl	r5,r5,r2
   43398:	1804c03a 	cmpne	r2,r3,zero
   4339c:	288ab03a 	or	r5,r5,r2
   433a0:	2149c83a 	sub	r4,r4,r5
   433a4:	2081002c 	andhi	r2,r4,1024
   433a8:	10001426 	beq	r2,zero,433fc <__addsf3+0x158>
   433ac:	04810034 	movhi	r18,1024
   433b0:	94bfffc4 	addi	r18,r18,-1
   433b4:	24a4703a 	and	r18,r4,r18
   433b8:	9009883a 	mov	r4,r18
   433bc:	00462c40 	call	462c4 <__clzsi2>
   433c0:	10bffec4 	addi	r2,r2,-5
   433c4:	90a4983a 	sll	r18,r18,r2
   433c8:	14005416 	blt	r2,r16,4351c <__addsf3+0x278>
   433cc:	1405c83a 	sub	r2,r2,r16
   433d0:	11000044 	addi	r4,r2,1
   433d4:	00800804 	movi	r2,32
   433d8:	1105c83a 	sub	r2,r2,r4
   433dc:	9084983a 	sll	r2,r18,r2
   433e0:	9124d83a 	srl	r18,r18,r4
   433e4:	0021883a 	mov	r16,zero
   433e8:	1008c03a 	cmpne	r4,r2,zero
   433ec:	9108b03a 	or	r4,r18,r4
   433f0:	003fc306 	br	43300 <__alt_data_end+0xfffc3300>
   433f4:	1000db26 	beq	r2,zero,43764 <__addsf3+0x4c0>
   433f8:	1009883a 	mov	r4,r2
   433fc:	208001cc 	andi	r2,r4,7
   43400:	103fc11e 	bne	r2,zero,43308 <__alt_data_end+0xfffc3308>
   43404:	2006d0fa 	srli	r3,r4,3
   43408:	01003fc4 	movi	r4,255
   4340c:	8805883a 	mov	r2,r17
   43410:	8100241e 	bne	r16,r4,434a4 <__addsf3+0x200>
   43414:	18006e26 	beq	r3,zero,435d0 <__addsf3+0x32c>
   43418:	19001034 	orhi	r4,r3,64
   4341c:	00c02034 	movhi	r3,128
   43420:	18ffffc4 	addi	r3,r3,-1
   43424:	043fffc4 	movi	r16,-1
   43428:	20c8703a 	and	r4,r4,r3
   4342c:	003fc206 	br	43338 <__alt_data_end+0xfffc3338>
   43430:	8187c83a 	sub	r3,r16,r6
   43434:	00c03e0e 	bge	zero,r3,43530 <__addsf3+0x28c>
   43438:	30002326 	beq	r6,zero,434c8 <__addsf3+0x224>
   4343c:	01803fc4 	movi	r6,255
   43440:	81bfaf26 	beq	r16,r6,43300 <__alt_data_end+0xfffc3300>
   43444:	29410034 	orhi	r5,r5,1024
   43448:	018006c4 	movi	r6,27
   4344c:	30c07416 	blt	r6,r3,43620 <__addsf3+0x37c>
   43450:	01800804 	movi	r6,32
   43454:	30cdc83a 	sub	r6,r6,r3
   43458:	298c983a 	sll	r6,r5,r6
   4345c:	28cad83a 	srl	r5,r5,r3
   43460:	3006c03a 	cmpne	r3,r6,zero
   43464:	28cab03a 	or	r5,r5,r3
   43468:	2149883a 	add	r4,r4,r5
   4346c:	20c1002c 	andhi	r3,r4,1024
   43470:	183fe226 	beq	r3,zero,433fc <__alt_data_end+0xfffc33fc>
   43474:	84000044 	addi	r16,r16,1
   43478:	00c03fc4 	movi	r3,255
   4347c:	80c05426 	beq	r16,r3,435d0 <__addsf3+0x32c>
   43480:	00bf0034 	movhi	r2,64512
   43484:	10bfffc4 	addi	r2,r2,-1
   43488:	20c0004c 	andi	r3,r4,1
   4348c:	2088703a 	and	r4,r4,r2
   43490:	2008d07a 	srli	r4,r4,1
   43494:	20c8b03a 	or	r4,r4,r3
   43498:	003f9906 	br	43300 <__alt_data_end+0xfffc3300>
   4349c:	0007883a 	mov	r3,zero
   434a0:	0005883a 	mov	r2,zero
   434a4:	01002034 	movhi	r4,128
   434a8:	213fffc4 	addi	r4,r4,-1
   434ac:	1908703a 	and	r4,r3,r4
   434b0:	003fa106 	br	43338 <__alt_data_end+0xfffc3338>
   434b4:	10bfffc4 	addi	r2,r2,-1
   434b8:	103fb926 	beq	r2,zero,433a0 <__alt_data_end+0xfffc33a0>
   434bc:	00c03fc4 	movi	r3,255
   434c0:	80ffaf1e 	bne	r16,r3,43380 <__alt_data_end+0xfffc3380>
   434c4:	003f8e06 	br	43300 <__alt_data_end+0xfffc3300>
   434c8:	283f8d26 	beq	r5,zero,43300 <__alt_data_end+0xfffc3300>
   434cc:	18ffffc4 	addi	r3,r3,-1
   434d0:	183fe526 	beq	r3,zero,43468 <__alt_data_end+0xfffc3468>
   434d4:	01803fc4 	movi	r6,255
   434d8:	81bfdb1e 	bne	r16,r6,43448 <__alt_data_end+0xfffc3448>
   434dc:	003f8806 	br	43300 <__alt_data_end+0xfffc3300>
   434e0:	1000201e 	bne	r2,zero,43564 <__addsf3+0x2c0>
   434e4:	80800044 	addi	r2,r16,1
   434e8:	10803fcc 	andi	r2,r2,255
   434ec:	01800044 	movi	r6,1
   434f0:	3080450e 	bge	r6,r2,43608 <__addsf3+0x364>
   434f4:	2165c83a 	sub	r18,r4,r5
   434f8:	90c1002c 	andhi	r3,r18,1024
   434fc:	18002b26 	beq	r3,zero,435ac <__addsf3+0x308>
   43500:	2925c83a 	sub	r18,r5,r4
   43504:	3823883a 	mov	r17,r7
   43508:	003fab06 	br	433b8 <__alt_data_end+0xfffc33b8>
   4350c:	8805883a 	mov	r2,r17
   43510:	043fffc4 	movi	r16,-1
   43514:	0009883a 	mov	r4,zero
   43518:	003f8706 	br	43338 <__alt_data_end+0xfffc3338>
   4351c:	013f0034 	movhi	r4,64512
   43520:	213fffc4 	addi	r4,r4,-1
   43524:	80a1c83a 	sub	r16,r16,r2
   43528:	9108703a 	and	r4,r18,r4
   4352c:	003f7406 	br	43300 <__alt_data_end+0xfffc3300>
   43530:	1800411e 	bne	r3,zero,43638 <__addsf3+0x394>
   43534:	80c00044 	addi	r3,r16,1
   43538:	19c03fcc 	andi	r7,r3,255
   4353c:	01800044 	movi	r6,1
   43540:	31c0260e 	bge	r6,r7,435dc <__addsf3+0x338>
   43544:	01803fc4 	movi	r6,255
   43548:	19802126 	beq	r3,r6,435d0 <__addsf3+0x32c>
   4354c:	2149883a 	add	r4,r4,r5
   43550:	2008d07a 	srli	r4,r4,1
   43554:	1821883a 	mov	r16,r3
   43558:	003f6906 	br	43300 <__alt_data_end+0xfffc3300>
   4355c:	01400044 	movi	r5,1
   43560:	003f8f06 	br	433a0 <__alt_data_end+0xfffc33a0>
   43564:	8000151e 	bne	r16,zero,435bc <__addsf3+0x318>
   43568:	20002f26 	beq	r4,zero,43628 <__addsf3+0x384>
   4356c:	0084303a 	nor	r2,zero,r2
   43570:	10000a26 	beq	r2,zero,4359c <__addsf3+0x2f8>
   43574:	00c03fc4 	movi	r3,255
   43578:	30c02b26 	beq	r6,r3,43628 <__addsf3+0x384>
   4357c:	00c006c4 	movi	r3,27
   43580:	18806d16 	blt	r3,r2,43738 <__addsf3+0x494>
   43584:	00c00804 	movi	r3,32
   43588:	1887c83a 	sub	r3,r3,r2
   4358c:	20c6983a 	sll	r3,r4,r3
   43590:	2084d83a 	srl	r2,r4,r2
   43594:	1808c03a 	cmpne	r4,r3,zero
   43598:	1108b03a 	or	r4,r2,r4
   4359c:	2909c83a 	sub	r4,r5,r4
   435a0:	3021883a 	mov	r16,r6
   435a4:	3823883a 	mov	r17,r7
   435a8:	003f7e06 	br	433a4 <__alt_data_end+0xfffc33a4>
   435ac:	903f821e 	bne	r18,zero,433b8 <__alt_data_end+0xfffc33b8>
   435b0:	0005883a 	mov	r2,zero
   435b4:	0021883a 	mov	r16,zero
   435b8:	003fba06 	br	434a4 <__alt_data_end+0xfffc34a4>
   435bc:	00c03fc4 	movi	r3,255
   435c0:	30c01926 	beq	r6,r3,43628 <__addsf3+0x384>
   435c4:	0085c83a 	sub	r2,zero,r2
   435c8:	21010034 	orhi	r4,r4,1024
   435cc:	003feb06 	br	4357c <__alt_data_end+0xfffc357c>
   435d0:	043fffc4 	movi	r16,-1
   435d4:	0009883a 	mov	r4,zero
   435d8:	003f5706 	br	43338 <__alt_data_end+0xfffc3338>
   435dc:	80004a1e 	bne	r16,zero,43708 <__addsf3+0x464>
   435e0:	20005926 	beq	r4,zero,43748 <__addsf3+0x4a4>
   435e4:	283f4626 	beq	r5,zero,43300 <__alt_data_end+0xfffc3300>
   435e8:	2149883a 	add	r4,r4,r5
   435ec:	2081002c 	andhi	r2,r4,1024
   435f0:	103f8226 	beq	r2,zero,433fc <__alt_data_end+0xfffc33fc>
   435f4:	00bf0034 	movhi	r2,64512
   435f8:	10bfffc4 	addi	r2,r2,-1
   435fc:	3021883a 	mov	r16,r6
   43600:	2088703a 	and	r4,r4,r2
   43604:	003f3e06 	br	43300 <__alt_data_end+0xfffc3300>
   43608:	8000121e 	bne	r16,zero,43654 <__addsf3+0x3b0>
   4360c:	2000261e 	bne	r4,zero,436a8 <__addsf3+0x404>
   43610:	283fa226 	beq	r5,zero,4349c <__alt_data_end+0xfffc349c>
   43614:	2809883a 	mov	r4,r5
   43618:	3823883a 	mov	r17,r7
   4361c:	003f3806 	br	43300 <__alt_data_end+0xfffc3300>
   43620:	01400044 	movi	r5,1
   43624:	003f9006 	br	43468 <__alt_data_end+0xfffc3468>
   43628:	2809883a 	mov	r4,r5
   4362c:	3021883a 	mov	r16,r6
   43630:	3823883a 	mov	r17,r7
   43634:	003f3206 	br	43300 <__alt_data_end+0xfffc3300>
   43638:	80000c1e 	bne	r16,zero,4366c <__addsf3+0x3c8>
   4363c:	20002f26 	beq	r4,zero,436fc <__addsf3+0x458>
   43640:	00c6303a 	nor	r3,zero,r3
   43644:	18002b1e 	bne	r3,zero,436f4 <__addsf3+0x450>
   43648:	2149883a 	add	r4,r4,r5
   4364c:	3021883a 	mov	r16,r6
   43650:	003f8606 	br	4346c <__alt_data_end+0xfffc346c>
   43654:	20001b1e 	bne	r4,zero,436c4 <__addsf3+0x420>
   43658:	28003926 	beq	r5,zero,43740 <__addsf3+0x49c>
   4365c:	2809883a 	mov	r4,r5
   43660:	3823883a 	mov	r17,r7
   43664:	04003fc4 	movi	r16,255
   43668:	003f2506 	br	43300 <__alt_data_end+0xfffc3300>
   4366c:	01c03fc4 	movi	r7,255
   43670:	31c02226 	beq	r6,r7,436fc <__addsf3+0x458>
   43674:	00c7c83a 	sub	r3,zero,r3
   43678:	21010034 	orhi	r4,r4,1024
   4367c:	01c006c4 	movi	r7,27
   43680:	38c03616 	blt	r7,r3,4375c <__addsf3+0x4b8>
   43684:	01c00804 	movi	r7,32
   43688:	38cfc83a 	sub	r7,r7,r3
   4368c:	21ce983a 	sll	r7,r4,r7
   43690:	20c6d83a 	srl	r3,r4,r3
   43694:	3808c03a 	cmpne	r4,r7,zero
   43698:	1906b03a 	or	r3,r3,r4
   4369c:	1949883a 	add	r4,r3,r5
   436a0:	3021883a 	mov	r16,r6
   436a4:	003f7106 	br	4346c <__alt_data_end+0xfffc346c>
   436a8:	283f1526 	beq	r5,zero,43300 <__alt_data_end+0xfffc3300>
   436ac:	2145c83a 	sub	r2,r4,r5
   436b0:	10c1002c 	andhi	r3,r2,1024
   436b4:	183f4f26 	beq	r3,zero,433f4 <__alt_data_end+0xfffc33f4>
   436b8:	2909c83a 	sub	r4,r5,r4
   436bc:	3823883a 	mov	r17,r7
   436c0:	003f0f06 	br	43300 <__alt_data_end+0xfffc3300>
   436c4:	28001a26 	beq	r5,zero,43730 <__addsf3+0x48c>
   436c8:	2008d0fa 	srli	r4,r4,3
   436cc:	2080102c 	andhi	r2,r4,64
   436d0:	10000526 	beq	r2,zero,436e8 <__addsf3+0x444>
   436d4:	280ad0fa 	srli	r5,r5,3
   436d8:	2880102c 	andhi	r2,r5,64
   436dc:	1000021e 	bne	r2,zero,436e8 <__addsf3+0x444>
   436e0:	2809883a 	mov	r4,r5
   436e4:	3823883a 	mov	r17,r7
   436e8:	200890fa 	slli	r4,r4,3
   436ec:	04003fc4 	movi	r16,255
   436f0:	003f0306 	br	43300 <__alt_data_end+0xfffc3300>
   436f4:	01c03fc4 	movi	r7,255
   436f8:	31ffe01e 	bne	r6,r7,4367c <__alt_data_end+0xfffc367c>
   436fc:	2809883a 	mov	r4,r5
   43700:	3021883a 	mov	r16,r6
   43704:	003efe06 	br	43300 <__alt_data_end+0xfffc3300>
   43708:	20001126 	beq	r4,zero,43750 <__addsf3+0x4ac>
   4370c:	28000826 	beq	r5,zero,43730 <__addsf3+0x48c>
   43710:	2008d0fa 	srli	r4,r4,3
   43714:	2080102c 	andhi	r2,r4,64
   43718:	103ff326 	beq	r2,zero,436e8 <__alt_data_end+0xfffc36e8>
   4371c:	280ad0fa 	srli	r5,r5,3
   43720:	2880102c 	andhi	r2,r5,64
   43724:	103ff01e 	bne	r2,zero,436e8 <__alt_data_end+0xfffc36e8>
   43728:	2809883a 	mov	r4,r5
   4372c:	003fee06 	br	436e8 <__alt_data_end+0xfffc36e8>
   43730:	04003fc4 	movi	r16,255
   43734:	003ef206 	br	43300 <__alt_data_end+0xfffc3300>
   43738:	01000044 	movi	r4,1
   4373c:	003f9706 	br	4359c <__alt_data_end+0xfffc359c>
   43740:	0005883a 	mov	r2,zero
   43744:	003f3406 	br	43418 <__alt_data_end+0xfffc3418>
   43748:	2809883a 	mov	r4,r5
   4374c:	003eec06 	br	43300 <__alt_data_end+0xfffc3300>
   43750:	2809883a 	mov	r4,r5
   43754:	04003fc4 	movi	r16,255
   43758:	003ee906 	br	43300 <__alt_data_end+0xfffc3300>
   4375c:	00c00044 	movi	r3,1
   43760:	003fce06 	br	4369c <__alt_data_end+0xfffc369c>
   43764:	0005883a 	mov	r2,zero
   43768:	003f4e06 	br	434a4 <__alt_data_end+0xfffc34a4>

0004376c <__divsf3>:
   4376c:	defff504 	addi	sp,sp,-44
   43770:	200cd5fa 	srli	r6,r4,23
   43774:	dcc00415 	stw	r19,16(sp)
   43778:	2026d7fa 	srli	r19,r4,31
   4377c:	00c02034 	movhi	r3,128
   43780:	dd800715 	stw	r22,28(sp)
   43784:	dd000515 	stw	r20,20(sp)
   43788:	dc800315 	stw	r18,12(sp)
   4378c:	18ffffc4 	addi	r3,r3,-1
   43790:	dfc00a15 	stw	ra,40(sp)
   43794:	df000915 	stw	fp,36(sp)
   43798:	ddc00815 	stw	r23,32(sp)
   4379c:	dd400615 	stw	r21,24(sp)
   437a0:	dc400215 	stw	r17,8(sp)
   437a4:	dc000115 	stw	r16,4(sp)
   437a8:	35003fcc 	andi	r20,r6,255
   437ac:	1924703a 	and	r18,r3,r4
   437b0:	9d803fcc 	andi	r22,r19,255
   437b4:	a0005226 	beq	r20,zero,43900 <__divsf3+0x194>
   437b8:	00803fc4 	movi	r2,255
   437bc:	a0802e26 	beq	r20,r2,43878 <__divsf3+0x10c>
   437c0:	91002034 	orhi	r4,r18,128
   437c4:	202490fa 	slli	r18,r4,3
   437c8:	a53fe044 	addi	r20,r20,-127
   437cc:	0021883a 	mov	r16,zero
   437d0:	002f883a 	mov	r23,zero
   437d4:	280cd5fa 	srli	r6,r5,23
   437d8:	282ad7fa 	srli	r21,r5,31
   437dc:	00c02034 	movhi	r3,128
   437e0:	18ffffc4 	addi	r3,r3,-1
   437e4:	31803fcc 	andi	r6,r6,255
   437e8:	1962703a 	and	r17,r3,r5
   437ec:	af003fcc 	andi	fp,r21,255
   437f0:	30004a26 	beq	r6,zero,4391c <__divsf3+0x1b0>
   437f4:	00803fc4 	movi	r2,255
   437f8:	30804526 	beq	r6,r2,43910 <__divsf3+0x1a4>
   437fc:	89402034 	orhi	r5,r17,128
   43800:	282290fa 	slli	r17,r5,3
   43804:	31bfe044 	addi	r6,r6,-127
   43808:	000b883a 	mov	r5,zero
   4380c:	2c20b03a 	or	r16,r5,r16
   43810:	802090ba 	slli	r16,r16,2
   43814:	00800134 	movhi	r2,4
   43818:	108e0e04 	addi	r2,r2,14392
   4381c:	80a1883a 	add	r16,r16,r2
   43820:	81000017 	ldw	r4,0(r16)
   43824:	9d46f03a 	xor	r3,r19,r21
   43828:	180f883a 	mov	r7,r3
   4382c:	18803fcc 	andi	r2,r3,255
   43830:	a18dc83a 	sub	r6,r20,r6
   43834:	2000683a 	jmp	r4
   43838:	00043a1c 	xori	zero,zero,4328
   4383c:	000438a0 	cmpeqi	zero,zero,4322
   43840:	00043a10 	cmplti	zero,zero,4328
   43844:	0004388c 	andi	zero,zero,4322
   43848:	00043a10 	cmplti	zero,zero,4328
   4384c:	000439e8 	cmpgeui	zero,zero,4327
   43850:	00043a10 	cmplti	zero,zero,4328
   43854:	0004388c 	andi	zero,zero,4322
   43858:	000438a0 	cmpeqi	zero,zero,4322
   4385c:	000438a0 	cmpeqi	zero,zero,4322
   43860:	000439e8 	cmpgeui	zero,zero,4327
   43864:	0004388c 	andi	zero,zero,4322
   43868:	00043afc 	xorhi	zero,zero,4331
   4386c:	00043afc 	xorhi	zero,zero,4331
   43870:	00043afc 	xorhi	zero,zero,4331
   43874:	00043ab0 	cmpltui	zero,zero,4330
   43878:	9000581e 	bne	r18,zero,439dc <__divsf3+0x270>
   4387c:	04000204 	movi	r16,8
   43880:	05c00084 	movi	r23,2
   43884:	003fd306 	br	437d4 <__alt_data_end+0xfffc37d4>
   43888:	0023883a 	mov	r17,zero
   4388c:	e02d883a 	mov	r22,fp
   43890:	282f883a 	mov	r23,r5
   43894:	00800084 	movi	r2,2
   43898:	b8808f1e 	bne	r23,r2,43ad8 <__divsf3+0x36c>
   4389c:	b005883a 	mov	r2,r22
   438a0:	11c0004c 	andi	r7,r2,1
   438a4:	013fffc4 	movi	r4,-1
   438a8:	000d883a 	mov	r6,zero
   438ac:	21003fcc 	andi	r4,r4,255
   438b0:	200895fa 	slli	r4,r4,23
   438b4:	38803fcc 	andi	r2,r7,255
   438b8:	00c02034 	movhi	r3,128
   438bc:	100497fa 	slli	r2,r2,31
   438c0:	18ffffc4 	addi	r3,r3,-1
   438c4:	30c6703a 	and	r3,r6,r3
   438c8:	1906b03a 	or	r3,r3,r4
   438cc:	1884b03a 	or	r2,r3,r2
   438d0:	dfc00a17 	ldw	ra,40(sp)
   438d4:	df000917 	ldw	fp,36(sp)
   438d8:	ddc00817 	ldw	r23,32(sp)
   438dc:	dd800717 	ldw	r22,28(sp)
   438e0:	dd400617 	ldw	r21,24(sp)
   438e4:	dd000517 	ldw	r20,20(sp)
   438e8:	dcc00417 	ldw	r19,16(sp)
   438ec:	dc800317 	ldw	r18,12(sp)
   438f0:	dc400217 	ldw	r17,8(sp)
   438f4:	dc000117 	ldw	r16,4(sp)
   438f8:	dec00b04 	addi	sp,sp,44
   438fc:	f800283a 	ret
   43900:	90002b1e 	bne	r18,zero,439b0 <__divsf3+0x244>
   43904:	04000104 	movi	r16,4
   43908:	05c00044 	movi	r23,1
   4390c:	003fb106 	br	437d4 <__alt_data_end+0xfffc37d4>
   43910:	8800251e 	bne	r17,zero,439a8 <__divsf3+0x23c>
   43914:	01400084 	movi	r5,2
   43918:	00000206 	br	43924 <__divsf3+0x1b8>
   4391c:	88001a1e 	bne	r17,zero,43988 <__divsf3+0x21c>
   43920:	01400044 	movi	r5,1
   43924:	8160b03a 	or	r16,r16,r5
   43928:	802090ba 	slli	r16,r16,2
   4392c:	00c00134 	movhi	r3,4
   43930:	18ce5204 	addi	r3,r3,14664
   43934:	80e1883a 	add	r16,r16,r3
   43938:	80c00017 	ldw	r3,0(r16)
   4393c:	9d44f03a 	xor	r2,r19,r21
   43940:	a18dc83a 	sub	r6,r20,r6
   43944:	1800683a 	jmp	r3
   43948:	000438a0 	cmpeqi	zero,zero,4322
   4394c:	000438a0 	cmpeqi	zero,zero,4322
   43950:	00043aec 	andhi	zero,zero,4331
   43954:	00043888 	cmpgei	zero,zero,4322
   43958:	00043aec 	andhi	zero,zero,4331
   4395c:	000439e8 	cmpgeui	zero,zero,4327
   43960:	00043aec 	andhi	zero,zero,4331
   43964:	00043888 	cmpgei	zero,zero,4322
   43968:	000438a0 	cmpeqi	zero,zero,4322
   4396c:	000438a0 	cmpeqi	zero,zero,4322
   43970:	000439e8 	cmpgeui	zero,zero,4327
   43974:	00043888 	cmpgei	zero,zero,4322
   43978:	00043afc 	xorhi	zero,zero,4331
   4397c:	00043afc 	xorhi	zero,zero,4331
   43980:	00043afc 	xorhi	zero,zero,4331
   43984:	00043b14 	movui	zero,4332
   43988:	8809883a 	mov	r4,r17
   4398c:	00462c40 	call	462c4 <__clzsi2>
   43990:	10fffec4 	addi	r3,r2,-5
   43994:	10801d84 	addi	r2,r2,118
   43998:	88e2983a 	sll	r17,r17,r3
   4399c:	008dc83a 	sub	r6,zero,r2
   439a0:	000b883a 	mov	r5,zero
   439a4:	003f9906 	br	4380c <__alt_data_end+0xfffc380c>
   439a8:	014000c4 	movi	r5,3
   439ac:	003f9706 	br	4380c <__alt_data_end+0xfffc380c>
   439b0:	9009883a 	mov	r4,r18
   439b4:	d9400015 	stw	r5,0(sp)
   439b8:	00462c40 	call	462c4 <__clzsi2>
   439bc:	10fffec4 	addi	r3,r2,-5
   439c0:	11801d84 	addi	r6,r2,118
   439c4:	90e4983a 	sll	r18,r18,r3
   439c8:	01a9c83a 	sub	r20,zero,r6
   439cc:	0021883a 	mov	r16,zero
   439d0:	002f883a 	mov	r23,zero
   439d4:	d9400017 	ldw	r5,0(sp)
   439d8:	003f7e06 	br	437d4 <__alt_data_end+0xfffc37d4>
   439dc:	04000304 	movi	r16,12
   439e0:	05c000c4 	movi	r23,3
   439e4:	003f7b06 	br	437d4 <__alt_data_end+0xfffc37d4>
   439e8:	01802034 	movhi	r6,128
   439ec:	000f883a 	mov	r7,zero
   439f0:	31bfffc4 	addi	r6,r6,-1
   439f4:	013fffc4 	movi	r4,-1
   439f8:	003fac06 	br	438ac <__alt_data_end+0xfffc38ac>
   439fc:	01400044 	movi	r5,1
   43a00:	2909c83a 	sub	r4,r5,r4
   43a04:	00c006c4 	movi	r3,27
   43a08:	19004b0e 	bge	r3,r4,43b38 <__divsf3+0x3cc>
   43a0c:	114e703a 	and	r7,r2,r5
   43a10:	0009883a 	mov	r4,zero
   43a14:	000d883a 	mov	r6,zero
   43a18:	003fa406 	br	438ac <__alt_data_end+0xfffc38ac>
   43a1c:	9006917a 	slli	r3,r18,5
   43a20:	8822917a 	slli	r17,r17,5
   43a24:	1c40372e 	bgeu	r3,r17,43b04 <__divsf3+0x398>
   43a28:	31bfffc4 	addi	r6,r6,-1
   43a2c:	010006c4 	movi	r4,27
   43a30:	000b883a 	mov	r5,zero
   43a34:	180f883a 	mov	r7,r3
   43a38:	294b883a 	add	r5,r5,r5
   43a3c:	18c7883a 	add	r3,r3,r3
   43a40:	38000116 	blt	r7,zero,43a48 <__divsf3+0x2dc>
   43a44:	1c400236 	bltu	r3,r17,43a50 <__divsf3+0x2e4>
   43a48:	1c47c83a 	sub	r3,r3,r17
   43a4c:	29400054 	ori	r5,r5,1
   43a50:	213fffc4 	addi	r4,r4,-1
   43a54:	203ff71e 	bne	r4,zero,43a34 <__alt_data_end+0xfffc3a34>
   43a58:	1806c03a 	cmpne	r3,r3,zero
   43a5c:	1962b03a 	or	r17,r3,r5
   43a60:	31001fc4 	addi	r4,r6,127
   43a64:	013fe50e 	bge	zero,r4,439fc <__alt_data_end+0xfffc39fc>
   43a68:	88c001cc 	andi	r3,r17,7
   43a6c:	18000426 	beq	r3,zero,43a80 <__divsf3+0x314>
   43a70:	88c003cc 	andi	r3,r17,15
   43a74:	01400104 	movi	r5,4
   43a78:	19400126 	beq	r3,r5,43a80 <__divsf3+0x314>
   43a7c:	8963883a 	add	r17,r17,r5
   43a80:	88c2002c 	andhi	r3,r17,2048
   43a84:	18000426 	beq	r3,zero,43a98 <__divsf3+0x32c>
   43a88:	00fe0034 	movhi	r3,63488
   43a8c:	18ffffc4 	addi	r3,r3,-1
   43a90:	31002004 	addi	r4,r6,128
   43a94:	88e2703a 	and	r17,r17,r3
   43a98:	00c03f84 	movi	r3,254
   43a9c:	193f8016 	blt	r3,r4,438a0 <__alt_data_end+0xfffc38a0>
   43aa0:	880c91ba 	slli	r6,r17,6
   43aa4:	11c0004c 	andi	r7,r2,1
   43aa8:	300cd27a 	srli	r6,r6,9
   43aac:	003f7f06 	br	438ac <__alt_data_end+0xfffc38ac>
   43ab0:	9080102c 	andhi	r2,r18,64
   43ab4:	10000226 	beq	r2,zero,43ac0 <__divsf3+0x354>
   43ab8:	8880102c 	andhi	r2,r17,64
   43abc:	10001826 	beq	r2,zero,43b20 <__divsf3+0x3b4>
   43ac0:	00802034 	movhi	r2,128
   43ac4:	91801034 	orhi	r6,r18,64
   43ac8:	10bfffc4 	addi	r2,r2,-1
   43acc:	980f883a 	mov	r7,r19
   43ad0:	308c703a 	and	r6,r6,r2
   43ad4:	003fc706 	br	439f4 <__alt_data_end+0xfffc39f4>
   43ad8:	008000c4 	movi	r2,3
   43adc:	b8802d26 	beq	r23,r2,43b94 <__divsf3+0x428>
   43ae0:	00c00044 	movi	r3,1
   43ae4:	b005883a 	mov	r2,r22
   43ae8:	b8ffdd1e 	bne	r23,r3,43a60 <__alt_data_end+0xfffc3a60>
   43aec:	11c0004c 	andi	r7,r2,1
   43af0:	0009883a 	mov	r4,zero
   43af4:	000d883a 	mov	r6,zero
   43af8:	003f6c06 	br	438ac <__alt_data_end+0xfffc38ac>
   43afc:	9023883a 	mov	r17,r18
   43b00:	003f6406 	br	43894 <__alt_data_end+0xfffc3894>
   43b04:	1c47c83a 	sub	r3,r3,r17
   43b08:	01000684 	movi	r4,26
   43b0c:	01400044 	movi	r5,1
   43b10:	003fc806 	br	43a34 <__alt_data_end+0xfffc3a34>
   43b14:	9080102c 	andhi	r2,r18,64
   43b18:	103fe926 	beq	r2,zero,43ac0 <__alt_data_end+0xfffc3ac0>
   43b1c:	0023883a 	mov	r17,zero
   43b20:	00802034 	movhi	r2,128
   43b24:	89801034 	orhi	r6,r17,64
   43b28:	10bfffc4 	addi	r2,r2,-1
   43b2c:	a80f883a 	mov	r7,r21
   43b30:	308c703a 	and	r6,r6,r2
   43b34:	003faf06 	br	439f4 <__alt_data_end+0xfffc39f4>
   43b38:	01c00804 	movi	r7,32
   43b3c:	390fc83a 	sub	r7,r7,r4
   43b40:	89ce983a 	sll	r7,r17,r7
   43b44:	890ad83a 	srl	r5,r17,r4
   43b48:	380ec03a 	cmpne	r7,r7,zero
   43b4c:	29cab03a 	or	r5,r5,r7
   43b50:	28c001cc 	andi	r3,r5,7
   43b54:	18000426 	beq	r3,zero,43b68 <__divsf3+0x3fc>
   43b58:	28c003cc 	andi	r3,r5,15
   43b5c:	01000104 	movi	r4,4
   43b60:	19000126 	beq	r3,r4,43b68 <__divsf3+0x3fc>
   43b64:	290b883a 	add	r5,r5,r4
   43b68:	28c1002c 	andhi	r3,r5,1024
   43b6c:	18000426 	beq	r3,zero,43b80 <__divsf3+0x414>
   43b70:	11c0004c 	andi	r7,r2,1
   43b74:	01000044 	movi	r4,1
   43b78:	000d883a 	mov	r6,zero
   43b7c:	003f4b06 	br	438ac <__alt_data_end+0xfffc38ac>
   43b80:	280a91ba 	slli	r5,r5,6
   43b84:	11c0004c 	andi	r7,r2,1
   43b88:	0009883a 	mov	r4,zero
   43b8c:	280cd27a 	srli	r6,r5,9
   43b90:	003f4606 	br	438ac <__alt_data_end+0xfffc38ac>
   43b94:	00802034 	movhi	r2,128
   43b98:	89801034 	orhi	r6,r17,64
   43b9c:	10bfffc4 	addi	r2,r2,-1
   43ba0:	b00f883a 	mov	r7,r22
   43ba4:	308c703a 	and	r6,r6,r2
   43ba8:	003f9206 	br	439f4 <__alt_data_end+0xfffc39f4>

00043bac <__mulsf3>:
   43bac:	defff504 	addi	sp,sp,-44
   43bb0:	dc000115 	stw	r16,4(sp)
   43bb4:	2020d5fa 	srli	r16,r4,23
   43bb8:	dd400615 	stw	r21,24(sp)
   43bbc:	202ad7fa 	srli	r21,r4,31
   43bc0:	dc800315 	stw	r18,12(sp)
   43bc4:	04802034 	movhi	r18,128
   43bc8:	df000915 	stw	fp,36(sp)
   43bcc:	dd000515 	stw	r20,20(sp)
   43bd0:	94bfffc4 	addi	r18,r18,-1
   43bd4:	dfc00a15 	stw	ra,40(sp)
   43bd8:	ddc00815 	stw	r23,32(sp)
   43bdc:	dd800715 	stw	r22,28(sp)
   43be0:	dcc00415 	stw	r19,16(sp)
   43be4:	dc400215 	stw	r17,8(sp)
   43be8:	84003fcc 	andi	r16,r16,255
   43bec:	9124703a 	and	r18,r18,r4
   43bf0:	a829883a 	mov	r20,r21
   43bf4:	af003fcc 	andi	fp,r21,255
   43bf8:	80005426 	beq	r16,zero,43d4c <__mulsf3+0x1a0>
   43bfc:	00803fc4 	movi	r2,255
   43c00:	80802f26 	beq	r16,r2,43cc0 <__mulsf3+0x114>
   43c04:	91002034 	orhi	r4,r18,128
   43c08:	202490fa 	slli	r18,r4,3
   43c0c:	843fe044 	addi	r16,r16,-127
   43c10:	0023883a 	mov	r17,zero
   43c14:	002f883a 	mov	r23,zero
   43c18:	2804d5fa 	srli	r2,r5,23
   43c1c:	282cd7fa 	srli	r22,r5,31
   43c20:	01002034 	movhi	r4,128
   43c24:	213fffc4 	addi	r4,r4,-1
   43c28:	10803fcc 	andi	r2,r2,255
   43c2c:	2166703a 	and	r19,r4,r5
   43c30:	b1803fcc 	andi	r6,r22,255
   43c34:	10004c26 	beq	r2,zero,43d68 <__mulsf3+0x1bc>
   43c38:	00c03fc4 	movi	r3,255
   43c3c:	10c04726 	beq	r2,r3,43d5c <__mulsf3+0x1b0>
   43c40:	99002034 	orhi	r4,r19,128
   43c44:	202690fa 	slli	r19,r4,3
   43c48:	10bfe044 	addi	r2,r2,-127
   43c4c:	0007883a 	mov	r3,zero
   43c50:	80a1883a 	add	r16,r16,r2
   43c54:	010003c4 	movi	r4,15
   43c58:	1c44b03a 	or	r2,r3,r17
   43c5c:	b56af03a 	xor	r21,r22,r21
   43c60:	81c00044 	addi	r7,r16,1
   43c64:	20806b36 	bltu	r4,r2,43e14 <__mulsf3+0x268>
   43c68:	100490ba 	slli	r2,r2,2
   43c6c:	01000134 	movhi	r4,4
   43c70:	210f2004 	addi	r4,r4,15488
   43c74:	1105883a 	add	r2,r2,r4
   43c78:	10800017 	ldw	r2,0(r2)
   43c7c:	1000683a 	jmp	r2
   43c80:	00043e14 	movui	zero,4344
   43c84:	00043cd4 	movui	zero,4339
   43c88:	00043cd4 	movui	zero,4339
   43c8c:	00043cd0 	cmplti	zero,zero,4339
   43c90:	00043df8 	rdprs	zero,zero,4343
   43c94:	00043df8 	rdprs	zero,zero,4343
   43c98:	00043de4 	muli	zero,zero,4343
   43c9c:	00043cd0 	cmplti	zero,zero,4339
   43ca0:	00043df8 	rdprs	zero,zero,4343
   43ca4:	00043de4 	muli	zero,zero,4343
   43ca8:	00043df8 	rdprs	zero,zero,4343
   43cac:	00043cd0 	cmplti	zero,zero,4339
   43cb0:	00043e04 	movi	zero,4344
   43cb4:	00043e04 	movi	zero,4344
   43cb8:	00043e04 	movi	zero,4344
   43cbc:	00043ee0 	cmpeqi	zero,zero,4347
   43cc0:	90003b1e 	bne	r18,zero,43db0 <__mulsf3+0x204>
   43cc4:	04400204 	movi	r17,8
   43cc8:	05c00084 	movi	r23,2
   43ccc:	003fd206 	br	43c18 <__alt_data_end+0xfffc3c18>
   43cd0:	302b883a 	mov	r21,r6
   43cd4:	00800084 	movi	r2,2
   43cd8:	18802626 	beq	r3,r2,43d74 <__mulsf3+0x1c8>
   43cdc:	008000c4 	movi	r2,3
   43ce0:	1880ab26 	beq	r3,r2,43f90 <__mulsf3+0x3e4>
   43ce4:	00800044 	movi	r2,1
   43ce8:	1880a21e 	bne	r3,r2,43f74 <__mulsf3+0x3c8>
   43cec:	a829883a 	mov	r20,r21
   43cf0:	0007883a 	mov	r3,zero
   43cf4:	0009883a 	mov	r4,zero
   43cf8:	18803fcc 	andi	r2,r3,255
   43cfc:	100695fa 	slli	r3,r2,23
   43d00:	a0803fcc 	andi	r2,r20,255
   43d04:	100a97fa 	slli	r5,r2,31
   43d08:	00802034 	movhi	r2,128
   43d0c:	10bfffc4 	addi	r2,r2,-1
   43d10:	2084703a 	and	r2,r4,r2
   43d14:	10c4b03a 	or	r2,r2,r3
   43d18:	1144b03a 	or	r2,r2,r5
   43d1c:	dfc00a17 	ldw	ra,40(sp)
   43d20:	df000917 	ldw	fp,36(sp)
   43d24:	ddc00817 	ldw	r23,32(sp)
   43d28:	dd800717 	ldw	r22,28(sp)
   43d2c:	dd400617 	ldw	r21,24(sp)
   43d30:	dd000517 	ldw	r20,20(sp)
   43d34:	dcc00417 	ldw	r19,16(sp)
   43d38:	dc800317 	ldw	r18,12(sp)
   43d3c:	dc400217 	ldw	r17,8(sp)
   43d40:	dc000117 	ldw	r16,4(sp)
   43d44:	dec00b04 	addi	sp,sp,44
   43d48:	f800283a 	ret
   43d4c:	90000d1e 	bne	r18,zero,43d84 <__mulsf3+0x1d8>
   43d50:	04400104 	movi	r17,4
   43d54:	05c00044 	movi	r23,1
   43d58:	003faf06 	br	43c18 <__alt_data_end+0xfffc3c18>
   43d5c:	9806c03a 	cmpne	r3,r19,zero
   43d60:	18c00084 	addi	r3,r3,2
   43d64:	003fba06 	br	43c50 <__alt_data_end+0xfffc3c50>
   43d68:	9800141e 	bne	r19,zero,43dbc <__mulsf3+0x210>
   43d6c:	00c00044 	movi	r3,1
   43d70:	003fb706 	br	43c50 <__alt_data_end+0xfffc3c50>
   43d74:	a829883a 	mov	r20,r21
   43d78:	00ffffc4 	movi	r3,-1
   43d7c:	0009883a 	mov	r4,zero
   43d80:	003fdd06 	br	43cf8 <__alt_data_end+0xfffc3cf8>
   43d84:	9009883a 	mov	r4,r18
   43d88:	d9400015 	stw	r5,0(sp)
   43d8c:	00462c40 	call	462c4 <__clzsi2>
   43d90:	10fffec4 	addi	r3,r2,-5
   43d94:	10801d84 	addi	r2,r2,118
   43d98:	90e4983a 	sll	r18,r18,r3
   43d9c:	00a1c83a 	sub	r16,zero,r2
   43da0:	0023883a 	mov	r17,zero
   43da4:	002f883a 	mov	r23,zero
   43da8:	d9400017 	ldw	r5,0(sp)
   43dac:	003f9a06 	br	43c18 <__alt_data_end+0xfffc3c18>
   43db0:	04400304 	movi	r17,12
   43db4:	05c000c4 	movi	r23,3
   43db8:	003f9706 	br	43c18 <__alt_data_end+0xfffc3c18>
   43dbc:	9809883a 	mov	r4,r19
   43dc0:	d9800015 	stw	r6,0(sp)
   43dc4:	00462c40 	call	462c4 <__clzsi2>
   43dc8:	10fffec4 	addi	r3,r2,-5
   43dcc:	10801d84 	addi	r2,r2,118
   43dd0:	98e6983a 	sll	r19,r19,r3
   43dd4:	0085c83a 	sub	r2,zero,r2
   43dd8:	0007883a 	mov	r3,zero
   43ddc:	d9800017 	ldw	r6,0(sp)
   43de0:	003f9b06 	br	43c50 <__alt_data_end+0xfffc3c50>
   43de4:	01002034 	movhi	r4,128
   43de8:	0029883a 	mov	r20,zero
   43dec:	213fffc4 	addi	r4,r4,-1
   43df0:	00ffffc4 	movi	r3,-1
   43df4:	003fc006 	br	43cf8 <__alt_data_end+0xfffc3cf8>
   43df8:	9027883a 	mov	r19,r18
   43dfc:	b807883a 	mov	r3,r23
   43e00:	003fb406 	br	43cd4 <__alt_data_end+0xfffc3cd4>
   43e04:	9027883a 	mov	r19,r18
   43e08:	e02b883a 	mov	r21,fp
   43e0c:	b807883a 	mov	r3,r23
   43e10:	003fb006 	br	43cd4 <__alt_data_end+0xfffc3cd4>
   43e14:	9004d43a 	srli	r2,r18,16
   43e18:	9810d43a 	srli	r8,r19,16
   43e1c:	94bfffcc 	andi	r18,r18,65535
   43e20:	993fffcc 	andi	r4,r19,65535
   43e24:	910d383a 	mul	r6,r18,r4
   43e28:	20a7383a 	mul	r19,r4,r2
   43e2c:	9225383a 	mul	r18,r18,r8
   43e30:	3006d43a 	srli	r3,r6,16
   43e34:	1211383a 	mul	r8,r2,r8
   43e38:	94e5883a 	add	r18,r18,r19
   43e3c:	1c87883a 	add	r3,r3,r18
   43e40:	1cc0022e 	bgeu	r3,r19,43e4c <__mulsf3+0x2a0>
   43e44:	00800074 	movhi	r2,1
   43e48:	4091883a 	add	r8,r8,r2
   43e4c:	1804943a 	slli	r2,r3,16
   43e50:	31bfffcc 	andi	r6,r6,65535
   43e54:	1806d43a 	srli	r3,r3,16
   43e58:	1185883a 	add	r2,r2,r6
   43e5c:	102691ba 	slli	r19,r2,6
   43e60:	1a07883a 	add	r3,r3,r8
   43e64:	1004d6ba 	srli	r2,r2,26
   43e68:	180891ba 	slli	r4,r3,6
   43e6c:	9826c03a 	cmpne	r19,r19,zero
   43e70:	9884b03a 	or	r2,r19,r2
   43e74:	1126b03a 	or	r19,r2,r4
   43e78:	9882002c 	andhi	r2,r19,2048
   43e7c:	10000426 	beq	r2,zero,43e90 <__mulsf3+0x2e4>
   43e80:	9804d07a 	srli	r2,r19,1
   43e84:	9900004c 	andi	r4,r19,1
   43e88:	3821883a 	mov	r16,r7
   43e8c:	1126b03a 	or	r19,r2,r4
   43e90:	80c01fc4 	addi	r3,r16,127
   43e94:	00c0210e 	bge	zero,r3,43f1c <__mulsf3+0x370>
   43e98:	988001cc 	andi	r2,r19,7
   43e9c:	10000426 	beq	r2,zero,43eb0 <__mulsf3+0x304>
   43ea0:	988003cc 	andi	r2,r19,15
   43ea4:	01000104 	movi	r4,4
   43ea8:	11000126 	beq	r2,r4,43eb0 <__mulsf3+0x304>
   43eac:	9927883a 	add	r19,r19,r4
   43eb0:	9882002c 	andhi	r2,r19,2048
   43eb4:	10000426 	beq	r2,zero,43ec8 <__mulsf3+0x31c>
   43eb8:	00be0034 	movhi	r2,63488
   43ebc:	10bfffc4 	addi	r2,r2,-1
   43ec0:	80c02004 	addi	r3,r16,128
   43ec4:	98a6703a 	and	r19,r19,r2
   43ec8:	00803f84 	movi	r2,254
   43ecc:	10ffa916 	blt	r2,r3,43d74 <__alt_data_end+0xfffc3d74>
   43ed0:	980891ba 	slli	r4,r19,6
   43ed4:	a829883a 	mov	r20,r21
   43ed8:	2008d27a 	srli	r4,r4,9
   43edc:	003f8606 	br	43cf8 <__alt_data_end+0xfffc3cf8>
   43ee0:	9080102c 	andhi	r2,r18,64
   43ee4:	10000826 	beq	r2,zero,43f08 <__mulsf3+0x35c>
   43ee8:	9880102c 	andhi	r2,r19,64
   43eec:	1000061e 	bne	r2,zero,43f08 <__mulsf3+0x35c>
   43ef0:	00802034 	movhi	r2,128
   43ef4:	99001034 	orhi	r4,r19,64
   43ef8:	10bfffc4 	addi	r2,r2,-1
   43efc:	b029883a 	mov	r20,r22
   43f00:	2088703a 	and	r4,r4,r2
   43f04:	003fba06 	br	43df0 <__alt_data_end+0xfffc3df0>
   43f08:	00802034 	movhi	r2,128
   43f0c:	91001034 	orhi	r4,r18,64
   43f10:	10bfffc4 	addi	r2,r2,-1
   43f14:	2088703a 	and	r4,r4,r2
   43f18:	003fb506 	br	43df0 <__alt_data_end+0xfffc3df0>
   43f1c:	00800044 	movi	r2,1
   43f20:	10c7c83a 	sub	r3,r2,r3
   43f24:	008006c4 	movi	r2,27
   43f28:	10ff7016 	blt	r2,r3,43cec <__alt_data_end+0xfffc3cec>
   43f2c:	00800804 	movi	r2,32
   43f30:	10c5c83a 	sub	r2,r2,r3
   43f34:	9884983a 	sll	r2,r19,r2
   43f38:	98c6d83a 	srl	r3,r19,r3
   43f3c:	1004c03a 	cmpne	r2,r2,zero
   43f40:	1884b03a 	or	r2,r3,r2
   43f44:	10c001cc 	andi	r3,r2,7
   43f48:	18000426 	beq	r3,zero,43f5c <__mulsf3+0x3b0>
   43f4c:	10c003cc 	andi	r3,r2,15
   43f50:	01000104 	movi	r4,4
   43f54:	19000126 	beq	r3,r4,43f5c <__mulsf3+0x3b0>
   43f58:	1105883a 	add	r2,r2,r4
   43f5c:	10c1002c 	andhi	r3,r2,1024
   43f60:	18000626 	beq	r3,zero,43f7c <__mulsf3+0x3d0>
   43f64:	a829883a 	mov	r20,r21
   43f68:	00c00044 	movi	r3,1
   43f6c:	0009883a 	mov	r4,zero
   43f70:	003f6106 	br	43cf8 <__alt_data_end+0xfffc3cf8>
   43f74:	3821883a 	mov	r16,r7
   43f78:	003fc506 	br	43e90 <__alt_data_end+0xfffc3e90>
   43f7c:	100491ba 	slli	r2,r2,6
   43f80:	a829883a 	mov	r20,r21
   43f84:	0007883a 	mov	r3,zero
   43f88:	1008d27a 	srli	r4,r2,9
   43f8c:	003f5a06 	br	43cf8 <__alt_data_end+0xfffc3cf8>
   43f90:	00802034 	movhi	r2,128
   43f94:	99001034 	orhi	r4,r19,64
   43f98:	10bfffc4 	addi	r2,r2,-1
   43f9c:	a829883a 	mov	r20,r21
   43fa0:	2088703a 	and	r4,r4,r2
   43fa4:	003f9206 	br	43df0 <__alt_data_end+0xfffc3df0>

00043fa8 <__subsf3>:
   43fa8:	defffc04 	addi	sp,sp,-16
   43fac:	280cd5fa 	srli	r6,r5,23
   43fb0:	dc000015 	stw	r16,0(sp)
   43fb4:	01c02034 	movhi	r7,128
   43fb8:	2020d5fa 	srli	r16,r4,23
   43fbc:	39ffffc4 	addi	r7,r7,-1
   43fc0:	3906703a 	and	r3,r7,r4
   43fc4:	dc400115 	stw	r17,4(sp)
   43fc8:	394e703a 	and	r7,r7,r5
   43fcc:	2022d7fa 	srli	r17,r4,31
   43fd0:	dfc00315 	stw	ra,12(sp)
   43fd4:	dc800215 	stw	r18,8(sp)
   43fd8:	31803fcc 	andi	r6,r6,255
   43fdc:	01003fc4 	movi	r4,255
   43fe0:	84003fcc 	andi	r16,r16,255
   43fe4:	180690fa 	slli	r3,r3,3
   43fe8:	2804d7fa 	srli	r2,r5,31
   43fec:	380e90fa 	slli	r7,r7,3
   43ff0:	31006d26 	beq	r6,r4,441a8 <__subsf3+0x200>
   43ff4:	1080005c 	xori	r2,r2,1
   43ff8:	8189c83a 	sub	r4,r16,r6
   43ffc:	14404f26 	beq	r2,r17,4413c <__subsf3+0x194>
   44000:	0100770e 	bge	zero,r4,441e0 <__subsf3+0x238>
   44004:	30001e1e 	bne	r6,zero,44080 <__subsf3+0xd8>
   44008:	38006a1e 	bne	r7,zero,441b4 <__subsf3+0x20c>
   4400c:	188001cc 	andi	r2,r3,7
   44010:	10000426 	beq	r2,zero,44024 <__subsf3+0x7c>
   44014:	188003cc 	andi	r2,r3,15
   44018:	01000104 	movi	r4,4
   4401c:	11000126 	beq	r2,r4,44024 <__subsf3+0x7c>
   44020:	1907883a 	add	r3,r3,r4
   44024:	1881002c 	andhi	r2,r3,1024
   44028:	10003926 	beq	r2,zero,44110 <__subsf3+0x168>
   4402c:	84000044 	addi	r16,r16,1
   44030:	00803fc4 	movi	r2,255
   44034:	80807526 	beq	r16,r2,4420c <__subsf3+0x264>
   44038:	180691ba 	slli	r3,r3,6
   4403c:	8880004c 	andi	r2,r17,1
   44040:	180ad27a 	srli	r5,r3,9
   44044:	84003fcc 	andi	r16,r16,255
   44048:	800695fa 	slli	r3,r16,23
   4404c:	10803fcc 	andi	r2,r2,255
   44050:	01002034 	movhi	r4,128
   44054:	213fffc4 	addi	r4,r4,-1
   44058:	100497fa 	slli	r2,r2,31
   4405c:	2920703a 	and	r16,r5,r4
   44060:	80e0b03a 	or	r16,r16,r3
   44064:	8084b03a 	or	r2,r16,r2
   44068:	dfc00317 	ldw	ra,12(sp)
   4406c:	dc800217 	ldw	r18,8(sp)
   44070:	dc400117 	ldw	r17,4(sp)
   44074:	dc000017 	ldw	r16,0(sp)
   44078:	dec00404 	addi	sp,sp,16
   4407c:	f800283a 	ret
   44080:	00803fc4 	movi	r2,255
   44084:	80bfe126 	beq	r16,r2,4400c <__alt_data_end+0xfffc400c>
   44088:	39c10034 	orhi	r7,r7,1024
   4408c:	008006c4 	movi	r2,27
   44090:	11007416 	blt	r2,r4,44264 <__subsf3+0x2bc>
   44094:	00800804 	movi	r2,32
   44098:	1105c83a 	sub	r2,r2,r4
   4409c:	3884983a 	sll	r2,r7,r2
   440a0:	390ed83a 	srl	r7,r7,r4
   440a4:	1008c03a 	cmpne	r4,r2,zero
   440a8:	390eb03a 	or	r7,r7,r4
   440ac:	19c7c83a 	sub	r3,r3,r7
   440b0:	1881002c 	andhi	r2,r3,1024
   440b4:	10001426 	beq	r2,zero,44108 <__subsf3+0x160>
   440b8:	04810034 	movhi	r18,1024
   440bc:	94bfffc4 	addi	r18,r18,-1
   440c0:	1ca4703a 	and	r18,r3,r18
   440c4:	9009883a 	mov	r4,r18
   440c8:	00462c40 	call	462c4 <__clzsi2>
   440cc:	10bffec4 	addi	r2,r2,-5
   440d0:	90a4983a 	sll	r18,r18,r2
   440d4:	14005116 	blt	r2,r16,4421c <__subsf3+0x274>
   440d8:	1405c83a 	sub	r2,r2,r16
   440dc:	10c00044 	addi	r3,r2,1
   440e0:	00800804 	movi	r2,32
   440e4:	10c5c83a 	sub	r2,r2,r3
   440e8:	9084983a 	sll	r2,r18,r2
   440ec:	90e4d83a 	srl	r18,r18,r3
   440f0:	0021883a 	mov	r16,zero
   440f4:	1006c03a 	cmpne	r3,r2,zero
   440f8:	90c6b03a 	or	r3,r18,r3
   440fc:	003fc306 	br	4400c <__alt_data_end+0xfffc400c>
   44100:	2000e026 	beq	r4,zero,44484 <__subsf3+0x4dc>
   44104:	2007883a 	mov	r3,r4
   44108:	188001cc 	andi	r2,r3,7
   4410c:	103fc11e 	bne	r2,zero,44014 <__alt_data_end+0xfffc4014>
   44110:	180ad0fa 	srli	r5,r3,3
   44114:	00c03fc4 	movi	r3,255
   44118:	8880004c 	andi	r2,r17,1
   4411c:	80c0031e 	bne	r16,r3,4412c <__subsf3+0x184>
   44120:	28006d26 	beq	r5,zero,442d8 <__subsf3+0x330>
   44124:	29401034 	orhi	r5,r5,64
   44128:	043fffc4 	movi	r16,-1
   4412c:	00c02034 	movhi	r3,128
   44130:	18ffffc4 	addi	r3,r3,-1
   44134:	28ca703a 	and	r5,r5,r3
   44138:	003fc206 	br	44044 <__alt_data_end+0xfffc4044>
   4413c:	01003c0e 	bge	zero,r4,44230 <__subsf3+0x288>
   44140:	30002126 	beq	r6,zero,441c8 <__subsf3+0x220>
   44144:	01403fc4 	movi	r5,255
   44148:	817fb026 	beq	r16,r5,4400c <__alt_data_end+0xfffc400c>
   4414c:	39c10034 	orhi	r7,r7,1024
   44150:	014006c4 	movi	r5,27
   44154:	29007416 	blt	r5,r4,44328 <__subsf3+0x380>
   44158:	01400804 	movi	r5,32
   4415c:	290bc83a 	sub	r5,r5,r4
   44160:	394a983a 	sll	r5,r7,r5
   44164:	390ed83a 	srl	r7,r7,r4
   44168:	2808c03a 	cmpne	r4,r5,zero
   4416c:	390eb03a 	or	r7,r7,r4
   44170:	19c7883a 	add	r3,r3,r7
   44174:	1901002c 	andhi	r4,r3,1024
   44178:	20003826 	beq	r4,zero,4425c <__subsf3+0x2b4>
   4417c:	84000044 	addi	r16,r16,1
   44180:	01003fc4 	movi	r4,255
   44184:	81005426 	beq	r16,r4,442d8 <__subsf3+0x330>
   44188:	1023883a 	mov	r17,r2
   4418c:	00bf0034 	movhi	r2,64512
   44190:	10bfffc4 	addi	r2,r2,-1
   44194:	1900004c 	andi	r4,r3,1
   44198:	1886703a 	and	r3,r3,r2
   4419c:	1806d07a 	srli	r3,r3,1
   441a0:	1906b03a 	or	r3,r3,r4
   441a4:	003f9906 	br	4400c <__alt_data_end+0xfffc400c>
   441a8:	383f9226 	beq	r7,zero,43ff4 <__alt_data_end+0xfffc3ff4>
   441ac:	10803fcc 	andi	r2,r2,255
   441b0:	003f9106 	br	43ff8 <__alt_data_end+0xfffc3ff8>
   441b4:	213fffc4 	addi	r4,r4,-1
   441b8:	203fbc26 	beq	r4,zero,440ac <__alt_data_end+0xfffc40ac>
   441bc:	00803fc4 	movi	r2,255
   441c0:	80bfb21e 	bne	r16,r2,4408c <__alt_data_end+0xfffc408c>
   441c4:	003f9106 	br	4400c <__alt_data_end+0xfffc400c>
   441c8:	383f9026 	beq	r7,zero,4400c <__alt_data_end+0xfffc400c>
   441cc:	213fffc4 	addi	r4,r4,-1
   441d0:	203fe726 	beq	r4,zero,44170 <__alt_data_end+0xfffc4170>
   441d4:	01403fc4 	movi	r5,255
   441d8:	817fdd1e 	bne	r16,r5,44150 <__alt_data_end+0xfffc4150>
   441dc:	003f8b06 	br	4400c <__alt_data_end+0xfffc400c>
   441e0:	2000221e 	bne	r4,zero,4426c <__subsf3+0x2c4>
   441e4:	81000044 	addi	r4,r16,1
   441e8:	21003fcc 	andi	r4,r4,255
   441ec:	01400044 	movi	r5,1
   441f0:	2900470e 	bge	r5,r4,44310 <__subsf3+0x368>
   441f4:	19e5c83a 	sub	r18,r3,r7
   441f8:	9141002c 	andhi	r5,r18,1024
   441fc:	28002d26 	beq	r5,zero,442b4 <__subsf3+0x30c>
   44200:	38e5c83a 	sub	r18,r7,r3
   44204:	1023883a 	mov	r17,r2
   44208:	003fae06 	br	440c4 <__alt_data_end+0xfffc40c4>
   4420c:	8880004c 	andi	r2,r17,1
   44210:	043fffc4 	movi	r16,-1
   44214:	000b883a 	mov	r5,zero
   44218:	003f8a06 	br	44044 <__alt_data_end+0xfffc4044>
   4421c:	00ff0034 	movhi	r3,64512
   44220:	18ffffc4 	addi	r3,r3,-1
   44224:	80a1c83a 	sub	r16,r16,r2
   44228:	90c6703a 	and	r3,r18,r3
   4422c:	003f7706 	br	4400c <__alt_data_end+0xfffc400c>
   44230:	2000431e 	bne	r4,zero,44340 <__subsf3+0x398>
   44234:	81000044 	addi	r4,r16,1
   44238:	21803fcc 	andi	r6,r4,255
   4423c:	01400044 	movi	r5,1
   44240:	2980280e 	bge	r5,r6,442e4 <__subsf3+0x33c>
   44244:	01403fc4 	movi	r5,255
   44248:	21402326 	beq	r4,r5,442d8 <__subsf3+0x330>
   4424c:	19c7883a 	add	r3,r3,r7
   44250:	1806d07a 	srli	r3,r3,1
   44254:	2021883a 	mov	r16,r4
   44258:	003f6c06 	br	4400c <__alt_data_end+0xfffc400c>
   4425c:	1023883a 	mov	r17,r2
   44260:	003fa906 	br	44108 <__alt_data_end+0xfffc4108>
   44264:	01c00044 	movi	r7,1
   44268:	003f9006 	br	440ac <__alt_data_end+0xfffc40ac>
   4426c:	8000151e 	bne	r16,zero,442c4 <__subsf3+0x31c>
   44270:	18002f26 	beq	r3,zero,44330 <__subsf3+0x388>
   44274:	0108303a 	nor	r4,zero,r4
   44278:	20000a26 	beq	r4,zero,442a4 <__subsf3+0x2fc>
   4427c:	01403fc4 	movi	r5,255
   44280:	31402b26 	beq	r6,r5,44330 <__subsf3+0x388>
   44284:	014006c4 	movi	r5,27
   44288:	29006e16 	blt	r5,r4,44444 <__subsf3+0x49c>
   4428c:	01400804 	movi	r5,32
   44290:	290bc83a 	sub	r5,r5,r4
   44294:	194a983a 	sll	r5,r3,r5
   44298:	1908d83a 	srl	r4,r3,r4
   4429c:	2806c03a 	cmpne	r3,r5,zero
   442a0:	20c6b03a 	or	r3,r4,r3
   442a4:	38c7c83a 	sub	r3,r7,r3
   442a8:	3021883a 	mov	r16,r6
   442ac:	1023883a 	mov	r17,r2
   442b0:	003f7f06 	br	440b0 <__alt_data_end+0xfffc40b0>
   442b4:	903f831e 	bne	r18,zero,440c4 <__alt_data_end+0xfffc40c4>
   442b8:	0005883a 	mov	r2,zero
   442bc:	0021883a 	mov	r16,zero
   442c0:	003f9a06 	br	4412c <__alt_data_end+0xfffc412c>
   442c4:	01403fc4 	movi	r5,255
   442c8:	31401926 	beq	r6,r5,44330 <__subsf3+0x388>
   442cc:	0109c83a 	sub	r4,zero,r4
   442d0:	18c10034 	orhi	r3,r3,1024
   442d4:	003feb06 	br	44284 <__alt_data_end+0xfffc4284>
   442d8:	043fffc4 	movi	r16,-1
   442dc:	000b883a 	mov	r5,zero
   442e0:	003f5806 	br	44044 <__alt_data_end+0xfffc4044>
   442e4:	8000481e 	bne	r16,zero,44408 <__subsf3+0x460>
   442e8:	18006226 	beq	r3,zero,44474 <__subsf3+0x4cc>
   442ec:	383f4726 	beq	r7,zero,4400c <__alt_data_end+0xfffc400c>
   442f0:	19c7883a 	add	r3,r3,r7
   442f4:	1881002c 	andhi	r2,r3,1024
   442f8:	103f8326 	beq	r2,zero,44108 <__alt_data_end+0xfffc4108>
   442fc:	00bf0034 	movhi	r2,64512
   44300:	10bfffc4 	addi	r2,r2,-1
   44304:	2821883a 	mov	r16,r5
   44308:	1886703a 	and	r3,r3,r2
   4430c:	003f3f06 	br	4400c <__alt_data_end+0xfffc400c>
   44310:	80001c1e 	bne	r16,zero,44384 <__subsf3+0x3dc>
   44314:	1800261e 	bne	r3,zero,443b0 <__subsf3+0x408>
   44318:	38004c26 	beq	r7,zero,4444c <__subsf3+0x4a4>
   4431c:	3807883a 	mov	r3,r7
   44320:	1023883a 	mov	r17,r2
   44324:	003f3906 	br	4400c <__alt_data_end+0xfffc400c>
   44328:	01c00044 	movi	r7,1
   4432c:	003f9006 	br	44170 <__alt_data_end+0xfffc4170>
   44330:	3807883a 	mov	r3,r7
   44334:	3021883a 	mov	r16,r6
   44338:	1023883a 	mov	r17,r2
   4433c:	003f3306 	br	4400c <__alt_data_end+0xfffc400c>
   44340:	8000161e 	bne	r16,zero,4439c <__subsf3+0x3f4>
   44344:	18002d26 	beq	r3,zero,443fc <__subsf3+0x454>
   44348:	0108303a 	nor	r4,zero,r4
   4434c:	20000a26 	beq	r4,zero,44378 <__subsf3+0x3d0>
   44350:	01403fc4 	movi	r5,255
   44354:	31402926 	beq	r6,r5,443fc <__subsf3+0x454>
   44358:	014006c4 	movi	r5,27
   4435c:	29004716 	blt	r5,r4,4447c <__subsf3+0x4d4>
   44360:	01400804 	movi	r5,32
   44364:	290bc83a 	sub	r5,r5,r4
   44368:	194a983a 	sll	r5,r3,r5
   4436c:	1908d83a 	srl	r4,r3,r4
   44370:	2806c03a 	cmpne	r3,r5,zero
   44374:	20c6b03a 	or	r3,r4,r3
   44378:	19c7883a 	add	r3,r3,r7
   4437c:	3021883a 	mov	r16,r6
   44380:	003f7c06 	br	44174 <__alt_data_end+0xfffc4174>
   44384:	1800111e 	bne	r3,zero,443cc <__subsf3+0x424>
   44388:	38003326 	beq	r7,zero,44458 <__subsf3+0x4b0>
   4438c:	3807883a 	mov	r3,r7
   44390:	1023883a 	mov	r17,r2
   44394:	04003fc4 	movi	r16,255
   44398:	003f1c06 	br	4400c <__alt_data_end+0xfffc400c>
   4439c:	01403fc4 	movi	r5,255
   443a0:	31401626 	beq	r6,r5,443fc <__subsf3+0x454>
   443a4:	0109c83a 	sub	r4,zero,r4
   443a8:	18c10034 	orhi	r3,r3,1024
   443ac:	003fea06 	br	44358 <__alt_data_end+0xfffc4358>
   443b0:	383f1626 	beq	r7,zero,4400c <__alt_data_end+0xfffc400c>
   443b4:	19c9c83a 	sub	r4,r3,r7
   443b8:	2141002c 	andhi	r5,r4,1024
   443bc:	283f5026 	beq	r5,zero,44100 <__alt_data_end+0xfffc4100>
   443c0:	38c7c83a 	sub	r3,r7,r3
   443c4:	1023883a 	mov	r17,r2
   443c8:	003f1006 	br	4400c <__alt_data_end+0xfffc400c>
   443cc:	38001b26 	beq	r7,zero,4443c <__subsf3+0x494>
   443d0:	1806d0fa 	srli	r3,r3,3
   443d4:	1900102c 	andhi	r4,r3,64
   443d8:	20000526 	beq	r4,zero,443f0 <__subsf3+0x448>
   443dc:	380ed0fa 	srli	r7,r7,3
   443e0:	3900102c 	andhi	r4,r7,64
   443e4:	2000021e 	bne	r4,zero,443f0 <__subsf3+0x448>
   443e8:	3807883a 	mov	r3,r7
   443ec:	1023883a 	mov	r17,r2
   443f0:	180690fa 	slli	r3,r3,3
   443f4:	04003fc4 	movi	r16,255
   443f8:	003f0406 	br	4400c <__alt_data_end+0xfffc400c>
   443fc:	3807883a 	mov	r3,r7
   44400:	3021883a 	mov	r16,r6
   44404:	003f0106 	br	4400c <__alt_data_end+0xfffc400c>
   44408:	18001726 	beq	r3,zero,44468 <__subsf3+0x4c0>
   4440c:	38000b26 	beq	r7,zero,4443c <__subsf3+0x494>
   44410:	1806d0fa 	srli	r3,r3,3
   44414:	1900102c 	andhi	r4,r3,64
   44418:	20000426 	beq	r4,zero,4442c <__subsf3+0x484>
   4441c:	380ed0fa 	srli	r7,r7,3
   44420:	3900102c 	andhi	r4,r7,64
   44424:	2000011e 	bne	r4,zero,4442c <__subsf3+0x484>
   44428:	3807883a 	mov	r3,r7
   4442c:	180690fa 	slli	r3,r3,3
   44430:	1023883a 	mov	r17,r2
   44434:	04003fc4 	movi	r16,255
   44438:	003ef406 	br	4400c <__alt_data_end+0xfffc400c>
   4443c:	04003fc4 	movi	r16,255
   44440:	003ef206 	br	4400c <__alt_data_end+0xfffc400c>
   44444:	00c00044 	movi	r3,1
   44448:	003f9606 	br	442a4 <__alt_data_end+0xfffc42a4>
   4444c:	000b883a 	mov	r5,zero
   44450:	0005883a 	mov	r2,zero
   44454:	003f3506 	br	4412c <__alt_data_end+0xfffc412c>
   44458:	01402034 	movhi	r5,128
   4445c:	297fffc4 	addi	r5,r5,-1
   44460:	0005883a 	mov	r2,zero
   44464:	003f2f06 	br	44124 <__alt_data_end+0xfffc4124>
   44468:	3807883a 	mov	r3,r7
   4446c:	04003fc4 	movi	r16,255
   44470:	003ee606 	br	4400c <__alt_data_end+0xfffc400c>
   44474:	3807883a 	mov	r3,r7
   44478:	003ee406 	br	4400c <__alt_data_end+0xfffc400c>
   4447c:	00c00044 	movi	r3,1
   44480:	003fbd06 	br	44378 <__alt_data_end+0xfffc4378>
   44484:	0005883a 	mov	r2,zero
   44488:	003f2806 	br	4412c <__alt_data_end+0xfffc412c>

0004448c <__adddf3>:
   4448c:	02c00434 	movhi	r11,16
   44490:	5affffc4 	addi	r11,r11,-1
   44494:	2806d7fa 	srli	r3,r5,31
   44498:	2ad4703a 	and	r10,r5,r11
   4449c:	3ad2703a 	and	r9,r7,r11
   444a0:	3804d53a 	srli	r2,r7,20
   444a4:	3018d77a 	srli	r12,r6,29
   444a8:	280ad53a 	srli	r5,r5,20
   444ac:	501490fa 	slli	r10,r10,3
   444b0:	2010d77a 	srli	r8,r4,29
   444b4:	481290fa 	slli	r9,r9,3
   444b8:	380ed7fa 	srli	r7,r7,31
   444bc:	defffb04 	addi	sp,sp,-20
   444c0:	dc800215 	stw	r18,8(sp)
   444c4:	dc400115 	stw	r17,4(sp)
   444c8:	dc000015 	stw	r16,0(sp)
   444cc:	dfc00415 	stw	ra,16(sp)
   444d0:	dcc00315 	stw	r19,12(sp)
   444d4:	1c803fcc 	andi	r18,r3,255
   444d8:	2c01ffcc 	andi	r16,r5,2047
   444dc:	5210b03a 	or	r8,r10,r8
   444e0:	202290fa 	slli	r17,r4,3
   444e4:	1081ffcc 	andi	r2,r2,2047
   444e8:	4b12b03a 	or	r9,r9,r12
   444ec:	300c90fa 	slli	r6,r6,3
   444f0:	91c07526 	beq	r18,r7,446c8 <__adddf3+0x23c>
   444f4:	8087c83a 	sub	r3,r16,r2
   444f8:	00c0ab0e 	bge	zero,r3,447a8 <__adddf3+0x31c>
   444fc:	10002a1e 	bne	r2,zero,445a8 <__adddf3+0x11c>
   44500:	4984b03a 	or	r2,r9,r6
   44504:	1000961e 	bne	r2,zero,44760 <__adddf3+0x2d4>
   44508:	888001cc 	andi	r2,r17,7
   4450c:	10000726 	beq	r2,zero,4452c <__adddf3+0xa0>
   44510:	888003cc 	andi	r2,r17,15
   44514:	00c00104 	movi	r3,4
   44518:	10c00426 	beq	r2,r3,4452c <__adddf3+0xa0>
   4451c:	88c7883a 	add	r3,r17,r3
   44520:	1c63803a 	cmpltu	r17,r3,r17
   44524:	4451883a 	add	r8,r8,r17
   44528:	1823883a 	mov	r17,r3
   4452c:	4080202c 	andhi	r2,r8,128
   44530:	10005926 	beq	r2,zero,44698 <__adddf3+0x20c>
   44534:	84000044 	addi	r16,r16,1
   44538:	0081ffc4 	movi	r2,2047
   4453c:	8080ba26 	beq	r16,r2,44828 <__adddf3+0x39c>
   44540:	00bfe034 	movhi	r2,65408
   44544:	10bfffc4 	addi	r2,r2,-1
   44548:	4090703a 	and	r8,r8,r2
   4454c:	4004977a 	slli	r2,r8,29
   44550:	4010927a 	slli	r8,r8,9
   44554:	8822d0fa 	srli	r17,r17,3
   44558:	8401ffcc 	andi	r16,r16,2047
   4455c:	4010d33a 	srli	r8,r8,12
   44560:	9007883a 	mov	r3,r18
   44564:	1444b03a 	or	r2,r2,r17
   44568:	8401ffcc 	andi	r16,r16,2047
   4456c:	8020953a 	slli	r16,r16,20
   44570:	18c03fcc 	andi	r3,r3,255
   44574:	01000434 	movhi	r4,16
   44578:	213fffc4 	addi	r4,r4,-1
   4457c:	180697fa 	slli	r3,r3,31
   44580:	4110703a 	and	r8,r8,r4
   44584:	4410b03a 	or	r8,r8,r16
   44588:	40c6b03a 	or	r3,r8,r3
   4458c:	dfc00417 	ldw	ra,16(sp)
   44590:	dcc00317 	ldw	r19,12(sp)
   44594:	dc800217 	ldw	r18,8(sp)
   44598:	dc400117 	ldw	r17,4(sp)
   4459c:	dc000017 	ldw	r16,0(sp)
   445a0:	dec00504 	addi	sp,sp,20
   445a4:	f800283a 	ret
   445a8:	0081ffc4 	movi	r2,2047
   445ac:	80bfd626 	beq	r16,r2,44508 <__alt_data_end+0xfffc4508>
   445b0:	4a402034 	orhi	r9,r9,128
   445b4:	00800e04 	movi	r2,56
   445b8:	10c09f16 	blt	r2,r3,44838 <__adddf3+0x3ac>
   445bc:	008007c4 	movi	r2,31
   445c0:	10c0c216 	blt	r2,r3,448cc <__adddf3+0x440>
   445c4:	00800804 	movi	r2,32
   445c8:	10c5c83a 	sub	r2,r2,r3
   445cc:	488a983a 	sll	r5,r9,r2
   445d0:	30c8d83a 	srl	r4,r6,r3
   445d4:	3084983a 	sll	r2,r6,r2
   445d8:	48c6d83a 	srl	r3,r9,r3
   445dc:	290cb03a 	or	r6,r5,r4
   445e0:	1004c03a 	cmpne	r2,r2,zero
   445e4:	308cb03a 	or	r6,r6,r2
   445e8:	898dc83a 	sub	r6,r17,r6
   445ec:	89a3803a 	cmpltu	r17,r17,r6
   445f0:	40d1c83a 	sub	r8,r8,r3
   445f4:	4451c83a 	sub	r8,r8,r17
   445f8:	3023883a 	mov	r17,r6
   445fc:	4080202c 	andhi	r2,r8,128
   44600:	10002326 	beq	r2,zero,44690 <__adddf3+0x204>
   44604:	04c02034 	movhi	r19,128
   44608:	9cffffc4 	addi	r19,r19,-1
   4460c:	44e6703a 	and	r19,r8,r19
   44610:	98007626 	beq	r19,zero,447ec <__adddf3+0x360>
   44614:	9809883a 	mov	r4,r19
   44618:	00462c40 	call	462c4 <__clzsi2>
   4461c:	10fffe04 	addi	r3,r2,-8
   44620:	010007c4 	movi	r4,31
   44624:	20c07716 	blt	r4,r3,44804 <__adddf3+0x378>
   44628:	00800804 	movi	r2,32
   4462c:	10c5c83a 	sub	r2,r2,r3
   44630:	8884d83a 	srl	r2,r17,r2
   44634:	98d0983a 	sll	r8,r19,r3
   44638:	88e2983a 	sll	r17,r17,r3
   4463c:	1204b03a 	or	r2,r2,r8
   44640:	1c007416 	blt	r3,r16,44814 <__adddf3+0x388>
   44644:	1c21c83a 	sub	r16,r3,r16
   44648:	82000044 	addi	r8,r16,1
   4464c:	00c007c4 	movi	r3,31
   44650:	1a009116 	blt	r3,r8,44898 <__adddf3+0x40c>
   44654:	00c00804 	movi	r3,32
   44658:	1a07c83a 	sub	r3,r3,r8
   4465c:	8a08d83a 	srl	r4,r17,r8
   44660:	88e2983a 	sll	r17,r17,r3
   44664:	10c6983a 	sll	r3,r2,r3
   44668:	1210d83a 	srl	r8,r2,r8
   4466c:	8804c03a 	cmpne	r2,r17,zero
   44670:	1906b03a 	or	r3,r3,r4
   44674:	18a2b03a 	or	r17,r3,r2
   44678:	0021883a 	mov	r16,zero
   4467c:	003fa206 	br	44508 <__alt_data_end+0xfffc4508>
   44680:	1890b03a 	or	r8,r3,r2
   44684:	40017d26 	beq	r8,zero,44c7c <__adddf3+0x7f0>
   44688:	1011883a 	mov	r8,r2
   4468c:	1823883a 	mov	r17,r3
   44690:	888001cc 	andi	r2,r17,7
   44694:	103f9e1e 	bne	r2,zero,44510 <__alt_data_end+0xfffc4510>
   44698:	4004977a 	slli	r2,r8,29
   4469c:	8822d0fa 	srli	r17,r17,3
   446a0:	4010d0fa 	srli	r8,r8,3
   446a4:	9007883a 	mov	r3,r18
   446a8:	1444b03a 	or	r2,r2,r17
   446ac:	0101ffc4 	movi	r4,2047
   446b0:	81002426 	beq	r16,r4,44744 <__adddf3+0x2b8>
   446b4:	8120703a 	and	r16,r16,r4
   446b8:	01000434 	movhi	r4,16
   446bc:	213fffc4 	addi	r4,r4,-1
   446c0:	4110703a 	and	r8,r8,r4
   446c4:	003fa806 	br	44568 <__alt_data_end+0xfffc4568>
   446c8:	8089c83a 	sub	r4,r16,r2
   446cc:	01005e0e 	bge	zero,r4,44848 <__adddf3+0x3bc>
   446d0:	10002b26 	beq	r2,zero,44780 <__adddf3+0x2f4>
   446d4:	0081ffc4 	movi	r2,2047
   446d8:	80bf8b26 	beq	r16,r2,44508 <__alt_data_end+0xfffc4508>
   446dc:	4a402034 	orhi	r9,r9,128
   446e0:	00800e04 	movi	r2,56
   446e4:	1100a40e 	bge	r2,r4,44978 <__adddf3+0x4ec>
   446e8:	498cb03a 	or	r6,r9,r6
   446ec:	300ac03a 	cmpne	r5,r6,zero
   446f0:	0013883a 	mov	r9,zero
   446f4:	2c4b883a 	add	r5,r5,r17
   446f8:	2c63803a 	cmpltu	r17,r5,r17
   446fc:	4a11883a 	add	r8,r9,r8
   44700:	8a11883a 	add	r8,r17,r8
   44704:	2823883a 	mov	r17,r5
   44708:	4080202c 	andhi	r2,r8,128
   4470c:	103fe026 	beq	r2,zero,44690 <__alt_data_end+0xfffc4690>
   44710:	84000044 	addi	r16,r16,1
   44714:	0081ffc4 	movi	r2,2047
   44718:	8080d226 	beq	r16,r2,44a64 <__adddf3+0x5d8>
   4471c:	00bfe034 	movhi	r2,65408
   44720:	10bfffc4 	addi	r2,r2,-1
   44724:	4090703a 	and	r8,r8,r2
   44728:	880ad07a 	srli	r5,r17,1
   4472c:	400897fa 	slli	r4,r8,31
   44730:	88c0004c 	andi	r3,r17,1
   44734:	28e2b03a 	or	r17,r5,r3
   44738:	4010d07a 	srli	r8,r8,1
   4473c:	2462b03a 	or	r17,r4,r17
   44740:	003f7106 	br	44508 <__alt_data_end+0xfffc4508>
   44744:	4088b03a 	or	r4,r8,r2
   44748:	20014526 	beq	r4,zero,44c60 <__adddf3+0x7d4>
   4474c:	01000434 	movhi	r4,16
   44750:	42000234 	orhi	r8,r8,8
   44754:	213fffc4 	addi	r4,r4,-1
   44758:	4110703a 	and	r8,r8,r4
   4475c:	003f8206 	br	44568 <__alt_data_end+0xfffc4568>
   44760:	18ffffc4 	addi	r3,r3,-1
   44764:	1800491e 	bne	r3,zero,4488c <__adddf3+0x400>
   44768:	898bc83a 	sub	r5,r17,r6
   4476c:	8963803a 	cmpltu	r17,r17,r5
   44770:	4251c83a 	sub	r8,r8,r9
   44774:	4451c83a 	sub	r8,r8,r17
   44778:	2823883a 	mov	r17,r5
   4477c:	003f9f06 	br	445fc <__alt_data_end+0xfffc45fc>
   44780:	4984b03a 	or	r2,r9,r6
   44784:	103f6026 	beq	r2,zero,44508 <__alt_data_end+0xfffc4508>
   44788:	213fffc4 	addi	r4,r4,-1
   4478c:	2000931e 	bne	r4,zero,449dc <__adddf3+0x550>
   44790:	898d883a 	add	r6,r17,r6
   44794:	3463803a 	cmpltu	r17,r6,r17
   44798:	4251883a 	add	r8,r8,r9
   4479c:	8a11883a 	add	r8,r17,r8
   447a0:	3023883a 	mov	r17,r6
   447a4:	003fd806 	br	44708 <__alt_data_end+0xfffc4708>
   447a8:	1800541e 	bne	r3,zero,448fc <__adddf3+0x470>
   447ac:	80800044 	addi	r2,r16,1
   447b0:	1081ffcc 	andi	r2,r2,2047
   447b4:	00c00044 	movi	r3,1
   447b8:	1880a00e 	bge	r3,r2,44a3c <__adddf3+0x5b0>
   447bc:	8989c83a 	sub	r4,r17,r6
   447c0:	8905803a 	cmpltu	r2,r17,r4
   447c4:	4267c83a 	sub	r19,r8,r9
   447c8:	98a7c83a 	sub	r19,r19,r2
   447cc:	9880202c 	andhi	r2,r19,128
   447d0:	10006326 	beq	r2,zero,44960 <__adddf3+0x4d4>
   447d4:	3463c83a 	sub	r17,r6,r17
   447d8:	4a07c83a 	sub	r3,r9,r8
   447dc:	344d803a 	cmpltu	r6,r6,r17
   447e0:	19a7c83a 	sub	r19,r3,r6
   447e4:	3825883a 	mov	r18,r7
   447e8:	983f8a1e 	bne	r19,zero,44614 <__alt_data_end+0xfffc4614>
   447ec:	8809883a 	mov	r4,r17
   447f0:	00462c40 	call	462c4 <__clzsi2>
   447f4:	10800804 	addi	r2,r2,32
   447f8:	10fffe04 	addi	r3,r2,-8
   447fc:	010007c4 	movi	r4,31
   44800:	20ff890e 	bge	r4,r3,44628 <__alt_data_end+0xfffc4628>
   44804:	10bff604 	addi	r2,r2,-40
   44808:	8884983a 	sll	r2,r17,r2
   4480c:	0023883a 	mov	r17,zero
   44810:	1c3f8c0e 	bge	r3,r16,44644 <__alt_data_end+0xfffc4644>
   44814:	023fe034 	movhi	r8,65408
   44818:	423fffc4 	addi	r8,r8,-1
   4481c:	80e1c83a 	sub	r16,r16,r3
   44820:	1210703a 	and	r8,r2,r8
   44824:	003f3806 	br	44508 <__alt_data_end+0xfffc4508>
   44828:	9007883a 	mov	r3,r18
   4482c:	0011883a 	mov	r8,zero
   44830:	0005883a 	mov	r2,zero
   44834:	003f4c06 	br	44568 <__alt_data_end+0xfffc4568>
   44838:	498cb03a 	or	r6,r9,r6
   4483c:	300cc03a 	cmpne	r6,r6,zero
   44840:	0007883a 	mov	r3,zero
   44844:	003f6806 	br	445e8 <__alt_data_end+0xfffc45e8>
   44848:	20009c1e 	bne	r4,zero,44abc <__adddf3+0x630>
   4484c:	80800044 	addi	r2,r16,1
   44850:	1141ffcc 	andi	r5,r2,2047
   44854:	01000044 	movi	r4,1
   44858:	2140670e 	bge	r4,r5,449f8 <__adddf3+0x56c>
   4485c:	0101ffc4 	movi	r4,2047
   44860:	11007f26 	beq	r2,r4,44a60 <__adddf3+0x5d4>
   44864:	898d883a 	add	r6,r17,r6
   44868:	4247883a 	add	r3,r8,r9
   4486c:	3451803a 	cmpltu	r8,r6,r17
   44870:	40d1883a 	add	r8,r8,r3
   44874:	402297fa 	slli	r17,r8,31
   44878:	300cd07a 	srli	r6,r6,1
   4487c:	4010d07a 	srli	r8,r8,1
   44880:	1021883a 	mov	r16,r2
   44884:	89a2b03a 	or	r17,r17,r6
   44888:	003f1f06 	br	44508 <__alt_data_end+0xfffc4508>
   4488c:	0081ffc4 	movi	r2,2047
   44890:	80bf481e 	bne	r16,r2,445b4 <__alt_data_end+0xfffc45b4>
   44894:	003f1c06 	br	44508 <__alt_data_end+0xfffc4508>
   44898:	843ff844 	addi	r16,r16,-31
   4489c:	01000804 	movi	r4,32
   448a0:	1406d83a 	srl	r3,r2,r16
   448a4:	41005026 	beq	r8,r4,449e8 <__adddf3+0x55c>
   448a8:	01001004 	movi	r4,64
   448ac:	2211c83a 	sub	r8,r4,r8
   448b0:	1204983a 	sll	r2,r2,r8
   448b4:	88a2b03a 	or	r17,r17,r2
   448b8:	8822c03a 	cmpne	r17,r17,zero
   448bc:	1c62b03a 	or	r17,r3,r17
   448c0:	0011883a 	mov	r8,zero
   448c4:	0021883a 	mov	r16,zero
   448c8:	003f7106 	br	44690 <__alt_data_end+0xfffc4690>
   448cc:	193ff804 	addi	r4,r3,-32
   448d0:	00800804 	movi	r2,32
   448d4:	4908d83a 	srl	r4,r9,r4
   448d8:	18804526 	beq	r3,r2,449f0 <__adddf3+0x564>
   448dc:	00801004 	movi	r2,64
   448e0:	10c5c83a 	sub	r2,r2,r3
   448e4:	4886983a 	sll	r3,r9,r2
   448e8:	198cb03a 	or	r6,r3,r6
   448ec:	300cc03a 	cmpne	r6,r6,zero
   448f0:	218cb03a 	or	r6,r4,r6
   448f4:	0007883a 	mov	r3,zero
   448f8:	003f3b06 	br	445e8 <__alt_data_end+0xfffc45e8>
   448fc:	80002a26 	beq	r16,zero,449a8 <__adddf3+0x51c>
   44900:	0101ffc4 	movi	r4,2047
   44904:	11006826 	beq	r2,r4,44aa8 <__adddf3+0x61c>
   44908:	00c7c83a 	sub	r3,zero,r3
   4490c:	42002034 	orhi	r8,r8,128
   44910:	01000e04 	movi	r4,56
   44914:	20c07c16 	blt	r4,r3,44b08 <__adddf3+0x67c>
   44918:	010007c4 	movi	r4,31
   4491c:	20c0da16 	blt	r4,r3,44c88 <__adddf3+0x7fc>
   44920:	01000804 	movi	r4,32
   44924:	20c9c83a 	sub	r4,r4,r3
   44928:	4114983a 	sll	r10,r8,r4
   4492c:	88cad83a 	srl	r5,r17,r3
   44930:	8908983a 	sll	r4,r17,r4
   44934:	40c6d83a 	srl	r3,r8,r3
   44938:	5162b03a 	or	r17,r10,r5
   4493c:	2008c03a 	cmpne	r4,r4,zero
   44940:	8922b03a 	or	r17,r17,r4
   44944:	3463c83a 	sub	r17,r6,r17
   44948:	48c7c83a 	sub	r3,r9,r3
   4494c:	344d803a 	cmpltu	r6,r6,r17
   44950:	1991c83a 	sub	r8,r3,r6
   44954:	1021883a 	mov	r16,r2
   44958:	3825883a 	mov	r18,r7
   4495c:	003f2706 	br	445fc <__alt_data_end+0xfffc45fc>
   44960:	24d0b03a 	or	r8,r4,r19
   44964:	40001b1e 	bne	r8,zero,449d4 <__adddf3+0x548>
   44968:	0005883a 	mov	r2,zero
   4496c:	0007883a 	mov	r3,zero
   44970:	0021883a 	mov	r16,zero
   44974:	003f4d06 	br	446ac <__alt_data_end+0xfffc46ac>
   44978:	008007c4 	movi	r2,31
   4497c:	11003c16 	blt	r2,r4,44a70 <__adddf3+0x5e4>
   44980:	00800804 	movi	r2,32
   44984:	1105c83a 	sub	r2,r2,r4
   44988:	488e983a 	sll	r7,r9,r2
   4498c:	310ad83a 	srl	r5,r6,r4
   44990:	3084983a 	sll	r2,r6,r2
   44994:	4912d83a 	srl	r9,r9,r4
   44998:	394ab03a 	or	r5,r7,r5
   4499c:	1004c03a 	cmpne	r2,r2,zero
   449a0:	288ab03a 	or	r5,r5,r2
   449a4:	003f5306 	br	446f4 <__alt_data_end+0xfffc46f4>
   449a8:	4448b03a 	or	r4,r8,r17
   449ac:	20003e26 	beq	r4,zero,44aa8 <__adddf3+0x61c>
   449b0:	00c6303a 	nor	r3,zero,r3
   449b4:	18003a1e 	bne	r3,zero,44aa0 <__adddf3+0x614>
   449b8:	3463c83a 	sub	r17,r6,r17
   449bc:	4a07c83a 	sub	r3,r9,r8
   449c0:	344d803a 	cmpltu	r6,r6,r17
   449c4:	1991c83a 	sub	r8,r3,r6
   449c8:	1021883a 	mov	r16,r2
   449cc:	3825883a 	mov	r18,r7
   449d0:	003f0a06 	br	445fc <__alt_data_end+0xfffc45fc>
   449d4:	2023883a 	mov	r17,r4
   449d8:	003f0d06 	br	44610 <__alt_data_end+0xfffc4610>
   449dc:	0081ffc4 	movi	r2,2047
   449e0:	80bf3f1e 	bne	r16,r2,446e0 <__alt_data_end+0xfffc46e0>
   449e4:	003ec806 	br	44508 <__alt_data_end+0xfffc4508>
   449e8:	0005883a 	mov	r2,zero
   449ec:	003fb106 	br	448b4 <__alt_data_end+0xfffc48b4>
   449f0:	0007883a 	mov	r3,zero
   449f4:	003fbc06 	br	448e8 <__alt_data_end+0xfffc48e8>
   449f8:	4444b03a 	or	r2,r8,r17
   449fc:	8000871e 	bne	r16,zero,44c1c <__adddf3+0x790>
   44a00:	1000ba26 	beq	r2,zero,44cec <__adddf3+0x860>
   44a04:	4984b03a 	or	r2,r9,r6
   44a08:	103ebf26 	beq	r2,zero,44508 <__alt_data_end+0xfffc4508>
   44a0c:	8985883a 	add	r2,r17,r6
   44a10:	4247883a 	add	r3,r8,r9
   44a14:	1451803a 	cmpltu	r8,r2,r17
   44a18:	40d1883a 	add	r8,r8,r3
   44a1c:	40c0202c 	andhi	r3,r8,128
   44a20:	1023883a 	mov	r17,r2
   44a24:	183f1a26 	beq	r3,zero,44690 <__alt_data_end+0xfffc4690>
   44a28:	00bfe034 	movhi	r2,65408
   44a2c:	10bfffc4 	addi	r2,r2,-1
   44a30:	2021883a 	mov	r16,r4
   44a34:	4090703a 	and	r8,r8,r2
   44a38:	003eb306 	br	44508 <__alt_data_end+0xfffc4508>
   44a3c:	4444b03a 	or	r2,r8,r17
   44a40:	8000291e 	bne	r16,zero,44ae8 <__adddf3+0x65c>
   44a44:	10004b1e 	bne	r2,zero,44b74 <__adddf3+0x6e8>
   44a48:	4990b03a 	or	r8,r9,r6
   44a4c:	40008b26 	beq	r8,zero,44c7c <__adddf3+0x7f0>
   44a50:	4811883a 	mov	r8,r9
   44a54:	3023883a 	mov	r17,r6
   44a58:	3825883a 	mov	r18,r7
   44a5c:	003eaa06 	br	44508 <__alt_data_end+0xfffc4508>
   44a60:	1021883a 	mov	r16,r2
   44a64:	0011883a 	mov	r8,zero
   44a68:	0005883a 	mov	r2,zero
   44a6c:	003f0f06 	br	446ac <__alt_data_end+0xfffc46ac>
   44a70:	217ff804 	addi	r5,r4,-32
   44a74:	00800804 	movi	r2,32
   44a78:	494ad83a 	srl	r5,r9,r5
   44a7c:	20807d26 	beq	r4,r2,44c74 <__adddf3+0x7e8>
   44a80:	00801004 	movi	r2,64
   44a84:	1109c83a 	sub	r4,r2,r4
   44a88:	4912983a 	sll	r9,r9,r4
   44a8c:	498cb03a 	or	r6,r9,r6
   44a90:	300cc03a 	cmpne	r6,r6,zero
   44a94:	298ab03a 	or	r5,r5,r6
   44a98:	0013883a 	mov	r9,zero
   44a9c:	003f1506 	br	446f4 <__alt_data_end+0xfffc46f4>
   44aa0:	0101ffc4 	movi	r4,2047
   44aa4:	113f9a1e 	bne	r2,r4,44910 <__alt_data_end+0xfffc4910>
   44aa8:	4811883a 	mov	r8,r9
   44aac:	3023883a 	mov	r17,r6
   44ab0:	1021883a 	mov	r16,r2
   44ab4:	3825883a 	mov	r18,r7
   44ab8:	003e9306 	br	44508 <__alt_data_end+0xfffc4508>
   44abc:	8000161e 	bne	r16,zero,44b18 <__adddf3+0x68c>
   44ac0:	444ab03a 	or	r5,r8,r17
   44ac4:	28005126 	beq	r5,zero,44c0c <__adddf3+0x780>
   44ac8:	0108303a 	nor	r4,zero,r4
   44acc:	20004d1e 	bne	r4,zero,44c04 <__adddf3+0x778>
   44ad0:	89a3883a 	add	r17,r17,r6
   44ad4:	4253883a 	add	r9,r8,r9
   44ad8:	898d803a 	cmpltu	r6,r17,r6
   44adc:	3251883a 	add	r8,r6,r9
   44ae0:	1021883a 	mov	r16,r2
   44ae4:	003f0806 	br	44708 <__alt_data_end+0xfffc4708>
   44ae8:	1000301e 	bne	r2,zero,44bac <__adddf3+0x720>
   44aec:	4984b03a 	or	r2,r9,r6
   44af0:	10007126 	beq	r2,zero,44cb8 <__adddf3+0x82c>
   44af4:	4811883a 	mov	r8,r9
   44af8:	3023883a 	mov	r17,r6
   44afc:	3825883a 	mov	r18,r7
   44b00:	0401ffc4 	movi	r16,2047
   44b04:	003e8006 	br	44508 <__alt_data_end+0xfffc4508>
   44b08:	4462b03a 	or	r17,r8,r17
   44b0c:	8822c03a 	cmpne	r17,r17,zero
   44b10:	0007883a 	mov	r3,zero
   44b14:	003f8b06 	br	44944 <__alt_data_end+0xfffc4944>
   44b18:	0141ffc4 	movi	r5,2047
   44b1c:	11403b26 	beq	r2,r5,44c0c <__adddf3+0x780>
   44b20:	0109c83a 	sub	r4,zero,r4
   44b24:	42002034 	orhi	r8,r8,128
   44b28:	01400e04 	movi	r5,56
   44b2c:	29006716 	blt	r5,r4,44ccc <__adddf3+0x840>
   44b30:	014007c4 	movi	r5,31
   44b34:	29007016 	blt	r5,r4,44cf8 <__adddf3+0x86c>
   44b38:	01400804 	movi	r5,32
   44b3c:	290bc83a 	sub	r5,r5,r4
   44b40:	4154983a 	sll	r10,r8,r5
   44b44:	890ed83a 	srl	r7,r17,r4
   44b48:	894a983a 	sll	r5,r17,r5
   44b4c:	4108d83a 	srl	r4,r8,r4
   44b50:	51e2b03a 	or	r17,r10,r7
   44b54:	280ac03a 	cmpne	r5,r5,zero
   44b58:	8962b03a 	or	r17,r17,r5
   44b5c:	89a3883a 	add	r17,r17,r6
   44b60:	2253883a 	add	r9,r4,r9
   44b64:	898d803a 	cmpltu	r6,r17,r6
   44b68:	3251883a 	add	r8,r6,r9
   44b6c:	1021883a 	mov	r16,r2
   44b70:	003ee506 	br	44708 <__alt_data_end+0xfffc4708>
   44b74:	4984b03a 	or	r2,r9,r6
   44b78:	103e6326 	beq	r2,zero,44508 <__alt_data_end+0xfffc4508>
   44b7c:	8987c83a 	sub	r3,r17,r6
   44b80:	88c9803a 	cmpltu	r4,r17,r3
   44b84:	4245c83a 	sub	r2,r8,r9
   44b88:	1105c83a 	sub	r2,r2,r4
   44b8c:	1100202c 	andhi	r4,r2,128
   44b90:	203ebb26 	beq	r4,zero,44680 <__alt_data_end+0xfffc4680>
   44b94:	3463c83a 	sub	r17,r6,r17
   44b98:	4a07c83a 	sub	r3,r9,r8
   44b9c:	344d803a 	cmpltu	r6,r6,r17
   44ba0:	1991c83a 	sub	r8,r3,r6
   44ba4:	3825883a 	mov	r18,r7
   44ba8:	003e5706 	br	44508 <__alt_data_end+0xfffc4508>
   44bac:	4984b03a 	or	r2,r9,r6
   44bb0:	10002e26 	beq	r2,zero,44c6c <__adddf3+0x7e0>
   44bb4:	4004d0fa 	srli	r2,r8,3
   44bb8:	8822d0fa 	srli	r17,r17,3
   44bbc:	4010977a 	slli	r8,r8,29
   44bc0:	10c0022c 	andhi	r3,r2,8
   44bc4:	4462b03a 	or	r17,r8,r17
   44bc8:	18000826 	beq	r3,zero,44bec <__adddf3+0x760>
   44bcc:	4808d0fa 	srli	r4,r9,3
   44bd0:	20c0022c 	andhi	r3,r4,8
   44bd4:	1800051e 	bne	r3,zero,44bec <__adddf3+0x760>
   44bd8:	300cd0fa 	srli	r6,r6,3
   44bdc:	4806977a 	slli	r3,r9,29
   44be0:	2005883a 	mov	r2,r4
   44be4:	3825883a 	mov	r18,r7
   44be8:	19a2b03a 	or	r17,r3,r6
   44bec:	8810d77a 	srli	r8,r17,29
   44bf0:	100490fa 	slli	r2,r2,3
   44bf4:	882290fa 	slli	r17,r17,3
   44bf8:	0401ffc4 	movi	r16,2047
   44bfc:	4090b03a 	or	r8,r8,r2
   44c00:	003e4106 	br	44508 <__alt_data_end+0xfffc4508>
   44c04:	0141ffc4 	movi	r5,2047
   44c08:	117fc71e 	bne	r2,r5,44b28 <__alt_data_end+0xfffc4b28>
   44c0c:	4811883a 	mov	r8,r9
   44c10:	3023883a 	mov	r17,r6
   44c14:	1021883a 	mov	r16,r2
   44c18:	003e3b06 	br	44508 <__alt_data_end+0xfffc4508>
   44c1c:	10002f26 	beq	r2,zero,44cdc <__adddf3+0x850>
   44c20:	4984b03a 	or	r2,r9,r6
   44c24:	10001126 	beq	r2,zero,44c6c <__adddf3+0x7e0>
   44c28:	4004d0fa 	srli	r2,r8,3
   44c2c:	8822d0fa 	srli	r17,r17,3
   44c30:	4010977a 	slli	r8,r8,29
   44c34:	10c0022c 	andhi	r3,r2,8
   44c38:	4462b03a 	or	r17,r8,r17
   44c3c:	183feb26 	beq	r3,zero,44bec <__alt_data_end+0xfffc4bec>
   44c40:	4808d0fa 	srli	r4,r9,3
   44c44:	20c0022c 	andhi	r3,r4,8
   44c48:	183fe81e 	bne	r3,zero,44bec <__alt_data_end+0xfffc4bec>
   44c4c:	300cd0fa 	srli	r6,r6,3
   44c50:	4806977a 	slli	r3,r9,29
   44c54:	2005883a 	mov	r2,r4
   44c58:	19a2b03a 	or	r17,r3,r6
   44c5c:	003fe306 	br	44bec <__alt_data_end+0xfffc4bec>
   44c60:	0011883a 	mov	r8,zero
   44c64:	0005883a 	mov	r2,zero
   44c68:	003e3f06 	br	44568 <__alt_data_end+0xfffc4568>
   44c6c:	0401ffc4 	movi	r16,2047
   44c70:	003e2506 	br	44508 <__alt_data_end+0xfffc4508>
   44c74:	0013883a 	mov	r9,zero
   44c78:	003f8406 	br	44a8c <__alt_data_end+0xfffc4a8c>
   44c7c:	0005883a 	mov	r2,zero
   44c80:	0007883a 	mov	r3,zero
   44c84:	003e8906 	br	446ac <__alt_data_end+0xfffc46ac>
   44c88:	197ff804 	addi	r5,r3,-32
   44c8c:	01000804 	movi	r4,32
   44c90:	414ad83a 	srl	r5,r8,r5
   44c94:	19002426 	beq	r3,r4,44d28 <__adddf3+0x89c>
   44c98:	01001004 	movi	r4,64
   44c9c:	20c7c83a 	sub	r3,r4,r3
   44ca0:	40c6983a 	sll	r3,r8,r3
   44ca4:	1c46b03a 	or	r3,r3,r17
   44ca8:	1806c03a 	cmpne	r3,r3,zero
   44cac:	28e2b03a 	or	r17,r5,r3
   44cb0:	0007883a 	mov	r3,zero
   44cb4:	003f2306 	br	44944 <__alt_data_end+0xfffc4944>
   44cb8:	0007883a 	mov	r3,zero
   44cbc:	5811883a 	mov	r8,r11
   44cc0:	00bfffc4 	movi	r2,-1
   44cc4:	0401ffc4 	movi	r16,2047
   44cc8:	003e7806 	br	446ac <__alt_data_end+0xfffc46ac>
   44ccc:	4462b03a 	or	r17,r8,r17
   44cd0:	8822c03a 	cmpne	r17,r17,zero
   44cd4:	0009883a 	mov	r4,zero
   44cd8:	003fa006 	br	44b5c <__alt_data_end+0xfffc4b5c>
   44cdc:	4811883a 	mov	r8,r9
   44ce0:	3023883a 	mov	r17,r6
   44ce4:	0401ffc4 	movi	r16,2047
   44ce8:	003e0706 	br	44508 <__alt_data_end+0xfffc4508>
   44cec:	4811883a 	mov	r8,r9
   44cf0:	3023883a 	mov	r17,r6
   44cf4:	003e0406 	br	44508 <__alt_data_end+0xfffc4508>
   44cf8:	21fff804 	addi	r7,r4,-32
   44cfc:	01400804 	movi	r5,32
   44d00:	41ced83a 	srl	r7,r8,r7
   44d04:	21400a26 	beq	r4,r5,44d30 <__adddf3+0x8a4>
   44d08:	01401004 	movi	r5,64
   44d0c:	2909c83a 	sub	r4,r5,r4
   44d10:	4108983a 	sll	r4,r8,r4
   44d14:	2448b03a 	or	r4,r4,r17
   44d18:	2008c03a 	cmpne	r4,r4,zero
   44d1c:	3922b03a 	or	r17,r7,r4
   44d20:	0009883a 	mov	r4,zero
   44d24:	003f8d06 	br	44b5c <__alt_data_end+0xfffc4b5c>
   44d28:	0007883a 	mov	r3,zero
   44d2c:	003fdd06 	br	44ca4 <__alt_data_end+0xfffc4ca4>
   44d30:	0009883a 	mov	r4,zero
   44d34:	003ff706 	br	44d14 <__alt_data_end+0xfffc4d14>

00044d38 <__eqdf2>:
   44d38:	2804d53a 	srli	r2,r5,20
   44d3c:	3806d53a 	srli	r3,r7,20
   44d40:	02000434 	movhi	r8,16
   44d44:	423fffc4 	addi	r8,r8,-1
   44d48:	1081ffcc 	andi	r2,r2,2047
   44d4c:	0281ffc4 	movi	r10,2047
   44d50:	2a12703a 	and	r9,r5,r8
   44d54:	18c1ffcc 	andi	r3,r3,2047
   44d58:	3a10703a 	and	r8,r7,r8
   44d5c:	280ad7fa 	srli	r5,r5,31
   44d60:	380ed7fa 	srli	r7,r7,31
   44d64:	12801026 	beq	r2,r10,44da8 <__eqdf2+0x70>
   44d68:	0281ffc4 	movi	r10,2047
   44d6c:	1a800a26 	beq	r3,r10,44d98 <__eqdf2+0x60>
   44d70:	10c00226 	beq	r2,r3,44d7c <__eqdf2+0x44>
   44d74:	00800044 	movi	r2,1
   44d78:	f800283a 	ret
   44d7c:	4a3ffd1e 	bne	r9,r8,44d74 <__alt_data_end+0xfffc4d74>
   44d80:	21bffc1e 	bne	r4,r6,44d74 <__alt_data_end+0xfffc4d74>
   44d84:	29c00c26 	beq	r5,r7,44db8 <__eqdf2+0x80>
   44d88:	103ffa1e 	bne	r2,zero,44d74 <__alt_data_end+0xfffc4d74>
   44d8c:	2244b03a 	or	r2,r4,r9
   44d90:	1004c03a 	cmpne	r2,r2,zero
   44d94:	f800283a 	ret
   44d98:	3214b03a 	or	r10,r6,r8
   44d9c:	503ff426 	beq	r10,zero,44d70 <__alt_data_end+0xfffc4d70>
   44da0:	00800044 	movi	r2,1
   44da4:	f800283a 	ret
   44da8:	2254b03a 	or	r10,r4,r9
   44dac:	503fee26 	beq	r10,zero,44d68 <__alt_data_end+0xfffc4d68>
   44db0:	00800044 	movi	r2,1
   44db4:	f800283a 	ret
   44db8:	0005883a 	mov	r2,zero
   44dbc:	f800283a 	ret

00044dc0 <__gedf2>:
   44dc0:	2804d53a 	srli	r2,r5,20
   44dc4:	3806d53a 	srli	r3,r7,20
   44dc8:	02000434 	movhi	r8,16
   44dcc:	423fffc4 	addi	r8,r8,-1
   44dd0:	1081ffcc 	andi	r2,r2,2047
   44dd4:	0241ffc4 	movi	r9,2047
   44dd8:	2a14703a 	and	r10,r5,r8
   44ddc:	18c1ffcc 	andi	r3,r3,2047
   44de0:	3a10703a 	and	r8,r7,r8
   44de4:	280ad7fa 	srli	r5,r5,31
   44de8:	380ed7fa 	srli	r7,r7,31
   44dec:	12401d26 	beq	r2,r9,44e64 <__gedf2+0xa4>
   44df0:	0241ffc4 	movi	r9,2047
   44df4:	1a401226 	beq	r3,r9,44e40 <__gedf2+0x80>
   44df8:	1000081e 	bne	r2,zero,44e1c <__gedf2+0x5c>
   44dfc:	2296b03a 	or	r11,r4,r10
   44e00:	5813003a 	cmpeq	r9,r11,zero
   44e04:	1800091e 	bne	r3,zero,44e2c <__gedf2+0x6c>
   44e08:	3218b03a 	or	r12,r6,r8
   44e0c:	6000071e 	bne	r12,zero,44e2c <__gedf2+0x6c>
   44e10:	0005883a 	mov	r2,zero
   44e14:	5800101e 	bne	r11,zero,44e58 <__gedf2+0x98>
   44e18:	f800283a 	ret
   44e1c:	18000c1e 	bne	r3,zero,44e50 <__gedf2+0x90>
   44e20:	3212b03a 	or	r9,r6,r8
   44e24:	48000c26 	beq	r9,zero,44e58 <__gedf2+0x98>
   44e28:	0013883a 	mov	r9,zero
   44e2c:	39c03fcc 	andi	r7,r7,255
   44e30:	48000826 	beq	r9,zero,44e54 <__gedf2+0x94>
   44e34:	38000926 	beq	r7,zero,44e5c <__gedf2+0x9c>
   44e38:	00800044 	movi	r2,1
   44e3c:	f800283a 	ret
   44e40:	3212b03a 	or	r9,r6,r8
   44e44:	483fec26 	beq	r9,zero,44df8 <__alt_data_end+0xfffc4df8>
   44e48:	00bfff84 	movi	r2,-2
   44e4c:	f800283a 	ret
   44e50:	39c03fcc 	andi	r7,r7,255
   44e54:	29c00626 	beq	r5,r7,44e70 <__gedf2+0xb0>
   44e58:	283ff726 	beq	r5,zero,44e38 <__alt_data_end+0xfffc4e38>
   44e5c:	00bfffc4 	movi	r2,-1
   44e60:	f800283a 	ret
   44e64:	2292b03a 	or	r9,r4,r10
   44e68:	483fe126 	beq	r9,zero,44df0 <__alt_data_end+0xfffc4df0>
   44e6c:	003ff606 	br	44e48 <__alt_data_end+0xfffc4e48>
   44e70:	18bff916 	blt	r3,r2,44e58 <__alt_data_end+0xfffc4e58>
   44e74:	10c00316 	blt	r2,r3,44e84 <__gedf2+0xc4>
   44e78:	42bff736 	bltu	r8,r10,44e58 <__alt_data_end+0xfffc4e58>
   44e7c:	52000326 	beq	r10,r8,44e8c <__gedf2+0xcc>
   44e80:	5200042e 	bgeu	r10,r8,44e94 <__gedf2+0xd4>
   44e84:	283fec1e 	bne	r5,zero,44e38 <__alt_data_end+0xfffc4e38>
   44e88:	003ff406 	br	44e5c <__alt_data_end+0xfffc4e5c>
   44e8c:	313ff236 	bltu	r6,r4,44e58 <__alt_data_end+0xfffc4e58>
   44e90:	21bffc36 	bltu	r4,r6,44e84 <__alt_data_end+0xfffc4e84>
   44e94:	0005883a 	mov	r2,zero
   44e98:	f800283a 	ret

00044e9c <__muldf3>:
   44e9c:	defff304 	addi	sp,sp,-52
   44ea0:	2804d53a 	srli	r2,r5,20
   44ea4:	dd800915 	stw	r22,36(sp)
   44ea8:	282cd7fa 	srli	r22,r5,31
   44eac:	dc000315 	stw	r16,12(sp)
   44eb0:	04000434 	movhi	r16,16
   44eb4:	dd400815 	stw	r21,32(sp)
   44eb8:	dc800515 	stw	r18,20(sp)
   44ebc:	843fffc4 	addi	r16,r16,-1
   44ec0:	dfc00c15 	stw	ra,48(sp)
   44ec4:	df000b15 	stw	fp,44(sp)
   44ec8:	ddc00a15 	stw	r23,40(sp)
   44ecc:	dd000715 	stw	r20,28(sp)
   44ed0:	dcc00615 	stw	r19,24(sp)
   44ed4:	dc400415 	stw	r17,16(sp)
   44ed8:	1481ffcc 	andi	r18,r2,2047
   44edc:	2c20703a 	and	r16,r5,r16
   44ee0:	b02b883a 	mov	r21,r22
   44ee4:	b2403fcc 	andi	r9,r22,255
   44ee8:	90006026 	beq	r18,zero,4506c <__muldf3+0x1d0>
   44eec:	0081ffc4 	movi	r2,2047
   44ef0:	2029883a 	mov	r20,r4
   44ef4:	90803626 	beq	r18,r2,44fd0 <__muldf3+0x134>
   44ef8:	80800434 	orhi	r2,r16,16
   44efc:	100490fa 	slli	r2,r2,3
   44f00:	2020d77a 	srli	r16,r4,29
   44f04:	202890fa 	slli	r20,r4,3
   44f08:	94bf0044 	addi	r18,r18,-1023
   44f0c:	80a0b03a 	or	r16,r16,r2
   44f10:	0027883a 	mov	r19,zero
   44f14:	0039883a 	mov	fp,zero
   44f18:	3804d53a 	srli	r2,r7,20
   44f1c:	382ed7fa 	srli	r23,r7,31
   44f20:	04400434 	movhi	r17,16
   44f24:	8c7fffc4 	addi	r17,r17,-1
   44f28:	1081ffcc 	andi	r2,r2,2047
   44f2c:	3011883a 	mov	r8,r6
   44f30:	3c62703a 	and	r17,r7,r17
   44f34:	ba803fcc 	andi	r10,r23,255
   44f38:	10006d26 	beq	r2,zero,450f0 <__muldf3+0x254>
   44f3c:	00c1ffc4 	movi	r3,2047
   44f40:	10c06526 	beq	r2,r3,450d8 <__muldf3+0x23c>
   44f44:	88c00434 	orhi	r3,r17,16
   44f48:	180690fa 	slli	r3,r3,3
   44f4c:	3022d77a 	srli	r17,r6,29
   44f50:	301090fa 	slli	r8,r6,3
   44f54:	10bf0044 	addi	r2,r2,-1023
   44f58:	88e2b03a 	or	r17,r17,r3
   44f5c:	000b883a 	mov	r5,zero
   44f60:	9085883a 	add	r2,r18,r2
   44f64:	2cc8b03a 	or	r4,r5,r19
   44f68:	00c003c4 	movi	r3,15
   44f6c:	bdacf03a 	xor	r22,r23,r22
   44f70:	12c00044 	addi	r11,r2,1
   44f74:	19009936 	bltu	r3,r4,451dc <__muldf3+0x340>
   44f78:	200890ba 	slli	r4,r4,2
   44f7c:	00c00134 	movhi	r3,4
   44f80:	18d3e404 	addi	r3,r3,20368
   44f84:	20c9883a 	add	r4,r4,r3
   44f88:	20c00017 	ldw	r3,0(r4)
   44f8c:	1800683a 	jmp	r3
   44f90:	000451dc 	xori	zero,zero,4423
   44f94:	00044ff0 	cmpltui	zero,zero,4415
   44f98:	00044ff0 	cmpltui	zero,zero,4415
   44f9c:	00044fec 	andhi	zero,zero,4415
   44fa0:	000451b8 	rdprs	zero,zero,4422
   44fa4:	000451b8 	rdprs	zero,zero,4422
   44fa8:	000451a0 	cmpeqi	zero,zero,4422
   44fac:	00044fec 	andhi	zero,zero,4415
   44fb0:	000451b8 	rdprs	zero,zero,4422
   44fb4:	000451a0 	cmpeqi	zero,zero,4422
   44fb8:	000451b8 	rdprs	zero,zero,4422
   44fbc:	00044fec 	andhi	zero,zero,4415
   44fc0:	000451c8 	cmpgei	zero,zero,4423
   44fc4:	000451c8 	cmpgei	zero,zero,4423
   44fc8:	000451c8 	cmpgei	zero,zero,4423
   44fcc:	000453e4 	muli	zero,zero,4431
   44fd0:	2404b03a 	or	r2,r4,r16
   44fd4:	10006f1e 	bne	r2,zero,45194 <__muldf3+0x2f8>
   44fd8:	04c00204 	movi	r19,8
   44fdc:	0021883a 	mov	r16,zero
   44fe0:	0029883a 	mov	r20,zero
   44fe4:	07000084 	movi	fp,2
   44fe8:	003fcb06 	br	44f18 <__alt_data_end+0xfffc4f18>
   44fec:	502d883a 	mov	r22,r10
   44ff0:	00800084 	movi	r2,2
   44ff4:	28805726 	beq	r5,r2,45154 <__muldf3+0x2b8>
   44ff8:	008000c4 	movi	r2,3
   44ffc:	28816626 	beq	r5,r2,45598 <__muldf3+0x6fc>
   45000:	00800044 	movi	r2,1
   45004:	2881411e 	bne	r5,r2,4550c <__muldf3+0x670>
   45008:	b02b883a 	mov	r21,r22
   4500c:	0005883a 	mov	r2,zero
   45010:	000b883a 	mov	r5,zero
   45014:	0029883a 	mov	r20,zero
   45018:	1004953a 	slli	r2,r2,20
   4501c:	a8c03fcc 	andi	r3,r21,255
   45020:	04400434 	movhi	r17,16
   45024:	8c7fffc4 	addi	r17,r17,-1
   45028:	180697fa 	slli	r3,r3,31
   4502c:	2c4a703a 	and	r5,r5,r17
   45030:	288ab03a 	or	r5,r5,r2
   45034:	28c6b03a 	or	r3,r5,r3
   45038:	a005883a 	mov	r2,r20
   4503c:	dfc00c17 	ldw	ra,48(sp)
   45040:	df000b17 	ldw	fp,44(sp)
   45044:	ddc00a17 	ldw	r23,40(sp)
   45048:	dd800917 	ldw	r22,36(sp)
   4504c:	dd400817 	ldw	r21,32(sp)
   45050:	dd000717 	ldw	r20,28(sp)
   45054:	dcc00617 	ldw	r19,24(sp)
   45058:	dc800517 	ldw	r18,20(sp)
   4505c:	dc400417 	ldw	r17,16(sp)
   45060:	dc000317 	ldw	r16,12(sp)
   45064:	dec00d04 	addi	sp,sp,52
   45068:	f800283a 	ret
   4506c:	2404b03a 	or	r2,r4,r16
   45070:	2027883a 	mov	r19,r4
   45074:	10004226 	beq	r2,zero,45180 <__muldf3+0x2e4>
   45078:	8000fc26 	beq	r16,zero,4546c <__muldf3+0x5d0>
   4507c:	8009883a 	mov	r4,r16
   45080:	d9800215 	stw	r6,8(sp)
   45084:	d9c00015 	stw	r7,0(sp)
   45088:	da400115 	stw	r9,4(sp)
   4508c:	00462c40 	call	462c4 <__clzsi2>
   45090:	d9800217 	ldw	r6,8(sp)
   45094:	d9c00017 	ldw	r7,0(sp)
   45098:	da400117 	ldw	r9,4(sp)
   4509c:	113ffd44 	addi	r4,r2,-11
   450a0:	00c00704 	movi	r3,28
   450a4:	1900ed16 	blt	r3,r4,4545c <__muldf3+0x5c0>
   450a8:	00c00744 	movi	r3,29
   450ac:	147ffe04 	addi	r17,r2,-8
   450b0:	1907c83a 	sub	r3,r3,r4
   450b4:	8460983a 	sll	r16,r16,r17
   450b8:	98c6d83a 	srl	r3,r19,r3
   450bc:	9c68983a 	sll	r20,r19,r17
   450c0:	1c20b03a 	or	r16,r3,r16
   450c4:	1080fcc4 	addi	r2,r2,1011
   450c8:	00a5c83a 	sub	r18,zero,r2
   450cc:	0027883a 	mov	r19,zero
   450d0:	0039883a 	mov	fp,zero
   450d4:	003f9006 	br	44f18 <__alt_data_end+0xfffc4f18>
   450d8:	3446b03a 	or	r3,r6,r17
   450dc:	1800261e 	bne	r3,zero,45178 <__muldf3+0x2dc>
   450e0:	0023883a 	mov	r17,zero
   450e4:	0011883a 	mov	r8,zero
   450e8:	01400084 	movi	r5,2
   450ec:	003f9c06 	br	44f60 <__alt_data_end+0xfffc4f60>
   450f0:	3446b03a 	or	r3,r6,r17
   450f4:	18001c26 	beq	r3,zero,45168 <__muldf3+0x2cc>
   450f8:	8800ce26 	beq	r17,zero,45434 <__muldf3+0x598>
   450fc:	8809883a 	mov	r4,r17
   45100:	d9800215 	stw	r6,8(sp)
   45104:	da400115 	stw	r9,4(sp)
   45108:	da800015 	stw	r10,0(sp)
   4510c:	00462c40 	call	462c4 <__clzsi2>
   45110:	d9800217 	ldw	r6,8(sp)
   45114:	da400117 	ldw	r9,4(sp)
   45118:	da800017 	ldw	r10,0(sp)
   4511c:	113ffd44 	addi	r4,r2,-11
   45120:	00c00704 	movi	r3,28
   45124:	1900bf16 	blt	r3,r4,45424 <__muldf3+0x588>
   45128:	00c00744 	movi	r3,29
   4512c:	123ffe04 	addi	r8,r2,-8
   45130:	1907c83a 	sub	r3,r3,r4
   45134:	8a22983a 	sll	r17,r17,r8
   45138:	30c6d83a 	srl	r3,r6,r3
   4513c:	3210983a 	sll	r8,r6,r8
   45140:	1c62b03a 	or	r17,r3,r17
   45144:	1080fcc4 	addi	r2,r2,1011
   45148:	0085c83a 	sub	r2,zero,r2
   4514c:	000b883a 	mov	r5,zero
   45150:	003f8306 	br	44f60 <__alt_data_end+0xfffc4f60>
   45154:	b02b883a 	mov	r21,r22
   45158:	0081ffc4 	movi	r2,2047
   4515c:	000b883a 	mov	r5,zero
   45160:	0029883a 	mov	r20,zero
   45164:	003fac06 	br	45018 <__alt_data_end+0xfffc5018>
   45168:	0023883a 	mov	r17,zero
   4516c:	0011883a 	mov	r8,zero
   45170:	01400044 	movi	r5,1
   45174:	003f7a06 	br	44f60 <__alt_data_end+0xfffc4f60>
   45178:	014000c4 	movi	r5,3
   4517c:	003f7806 	br	44f60 <__alt_data_end+0xfffc4f60>
   45180:	04c00104 	movi	r19,4
   45184:	0021883a 	mov	r16,zero
   45188:	0029883a 	mov	r20,zero
   4518c:	07000044 	movi	fp,1
   45190:	003f6106 	br	44f18 <__alt_data_end+0xfffc4f18>
   45194:	04c00304 	movi	r19,12
   45198:	070000c4 	movi	fp,3
   4519c:	003f5e06 	br	44f18 <__alt_data_end+0xfffc4f18>
   451a0:	01400434 	movhi	r5,16
   451a4:	002b883a 	mov	r21,zero
   451a8:	297fffc4 	addi	r5,r5,-1
   451ac:	053fffc4 	movi	r20,-1
   451b0:	0081ffc4 	movi	r2,2047
   451b4:	003f9806 	br	45018 <__alt_data_end+0xfffc5018>
   451b8:	8023883a 	mov	r17,r16
   451bc:	a011883a 	mov	r8,r20
   451c0:	e00b883a 	mov	r5,fp
   451c4:	003f8a06 	br	44ff0 <__alt_data_end+0xfffc4ff0>
   451c8:	8023883a 	mov	r17,r16
   451cc:	a011883a 	mov	r8,r20
   451d0:	482d883a 	mov	r22,r9
   451d4:	e00b883a 	mov	r5,fp
   451d8:	003f8506 	br	44ff0 <__alt_data_end+0xfffc4ff0>
   451dc:	a00ad43a 	srli	r5,r20,16
   451e0:	401ad43a 	srli	r13,r8,16
   451e4:	a53fffcc 	andi	r20,r20,65535
   451e8:	423fffcc 	andi	r8,r8,65535
   451ec:	4519383a 	mul	r12,r8,r20
   451f0:	4147383a 	mul	r3,r8,r5
   451f4:	6d09383a 	mul	r4,r13,r20
   451f8:	600cd43a 	srli	r6,r12,16
   451fc:	2b5d383a 	mul	r14,r5,r13
   45200:	20c9883a 	add	r4,r4,r3
   45204:	310d883a 	add	r6,r6,r4
   45208:	30c0022e 	bgeu	r6,r3,45214 <__muldf3+0x378>
   4520c:	00c00074 	movhi	r3,1
   45210:	70dd883a 	add	r14,r14,r3
   45214:	8826d43a 	srli	r19,r17,16
   45218:	8bffffcc 	andi	r15,r17,65535
   4521c:	7d23383a 	mul	r17,r15,r20
   45220:	7949383a 	mul	r4,r15,r5
   45224:	9d29383a 	mul	r20,r19,r20
   45228:	8814d43a 	srli	r10,r17,16
   4522c:	3012943a 	slli	r9,r6,16
   45230:	a129883a 	add	r20,r20,r4
   45234:	633fffcc 	andi	r12,r12,65535
   45238:	5515883a 	add	r10,r10,r20
   4523c:	3006d43a 	srli	r3,r6,16
   45240:	4b13883a 	add	r9,r9,r12
   45244:	2ccb383a 	mul	r5,r5,r19
   45248:	5100022e 	bgeu	r10,r4,45254 <__muldf3+0x3b8>
   4524c:	01000074 	movhi	r4,1
   45250:	290b883a 	add	r5,r5,r4
   45254:	802ad43a 	srli	r21,r16,16
   45258:	843fffcc 	andi	r16,r16,65535
   4525c:	440d383a 	mul	r6,r8,r16
   45260:	4565383a 	mul	r18,r8,r21
   45264:	8349383a 	mul	r4,r16,r13
   45268:	500e943a 	slli	r7,r10,16
   4526c:	3010d43a 	srli	r8,r6,16
   45270:	5028d43a 	srli	r20,r10,16
   45274:	2489883a 	add	r4,r4,r18
   45278:	8abfffcc 	andi	r10,r17,65535
   4527c:	3a95883a 	add	r10,r7,r10
   45280:	4119883a 	add	r12,r8,r4
   45284:	a169883a 	add	r20,r20,r5
   45288:	1a87883a 	add	r3,r3,r10
   4528c:	6d5b383a 	mul	r13,r13,r21
   45290:	6480022e 	bgeu	r12,r18,4529c <__muldf3+0x400>
   45294:	01000074 	movhi	r4,1
   45298:	691b883a 	add	r13,r13,r4
   4529c:	7c25383a 	mul	r18,r15,r16
   452a0:	7d4b383a 	mul	r5,r15,r21
   452a4:	84cf383a 	mul	r7,r16,r19
   452a8:	901ed43a 	srli	r15,r18,16
   452ac:	6008d43a 	srli	r4,r12,16
   452b0:	6010943a 	slli	r8,r12,16
   452b4:	394f883a 	add	r7,r7,r5
   452b8:	333fffcc 	andi	r12,r6,65535
   452bc:	79df883a 	add	r15,r15,r7
   452c0:	235b883a 	add	r13,r4,r13
   452c4:	9d63383a 	mul	r17,r19,r21
   452c8:	4309883a 	add	r4,r8,r12
   452cc:	7940022e 	bgeu	r15,r5,452d8 <__muldf3+0x43c>
   452d0:	01400074 	movhi	r5,1
   452d4:	8963883a 	add	r17,r17,r5
   452d8:	780a943a 	slli	r5,r15,16
   452dc:	91bfffcc 	andi	r6,r18,65535
   452e0:	70c7883a 	add	r3,r14,r3
   452e4:	298d883a 	add	r6,r5,r6
   452e8:	1a8f803a 	cmpltu	r7,r3,r10
   452ec:	350b883a 	add	r5,r6,r20
   452f0:	20c7883a 	add	r3,r4,r3
   452f4:	3955883a 	add	r10,r7,r5
   452f8:	1909803a 	cmpltu	r4,r3,r4
   452fc:	6a91883a 	add	r8,r13,r10
   45300:	780cd43a 	srli	r6,r15,16
   45304:	2219883a 	add	r12,r4,r8
   45308:	2d0b803a 	cmpltu	r5,r5,r20
   4530c:	51cf803a 	cmpltu	r7,r10,r7
   45310:	29ceb03a 	or	r7,r5,r7
   45314:	4351803a 	cmpltu	r8,r8,r13
   45318:	610b803a 	cmpltu	r5,r12,r4
   4531c:	4148b03a 	or	r4,r8,r5
   45320:	398f883a 	add	r7,r7,r6
   45324:	3909883a 	add	r4,r7,r4
   45328:	1810927a 	slli	r8,r3,9
   4532c:	2449883a 	add	r4,r4,r17
   45330:	2008927a 	slli	r4,r4,9
   45334:	6022d5fa 	srli	r17,r12,23
   45338:	1806d5fa 	srli	r3,r3,23
   4533c:	4252b03a 	or	r9,r8,r9
   45340:	600a927a 	slli	r5,r12,9
   45344:	4810c03a 	cmpne	r8,r9,zero
   45348:	2462b03a 	or	r17,r4,r17
   4534c:	40c6b03a 	or	r3,r8,r3
   45350:	8900402c 	andhi	r4,r17,256
   45354:	1950b03a 	or	r8,r3,r5
   45358:	20000726 	beq	r4,zero,45378 <__muldf3+0x4dc>
   4535c:	4006d07a 	srli	r3,r8,1
   45360:	880497fa 	slli	r2,r17,31
   45364:	4200004c 	andi	r8,r8,1
   45368:	8822d07a 	srli	r17,r17,1
   4536c:	1a10b03a 	or	r8,r3,r8
   45370:	1210b03a 	or	r8,r2,r8
   45374:	5805883a 	mov	r2,r11
   45378:	1140ffc4 	addi	r5,r2,1023
   4537c:	0140440e 	bge	zero,r5,45490 <__muldf3+0x5f4>
   45380:	40c001cc 	andi	r3,r8,7
   45384:	18000726 	beq	r3,zero,453a4 <__muldf3+0x508>
   45388:	40c003cc 	andi	r3,r8,15
   4538c:	01000104 	movi	r4,4
   45390:	19000426 	beq	r3,r4,453a4 <__muldf3+0x508>
   45394:	4107883a 	add	r3,r8,r4
   45398:	1a11803a 	cmpltu	r8,r3,r8
   4539c:	8a23883a 	add	r17,r17,r8
   453a0:	1811883a 	mov	r8,r3
   453a4:	88c0402c 	andhi	r3,r17,256
   453a8:	18000426 	beq	r3,zero,453bc <__muldf3+0x520>
   453ac:	11410004 	addi	r5,r2,1024
   453b0:	00bfc034 	movhi	r2,65280
   453b4:	10bfffc4 	addi	r2,r2,-1
   453b8:	88a2703a 	and	r17,r17,r2
   453bc:	0081ff84 	movi	r2,2046
   453c0:	117f6416 	blt	r2,r5,45154 <__alt_data_end+0xfffc5154>
   453c4:	8828977a 	slli	r20,r17,29
   453c8:	4010d0fa 	srli	r8,r8,3
   453cc:	8822927a 	slli	r17,r17,9
   453d0:	2881ffcc 	andi	r2,r5,2047
   453d4:	a228b03a 	or	r20,r20,r8
   453d8:	880ad33a 	srli	r5,r17,12
   453dc:	b02b883a 	mov	r21,r22
   453e0:	003f0d06 	br	45018 <__alt_data_end+0xfffc5018>
   453e4:	8080022c 	andhi	r2,r16,8
   453e8:	10000926 	beq	r2,zero,45410 <__muldf3+0x574>
   453ec:	8880022c 	andhi	r2,r17,8
   453f0:	1000071e 	bne	r2,zero,45410 <__muldf3+0x574>
   453f4:	00800434 	movhi	r2,16
   453f8:	89400234 	orhi	r5,r17,8
   453fc:	10bfffc4 	addi	r2,r2,-1
   45400:	b82b883a 	mov	r21,r23
   45404:	288a703a 	and	r5,r5,r2
   45408:	4029883a 	mov	r20,r8
   4540c:	003f6806 	br	451b0 <__alt_data_end+0xfffc51b0>
   45410:	00800434 	movhi	r2,16
   45414:	81400234 	orhi	r5,r16,8
   45418:	10bfffc4 	addi	r2,r2,-1
   4541c:	288a703a 	and	r5,r5,r2
   45420:	003f6306 	br	451b0 <__alt_data_end+0xfffc51b0>
   45424:	147ff604 	addi	r17,r2,-40
   45428:	3462983a 	sll	r17,r6,r17
   4542c:	0011883a 	mov	r8,zero
   45430:	003f4406 	br	45144 <__alt_data_end+0xfffc5144>
   45434:	3009883a 	mov	r4,r6
   45438:	d9800215 	stw	r6,8(sp)
   4543c:	da400115 	stw	r9,4(sp)
   45440:	da800015 	stw	r10,0(sp)
   45444:	00462c40 	call	462c4 <__clzsi2>
   45448:	10800804 	addi	r2,r2,32
   4544c:	da800017 	ldw	r10,0(sp)
   45450:	da400117 	ldw	r9,4(sp)
   45454:	d9800217 	ldw	r6,8(sp)
   45458:	003f3006 	br	4511c <__alt_data_end+0xfffc511c>
   4545c:	143ff604 	addi	r16,r2,-40
   45460:	9c20983a 	sll	r16,r19,r16
   45464:	0029883a 	mov	r20,zero
   45468:	003f1606 	br	450c4 <__alt_data_end+0xfffc50c4>
   4546c:	d9800215 	stw	r6,8(sp)
   45470:	d9c00015 	stw	r7,0(sp)
   45474:	da400115 	stw	r9,4(sp)
   45478:	00462c40 	call	462c4 <__clzsi2>
   4547c:	10800804 	addi	r2,r2,32
   45480:	da400117 	ldw	r9,4(sp)
   45484:	d9c00017 	ldw	r7,0(sp)
   45488:	d9800217 	ldw	r6,8(sp)
   4548c:	003f0306 	br	4509c <__alt_data_end+0xfffc509c>
   45490:	00c00044 	movi	r3,1
   45494:	1947c83a 	sub	r3,r3,r5
   45498:	00800e04 	movi	r2,56
   4549c:	10feda16 	blt	r2,r3,45008 <__alt_data_end+0xfffc5008>
   454a0:	008007c4 	movi	r2,31
   454a4:	10c01b16 	blt	r2,r3,45514 <__muldf3+0x678>
   454a8:	00800804 	movi	r2,32
   454ac:	10c5c83a 	sub	r2,r2,r3
   454b0:	888a983a 	sll	r5,r17,r2
   454b4:	40c8d83a 	srl	r4,r8,r3
   454b8:	4084983a 	sll	r2,r8,r2
   454bc:	88e2d83a 	srl	r17,r17,r3
   454c0:	2906b03a 	or	r3,r5,r4
   454c4:	1004c03a 	cmpne	r2,r2,zero
   454c8:	1886b03a 	or	r3,r3,r2
   454cc:	188001cc 	andi	r2,r3,7
   454d0:	10000726 	beq	r2,zero,454f0 <__muldf3+0x654>
   454d4:	188003cc 	andi	r2,r3,15
   454d8:	01000104 	movi	r4,4
   454dc:	11000426 	beq	r2,r4,454f0 <__muldf3+0x654>
   454e0:	1805883a 	mov	r2,r3
   454e4:	10c00104 	addi	r3,r2,4
   454e8:	1885803a 	cmpltu	r2,r3,r2
   454ec:	88a3883a 	add	r17,r17,r2
   454f0:	8880202c 	andhi	r2,r17,128
   454f4:	10001c26 	beq	r2,zero,45568 <__muldf3+0x6cc>
   454f8:	b02b883a 	mov	r21,r22
   454fc:	00800044 	movi	r2,1
   45500:	000b883a 	mov	r5,zero
   45504:	0029883a 	mov	r20,zero
   45508:	003ec306 	br	45018 <__alt_data_end+0xfffc5018>
   4550c:	5805883a 	mov	r2,r11
   45510:	003f9906 	br	45378 <__alt_data_end+0xfffc5378>
   45514:	00bff844 	movi	r2,-31
   45518:	1145c83a 	sub	r2,r2,r5
   4551c:	8888d83a 	srl	r4,r17,r2
   45520:	00800804 	movi	r2,32
   45524:	18801a26 	beq	r3,r2,45590 <__muldf3+0x6f4>
   45528:	00801004 	movi	r2,64
   4552c:	10c5c83a 	sub	r2,r2,r3
   45530:	8884983a 	sll	r2,r17,r2
   45534:	1204b03a 	or	r2,r2,r8
   45538:	1004c03a 	cmpne	r2,r2,zero
   4553c:	2084b03a 	or	r2,r4,r2
   45540:	144001cc 	andi	r17,r2,7
   45544:	88000d1e 	bne	r17,zero,4557c <__muldf3+0x6e0>
   45548:	000b883a 	mov	r5,zero
   4554c:	1028d0fa 	srli	r20,r2,3
   45550:	b02b883a 	mov	r21,r22
   45554:	0005883a 	mov	r2,zero
   45558:	a468b03a 	or	r20,r20,r17
   4555c:	003eae06 	br	45018 <__alt_data_end+0xfffc5018>
   45560:	1007883a 	mov	r3,r2
   45564:	0023883a 	mov	r17,zero
   45568:	880a927a 	slli	r5,r17,9
   4556c:	1805883a 	mov	r2,r3
   45570:	8822977a 	slli	r17,r17,29
   45574:	280ad33a 	srli	r5,r5,12
   45578:	003ff406 	br	4554c <__alt_data_end+0xfffc554c>
   4557c:	10c003cc 	andi	r3,r2,15
   45580:	01000104 	movi	r4,4
   45584:	193ff626 	beq	r3,r4,45560 <__alt_data_end+0xfffc5560>
   45588:	0023883a 	mov	r17,zero
   4558c:	003fd506 	br	454e4 <__alt_data_end+0xfffc54e4>
   45590:	0005883a 	mov	r2,zero
   45594:	003fe706 	br	45534 <__alt_data_end+0xfffc5534>
   45598:	00800434 	movhi	r2,16
   4559c:	89400234 	orhi	r5,r17,8
   455a0:	10bfffc4 	addi	r2,r2,-1
   455a4:	b02b883a 	mov	r21,r22
   455a8:	288a703a 	and	r5,r5,r2
   455ac:	4029883a 	mov	r20,r8
   455b0:	003eff06 	br	451b0 <__alt_data_end+0xfffc51b0>

000455b4 <__subdf3>:
   455b4:	02000434 	movhi	r8,16
   455b8:	423fffc4 	addi	r8,r8,-1
   455bc:	defffb04 	addi	sp,sp,-20
   455c0:	2a14703a 	and	r10,r5,r8
   455c4:	3812d53a 	srli	r9,r7,20
   455c8:	3a10703a 	and	r8,r7,r8
   455cc:	2006d77a 	srli	r3,r4,29
   455d0:	3004d77a 	srli	r2,r6,29
   455d4:	dc000015 	stw	r16,0(sp)
   455d8:	501490fa 	slli	r10,r10,3
   455dc:	2820d53a 	srli	r16,r5,20
   455e0:	401090fa 	slli	r8,r8,3
   455e4:	dc800215 	stw	r18,8(sp)
   455e8:	dc400115 	stw	r17,4(sp)
   455ec:	dfc00415 	stw	ra,16(sp)
   455f0:	202290fa 	slli	r17,r4,3
   455f4:	dcc00315 	stw	r19,12(sp)
   455f8:	4a41ffcc 	andi	r9,r9,2047
   455fc:	0101ffc4 	movi	r4,2047
   45600:	2824d7fa 	srli	r18,r5,31
   45604:	8401ffcc 	andi	r16,r16,2047
   45608:	50c6b03a 	or	r3,r10,r3
   4560c:	380ed7fa 	srli	r7,r7,31
   45610:	408ab03a 	or	r5,r8,r2
   45614:	300c90fa 	slli	r6,r6,3
   45618:	49009626 	beq	r9,r4,45874 <__subdf3+0x2c0>
   4561c:	39c0005c 	xori	r7,r7,1
   45620:	8245c83a 	sub	r2,r16,r9
   45624:	3c807426 	beq	r7,r18,457f8 <__subdf3+0x244>
   45628:	0080af0e 	bge	zero,r2,458e8 <__subdf3+0x334>
   4562c:	48002a1e 	bne	r9,zero,456d8 <__subdf3+0x124>
   45630:	2988b03a 	or	r4,r5,r6
   45634:	20009a1e 	bne	r4,zero,458a0 <__subdf3+0x2ec>
   45638:	888001cc 	andi	r2,r17,7
   4563c:	10000726 	beq	r2,zero,4565c <__subdf3+0xa8>
   45640:	888003cc 	andi	r2,r17,15
   45644:	01000104 	movi	r4,4
   45648:	11000426 	beq	r2,r4,4565c <__subdf3+0xa8>
   4564c:	890b883a 	add	r5,r17,r4
   45650:	2c63803a 	cmpltu	r17,r5,r17
   45654:	1c47883a 	add	r3,r3,r17
   45658:	2823883a 	mov	r17,r5
   4565c:	1880202c 	andhi	r2,r3,128
   45660:	10005926 	beq	r2,zero,457c8 <__subdf3+0x214>
   45664:	84000044 	addi	r16,r16,1
   45668:	0081ffc4 	movi	r2,2047
   4566c:	8080be26 	beq	r16,r2,45968 <__subdf3+0x3b4>
   45670:	017fe034 	movhi	r5,65408
   45674:	297fffc4 	addi	r5,r5,-1
   45678:	1946703a 	and	r3,r3,r5
   4567c:	1804977a 	slli	r2,r3,29
   45680:	1806927a 	slli	r3,r3,9
   45684:	8822d0fa 	srli	r17,r17,3
   45688:	8401ffcc 	andi	r16,r16,2047
   4568c:	180ad33a 	srli	r5,r3,12
   45690:	9100004c 	andi	r4,r18,1
   45694:	1444b03a 	or	r2,r2,r17
   45698:	80c1ffcc 	andi	r3,r16,2047
   4569c:	1820953a 	slli	r16,r3,20
   456a0:	20c03fcc 	andi	r3,r4,255
   456a4:	180897fa 	slli	r4,r3,31
   456a8:	00c00434 	movhi	r3,16
   456ac:	18ffffc4 	addi	r3,r3,-1
   456b0:	28c6703a 	and	r3,r5,r3
   456b4:	1c06b03a 	or	r3,r3,r16
   456b8:	1906b03a 	or	r3,r3,r4
   456bc:	dfc00417 	ldw	ra,16(sp)
   456c0:	dcc00317 	ldw	r19,12(sp)
   456c4:	dc800217 	ldw	r18,8(sp)
   456c8:	dc400117 	ldw	r17,4(sp)
   456cc:	dc000017 	ldw	r16,0(sp)
   456d0:	dec00504 	addi	sp,sp,20
   456d4:	f800283a 	ret
   456d8:	0101ffc4 	movi	r4,2047
   456dc:	813fd626 	beq	r16,r4,45638 <__alt_data_end+0xfffc5638>
   456e0:	29402034 	orhi	r5,r5,128
   456e4:	01000e04 	movi	r4,56
   456e8:	2080a316 	blt	r4,r2,45978 <__subdf3+0x3c4>
   456ec:	010007c4 	movi	r4,31
   456f0:	2080c616 	blt	r4,r2,45a0c <__subdf3+0x458>
   456f4:	01000804 	movi	r4,32
   456f8:	2089c83a 	sub	r4,r4,r2
   456fc:	2910983a 	sll	r8,r5,r4
   45700:	308ed83a 	srl	r7,r6,r2
   45704:	3108983a 	sll	r4,r6,r4
   45708:	2884d83a 	srl	r2,r5,r2
   4570c:	41ccb03a 	or	r6,r8,r7
   45710:	2008c03a 	cmpne	r4,r4,zero
   45714:	310cb03a 	or	r6,r6,r4
   45718:	898dc83a 	sub	r6,r17,r6
   4571c:	89a3803a 	cmpltu	r17,r17,r6
   45720:	1887c83a 	sub	r3,r3,r2
   45724:	1c47c83a 	sub	r3,r3,r17
   45728:	3023883a 	mov	r17,r6
   4572c:	1880202c 	andhi	r2,r3,128
   45730:	10002326 	beq	r2,zero,457c0 <__subdf3+0x20c>
   45734:	04c02034 	movhi	r19,128
   45738:	9cffffc4 	addi	r19,r19,-1
   4573c:	1ce6703a 	and	r19,r3,r19
   45740:	98007a26 	beq	r19,zero,4592c <__subdf3+0x378>
   45744:	9809883a 	mov	r4,r19
   45748:	00462c40 	call	462c4 <__clzsi2>
   4574c:	113ffe04 	addi	r4,r2,-8
   45750:	00c007c4 	movi	r3,31
   45754:	19007b16 	blt	r3,r4,45944 <__subdf3+0x390>
   45758:	00800804 	movi	r2,32
   4575c:	1105c83a 	sub	r2,r2,r4
   45760:	8884d83a 	srl	r2,r17,r2
   45764:	9906983a 	sll	r3,r19,r4
   45768:	8922983a 	sll	r17,r17,r4
   4576c:	10c4b03a 	or	r2,r2,r3
   45770:	24007816 	blt	r4,r16,45954 <__subdf3+0x3a0>
   45774:	2421c83a 	sub	r16,r4,r16
   45778:	80c00044 	addi	r3,r16,1
   4577c:	010007c4 	movi	r4,31
   45780:	20c09516 	blt	r4,r3,459d8 <__subdf3+0x424>
   45784:	01400804 	movi	r5,32
   45788:	28cbc83a 	sub	r5,r5,r3
   4578c:	88c8d83a 	srl	r4,r17,r3
   45790:	8962983a 	sll	r17,r17,r5
   45794:	114a983a 	sll	r5,r2,r5
   45798:	10c6d83a 	srl	r3,r2,r3
   4579c:	8804c03a 	cmpne	r2,r17,zero
   457a0:	290ab03a 	or	r5,r5,r4
   457a4:	28a2b03a 	or	r17,r5,r2
   457a8:	0021883a 	mov	r16,zero
   457ac:	003fa206 	br	45638 <__alt_data_end+0xfffc5638>
   457b0:	2090b03a 	or	r8,r4,r2
   457b4:	40018e26 	beq	r8,zero,45df0 <__subdf3+0x83c>
   457b8:	1007883a 	mov	r3,r2
   457bc:	2023883a 	mov	r17,r4
   457c0:	888001cc 	andi	r2,r17,7
   457c4:	103f9e1e 	bne	r2,zero,45640 <__alt_data_end+0xfffc5640>
   457c8:	1804977a 	slli	r2,r3,29
   457cc:	8822d0fa 	srli	r17,r17,3
   457d0:	1810d0fa 	srli	r8,r3,3
   457d4:	9100004c 	andi	r4,r18,1
   457d8:	1444b03a 	or	r2,r2,r17
   457dc:	00c1ffc4 	movi	r3,2047
   457e0:	80c02826 	beq	r16,r3,45884 <__subdf3+0x2d0>
   457e4:	01400434 	movhi	r5,16
   457e8:	297fffc4 	addi	r5,r5,-1
   457ec:	80e0703a 	and	r16,r16,r3
   457f0:	414a703a 	and	r5,r8,r5
   457f4:	003fa806 	br	45698 <__alt_data_end+0xfffc5698>
   457f8:	0080630e 	bge	zero,r2,45988 <__subdf3+0x3d4>
   457fc:	48003026 	beq	r9,zero,458c0 <__subdf3+0x30c>
   45800:	0101ffc4 	movi	r4,2047
   45804:	813f8c26 	beq	r16,r4,45638 <__alt_data_end+0xfffc5638>
   45808:	29402034 	orhi	r5,r5,128
   4580c:	01000e04 	movi	r4,56
   45810:	2080a90e 	bge	r4,r2,45ab8 <__subdf3+0x504>
   45814:	298cb03a 	or	r6,r5,r6
   45818:	3012c03a 	cmpne	r9,r6,zero
   4581c:	0005883a 	mov	r2,zero
   45820:	4c53883a 	add	r9,r9,r17
   45824:	4c63803a 	cmpltu	r17,r9,r17
   45828:	10c7883a 	add	r3,r2,r3
   4582c:	88c7883a 	add	r3,r17,r3
   45830:	4823883a 	mov	r17,r9
   45834:	1880202c 	andhi	r2,r3,128
   45838:	1000d026 	beq	r2,zero,45b7c <__subdf3+0x5c8>
   4583c:	84000044 	addi	r16,r16,1
   45840:	0081ffc4 	movi	r2,2047
   45844:	8080fe26 	beq	r16,r2,45c40 <__subdf3+0x68c>
   45848:	00bfe034 	movhi	r2,65408
   4584c:	10bfffc4 	addi	r2,r2,-1
   45850:	1886703a 	and	r3,r3,r2
   45854:	880ad07a 	srli	r5,r17,1
   45858:	180497fa 	slli	r2,r3,31
   4585c:	8900004c 	andi	r4,r17,1
   45860:	2922b03a 	or	r17,r5,r4
   45864:	1806d07a 	srli	r3,r3,1
   45868:	1462b03a 	or	r17,r2,r17
   4586c:	3825883a 	mov	r18,r7
   45870:	003f7106 	br	45638 <__alt_data_end+0xfffc5638>
   45874:	2984b03a 	or	r2,r5,r6
   45878:	103f6826 	beq	r2,zero,4561c <__alt_data_end+0xfffc561c>
   4587c:	39c03fcc 	andi	r7,r7,255
   45880:	003f6706 	br	45620 <__alt_data_end+0xfffc5620>
   45884:	4086b03a 	or	r3,r8,r2
   45888:	18015226 	beq	r3,zero,45dd4 <__subdf3+0x820>
   4588c:	00c00434 	movhi	r3,16
   45890:	41400234 	orhi	r5,r8,8
   45894:	18ffffc4 	addi	r3,r3,-1
   45898:	28ca703a 	and	r5,r5,r3
   4589c:	003f7e06 	br	45698 <__alt_data_end+0xfffc5698>
   458a0:	10bfffc4 	addi	r2,r2,-1
   458a4:	1000491e 	bne	r2,zero,459cc <__subdf3+0x418>
   458a8:	898fc83a 	sub	r7,r17,r6
   458ac:	89e3803a 	cmpltu	r17,r17,r7
   458b0:	1947c83a 	sub	r3,r3,r5
   458b4:	1c47c83a 	sub	r3,r3,r17
   458b8:	3823883a 	mov	r17,r7
   458bc:	003f9b06 	br	4572c <__alt_data_end+0xfffc572c>
   458c0:	2988b03a 	or	r4,r5,r6
   458c4:	203f5c26 	beq	r4,zero,45638 <__alt_data_end+0xfffc5638>
   458c8:	10bfffc4 	addi	r2,r2,-1
   458cc:	1000931e 	bne	r2,zero,45b1c <__subdf3+0x568>
   458d0:	898d883a 	add	r6,r17,r6
   458d4:	3463803a 	cmpltu	r17,r6,r17
   458d8:	1947883a 	add	r3,r3,r5
   458dc:	88c7883a 	add	r3,r17,r3
   458e0:	3023883a 	mov	r17,r6
   458e4:	003fd306 	br	45834 <__alt_data_end+0xfffc5834>
   458e8:	1000541e 	bne	r2,zero,45a3c <__subdf3+0x488>
   458ec:	80800044 	addi	r2,r16,1
   458f0:	1081ffcc 	andi	r2,r2,2047
   458f4:	01000044 	movi	r4,1
   458f8:	2080a20e 	bge	r4,r2,45b84 <__subdf3+0x5d0>
   458fc:	8989c83a 	sub	r4,r17,r6
   45900:	8905803a 	cmpltu	r2,r17,r4
   45904:	1967c83a 	sub	r19,r3,r5
   45908:	98a7c83a 	sub	r19,r19,r2
   4590c:	9880202c 	andhi	r2,r19,128
   45910:	10006326 	beq	r2,zero,45aa0 <__subdf3+0x4ec>
   45914:	3463c83a 	sub	r17,r6,r17
   45918:	28c7c83a 	sub	r3,r5,r3
   4591c:	344d803a 	cmpltu	r6,r6,r17
   45920:	19a7c83a 	sub	r19,r3,r6
   45924:	3825883a 	mov	r18,r7
   45928:	983f861e 	bne	r19,zero,45744 <__alt_data_end+0xfffc5744>
   4592c:	8809883a 	mov	r4,r17
   45930:	00462c40 	call	462c4 <__clzsi2>
   45934:	10800804 	addi	r2,r2,32
   45938:	113ffe04 	addi	r4,r2,-8
   4593c:	00c007c4 	movi	r3,31
   45940:	193f850e 	bge	r3,r4,45758 <__alt_data_end+0xfffc5758>
   45944:	10bff604 	addi	r2,r2,-40
   45948:	8884983a 	sll	r2,r17,r2
   4594c:	0023883a 	mov	r17,zero
   45950:	243f880e 	bge	r4,r16,45774 <__alt_data_end+0xfffc5774>
   45954:	00ffe034 	movhi	r3,65408
   45958:	18ffffc4 	addi	r3,r3,-1
   4595c:	8121c83a 	sub	r16,r16,r4
   45960:	10c6703a 	and	r3,r2,r3
   45964:	003f3406 	br	45638 <__alt_data_end+0xfffc5638>
   45968:	9100004c 	andi	r4,r18,1
   4596c:	000b883a 	mov	r5,zero
   45970:	0005883a 	mov	r2,zero
   45974:	003f4806 	br	45698 <__alt_data_end+0xfffc5698>
   45978:	298cb03a 	or	r6,r5,r6
   4597c:	300cc03a 	cmpne	r6,r6,zero
   45980:	0005883a 	mov	r2,zero
   45984:	003f6406 	br	45718 <__alt_data_end+0xfffc5718>
   45988:	10009a1e 	bne	r2,zero,45bf4 <__subdf3+0x640>
   4598c:	82400044 	addi	r9,r16,1
   45990:	4881ffcc 	andi	r2,r9,2047
   45994:	02800044 	movi	r10,1
   45998:	5080670e 	bge	r10,r2,45b38 <__subdf3+0x584>
   4599c:	0081ffc4 	movi	r2,2047
   459a0:	4880af26 	beq	r9,r2,45c60 <__subdf3+0x6ac>
   459a4:	898d883a 	add	r6,r17,r6
   459a8:	1945883a 	add	r2,r3,r5
   459ac:	3447803a 	cmpltu	r3,r6,r17
   459b0:	1887883a 	add	r3,r3,r2
   459b4:	182297fa 	slli	r17,r3,31
   459b8:	300cd07a 	srli	r6,r6,1
   459bc:	1806d07a 	srli	r3,r3,1
   459c0:	4821883a 	mov	r16,r9
   459c4:	89a2b03a 	or	r17,r17,r6
   459c8:	003f1b06 	br	45638 <__alt_data_end+0xfffc5638>
   459cc:	0101ffc4 	movi	r4,2047
   459d0:	813f441e 	bne	r16,r4,456e4 <__alt_data_end+0xfffc56e4>
   459d4:	003f1806 	br	45638 <__alt_data_end+0xfffc5638>
   459d8:	843ff844 	addi	r16,r16,-31
   459dc:	01400804 	movi	r5,32
   459e0:	1408d83a 	srl	r4,r2,r16
   459e4:	19405026 	beq	r3,r5,45b28 <__subdf3+0x574>
   459e8:	01401004 	movi	r5,64
   459ec:	28c7c83a 	sub	r3,r5,r3
   459f0:	10c4983a 	sll	r2,r2,r3
   459f4:	88a2b03a 	or	r17,r17,r2
   459f8:	8822c03a 	cmpne	r17,r17,zero
   459fc:	2462b03a 	or	r17,r4,r17
   45a00:	0007883a 	mov	r3,zero
   45a04:	0021883a 	mov	r16,zero
   45a08:	003f6d06 	br	457c0 <__alt_data_end+0xfffc57c0>
   45a0c:	11fff804 	addi	r7,r2,-32
   45a10:	01000804 	movi	r4,32
   45a14:	29ced83a 	srl	r7,r5,r7
   45a18:	11004526 	beq	r2,r4,45b30 <__subdf3+0x57c>
   45a1c:	01001004 	movi	r4,64
   45a20:	2089c83a 	sub	r4,r4,r2
   45a24:	2904983a 	sll	r2,r5,r4
   45a28:	118cb03a 	or	r6,r2,r6
   45a2c:	300cc03a 	cmpne	r6,r6,zero
   45a30:	398cb03a 	or	r6,r7,r6
   45a34:	0005883a 	mov	r2,zero
   45a38:	003f3706 	br	45718 <__alt_data_end+0xfffc5718>
   45a3c:	80002a26 	beq	r16,zero,45ae8 <__subdf3+0x534>
   45a40:	0101ffc4 	movi	r4,2047
   45a44:	49006626 	beq	r9,r4,45be0 <__subdf3+0x62c>
   45a48:	0085c83a 	sub	r2,zero,r2
   45a4c:	18c02034 	orhi	r3,r3,128
   45a50:	01000e04 	movi	r4,56
   45a54:	20807e16 	blt	r4,r2,45c50 <__subdf3+0x69c>
   45a58:	010007c4 	movi	r4,31
   45a5c:	2080e716 	blt	r4,r2,45dfc <__subdf3+0x848>
   45a60:	01000804 	movi	r4,32
   45a64:	2089c83a 	sub	r4,r4,r2
   45a68:	1914983a 	sll	r10,r3,r4
   45a6c:	8890d83a 	srl	r8,r17,r2
   45a70:	8908983a 	sll	r4,r17,r4
   45a74:	1884d83a 	srl	r2,r3,r2
   45a78:	5222b03a 	or	r17,r10,r8
   45a7c:	2006c03a 	cmpne	r3,r4,zero
   45a80:	88e2b03a 	or	r17,r17,r3
   45a84:	3463c83a 	sub	r17,r6,r17
   45a88:	2885c83a 	sub	r2,r5,r2
   45a8c:	344d803a 	cmpltu	r6,r6,r17
   45a90:	1187c83a 	sub	r3,r2,r6
   45a94:	4821883a 	mov	r16,r9
   45a98:	3825883a 	mov	r18,r7
   45a9c:	003f2306 	br	4572c <__alt_data_end+0xfffc572c>
   45aa0:	24d0b03a 	or	r8,r4,r19
   45aa4:	40001b1e 	bne	r8,zero,45b14 <__subdf3+0x560>
   45aa8:	0005883a 	mov	r2,zero
   45aac:	0009883a 	mov	r4,zero
   45ab0:	0021883a 	mov	r16,zero
   45ab4:	003f4906 	br	457dc <__alt_data_end+0xfffc57dc>
   45ab8:	010007c4 	movi	r4,31
   45abc:	20803a16 	blt	r4,r2,45ba8 <__subdf3+0x5f4>
   45ac0:	01000804 	movi	r4,32
   45ac4:	2089c83a 	sub	r4,r4,r2
   45ac8:	2912983a 	sll	r9,r5,r4
   45acc:	3090d83a 	srl	r8,r6,r2
   45ad0:	3108983a 	sll	r4,r6,r4
   45ad4:	2884d83a 	srl	r2,r5,r2
   45ad8:	4a12b03a 	or	r9,r9,r8
   45adc:	2008c03a 	cmpne	r4,r4,zero
   45ae0:	4912b03a 	or	r9,r9,r4
   45ae4:	003f4e06 	br	45820 <__alt_data_end+0xfffc5820>
   45ae8:	1c48b03a 	or	r4,r3,r17
   45aec:	20003c26 	beq	r4,zero,45be0 <__subdf3+0x62c>
   45af0:	0084303a 	nor	r2,zero,r2
   45af4:	1000381e 	bne	r2,zero,45bd8 <__subdf3+0x624>
   45af8:	3463c83a 	sub	r17,r6,r17
   45afc:	28c5c83a 	sub	r2,r5,r3
   45b00:	344d803a 	cmpltu	r6,r6,r17
   45b04:	1187c83a 	sub	r3,r2,r6
   45b08:	4821883a 	mov	r16,r9
   45b0c:	3825883a 	mov	r18,r7
   45b10:	003f0606 	br	4572c <__alt_data_end+0xfffc572c>
   45b14:	2023883a 	mov	r17,r4
   45b18:	003f0906 	br	45740 <__alt_data_end+0xfffc5740>
   45b1c:	0101ffc4 	movi	r4,2047
   45b20:	813f3a1e 	bne	r16,r4,4580c <__alt_data_end+0xfffc580c>
   45b24:	003ec406 	br	45638 <__alt_data_end+0xfffc5638>
   45b28:	0005883a 	mov	r2,zero
   45b2c:	003fb106 	br	459f4 <__alt_data_end+0xfffc59f4>
   45b30:	0005883a 	mov	r2,zero
   45b34:	003fbc06 	br	45a28 <__alt_data_end+0xfffc5a28>
   45b38:	1c44b03a 	or	r2,r3,r17
   45b3c:	80008e1e 	bne	r16,zero,45d78 <__subdf3+0x7c4>
   45b40:	1000c826 	beq	r2,zero,45e64 <__subdf3+0x8b0>
   45b44:	2984b03a 	or	r2,r5,r6
   45b48:	103ebb26 	beq	r2,zero,45638 <__alt_data_end+0xfffc5638>
   45b4c:	8989883a 	add	r4,r17,r6
   45b50:	1945883a 	add	r2,r3,r5
   45b54:	2447803a 	cmpltu	r3,r4,r17
   45b58:	1887883a 	add	r3,r3,r2
   45b5c:	1880202c 	andhi	r2,r3,128
   45b60:	2023883a 	mov	r17,r4
   45b64:	103f1626 	beq	r2,zero,457c0 <__alt_data_end+0xfffc57c0>
   45b68:	00bfe034 	movhi	r2,65408
   45b6c:	10bfffc4 	addi	r2,r2,-1
   45b70:	5021883a 	mov	r16,r10
   45b74:	1886703a 	and	r3,r3,r2
   45b78:	003eaf06 	br	45638 <__alt_data_end+0xfffc5638>
   45b7c:	3825883a 	mov	r18,r7
   45b80:	003f0f06 	br	457c0 <__alt_data_end+0xfffc57c0>
   45b84:	1c44b03a 	or	r2,r3,r17
   45b88:	8000251e 	bne	r16,zero,45c20 <__subdf3+0x66c>
   45b8c:	1000661e 	bne	r2,zero,45d28 <__subdf3+0x774>
   45b90:	2990b03a 	or	r8,r5,r6
   45b94:	40009626 	beq	r8,zero,45df0 <__subdf3+0x83c>
   45b98:	2807883a 	mov	r3,r5
   45b9c:	3023883a 	mov	r17,r6
   45ba0:	3825883a 	mov	r18,r7
   45ba4:	003ea406 	br	45638 <__alt_data_end+0xfffc5638>
   45ba8:	127ff804 	addi	r9,r2,-32
   45bac:	01000804 	movi	r4,32
   45bb0:	2a52d83a 	srl	r9,r5,r9
   45bb4:	11008c26 	beq	r2,r4,45de8 <__subdf3+0x834>
   45bb8:	01001004 	movi	r4,64
   45bbc:	2085c83a 	sub	r2,r4,r2
   45bc0:	2884983a 	sll	r2,r5,r2
   45bc4:	118cb03a 	or	r6,r2,r6
   45bc8:	300cc03a 	cmpne	r6,r6,zero
   45bcc:	4992b03a 	or	r9,r9,r6
   45bd0:	0005883a 	mov	r2,zero
   45bd4:	003f1206 	br	45820 <__alt_data_end+0xfffc5820>
   45bd8:	0101ffc4 	movi	r4,2047
   45bdc:	493f9c1e 	bne	r9,r4,45a50 <__alt_data_end+0xfffc5a50>
   45be0:	2807883a 	mov	r3,r5
   45be4:	3023883a 	mov	r17,r6
   45be8:	4821883a 	mov	r16,r9
   45bec:	3825883a 	mov	r18,r7
   45bf0:	003e9106 	br	45638 <__alt_data_end+0xfffc5638>
   45bf4:	80001f1e 	bne	r16,zero,45c74 <__subdf3+0x6c0>
   45bf8:	1c48b03a 	or	r4,r3,r17
   45bfc:	20005a26 	beq	r4,zero,45d68 <__subdf3+0x7b4>
   45c00:	0084303a 	nor	r2,zero,r2
   45c04:	1000561e 	bne	r2,zero,45d60 <__subdf3+0x7ac>
   45c08:	89a3883a 	add	r17,r17,r6
   45c0c:	1945883a 	add	r2,r3,r5
   45c10:	898d803a 	cmpltu	r6,r17,r6
   45c14:	3087883a 	add	r3,r6,r2
   45c18:	4821883a 	mov	r16,r9
   45c1c:	003f0506 	br	45834 <__alt_data_end+0xfffc5834>
   45c20:	10002b1e 	bne	r2,zero,45cd0 <__subdf3+0x71c>
   45c24:	2984b03a 	or	r2,r5,r6
   45c28:	10008026 	beq	r2,zero,45e2c <__subdf3+0x878>
   45c2c:	2807883a 	mov	r3,r5
   45c30:	3023883a 	mov	r17,r6
   45c34:	3825883a 	mov	r18,r7
   45c38:	0401ffc4 	movi	r16,2047
   45c3c:	003e7e06 	br	45638 <__alt_data_end+0xfffc5638>
   45c40:	3809883a 	mov	r4,r7
   45c44:	0011883a 	mov	r8,zero
   45c48:	0005883a 	mov	r2,zero
   45c4c:	003ee306 	br	457dc <__alt_data_end+0xfffc57dc>
   45c50:	1c62b03a 	or	r17,r3,r17
   45c54:	8822c03a 	cmpne	r17,r17,zero
   45c58:	0005883a 	mov	r2,zero
   45c5c:	003f8906 	br	45a84 <__alt_data_end+0xfffc5a84>
   45c60:	3809883a 	mov	r4,r7
   45c64:	4821883a 	mov	r16,r9
   45c68:	0011883a 	mov	r8,zero
   45c6c:	0005883a 	mov	r2,zero
   45c70:	003eda06 	br	457dc <__alt_data_end+0xfffc57dc>
   45c74:	0101ffc4 	movi	r4,2047
   45c78:	49003b26 	beq	r9,r4,45d68 <__subdf3+0x7b4>
   45c7c:	0085c83a 	sub	r2,zero,r2
   45c80:	18c02034 	orhi	r3,r3,128
   45c84:	01000e04 	movi	r4,56
   45c88:	20806e16 	blt	r4,r2,45e44 <__subdf3+0x890>
   45c8c:	010007c4 	movi	r4,31
   45c90:	20807716 	blt	r4,r2,45e70 <__subdf3+0x8bc>
   45c94:	01000804 	movi	r4,32
   45c98:	2089c83a 	sub	r4,r4,r2
   45c9c:	1914983a 	sll	r10,r3,r4
   45ca0:	8890d83a 	srl	r8,r17,r2
   45ca4:	8908983a 	sll	r4,r17,r4
   45ca8:	1884d83a 	srl	r2,r3,r2
   45cac:	5222b03a 	or	r17,r10,r8
   45cb0:	2006c03a 	cmpne	r3,r4,zero
   45cb4:	88e2b03a 	or	r17,r17,r3
   45cb8:	89a3883a 	add	r17,r17,r6
   45cbc:	1145883a 	add	r2,r2,r5
   45cc0:	898d803a 	cmpltu	r6,r17,r6
   45cc4:	3087883a 	add	r3,r6,r2
   45cc8:	4821883a 	mov	r16,r9
   45ccc:	003ed906 	br	45834 <__alt_data_end+0xfffc5834>
   45cd0:	2984b03a 	or	r2,r5,r6
   45cd4:	10004226 	beq	r2,zero,45de0 <__subdf3+0x82c>
   45cd8:	1808d0fa 	srli	r4,r3,3
   45cdc:	8822d0fa 	srli	r17,r17,3
   45ce0:	1806977a 	slli	r3,r3,29
   45ce4:	2080022c 	andhi	r2,r4,8
   45ce8:	1c62b03a 	or	r17,r3,r17
   45cec:	10000826 	beq	r2,zero,45d10 <__subdf3+0x75c>
   45cf0:	2812d0fa 	srli	r9,r5,3
   45cf4:	4880022c 	andhi	r2,r9,8
   45cf8:	1000051e 	bne	r2,zero,45d10 <__subdf3+0x75c>
   45cfc:	300cd0fa 	srli	r6,r6,3
   45d00:	2804977a 	slli	r2,r5,29
   45d04:	4809883a 	mov	r4,r9
   45d08:	3825883a 	mov	r18,r7
   45d0c:	11a2b03a 	or	r17,r2,r6
   45d10:	8806d77a 	srli	r3,r17,29
   45d14:	200890fa 	slli	r4,r4,3
   45d18:	882290fa 	slli	r17,r17,3
   45d1c:	0401ffc4 	movi	r16,2047
   45d20:	1906b03a 	or	r3,r3,r4
   45d24:	003e4406 	br	45638 <__alt_data_end+0xfffc5638>
   45d28:	2984b03a 	or	r2,r5,r6
   45d2c:	103e4226 	beq	r2,zero,45638 <__alt_data_end+0xfffc5638>
   45d30:	8989c83a 	sub	r4,r17,r6
   45d34:	8911803a 	cmpltu	r8,r17,r4
   45d38:	1945c83a 	sub	r2,r3,r5
   45d3c:	1205c83a 	sub	r2,r2,r8
   45d40:	1200202c 	andhi	r8,r2,128
   45d44:	403e9a26 	beq	r8,zero,457b0 <__alt_data_end+0xfffc57b0>
   45d48:	3463c83a 	sub	r17,r6,r17
   45d4c:	28c5c83a 	sub	r2,r5,r3
   45d50:	344d803a 	cmpltu	r6,r6,r17
   45d54:	1187c83a 	sub	r3,r2,r6
   45d58:	3825883a 	mov	r18,r7
   45d5c:	003e3606 	br	45638 <__alt_data_end+0xfffc5638>
   45d60:	0101ffc4 	movi	r4,2047
   45d64:	493fc71e 	bne	r9,r4,45c84 <__alt_data_end+0xfffc5c84>
   45d68:	2807883a 	mov	r3,r5
   45d6c:	3023883a 	mov	r17,r6
   45d70:	4821883a 	mov	r16,r9
   45d74:	003e3006 	br	45638 <__alt_data_end+0xfffc5638>
   45d78:	10003626 	beq	r2,zero,45e54 <__subdf3+0x8a0>
   45d7c:	2984b03a 	or	r2,r5,r6
   45d80:	10001726 	beq	r2,zero,45de0 <__subdf3+0x82c>
   45d84:	1808d0fa 	srli	r4,r3,3
   45d88:	8822d0fa 	srli	r17,r17,3
   45d8c:	1806977a 	slli	r3,r3,29
   45d90:	2080022c 	andhi	r2,r4,8
   45d94:	1c62b03a 	or	r17,r3,r17
   45d98:	10000726 	beq	r2,zero,45db8 <__subdf3+0x804>
   45d9c:	2812d0fa 	srli	r9,r5,3
   45da0:	4880022c 	andhi	r2,r9,8
   45da4:	1000041e 	bne	r2,zero,45db8 <__subdf3+0x804>
   45da8:	300cd0fa 	srli	r6,r6,3
   45dac:	2804977a 	slli	r2,r5,29
   45db0:	4809883a 	mov	r4,r9
   45db4:	11a2b03a 	or	r17,r2,r6
   45db8:	8806d77a 	srli	r3,r17,29
   45dbc:	200890fa 	slli	r4,r4,3
   45dc0:	882290fa 	slli	r17,r17,3
   45dc4:	3825883a 	mov	r18,r7
   45dc8:	1906b03a 	or	r3,r3,r4
   45dcc:	0401ffc4 	movi	r16,2047
   45dd0:	003e1906 	br	45638 <__alt_data_end+0xfffc5638>
   45dd4:	000b883a 	mov	r5,zero
   45dd8:	0005883a 	mov	r2,zero
   45ddc:	003e2e06 	br	45698 <__alt_data_end+0xfffc5698>
   45de0:	0401ffc4 	movi	r16,2047
   45de4:	003e1406 	br	45638 <__alt_data_end+0xfffc5638>
   45de8:	0005883a 	mov	r2,zero
   45dec:	003f7506 	br	45bc4 <__alt_data_end+0xfffc5bc4>
   45df0:	0005883a 	mov	r2,zero
   45df4:	0009883a 	mov	r4,zero
   45df8:	003e7806 	br	457dc <__alt_data_end+0xfffc57dc>
   45dfc:	123ff804 	addi	r8,r2,-32
   45e00:	01000804 	movi	r4,32
   45e04:	1a10d83a 	srl	r8,r3,r8
   45e08:	11002526 	beq	r2,r4,45ea0 <__subdf3+0x8ec>
   45e0c:	01001004 	movi	r4,64
   45e10:	2085c83a 	sub	r2,r4,r2
   45e14:	1884983a 	sll	r2,r3,r2
   45e18:	1444b03a 	or	r2,r2,r17
   45e1c:	1004c03a 	cmpne	r2,r2,zero
   45e20:	40a2b03a 	or	r17,r8,r2
   45e24:	0005883a 	mov	r2,zero
   45e28:	003f1606 	br	45a84 <__alt_data_end+0xfffc5a84>
   45e2c:	02000434 	movhi	r8,16
   45e30:	0009883a 	mov	r4,zero
   45e34:	423fffc4 	addi	r8,r8,-1
   45e38:	00bfffc4 	movi	r2,-1
   45e3c:	0401ffc4 	movi	r16,2047
   45e40:	003e6606 	br	457dc <__alt_data_end+0xfffc57dc>
   45e44:	1c62b03a 	or	r17,r3,r17
   45e48:	8822c03a 	cmpne	r17,r17,zero
   45e4c:	0005883a 	mov	r2,zero
   45e50:	003f9906 	br	45cb8 <__alt_data_end+0xfffc5cb8>
   45e54:	2807883a 	mov	r3,r5
   45e58:	3023883a 	mov	r17,r6
   45e5c:	0401ffc4 	movi	r16,2047
   45e60:	003df506 	br	45638 <__alt_data_end+0xfffc5638>
   45e64:	2807883a 	mov	r3,r5
   45e68:	3023883a 	mov	r17,r6
   45e6c:	003df206 	br	45638 <__alt_data_end+0xfffc5638>
   45e70:	123ff804 	addi	r8,r2,-32
   45e74:	01000804 	movi	r4,32
   45e78:	1a10d83a 	srl	r8,r3,r8
   45e7c:	11000a26 	beq	r2,r4,45ea8 <__subdf3+0x8f4>
   45e80:	01001004 	movi	r4,64
   45e84:	2085c83a 	sub	r2,r4,r2
   45e88:	1884983a 	sll	r2,r3,r2
   45e8c:	1444b03a 	or	r2,r2,r17
   45e90:	1004c03a 	cmpne	r2,r2,zero
   45e94:	40a2b03a 	or	r17,r8,r2
   45e98:	0005883a 	mov	r2,zero
   45e9c:	003f8606 	br	45cb8 <__alt_data_end+0xfffc5cb8>
   45ea0:	0005883a 	mov	r2,zero
   45ea4:	003fdc06 	br	45e18 <__alt_data_end+0xfffc5e18>
   45ea8:	0005883a 	mov	r2,zero
   45eac:	003ff706 	br	45e8c <__alt_data_end+0xfffc5e8c>

00045eb0 <__fixdfsi>:
   45eb0:	280cd53a 	srli	r6,r5,20
   45eb4:	00c00434 	movhi	r3,16
   45eb8:	18ffffc4 	addi	r3,r3,-1
   45ebc:	3181ffcc 	andi	r6,r6,2047
   45ec0:	01c0ff84 	movi	r7,1022
   45ec4:	28c6703a 	and	r3,r5,r3
   45ec8:	280ad7fa 	srli	r5,r5,31
   45ecc:	3980120e 	bge	r7,r6,45f18 <__fixdfsi+0x68>
   45ed0:	00810744 	movi	r2,1053
   45ed4:	11800c16 	blt	r2,r6,45f08 <__fixdfsi+0x58>
   45ed8:	00810cc4 	movi	r2,1075
   45edc:	1185c83a 	sub	r2,r2,r6
   45ee0:	01c007c4 	movi	r7,31
   45ee4:	18c00434 	orhi	r3,r3,16
   45ee8:	38800d16 	blt	r7,r2,45f20 <__fixdfsi+0x70>
   45eec:	31befb44 	addi	r6,r6,-1043
   45ef0:	2084d83a 	srl	r2,r4,r2
   45ef4:	1986983a 	sll	r3,r3,r6
   45ef8:	1884b03a 	or	r2,r3,r2
   45efc:	28000726 	beq	r5,zero,45f1c <__fixdfsi+0x6c>
   45f00:	0085c83a 	sub	r2,zero,r2
   45f04:	f800283a 	ret
   45f08:	00a00034 	movhi	r2,32768
   45f0c:	10bfffc4 	addi	r2,r2,-1
   45f10:	2885883a 	add	r2,r5,r2
   45f14:	f800283a 	ret
   45f18:	0005883a 	mov	r2,zero
   45f1c:	f800283a 	ret
   45f20:	008104c4 	movi	r2,1043
   45f24:	1185c83a 	sub	r2,r2,r6
   45f28:	1884d83a 	srl	r2,r3,r2
   45f2c:	003ff306 	br	45efc <__alt_data_end+0xfffc5efc>

00045f30 <__floatsidf>:
   45f30:	defffd04 	addi	sp,sp,-12
   45f34:	dfc00215 	stw	ra,8(sp)
   45f38:	dc400115 	stw	r17,4(sp)
   45f3c:	dc000015 	stw	r16,0(sp)
   45f40:	20002b26 	beq	r4,zero,45ff0 <__floatsidf+0xc0>
   45f44:	2023883a 	mov	r17,r4
   45f48:	2020d7fa 	srli	r16,r4,31
   45f4c:	20002d16 	blt	r4,zero,46004 <__floatsidf+0xd4>
   45f50:	8809883a 	mov	r4,r17
   45f54:	00462c40 	call	462c4 <__clzsi2>
   45f58:	01410784 	movi	r5,1054
   45f5c:	288bc83a 	sub	r5,r5,r2
   45f60:	01010cc4 	movi	r4,1075
   45f64:	2149c83a 	sub	r4,r4,r5
   45f68:	00c007c4 	movi	r3,31
   45f6c:	1900160e 	bge	r3,r4,45fc8 <__floatsidf+0x98>
   45f70:	00c104c4 	movi	r3,1043
   45f74:	1947c83a 	sub	r3,r3,r5
   45f78:	88c6983a 	sll	r3,r17,r3
   45f7c:	00800434 	movhi	r2,16
   45f80:	10bfffc4 	addi	r2,r2,-1
   45f84:	1886703a 	and	r3,r3,r2
   45f88:	2941ffcc 	andi	r5,r5,2047
   45f8c:	800d883a 	mov	r6,r16
   45f90:	0005883a 	mov	r2,zero
   45f94:	280a953a 	slli	r5,r5,20
   45f98:	31803fcc 	andi	r6,r6,255
   45f9c:	01000434 	movhi	r4,16
   45fa0:	300c97fa 	slli	r6,r6,31
   45fa4:	213fffc4 	addi	r4,r4,-1
   45fa8:	1906703a 	and	r3,r3,r4
   45fac:	1946b03a 	or	r3,r3,r5
   45fb0:	1986b03a 	or	r3,r3,r6
   45fb4:	dfc00217 	ldw	ra,8(sp)
   45fb8:	dc400117 	ldw	r17,4(sp)
   45fbc:	dc000017 	ldw	r16,0(sp)
   45fc0:	dec00304 	addi	sp,sp,12
   45fc4:	f800283a 	ret
   45fc8:	00c002c4 	movi	r3,11
   45fcc:	1887c83a 	sub	r3,r3,r2
   45fd0:	88c6d83a 	srl	r3,r17,r3
   45fd4:	8904983a 	sll	r2,r17,r4
   45fd8:	01000434 	movhi	r4,16
   45fdc:	213fffc4 	addi	r4,r4,-1
   45fe0:	2941ffcc 	andi	r5,r5,2047
   45fe4:	1906703a 	and	r3,r3,r4
   45fe8:	800d883a 	mov	r6,r16
   45fec:	003fe906 	br	45f94 <__alt_data_end+0xfffc5f94>
   45ff0:	000d883a 	mov	r6,zero
   45ff4:	000b883a 	mov	r5,zero
   45ff8:	0007883a 	mov	r3,zero
   45ffc:	0005883a 	mov	r2,zero
   46000:	003fe406 	br	45f94 <__alt_data_end+0xfffc5f94>
   46004:	0123c83a 	sub	r17,zero,r4
   46008:	003fd106 	br	45f50 <__alt_data_end+0xfffc5f50>

0004600c <__extendsfdf2>:
   4600c:	200ad5fa 	srli	r5,r4,23
   46010:	defffd04 	addi	sp,sp,-12
   46014:	dc400115 	stw	r17,4(sp)
   46018:	29403fcc 	andi	r5,r5,255
   4601c:	29800044 	addi	r6,r5,1
   46020:	04402034 	movhi	r17,128
   46024:	dc000015 	stw	r16,0(sp)
   46028:	8c7fffc4 	addi	r17,r17,-1
   4602c:	dfc00215 	stw	ra,8(sp)
   46030:	31803fcc 	andi	r6,r6,255
   46034:	00800044 	movi	r2,1
   46038:	8922703a 	and	r17,r17,r4
   4603c:	2020d7fa 	srli	r16,r4,31
   46040:	1180110e 	bge	r2,r6,46088 <__extendsfdf2+0x7c>
   46044:	880cd0fa 	srli	r6,r17,3
   46048:	8822977a 	slli	r17,r17,29
   4604c:	2940e004 	addi	r5,r5,896
   46050:	2941ffcc 	andi	r5,r5,2047
   46054:	2804953a 	slli	r2,r5,20
   46058:	01400434 	movhi	r5,16
   4605c:	800697fa 	slli	r3,r16,31
   46060:	297fffc4 	addi	r5,r5,-1
   46064:	314a703a 	and	r5,r6,r5
   46068:	288ab03a 	or	r5,r5,r2
   4606c:	28c6b03a 	or	r3,r5,r3
   46070:	8805883a 	mov	r2,r17
   46074:	dfc00217 	ldw	ra,8(sp)
   46078:	dc400117 	ldw	r17,4(sp)
   4607c:	dc000017 	ldw	r16,0(sp)
   46080:	dec00304 	addi	sp,sp,12
   46084:	f800283a 	ret
   46088:	2800111e 	bne	r5,zero,460d0 <__extendsfdf2+0xc4>
   4608c:	88001c26 	beq	r17,zero,46100 <__extendsfdf2+0xf4>
   46090:	8809883a 	mov	r4,r17
   46094:	00462c40 	call	462c4 <__clzsi2>
   46098:	00c00284 	movi	r3,10
   4609c:	18801b16 	blt	r3,r2,4610c <__extendsfdf2+0x100>
   460a0:	018002c4 	movi	r6,11
   460a4:	308dc83a 	sub	r6,r6,r2
   460a8:	11000544 	addi	r4,r2,21
   460ac:	8986d83a 	srl	r3,r17,r6
   460b0:	8922983a 	sll	r17,r17,r4
   460b4:	0180e244 	movi	r6,905
   460b8:	01400434 	movhi	r5,16
   460bc:	3085c83a 	sub	r2,r6,r2
   460c0:	297fffc4 	addi	r5,r5,-1
   460c4:	194c703a 	and	r6,r3,r5
   460c8:	1141ffcc 	andi	r5,r2,2047
   460cc:	003fe006 	br	46050 <__alt_data_end+0xfffc6050>
   460d0:	88000826 	beq	r17,zero,460f4 <__extendsfdf2+0xe8>
   460d4:	880cd0fa 	srli	r6,r17,3
   460d8:	00800434 	movhi	r2,16
   460dc:	10bfffc4 	addi	r2,r2,-1
   460e0:	31800234 	orhi	r6,r6,8
   460e4:	8822977a 	slli	r17,r17,29
   460e8:	308c703a 	and	r6,r6,r2
   460ec:	0141ffc4 	movi	r5,2047
   460f0:	003fd706 	br	46050 <__alt_data_end+0xfffc6050>
   460f4:	0141ffc4 	movi	r5,2047
   460f8:	000d883a 	mov	r6,zero
   460fc:	003fd406 	br	46050 <__alt_data_end+0xfffc6050>
   46100:	000b883a 	mov	r5,zero
   46104:	000d883a 	mov	r6,zero
   46108:	003fd106 	br	46050 <__alt_data_end+0xfffc6050>
   4610c:	11bffd44 	addi	r6,r2,-11
   46110:	8986983a 	sll	r3,r17,r6
   46114:	0023883a 	mov	r17,zero
   46118:	003fe606 	br	460b4 <__alt_data_end+0xfffc60b4>

0004611c <__truncdfsf2>:
   4611c:	2810d53a 	srli	r8,r5,20
   46120:	01c00434 	movhi	r7,16
   46124:	39ffffc4 	addi	r7,r7,-1
   46128:	29ce703a 	and	r7,r5,r7
   4612c:	4201ffcc 	andi	r8,r8,2047
   46130:	380e90fa 	slli	r7,r7,3
   46134:	200cd77a 	srli	r6,r4,29
   46138:	42400044 	addi	r9,r8,1
   4613c:	4a41ffcc 	andi	r9,r9,2047
   46140:	00c00044 	movi	r3,1
   46144:	280ad7fa 	srli	r5,r5,31
   46148:	31ceb03a 	or	r7,r6,r7
   4614c:	200490fa 	slli	r2,r4,3
   46150:	1a40230e 	bge	r3,r9,461e0 <__truncdfsf2+0xc4>
   46154:	40ff2004 	addi	r3,r8,-896
   46158:	01803f84 	movi	r6,254
   4615c:	30c01516 	blt	r6,r3,461b4 <__truncdfsf2+0x98>
   46160:	00c0380e 	bge	zero,r3,46244 <__truncdfsf2+0x128>
   46164:	200c91ba 	slli	r6,r4,6
   46168:	380e90fa 	slli	r7,r7,3
   4616c:	1004d77a 	srli	r2,r2,29
   46170:	300cc03a 	cmpne	r6,r6,zero
   46174:	31ccb03a 	or	r6,r6,r7
   46178:	308cb03a 	or	r6,r6,r2
   4617c:	308001cc 	andi	r2,r6,7
   46180:	10000426 	beq	r2,zero,46194 <__truncdfsf2+0x78>
   46184:	308003cc 	andi	r2,r6,15
   46188:	01000104 	movi	r4,4
   4618c:	11000126 	beq	r2,r4,46194 <__truncdfsf2+0x78>
   46190:	31800104 	addi	r6,r6,4
   46194:	3081002c 	andhi	r2,r6,1024
   46198:	10001626 	beq	r2,zero,461f4 <__truncdfsf2+0xd8>
   4619c:	18c00044 	addi	r3,r3,1
   461a0:	00803fc4 	movi	r2,255
   461a4:	18800326 	beq	r3,r2,461b4 <__truncdfsf2+0x98>
   461a8:	300c91ba 	slli	r6,r6,6
   461ac:	300cd27a 	srli	r6,r6,9
   461b0:	00000206 	br	461bc <__truncdfsf2+0xa0>
   461b4:	00ffffc4 	movi	r3,-1
   461b8:	000d883a 	mov	r6,zero
   461bc:	18c03fcc 	andi	r3,r3,255
   461c0:	180895fa 	slli	r4,r3,23
   461c4:	00c02034 	movhi	r3,128
   461c8:	280a97fa 	slli	r5,r5,31
   461cc:	18ffffc4 	addi	r3,r3,-1
   461d0:	30c6703a 	and	r3,r6,r3
   461d4:	1906b03a 	or	r3,r3,r4
   461d8:	1944b03a 	or	r2,r3,r5
   461dc:	f800283a 	ret
   461e0:	40000b1e 	bne	r8,zero,46210 <__truncdfsf2+0xf4>
   461e4:	388cb03a 	or	r6,r7,r2
   461e8:	0007883a 	mov	r3,zero
   461ec:	30000426 	beq	r6,zero,46200 <__truncdfsf2+0xe4>
   461f0:	01800144 	movi	r6,5
   461f4:	00803fc4 	movi	r2,255
   461f8:	300cd0fa 	srli	r6,r6,3
   461fc:	18800a26 	beq	r3,r2,46228 <__truncdfsf2+0x10c>
   46200:	00802034 	movhi	r2,128
   46204:	10bfffc4 	addi	r2,r2,-1
   46208:	308c703a 	and	r6,r6,r2
   4620c:	003feb06 	br	461bc <__alt_data_end+0xfffc61bc>
   46210:	3888b03a 	or	r4,r7,r2
   46214:	203fe726 	beq	r4,zero,461b4 <__alt_data_end+0xfffc61b4>
   46218:	380c90fa 	slli	r6,r7,3
   4621c:	00c03fc4 	movi	r3,255
   46220:	31808034 	orhi	r6,r6,512
   46224:	003fd506 	br	4617c <__alt_data_end+0xfffc617c>
   46228:	303fe226 	beq	r6,zero,461b4 <__alt_data_end+0xfffc61b4>
   4622c:	00802034 	movhi	r2,128
   46230:	31801034 	orhi	r6,r6,64
   46234:	10bfffc4 	addi	r2,r2,-1
   46238:	00ffffc4 	movi	r3,-1
   4623c:	308c703a 	and	r6,r6,r2
   46240:	003fde06 	br	461bc <__alt_data_end+0xfffc61bc>
   46244:	013ffa44 	movi	r4,-23
   46248:	19000e16 	blt	r3,r4,46284 <__truncdfsf2+0x168>
   4624c:	01000784 	movi	r4,30
   46250:	20c9c83a 	sub	r4,r4,r3
   46254:	018007c4 	movi	r6,31
   46258:	39c02034 	orhi	r7,r7,128
   4625c:	31000b16 	blt	r6,r4,4628c <__truncdfsf2+0x170>
   46260:	423f2084 	addi	r8,r8,-894
   46264:	120c983a 	sll	r6,r2,r8
   46268:	3a0e983a 	sll	r7,r7,r8
   4626c:	1104d83a 	srl	r2,r2,r4
   46270:	300cc03a 	cmpne	r6,r6,zero
   46274:	31ceb03a 	or	r7,r6,r7
   46278:	388cb03a 	or	r6,r7,r2
   4627c:	0007883a 	mov	r3,zero
   46280:	003fbe06 	br	4617c <__alt_data_end+0xfffc617c>
   46284:	0007883a 	mov	r3,zero
   46288:	003fd906 	br	461f0 <__alt_data_end+0xfffc61f0>
   4628c:	01bfff84 	movi	r6,-2
   46290:	30cdc83a 	sub	r6,r6,r3
   46294:	00c00804 	movi	r3,32
   46298:	398cd83a 	srl	r6,r7,r6
   4629c:	20c00726 	beq	r4,r3,462bc <__truncdfsf2+0x1a0>
   462a0:	423f2884 	addi	r8,r8,-862
   462a4:	3a0e983a 	sll	r7,r7,r8
   462a8:	3884b03a 	or	r2,r7,r2
   462ac:	1004c03a 	cmpne	r2,r2,zero
   462b0:	118cb03a 	or	r6,r2,r6
   462b4:	0007883a 	mov	r3,zero
   462b8:	003fb006 	br	4617c <__alt_data_end+0xfffc617c>
   462bc:	000f883a 	mov	r7,zero
   462c0:	003ff906 	br	462a8 <__alt_data_end+0xfffc62a8>

000462c4 <__clzsi2>:
   462c4:	00bfffd4 	movui	r2,65535
   462c8:	11000536 	bltu	r2,r4,462e0 <__clzsi2+0x1c>
   462cc:	00803fc4 	movi	r2,255
   462d0:	11000f36 	bltu	r2,r4,46310 <__clzsi2+0x4c>
   462d4:	00800804 	movi	r2,32
   462d8:	0007883a 	mov	r3,zero
   462dc:	00000506 	br	462f4 <__clzsi2+0x30>
   462e0:	00804034 	movhi	r2,256
   462e4:	10bfffc4 	addi	r2,r2,-1
   462e8:	11000c2e 	bgeu	r2,r4,4631c <__clzsi2+0x58>
   462ec:	00800204 	movi	r2,8
   462f0:	00c00604 	movi	r3,24
   462f4:	20c8d83a 	srl	r4,r4,r3
   462f8:	00c00174 	movhi	r3,5
   462fc:	18ce9a04 	addi	r3,r3,14952
   46300:	1909883a 	add	r4,r3,r4
   46304:	20c00003 	ldbu	r3,0(r4)
   46308:	10c5c83a 	sub	r2,r2,r3
   4630c:	f800283a 	ret
   46310:	00800604 	movi	r2,24
   46314:	00c00204 	movi	r3,8
   46318:	003ff606 	br	462f4 <__alt_data_end+0xfffc62f4>
   4631c:	00800404 	movi	r2,16
   46320:	1007883a 	mov	r3,r2
   46324:	003ff306 	br	462f4 <__alt_data_end+0xfffc62f4>

00046328 <_printf_r>:
   46328:	defffd04 	addi	sp,sp,-12
   4632c:	2805883a 	mov	r2,r5
   46330:	dfc00015 	stw	ra,0(sp)
   46334:	d9800115 	stw	r6,4(sp)
   46338:	d9c00215 	stw	r7,8(sp)
   4633c:	21400217 	ldw	r5,8(r4)
   46340:	d9c00104 	addi	r7,sp,4
   46344:	100d883a 	mov	r6,r2
   46348:	00465000 	call	46500 <___vfprintf_internal_r>
   4634c:	dfc00017 	ldw	ra,0(sp)
   46350:	dec00304 	addi	sp,sp,12
   46354:	f800283a 	ret

00046358 <printf>:
   46358:	defffc04 	addi	sp,sp,-16
   4635c:	dfc00015 	stw	ra,0(sp)
   46360:	d9400115 	stw	r5,4(sp)
   46364:	d9800215 	stw	r6,8(sp)
   46368:	d9c00315 	stw	r7,12(sp)
   4636c:	00800174 	movhi	r2,5
   46370:	10960604 	addi	r2,r2,22552
   46374:	10800017 	ldw	r2,0(r2)
   46378:	200b883a 	mov	r5,r4
   4637c:	d9800104 	addi	r6,sp,4
   46380:	11000217 	ldw	r4,8(r2)
   46384:	00486f80 	call	486f8 <__vfprintf_internal>
   46388:	dfc00017 	ldw	ra,0(sp)
   4638c:	dec00404 	addi	sp,sp,16
   46390:	f800283a 	ret

00046394 <_puts_r>:
   46394:	defff604 	addi	sp,sp,-40
   46398:	dc000715 	stw	r16,28(sp)
   4639c:	2021883a 	mov	r16,r4
   463a0:	2809883a 	mov	r4,r5
   463a4:	dc400815 	stw	r17,32(sp)
   463a8:	dfc00915 	stw	ra,36(sp)
   463ac:	2823883a 	mov	r17,r5
   463b0:	00464680 	call	46468 <strlen>
   463b4:	10c00044 	addi	r3,r2,1
   463b8:	d8800115 	stw	r2,4(sp)
   463bc:	00800174 	movhi	r2,5
   463c0:	108eda04 	addi	r2,r2,15208
   463c4:	d8800215 	stw	r2,8(sp)
   463c8:	00800044 	movi	r2,1
   463cc:	d8800315 	stw	r2,12(sp)
   463d0:	00800084 	movi	r2,2
   463d4:	dc400015 	stw	r17,0(sp)
   463d8:	d8c00615 	stw	r3,24(sp)
   463dc:	dec00415 	stw	sp,16(sp)
   463e0:	d8800515 	stw	r2,20(sp)
   463e4:	80000226 	beq	r16,zero,463f0 <_puts_r+0x5c>
   463e8:	80800e17 	ldw	r2,56(r16)
   463ec:	10001426 	beq	r2,zero,46440 <_puts_r+0xac>
   463f0:	81400217 	ldw	r5,8(r16)
   463f4:	2880030b 	ldhu	r2,12(r5)
   463f8:	10c8000c 	andi	r3,r2,8192
   463fc:	1800061e 	bne	r3,zero,46418 <_puts_r+0x84>
   46400:	29001917 	ldw	r4,100(r5)
   46404:	00f7ffc4 	movi	r3,-8193
   46408:	10880014 	ori	r2,r2,8192
   4640c:	20c6703a 	and	r3,r4,r3
   46410:	2880030d 	sth	r2,12(r5)
   46414:	28c01915 	stw	r3,100(r5)
   46418:	d9800404 	addi	r6,sp,16
   4641c:	8009883a 	mov	r4,r16
   46420:	004ac280 	call	4ac28 <__sfvwrite_r>
   46424:	1000091e 	bne	r2,zero,4644c <_puts_r+0xb8>
   46428:	00800284 	movi	r2,10
   4642c:	dfc00917 	ldw	ra,36(sp)
   46430:	dc400817 	ldw	r17,32(sp)
   46434:	dc000717 	ldw	r16,28(sp)
   46438:	dec00a04 	addi	sp,sp,40
   4643c:	f800283a 	ret
   46440:	8009883a 	mov	r4,r16
   46444:	004a7a40 	call	4a7a4 <__sinit>
   46448:	003fe906 	br	463f0 <__alt_data_end+0xfffc63f0>
   4644c:	00bfffc4 	movi	r2,-1
   46450:	003ff606 	br	4642c <__alt_data_end+0xfffc642c>

00046454 <puts>:
   46454:	00800174 	movhi	r2,5
   46458:	10960604 	addi	r2,r2,22552
   4645c:	200b883a 	mov	r5,r4
   46460:	11000017 	ldw	r4,0(r2)
   46464:	00463941 	jmpi	46394 <_puts_r>

00046468 <strlen>:
   46468:	208000cc 	andi	r2,r4,3
   4646c:	10002026 	beq	r2,zero,464f0 <strlen+0x88>
   46470:	20800007 	ldb	r2,0(r4)
   46474:	10002026 	beq	r2,zero,464f8 <strlen+0x90>
   46478:	2005883a 	mov	r2,r4
   4647c:	00000206 	br	46488 <strlen+0x20>
   46480:	10c00007 	ldb	r3,0(r2)
   46484:	18001826 	beq	r3,zero,464e8 <strlen+0x80>
   46488:	10800044 	addi	r2,r2,1
   4648c:	10c000cc 	andi	r3,r2,3
   46490:	183ffb1e 	bne	r3,zero,46480 <__alt_data_end+0xfffc6480>
   46494:	10c00017 	ldw	r3,0(r2)
   46498:	01ffbff4 	movhi	r7,65279
   4649c:	39ffbfc4 	addi	r7,r7,-257
   464a0:	00ca303a 	nor	r5,zero,r3
   464a4:	01a02074 	movhi	r6,32897
   464a8:	19c7883a 	add	r3,r3,r7
   464ac:	31a02004 	addi	r6,r6,-32640
   464b0:	1946703a 	and	r3,r3,r5
   464b4:	1986703a 	and	r3,r3,r6
   464b8:	1800091e 	bne	r3,zero,464e0 <strlen+0x78>
   464bc:	10800104 	addi	r2,r2,4
   464c0:	10c00017 	ldw	r3,0(r2)
   464c4:	19cb883a 	add	r5,r3,r7
   464c8:	00c6303a 	nor	r3,zero,r3
   464cc:	28c6703a 	and	r3,r5,r3
   464d0:	1986703a 	and	r3,r3,r6
   464d4:	183ff926 	beq	r3,zero,464bc <__alt_data_end+0xfffc64bc>
   464d8:	00000106 	br	464e0 <strlen+0x78>
   464dc:	10800044 	addi	r2,r2,1
   464e0:	10c00007 	ldb	r3,0(r2)
   464e4:	183ffd1e 	bne	r3,zero,464dc <__alt_data_end+0xfffc64dc>
   464e8:	1105c83a 	sub	r2,r2,r4
   464ec:	f800283a 	ret
   464f0:	2005883a 	mov	r2,r4
   464f4:	003fe706 	br	46494 <__alt_data_end+0xfffc6494>
   464f8:	0005883a 	mov	r2,zero
   464fc:	f800283a 	ret

00046500 <___vfprintf_internal_r>:
   46500:	deffb804 	addi	sp,sp,-288
   46504:	dfc04715 	stw	ra,284(sp)
   46508:	ddc04515 	stw	r23,276(sp)
   4650c:	dd404315 	stw	r21,268(sp)
   46510:	d9002c15 	stw	r4,176(sp)
   46514:	282f883a 	mov	r23,r5
   46518:	302b883a 	mov	r21,r6
   4651c:	d9c02d15 	stw	r7,180(sp)
   46520:	df004615 	stw	fp,280(sp)
   46524:	dd804415 	stw	r22,272(sp)
   46528:	dd004215 	stw	r20,264(sp)
   4652c:	dcc04115 	stw	r19,260(sp)
   46530:	dc804015 	stw	r18,256(sp)
   46534:	dc403f15 	stw	r17,252(sp)
   46538:	dc003e15 	stw	r16,248(sp)
   4653c:	004b3180 	call	4b318 <_localeconv_r>
   46540:	10800017 	ldw	r2,0(r2)
   46544:	1009883a 	mov	r4,r2
   46548:	d8803415 	stw	r2,208(sp)
   4654c:	00464680 	call	46468 <strlen>
   46550:	d8803715 	stw	r2,220(sp)
   46554:	d8802c17 	ldw	r2,176(sp)
   46558:	10000226 	beq	r2,zero,46564 <___vfprintf_internal_r+0x64>
   4655c:	10800e17 	ldw	r2,56(r2)
   46560:	1000f926 	beq	r2,zero,46948 <___vfprintf_internal_r+0x448>
   46564:	b880030b 	ldhu	r2,12(r23)
   46568:	10c8000c 	andi	r3,r2,8192
   4656c:	1800061e 	bne	r3,zero,46588 <___vfprintf_internal_r+0x88>
   46570:	b9001917 	ldw	r4,100(r23)
   46574:	00f7ffc4 	movi	r3,-8193
   46578:	10880014 	ori	r2,r2,8192
   4657c:	20c6703a 	and	r3,r4,r3
   46580:	b880030d 	sth	r2,12(r23)
   46584:	b8c01915 	stw	r3,100(r23)
   46588:	10c0020c 	andi	r3,r2,8
   4658c:	1800c126 	beq	r3,zero,46894 <___vfprintf_internal_r+0x394>
   46590:	b8c00417 	ldw	r3,16(r23)
   46594:	1800bf26 	beq	r3,zero,46894 <___vfprintf_internal_r+0x394>
   46598:	1080068c 	andi	r2,r2,26
   4659c:	00c00284 	movi	r3,10
   465a0:	10c0c426 	beq	r2,r3,468b4 <___vfprintf_internal_r+0x3b4>
   465a4:	d8c00404 	addi	r3,sp,16
   465a8:	05000174 	movhi	r20,5
   465ac:	d9001e04 	addi	r4,sp,120
   465b0:	a50eeb84 	addi	r20,r20,15278
   465b4:	d8c01e15 	stw	r3,120(sp)
   465b8:	d8002015 	stw	zero,128(sp)
   465bc:	d8001f15 	stw	zero,124(sp)
   465c0:	d8003315 	stw	zero,204(sp)
   465c4:	d8003615 	stw	zero,216(sp)
   465c8:	d8003815 	stw	zero,224(sp)
   465cc:	1811883a 	mov	r8,r3
   465d0:	d8003915 	stw	zero,228(sp)
   465d4:	d8003a15 	stw	zero,232(sp)
   465d8:	d8002f15 	stw	zero,188(sp)
   465dc:	d9002815 	stw	r4,160(sp)
   465e0:	a8800007 	ldb	r2,0(r21)
   465e4:	10027b26 	beq	r2,zero,46fd4 <___vfprintf_internal_r+0xad4>
   465e8:	00c00944 	movi	r3,37
   465ec:	a821883a 	mov	r16,r21
   465f0:	10c0021e 	bne	r2,r3,465fc <___vfprintf_internal_r+0xfc>
   465f4:	00001406 	br	46648 <___vfprintf_internal_r+0x148>
   465f8:	10c00326 	beq	r2,r3,46608 <___vfprintf_internal_r+0x108>
   465fc:	84000044 	addi	r16,r16,1
   46600:	80800007 	ldb	r2,0(r16)
   46604:	103ffc1e 	bne	r2,zero,465f8 <__alt_data_end+0xfffc65f8>
   46608:	8563c83a 	sub	r17,r16,r21
   4660c:	88000e26 	beq	r17,zero,46648 <___vfprintf_internal_r+0x148>
   46610:	d8c02017 	ldw	r3,128(sp)
   46614:	d8801f17 	ldw	r2,124(sp)
   46618:	45400015 	stw	r21,0(r8)
   4661c:	1c47883a 	add	r3,r3,r17
   46620:	10800044 	addi	r2,r2,1
   46624:	d8c02015 	stw	r3,128(sp)
   46628:	44400115 	stw	r17,4(r8)
   4662c:	d8801f15 	stw	r2,124(sp)
   46630:	00c001c4 	movi	r3,7
   46634:	1880a716 	blt	r3,r2,468d4 <___vfprintf_internal_r+0x3d4>
   46638:	42000204 	addi	r8,r8,8
   4663c:	d9402f17 	ldw	r5,188(sp)
   46640:	2c4b883a 	add	r5,r5,r17
   46644:	d9402f15 	stw	r5,188(sp)
   46648:	80800007 	ldb	r2,0(r16)
   4664c:	1000a826 	beq	r2,zero,468f0 <___vfprintf_internal_r+0x3f0>
   46650:	84400047 	ldb	r17,1(r16)
   46654:	00bfffc4 	movi	r2,-1
   46658:	85400044 	addi	r21,r16,1
   4665c:	d8002785 	stb	zero,158(sp)
   46660:	0007883a 	mov	r3,zero
   46664:	000f883a 	mov	r7,zero
   46668:	d8802915 	stw	r2,164(sp)
   4666c:	d8003115 	stw	zero,196(sp)
   46670:	0025883a 	mov	r18,zero
   46674:	01401604 	movi	r5,88
   46678:	01800244 	movi	r6,9
   4667c:	02800a84 	movi	r10,42
   46680:	02401b04 	movi	r9,108
   46684:	ad400044 	addi	r21,r21,1
   46688:	88bff804 	addi	r2,r17,-32
   4668c:	28830436 	bltu	r5,r2,472a0 <___vfprintf_internal_r+0xda0>
   46690:	100490ba 	slli	r2,r2,2
   46694:	01000134 	movhi	r4,4
   46698:	2119aa04 	addi	r4,r4,26280
   4669c:	1105883a 	add	r2,r2,r4
   466a0:	10800017 	ldw	r2,0(r2)
   466a4:	1000683a 	jmp	r2
   466a8:	000471c0 	call	471c <__alt_mem_onchip_memory2_0-0x3b8e4>
   466ac:	000472a0 	cmpeqi	zero,zero,4554
   466b0:	000472a0 	cmpeqi	zero,zero,4554
   466b4:	000471e0 	cmpeqi	zero,zero,4551
   466b8:	000472a0 	cmpeqi	zero,zero,4554
   466bc:	000472a0 	cmpeqi	zero,zero,4554
   466c0:	000472a0 	cmpeqi	zero,zero,4554
   466c4:	000472a0 	cmpeqi	zero,zero,4554
   466c8:	000472a0 	cmpeqi	zero,zero,4554
   466cc:	000472a0 	cmpeqi	zero,zero,4554
   466d0:	00046954 	movui	zero,4517
   466d4:	000470fc 	xorhi	zero,zero,4547
   466d8:	000472a0 	cmpeqi	zero,zero,4554
   466dc:	0004681c 	xori	zero,zero,4512
   466e0:	0004697c 	xorhi	zero,zero,4517
   466e4:	000472a0 	cmpeqi	zero,zero,4554
   466e8:	000469bc 	xorhi	zero,zero,4518
   466ec:	000469c8 	cmpgei	zero,zero,4519
   466f0:	000469c8 	cmpgei	zero,zero,4519
   466f4:	000469c8 	cmpgei	zero,zero,4519
   466f8:	000469c8 	cmpgei	zero,zero,4519
   466fc:	000469c8 	cmpgei	zero,zero,4519
   46700:	000469c8 	cmpgei	zero,zero,4519
   46704:	000469c8 	cmpgei	zero,zero,4519
   46708:	000469c8 	cmpgei	zero,zero,4519
   4670c:	000469c8 	cmpgei	zero,zero,4519
   46710:	000472a0 	cmpeqi	zero,zero,4554
   46714:	000472a0 	cmpeqi	zero,zero,4554
   46718:	000472a0 	cmpeqi	zero,zero,4554
   4671c:	000472a0 	cmpeqi	zero,zero,4554
   46720:	000472a0 	cmpeqi	zero,zero,4554
   46724:	000472a0 	cmpeqi	zero,zero,4554
   46728:	000472a0 	cmpeqi	zero,zero,4554
   4672c:	000472a0 	cmpeqi	zero,zero,4554
   46730:	000472a0 	cmpeqi	zero,zero,4554
   46734:	000472a0 	cmpeqi	zero,zero,4554
   46738:	000469fc 	xorhi	zero,zero,4519
   4673c:	00046ab8 	rdprs	zero,zero,4522
   46740:	000472a0 	cmpeqi	zero,zero,4554
   46744:	00046ab8 	rdprs	zero,zero,4522
   46748:	000472a0 	cmpeqi	zero,zero,4554
   4674c:	000472a0 	cmpeqi	zero,zero,4554
   46750:	000472a0 	cmpeqi	zero,zero,4554
   46754:	000472a0 	cmpeqi	zero,zero,4554
   46758:	00046b58 	cmpnei	zero,zero,4525
   4675c:	000472a0 	cmpeqi	zero,zero,4554
   46760:	000472a0 	cmpeqi	zero,zero,4554
   46764:	00046b64 	muli	zero,zero,4525
   46768:	000472a0 	cmpeqi	zero,zero,4554
   4676c:	000472a0 	cmpeqi	zero,zero,4554
   46770:	000472a0 	cmpeqi	zero,zero,4554
   46774:	000472a0 	cmpeqi	zero,zero,4554
   46778:	000472a0 	cmpeqi	zero,zero,4554
   4677c:	00046fdc 	xori	zero,zero,4543
   46780:	000472a0 	cmpeqi	zero,zero,4554
   46784:	000472a0 	cmpeqi	zero,zero,4554
   46788:	0004703c 	xorhi	zero,zero,4544
   4678c:	000472a0 	cmpeqi	zero,zero,4554
   46790:	000472a0 	cmpeqi	zero,zero,4554
   46794:	000472a0 	cmpeqi	zero,zero,4554
   46798:	000472a0 	cmpeqi	zero,zero,4554
   4679c:	000472a0 	cmpeqi	zero,zero,4554
   467a0:	000472a0 	cmpeqi	zero,zero,4554
   467a4:	000472a0 	cmpeqi	zero,zero,4554
   467a8:	000472a0 	cmpeqi	zero,zero,4554
   467ac:	000472a0 	cmpeqi	zero,zero,4554
   467b0:	000472a0 	cmpeqi	zero,zero,4554
   467b4:	0004724c 	andi	zero,zero,4553
   467b8:	000471ec 	andhi	zero,zero,4551
   467bc:	00046ab8 	rdprs	zero,zero,4522
   467c0:	00046ab8 	rdprs	zero,zero,4522
   467c4:	00046ab8 	rdprs	zero,zero,4522
   467c8:	000471fc 	xorhi	zero,zero,4551
   467cc:	000471ec 	andhi	zero,zero,4551
   467d0:	000472a0 	cmpeqi	zero,zero,4554
   467d4:	000472a0 	cmpeqi	zero,zero,4554
   467d8:	00047208 	cmpgei	zero,zero,4552
   467dc:	000472a0 	cmpeqi	zero,zero,4554
   467e0:	00047218 	cmpnei	zero,zero,4552
   467e4:	000470ec 	andhi	zero,zero,4547
   467e8:	00046828 	cmpgeui	zero,zero,4512
   467ec:	0004710c 	andi	zero,zero,4548
   467f0:	000472a0 	cmpeqi	zero,zero,4554
   467f4:	00047118 	cmpnei	zero,zero,4548
   467f8:	000472a0 	cmpeqi	zero,zero,4554
   467fc:	00047174 	movhi	zero,4549
   46800:	000472a0 	cmpeqi	zero,zero,4554
   46804:	000472a0 	cmpeqi	zero,zero,4554
   46808:	00047184 	movi	zero,4550
   4680c:	d9003117 	ldw	r4,196(sp)
   46810:	d8802d15 	stw	r2,180(sp)
   46814:	0109c83a 	sub	r4,zero,r4
   46818:	d9003115 	stw	r4,196(sp)
   4681c:	94800114 	ori	r18,r18,4
   46820:	ac400007 	ldb	r17,0(r21)
   46824:	003f9706 	br	46684 <__alt_data_end+0xfffc6684>
   46828:	00800c04 	movi	r2,48
   4682c:	d9002d17 	ldw	r4,180(sp)
   46830:	d9402917 	ldw	r5,164(sp)
   46834:	d8802705 	stb	r2,156(sp)
   46838:	00801e04 	movi	r2,120
   4683c:	d8802745 	stb	r2,157(sp)
   46840:	d8002785 	stb	zero,158(sp)
   46844:	20c00104 	addi	r3,r4,4
   46848:	24c00017 	ldw	r19,0(r4)
   4684c:	002d883a 	mov	r22,zero
   46850:	90800094 	ori	r2,r18,2
   46854:	28029a16 	blt	r5,zero,472c0 <___vfprintf_internal_r+0xdc0>
   46858:	00bfdfc4 	movi	r2,-129
   4685c:	90a4703a 	and	r18,r18,r2
   46860:	d8c02d15 	stw	r3,180(sp)
   46864:	94800094 	ori	r18,r18,2
   46868:	9802871e 	bne	r19,zero,47288 <___vfprintf_internal_r+0xd88>
   4686c:	00800174 	movhi	r2,5
   46870:	108ee404 	addi	r2,r2,15248
   46874:	d8803915 	stw	r2,228(sp)
   46878:	04401e04 	movi	r17,120
   4687c:	d8802917 	ldw	r2,164(sp)
   46880:	0039883a 	mov	fp,zero
   46884:	1001e926 	beq	r2,zero,4702c <___vfprintf_internal_r+0xb2c>
   46888:	0027883a 	mov	r19,zero
   4688c:	002d883a 	mov	r22,zero
   46890:	00020506 	br	470a8 <___vfprintf_internal_r+0xba8>
   46894:	d9002c17 	ldw	r4,176(sp)
   46898:	b80b883a 	mov	r5,r23
   4689c:	00487d00 	call	487d0 <__swsetup_r>
   468a0:	1005ac1e 	bne	r2,zero,47f54 <___vfprintf_internal_r+0x1a54>
   468a4:	b880030b 	ldhu	r2,12(r23)
   468a8:	00c00284 	movi	r3,10
   468ac:	1080068c 	andi	r2,r2,26
   468b0:	10ff3c1e 	bne	r2,r3,465a4 <__alt_data_end+0xfffc65a4>
   468b4:	b880038f 	ldh	r2,14(r23)
   468b8:	103f3a16 	blt	r2,zero,465a4 <__alt_data_end+0xfffc65a4>
   468bc:	d9c02d17 	ldw	r7,180(sp)
   468c0:	d9002c17 	ldw	r4,176(sp)
   468c4:	a80d883a 	mov	r6,r21
   468c8:	b80b883a 	mov	r5,r23
   468cc:	00487140 	call	48714 <__sbprintf>
   468d0:	00001106 	br	46918 <___vfprintf_internal_r+0x418>
   468d4:	d9002c17 	ldw	r4,176(sp)
   468d8:	d9801e04 	addi	r6,sp,120
   468dc:	b80b883a 	mov	r5,r23
   468e0:	004dafc0 	call	4dafc <__sprint_r>
   468e4:	1000081e 	bne	r2,zero,46908 <___vfprintf_internal_r+0x408>
   468e8:	da000404 	addi	r8,sp,16
   468ec:	003f5306 	br	4663c <__alt_data_end+0xfffc663c>
   468f0:	d8802017 	ldw	r2,128(sp)
   468f4:	10000426 	beq	r2,zero,46908 <___vfprintf_internal_r+0x408>
   468f8:	d9002c17 	ldw	r4,176(sp)
   468fc:	d9801e04 	addi	r6,sp,120
   46900:	b80b883a 	mov	r5,r23
   46904:	004dafc0 	call	4dafc <__sprint_r>
   46908:	b880030b 	ldhu	r2,12(r23)
   4690c:	1080100c 	andi	r2,r2,64
   46910:	1005901e 	bne	r2,zero,47f54 <___vfprintf_internal_r+0x1a54>
   46914:	d8802f17 	ldw	r2,188(sp)
   46918:	dfc04717 	ldw	ra,284(sp)
   4691c:	df004617 	ldw	fp,280(sp)
   46920:	ddc04517 	ldw	r23,276(sp)
   46924:	dd804417 	ldw	r22,272(sp)
   46928:	dd404317 	ldw	r21,268(sp)
   4692c:	dd004217 	ldw	r20,264(sp)
   46930:	dcc04117 	ldw	r19,260(sp)
   46934:	dc804017 	ldw	r18,256(sp)
   46938:	dc403f17 	ldw	r17,252(sp)
   4693c:	dc003e17 	ldw	r16,248(sp)
   46940:	dec04804 	addi	sp,sp,288
   46944:	f800283a 	ret
   46948:	d9002c17 	ldw	r4,176(sp)
   4694c:	004a7a40 	call	4a7a4 <__sinit>
   46950:	003f0406 	br	46564 <__alt_data_end+0xfffc6564>
   46954:	d8802d17 	ldw	r2,180(sp)
   46958:	d9002d17 	ldw	r4,180(sp)
   4695c:	10800017 	ldw	r2,0(r2)
   46960:	d8803115 	stw	r2,196(sp)
   46964:	20800104 	addi	r2,r4,4
   46968:	d9003117 	ldw	r4,196(sp)
   4696c:	203fa716 	blt	r4,zero,4680c <__alt_data_end+0xfffc680c>
   46970:	d8802d15 	stw	r2,180(sp)
   46974:	ac400007 	ldb	r17,0(r21)
   46978:	003f4206 	br	46684 <__alt_data_end+0xfffc6684>
   4697c:	ac400007 	ldb	r17,0(r21)
   46980:	aac00044 	addi	r11,r21,1
   46984:	8a872826 	beq	r17,r10,48628 <___vfprintf_internal_r+0x2128>
   46988:	88bff404 	addi	r2,r17,-48
   4698c:	0009883a 	mov	r4,zero
   46990:	30867d36 	bltu	r6,r2,48388 <___vfprintf_internal_r+0x1e88>
   46994:	5c400007 	ldb	r17,0(r11)
   46998:	210002a4 	muli	r4,r4,10
   4699c:	5d400044 	addi	r21,r11,1
   469a0:	a817883a 	mov	r11,r21
   469a4:	2089883a 	add	r4,r4,r2
   469a8:	88bff404 	addi	r2,r17,-48
   469ac:	30bff92e 	bgeu	r6,r2,46994 <__alt_data_end+0xfffc6994>
   469b0:	2005c916 	blt	r4,zero,480d8 <___vfprintf_internal_r+0x1bd8>
   469b4:	d9002915 	stw	r4,164(sp)
   469b8:	003f3306 	br	46688 <__alt_data_end+0xfffc6688>
   469bc:	94802014 	ori	r18,r18,128
   469c0:	ac400007 	ldb	r17,0(r21)
   469c4:	003f2f06 	br	46684 <__alt_data_end+0xfffc6684>
   469c8:	a809883a 	mov	r4,r21
   469cc:	d8003115 	stw	zero,196(sp)
   469d0:	88bff404 	addi	r2,r17,-48
   469d4:	0017883a 	mov	r11,zero
   469d8:	24400007 	ldb	r17,0(r4)
   469dc:	5ac002a4 	muli	r11,r11,10
   469e0:	ad400044 	addi	r21,r21,1
   469e4:	a809883a 	mov	r4,r21
   469e8:	12d7883a 	add	r11,r2,r11
   469ec:	88bff404 	addi	r2,r17,-48
   469f0:	30bff92e 	bgeu	r6,r2,469d8 <__alt_data_end+0xfffc69d8>
   469f4:	dac03115 	stw	r11,196(sp)
   469f8:	003f2306 	br	46688 <__alt_data_end+0xfffc6688>
   469fc:	18c03fcc 	andi	r3,r3,255
   46a00:	18072b1e 	bne	r3,zero,486b0 <___vfprintf_internal_r+0x21b0>
   46a04:	94800414 	ori	r18,r18,16
   46a08:	9080080c 	andi	r2,r18,32
   46a0c:	10037b26 	beq	r2,zero,477fc <___vfprintf_internal_r+0x12fc>
   46a10:	d9402d17 	ldw	r5,180(sp)
   46a14:	28800117 	ldw	r2,4(r5)
   46a18:	2cc00017 	ldw	r19,0(r5)
   46a1c:	29400204 	addi	r5,r5,8
   46a20:	d9402d15 	stw	r5,180(sp)
   46a24:	102d883a 	mov	r22,r2
   46a28:	10044b16 	blt	r2,zero,47b58 <___vfprintf_internal_r+0x1658>
   46a2c:	d9402917 	ldw	r5,164(sp)
   46a30:	df002783 	ldbu	fp,158(sp)
   46a34:	2803bc16 	blt	r5,zero,47928 <___vfprintf_internal_r+0x1428>
   46a38:	00ffdfc4 	movi	r3,-129
   46a3c:	9d84b03a 	or	r2,r19,r22
   46a40:	90e4703a 	and	r18,r18,r3
   46a44:	10017726 	beq	r2,zero,47024 <___vfprintf_internal_r+0xb24>
   46a48:	b0038326 	beq	r22,zero,47858 <___vfprintf_internal_r+0x1358>
   46a4c:	dc402a15 	stw	r17,168(sp)
   46a50:	dc001e04 	addi	r16,sp,120
   46a54:	b023883a 	mov	r17,r22
   46a58:	402d883a 	mov	r22,r8
   46a5c:	9809883a 	mov	r4,r19
   46a60:	880b883a 	mov	r5,r17
   46a64:	01800284 	movi	r6,10
   46a68:	000f883a 	mov	r7,zero
   46a6c:	004fef40 	call	4fef4 <__umoddi3>
   46a70:	10800c04 	addi	r2,r2,48
   46a74:	843fffc4 	addi	r16,r16,-1
   46a78:	9809883a 	mov	r4,r19
   46a7c:	880b883a 	mov	r5,r17
   46a80:	80800005 	stb	r2,0(r16)
   46a84:	01800284 	movi	r6,10
   46a88:	000f883a 	mov	r7,zero
   46a8c:	004f97c0 	call	4f97c <__udivdi3>
   46a90:	1027883a 	mov	r19,r2
   46a94:	10c4b03a 	or	r2,r2,r3
   46a98:	1823883a 	mov	r17,r3
   46a9c:	103fef1e 	bne	r2,zero,46a5c <__alt_data_end+0xfffc6a5c>
   46aa0:	d8c02817 	ldw	r3,160(sp)
   46aa4:	dc402a17 	ldw	r17,168(sp)
   46aa8:	b011883a 	mov	r8,r22
   46aac:	1c07c83a 	sub	r3,r3,r16
   46ab0:	d8c02e15 	stw	r3,184(sp)
   46ab4:	00005906 	br	46c1c <___vfprintf_internal_r+0x71c>
   46ab8:	18c03fcc 	andi	r3,r3,255
   46abc:	1806fa1e 	bne	r3,zero,486a8 <___vfprintf_internal_r+0x21a8>
   46ac0:	9080020c 	andi	r2,r18,8
   46ac4:	10048a26 	beq	r2,zero,47cf0 <___vfprintf_internal_r+0x17f0>
   46ac8:	d8c02d17 	ldw	r3,180(sp)
   46acc:	d9002d17 	ldw	r4,180(sp)
   46ad0:	d9402d17 	ldw	r5,180(sp)
   46ad4:	18c00017 	ldw	r3,0(r3)
   46ad8:	21000117 	ldw	r4,4(r4)
   46adc:	29400204 	addi	r5,r5,8
   46ae0:	d8c03615 	stw	r3,216(sp)
   46ae4:	d9003815 	stw	r4,224(sp)
   46ae8:	d9402d15 	stw	r5,180(sp)
   46aec:	d9003617 	ldw	r4,216(sp)
   46af0:	d9403817 	ldw	r5,224(sp)
   46af4:	da003d15 	stw	r8,244(sp)
   46af8:	04000044 	movi	r16,1
   46afc:	004d7200 	call	4d720 <__fpclassifyd>
   46b00:	da003d17 	ldw	r8,244(sp)
   46b04:	14041f1e 	bne	r2,r16,47b84 <___vfprintf_internal_r+0x1684>
   46b08:	d9003617 	ldw	r4,216(sp)
   46b0c:	d9403817 	ldw	r5,224(sp)
   46b10:	000d883a 	mov	r6,zero
   46b14:	000f883a 	mov	r7,zero
   46b18:	0050d140 	call	50d14 <__ledf2>
   46b1c:	da003d17 	ldw	r8,244(sp)
   46b20:	1005be16 	blt	r2,zero,4821c <___vfprintf_internal_r+0x1d1c>
   46b24:	df002783 	ldbu	fp,158(sp)
   46b28:	008011c4 	movi	r2,71
   46b2c:	1445330e 	bge	r2,r17,47ffc <___vfprintf_internal_r+0x1afc>
   46b30:	04000174 	movhi	r16,5
   46b34:	840edc04 	addi	r16,r16,15216
   46b38:	00c000c4 	movi	r3,3
   46b3c:	00bfdfc4 	movi	r2,-129
   46b40:	d8c02a15 	stw	r3,168(sp)
   46b44:	90a4703a 	and	r18,r18,r2
   46b48:	d8c02e15 	stw	r3,184(sp)
   46b4c:	d8002915 	stw	zero,164(sp)
   46b50:	d8003215 	stw	zero,200(sp)
   46b54:	00003706 	br	46c34 <___vfprintf_internal_r+0x734>
   46b58:	94800214 	ori	r18,r18,8
   46b5c:	ac400007 	ldb	r17,0(r21)
   46b60:	003ec806 	br	46684 <__alt_data_end+0xfffc6684>
   46b64:	18c03fcc 	andi	r3,r3,255
   46b68:	1806db1e 	bne	r3,zero,486d8 <___vfprintf_internal_r+0x21d8>
   46b6c:	94800414 	ori	r18,r18,16
   46b70:	9080080c 	andi	r2,r18,32
   46b74:	1002d826 	beq	r2,zero,476d8 <___vfprintf_internal_r+0x11d8>
   46b78:	d9402d17 	ldw	r5,180(sp)
   46b7c:	d8c02917 	ldw	r3,164(sp)
   46b80:	d8002785 	stb	zero,158(sp)
   46b84:	28800204 	addi	r2,r5,8
   46b88:	2cc00017 	ldw	r19,0(r5)
   46b8c:	2d800117 	ldw	r22,4(r5)
   46b90:	18048f16 	blt	r3,zero,47dd0 <___vfprintf_internal_r+0x18d0>
   46b94:	013fdfc4 	movi	r4,-129
   46b98:	9d86b03a 	or	r3,r19,r22
   46b9c:	d8802d15 	stw	r2,180(sp)
   46ba0:	9124703a 	and	r18,r18,r4
   46ba4:	1802d91e 	bne	r3,zero,4770c <___vfprintf_internal_r+0x120c>
   46ba8:	d8c02917 	ldw	r3,164(sp)
   46bac:	0039883a 	mov	fp,zero
   46bb0:	1805c326 	beq	r3,zero,482c0 <___vfprintf_internal_r+0x1dc0>
   46bb4:	0027883a 	mov	r19,zero
   46bb8:	002d883a 	mov	r22,zero
   46bbc:	dc001e04 	addi	r16,sp,120
   46bc0:	9806d0fa 	srli	r3,r19,3
   46bc4:	b008977a 	slli	r4,r22,29
   46bc8:	b02cd0fa 	srli	r22,r22,3
   46bcc:	9cc001cc 	andi	r19,r19,7
   46bd0:	98800c04 	addi	r2,r19,48
   46bd4:	843fffc4 	addi	r16,r16,-1
   46bd8:	20e6b03a 	or	r19,r4,r3
   46bdc:	80800005 	stb	r2,0(r16)
   46be0:	9d86b03a 	or	r3,r19,r22
   46be4:	183ff61e 	bne	r3,zero,46bc0 <__alt_data_end+0xfffc6bc0>
   46be8:	90c0004c 	andi	r3,r18,1
   46bec:	18013b26 	beq	r3,zero,470dc <___vfprintf_internal_r+0xbdc>
   46bf0:	10803fcc 	andi	r2,r2,255
   46bf4:	1080201c 	xori	r2,r2,128
   46bf8:	10bfe004 	addi	r2,r2,-128
   46bfc:	00c00c04 	movi	r3,48
   46c00:	10c13626 	beq	r2,r3,470dc <___vfprintf_internal_r+0xbdc>
   46c04:	80ffffc5 	stb	r3,-1(r16)
   46c08:	d8c02817 	ldw	r3,160(sp)
   46c0c:	80bfffc4 	addi	r2,r16,-1
   46c10:	1021883a 	mov	r16,r2
   46c14:	1887c83a 	sub	r3,r3,r2
   46c18:	d8c02e15 	stw	r3,184(sp)
   46c1c:	d8802e17 	ldw	r2,184(sp)
   46c20:	d9002917 	ldw	r4,164(sp)
   46c24:	1100010e 	bge	r2,r4,46c2c <___vfprintf_internal_r+0x72c>
   46c28:	2005883a 	mov	r2,r4
   46c2c:	d8802a15 	stw	r2,168(sp)
   46c30:	d8003215 	stw	zero,200(sp)
   46c34:	e7003fcc 	andi	fp,fp,255
   46c38:	e700201c 	xori	fp,fp,128
   46c3c:	e73fe004 	addi	fp,fp,-128
   46c40:	e0000326 	beq	fp,zero,46c50 <___vfprintf_internal_r+0x750>
   46c44:	d8c02a17 	ldw	r3,168(sp)
   46c48:	18c00044 	addi	r3,r3,1
   46c4c:	d8c02a15 	stw	r3,168(sp)
   46c50:	90c0008c 	andi	r3,r18,2
   46c54:	d8c02b15 	stw	r3,172(sp)
   46c58:	18000326 	beq	r3,zero,46c68 <___vfprintf_internal_r+0x768>
   46c5c:	d8c02a17 	ldw	r3,168(sp)
   46c60:	18c00084 	addi	r3,r3,2
   46c64:	d8c02a15 	stw	r3,168(sp)
   46c68:	90c0210c 	andi	r3,r18,132
   46c6c:	d8c03015 	stw	r3,192(sp)
   46c70:	1801a31e 	bne	r3,zero,47300 <___vfprintf_internal_r+0xe00>
   46c74:	d9003117 	ldw	r4,196(sp)
   46c78:	d8c02a17 	ldw	r3,168(sp)
   46c7c:	20e7c83a 	sub	r19,r4,r3
   46c80:	04c19f0e 	bge	zero,r19,47300 <___vfprintf_internal_r+0xe00>
   46c84:	02400404 	movi	r9,16
   46c88:	d8c02017 	ldw	r3,128(sp)
   46c8c:	d8801f17 	ldw	r2,124(sp)
   46c90:	4cc50d0e 	bge	r9,r19,480c8 <___vfprintf_internal_r+0x1bc8>
   46c94:	01400174 	movhi	r5,5
   46c98:	294eef84 	addi	r5,r5,15294
   46c9c:	dc403b15 	stw	r17,236(sp)
   46ca0:	d9403515 	stw	r5,212(sp)
   46ca4:	9823883a 	mov	r17,r19
   46ca8:	482d883a 	mov	r22,r9
   46cac:	9027883a 	mov	r19,r18
   46cb0:	070001c4 	movi	fp,7
   46cb4:	8025883a 	mov	r18,r16
   46cb8:	dc002c17 	ldw	r16,176(sp)
   46cbc:	00000306 	br	46ccc <___vfprintf_internal_r+0x7cc>
   46cc0:	8c7ffc04 	addi	r17,r17,-16
   46cc4:	42000204 	addi	r8,r8,8
   46cc8:	b440130e 	bge	r22,r17,46d18 <___vfprintf_internal_r+0x818>
   46ccc:	01000174 	movhi	r4,5
   46cd0:	18c00404 	addi	r3,r3,16
   46cd4:	10800044 	addi	r2,r2,1
   46cd8:	210eef84 	addi	r4,r4,15294
   46cdc:	41000015 	stw	r4,0(r8)
   46ce0:	45800115 	stw	r22,4(r8)
   46ce4:	d8c02015 	stw	r3,128(sp)
   46ce8:	d8801f15 	stw	r2,124(sp)
   46cec:	e0bff40e 	bge	fp,r2,46cc0 <__alt_data_end+0xfffc6cc0>
   46cf0:	d9801e04 	addi	r6,sp,120
   46cf4:	b80b883a 	mov	r5,r23
   46cf8:	8009883a 	mov	r4,r16
   46cfc:	004dafc0 	call	4dafc <__sprint_r>
   46d00:	103f011e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   46d04:	8c7ffc04 	addi	r17,r17,-16
   46d08:	d8c02017 	ldw	r3,128(sp)
   46d0c:	d8801f17 	ldw	r2,124(sp)
   46d10:	da000404 	addi	r8,sp,16
   46d14:	b47fed16 	blt	r22,r17,46ccc <__alt_data_end+0xfffc6ccc>
   46d18:	9021883a 	mov	r16,r18
   46d1c:	9825883a 	mov	r18,r19
   46d20:	8827883a 	mov	r19,r17
   46d24:	dc403b17 	ldw	r17,236(sp)
   46d28:	d9403517 	ldw	r5,212(sp)
   46d2c:	98c7883a 	add	r3,r19,r3
   46d30:	10800044 	addi	r2,r2,1
   46d34:	41400015 	stw	r5,0(r8)
   46d38:	44c00115 	stw	r19,4(r8)
   46d3c:	d8c02015 	stw	r3,128(sp)
   46d40:	d8801f15 	stw	r2,124(sp)
   46d44:	010001c4 	movi	r4,7
   46d48:	2082a316 	blt	r4,r2,477d8 <___vfprintf_internal_r+0x12d8>
   46d4c:	df002787 	ldb	fp,158(sp)
   46d50:	42000204 	addi	r8,r8,8
   46d54:	e0000c26 	beq	fp,zero,46d88 <___vfprintf_internal_r+0x888>
   46d58:	d8801f17 	ldw	r2,124(sp)
   46d5c:	d9002784 	addi	r4,sp,158
   46d60:	18c00044 	addi	r3,r3,1
   46d64:	10800044 	addi	r2,r2,1
   46d68:	41000015 	stw	r4,0(r8)
   46d6c:	01000044 	movi	r4,1
   46d70:	41000115 	stw	r4,4(r8)
   46d74:	d8c02015 	stw	r3,128(sp)
   46d78:	d8801f15 	stw	r2,124(sp)
   46d7c:	010001c4 	movi	r4,7
   46d80:	20823c16 	blt	r4,r2,47674 <___vfprintf_internal_r+0x1174>
   46d84:	42000204 	addi	r8,r8,8
   46d88:	d8802b17 	ldw	r2,172(sp)
   46d8c:	10000c26 	beq	r2,zero,46dc0 <___vfprintf_internal_r+0x8c0>
   46d90:	d8801f17 	ldw	r2,124(sp)
   46d94:	d9002704 	addi	r4,sp,156
   46d98:	18c00084 	addi	r3,r3,2
   46d9c:	10800044 	addi	r2,r2,1
   46da0:	41000015 	stw	r4,0(r8)
   46da4:	01000084 	movi	r4,2
   46da8:	41000115 	stw	r4,4(r8)
   46dac:	d8c02015 	stw	r3,128(sp)
   46db0:	d8801f15 	stw	r2,124(sp)
   46db4:	010001c4 	movi	r4,7
   46db8:	20823616 	blt	r4,r2,47694 <___vfprintf_internal_r+0x1194>
   46dbc:	42000204 	addi	r8,r8,8
   46dc0:	d9003017 	ldw	r4,192(sp)
   46dc4:	00802004 	movi	r2,128
   46dc8:	20819926 	beq	r4,r2,47430 <___vfprintf_internal_r+0xf30>
   46dcc:	d9402917 	ldw	r5,164(sp)
   46dd0:	d8802e17 	ldw	r2,184(sp)
   46dd4:	28adc83a 	sub	r22,r5,r2
   46dd8:	0580310e 	bge	zero,r22,46ea0 <___vfprintf_internal_r+0x9a0>
   46ddc:	07000404 	movi	fp,16
   46de0:	d8801f17 	ldw	r2,124(sp)
   46de4:	e584140e 	bge	fp,r22,47e38 <___vfprintf_internal_r+0x1938>
   46de8:	01400174 	movhi	r5,5
   46dec:	294eeb84 	addi	r5,r5,15278
   46df0:	dc402915 	stw	r17,164(sp)
   46df4:	d9402b15 	stw	r5,172(sp)
   46df8:	b023883a 	mov	r17,r22
   46dfc:	04c001c4 	movi	r19,7
   46e00:	a82d883a 	mov	r22,r21
   46e04:	902b883a 	mov	r21,r18
   46e08:	8025883a 	mov	r18,r16
   46e0c:	dc002c17 	ldw	r16,176(sp)
   46e10:	00000306 	br	46e20 <___vfprintf_internal_r+0x920>
   46e14:	8c7ffc04 	addi	r17,r17,-16
   46e18:	42000204 	addi	r8,r8,8
   46e1c:	e440110e 	bge	fp,r17,46e64 <___vfprintf_internal_r+0x964>
   46e20:	18c00404 	addi	r3,r3,16
   46e24:	10800044 	addi	r2,r2,1
   46e28:	45000015 	stw	r20,0(r8)
   46e2c:	47000115 	stw	fp,4(r8)
   46e30:	d8c02015 	stw	r3,128(sp)
   46e34:	d8801f15 	stw	r2,124(sp)
   46e38:	98bff60e 	bge	r19,r2,46e14 <__alt_data_end+0xfffc6e14>
   46e3c:	d9801e04 	addi	r6,sp,120
   46e40:	b80b883a 	mov	r5,r23
   46e44:	8009883a 	mov	r4,r16
   46e48:	004dafc0 	call	4dafc <__sprint_r>
   46e4c:	103eae1e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   46e50:	8c7ffc04 	addi	r17,r17,-16
   46e54:	d8c02017 	ldw	r3,128(sp)
   46e58:	d8801f17 	ldw	r2,124(sp)
   46e5c:	da000404 	addi	r8,sp,16
   46e60:	e47fef16 	blt	fp,r17,46e20 <__alt_data_end+0xfffc6e20>
   46e64:	9021883a 	mov	r16,r18
   46e68:	a825883a 	mov	r18,r21
   46e6c:	b02b883a 	mov	r21,r22
   46e70:	882d883a 	mov	r22,r17
   46e74:	dc402917 	ldw	r17,164(sp)
   46e78:	d9002b17 	ldw	r4,172(sp)
   46e7c:	1d87883a 	add	r3,r3,r22
   46e80:	10800044 	addi	r2,r2,1
   46e84:	41000015 	stw	r4,0(r8)
   46e88:	45800115 	stw	r22,4(r8)
   46e8c:	d8c02015 	stw	r3,128(sp)
   46e90:	d8801f15 	stw	r2,124(sp)
   46e94:	010001c4 	movi	r4,7
   46e98:	2081ee16 	blt	r4,r2,47654 <___vfprintf_internal_r+0x1154>
   46e9c:	42000204 	addi	r8,r8,8
   46ea0:	9080400c 	andi	r2,r18,256
   46ea4:	1001181e 	bne	r2,zero,47308 <___vfprintf_internal_r+0xe08>
   46ea8:	d9402e17 	ldw	r5,184(sp)
   46eac:	d8801f17 	ldw	r2,124(sp)
   46eb0:	44000015 	stw	r16,0(r8)
   46eb4:	1947883a 	add	r3,r3,r5
   46eb8:	10800044 	addi	r2,r2,1
   46ebc:	41400115 	stw	r5,4(r8)
   46ec0:	d8c02015 	stw	r3,128(sp)
   46ec4:	d8801f15 	stw	r2,124(sp)
   46ec8:	010001c4 	movi	r4,7
   46ecc:	2081d316 	blt	r4,r2,4761c <___vfprintf_internal_r+0x111c>
   46ed0:	42000204 	addi	r8,r8,8
   46ed4:	9480010c 	andi	r18,r18,4
   46ed8:	90003226 	beq	r18,zero,46fa4 <___vfprintf_internal_r+0xaa4>
   46edc:	d9403117 	ldw	r5,196(sp)
   46ee0:	d8802a17 	ldw	r2,168(sp)
   46ee4:	28a1c83a 	sub	r16,r5,r2
   46ee8:	04002e0e 	bge	zero,r16,46fa4 <___vfprintf_internal_r+0xaa4>
   46eec:	04400404 	movi	r17,16
   46ef0:	d8801f17 	ldw	r2,124(sp)
   46ef4:	8c04a20e 	bge	r17,r16,48180 <___vfprintf_internal_r+0x1c80>
   46ef8:	01400174 	movhi	r5,5
   46efc:	294eef84 	addi	r5,r5,15294
   46f00:	d9403515 	stw	r5,212(sp)
   46f04:	048001c4 	movi	r18,7
   46f08:	dcc02c17 	ldw	r19,176(sp)
   46f0c:	00000306 	br	46f1c <___vfprintf_internal_r+0xa1c>
   46f10:	843ffc04 	addi	r16,r16,-16
   46f14:	42000204 	addi	r8,r8,8
   46f18:	8c00130e 	bge	r17,r16,46f68 <___vfprintf_internal_r+0xa68>
   46f1c:	01000174 	movhi	r4,5
   46f20:	18c00404 	addi	r3,r3,16
   46f24:	10800044 	addi	r2,r2,1
   46f28:	210eef84 	addi	r4,r4,15294
   46f2c:	41000015 	stw	r4,0(r8)
   46f30:	44400115 	stw	r17,4(r8)
   46f34:	d8c02015 	stw	r3,128(sp)
   46f38:	d8801f15 	stw	r2,124(sp)
   46f3c:	90bff40e 	bge	r18,r2,46f10 <__alt_data_end+0xfffc6f10>
   46f40:	d9801e04 	addi	r6,sp,120
   46f44:	b80b883a 	mov	r5,r23
   46f48:	9809883a 	mov	r4,r19
   46f4c:	004dafc0 	call	4dafc <__sprint_r>
   46f50:	103e6d1e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   46f54:	843ffc04 	addi	r16,r16,-16
   46f58:	d8c02017 	ldw	r3,128(sp)
   46f5c:	d8801f17 	ldw	r2,124(sp)
   46f60:	da000404 	addi	r8,sp,16
   46f64:	8c3fed16 	blt	r17,r16,46f1c <__alt_data_end+0xfffc6f1c>
   46f68:	d9403517 	ldw	r5,212(sp)
   46f6c:	1c07883a 	add	r3,r3,r16
   46f70:	10800044 	addi	r2,r2,1
   46f74:	41400015 	stw	r5,0(r8)
   46f78:	44000115 	stw	r16,4(r8)
   46f7c:	d8c02015 	stw	r3,128(sp)
   46f80:	d8801f15 	stw	r2,124(sp)
   46f84:	010001c4 	movi	r4,7
   46f88:	2080060e 	bge	r4,r2,46fa4 <___vfprintf_internal_r+0xaa4>
   46f8c:	d9002c17 	ldw	r4,176(sp)
   46f90:	d9801e04 	addi	r6,sp,120
   46f94:	b80b883a 	mov	r5,r23
   46f98:	004dafc0 	call	4dafc <__sprint_r>
   46f9c:	103e5a1e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   46fa0:	d8c02017 	ldw	r3,128(sp)
   46fa4:	d8803117 	ldw	r2,196(sp)
   46fa8:	d9002a17 	ldw	r4,168(sp)
   46fac:	1100010e 	bge	r2,r4,46fb4 <___vfprintf_internal_r+0xab4>
   46fb0:	2005883a 	mov	r2,r4
   46fb4:	d9402f17 	ldw	r5,188(sp)
   46fb8:	288b883a 	add	r5,r5,r2
   46fbc:	d9402f15 	stw	r5,188(sp)
   46fc0:	18019e1e 	bne	r3,zero,4763c <___vfprintf_internal_r+0x113c>
   46fc4:	a8800007 	ldb	r2,0(r21)
   46fc8:	d8001f15 	stw	zero,124(sp)
   46fcc:	da000404 	addi	r8,sp,16
   46fd0:	103d851e 	bne	r2,zero,465e8 <__alt_data_end+0xfffc65e8>
   46fd4:	a821883a 	mov	r16,r21
   46fd8:	003d9b06 	br	46648 <__alt_data_end+0xfffc6648>
   46fdc:	18c03fcc 	andi	r3,r3,255
   46fe0:	1805c11e 	bne	r3,zero,486e8 <___vfprintf_internal_r+0x21e8>
   46fe4:	94800414 	ori	r18,r18,16
   46fe8:	9080080c 	andi	r2,r18,32
   46fec:	10020c26 	beq	r2,zero,47820 <___vfprintf_internal_r+0x1320>
   46ff0:	d8802d17 	ldw	r2,180(sp)
   46ff4:	d9002917 	ldw	r4,164(sp)
   46ff8:	d8002785 	stb	zero,158(sp)
   46ffc:	10c00204 	addi	r3,r2,8
   47000:	14c00017 	ldw	r19,0(r2)
   47004:	15800117 	ldw	r22,4(r2)
   47008:	20040f16 	blt	r4,zero,48048 <___vfprintf_internal_r+0x1b48>
   4700c:	013fdfc4 	movi	r4,-129
   47010:	9d84b03a 	or	r2,r19,r22
   47014:	d8c02d15 	stw	r3,180(sp)
   47018:	9124703a 	and	r18,r18,r4
   4701c:	0039883a 	mov	fp,zero
   47020:	103e891e 	bne	r2,zero,46a48 <__alt_data_end+0xfffc6a48>
   47024:	d9002917 	ldw	r4,164(sp)
   47028:	2002c11e 	bne	r4,zero,47b30 <___vfprintf_internal_r+0x1630>
   4702c:	d8002915 	stw	zero,164(sp)
   47030:	d8002e15 	stw	zero,184(sp)
   47034:	dc001e04 	addi	r16,sp,120
   47038:	003ef806 	br	46c1c <__alt_data_end+0xfffc6c1c>
   4703c:	18c03fcc 	andi	r3,r3,255
   47040:	18059d1e 	bne	r3,zero,486b8 <___vfprintf_internal_r+0x21b8>
   47044:	01400174 	movhi	r5,5
   47048:	294edf04 	addi	r5,r5,15228
   4704c:	d9403915 	stw	r5,228(sp)
   47050:	9080080c 	andi	r2,r18,32
   47054:	10005226 	beq	r2,zero,471a0 <___vfprintf_internal_r+0xca0>
   47058:	d8802d17 	ldw	r2,180(sp)
   4705c:	14c00017 	ldw	r19,0(r2)
   47060:	15800117 	ldw	r22,4(r2)
   47064:	10800204 	addi	r2,r2,8
   47068:	d8802d15 	stw	r2,180(sp)
   4706c:	9080004c 	andi	r2,r18,1
   47070:	10019026 	beq	r2,zero,476b4 <___vfprintf_internal_r+0x11b4>
   47074:	9d84b03a 	or	r2,r19,r22
   47078:	10036926 	beq	r2,zero,47e20 <___vfprintf_internal_r+0x1920>
   4707c:	d8c02917 	ldw	r3,164(sp)
   47080:	00800c04 	movi	r2,48
   47084:	d8802705 	stb	r2,156(sp)
   47088:	dc402745 	stb	r17,157(sp)
   4708c:	d8002785 	stb	zero,158(sp)
   47090:	90800094 	ori	r2,r18,2
   47094:	18045d16 	blt	r3,zero,4820c <___vfprintf_internal_r+0x1d0c>
   47098:	00bfdfc4 	movi	r2,-129
   4709c:	90a4703a 	and	r18,r18,r2
   470a0:	94800094 	ori	r18,r18,2
   470a4:	0039883a 	mov	fp,zero
   470a8:	d9003917 	ldw	r4,228(sp)
   470ac:	dc001e04 	addi	r16,sp,120
   470b0:	988003cc 	andi	r2,r19,15
   470b4:	b006973a 	slli	r3,r22,28
   470b8:	2085883a 	add	r2,r4,r2
   470bc:	9826d13a 	srli	r19,r19,4
   470c0:	10800003 	ldbu	r2,0(r2)
   470c4:	b02cd13a 	srli	r22,r22,4
   470c8:	843fffc4 	addi	r16,r16,-1
   470cc:	1ce6b03a 	or	r19,r3,r19
   470d0:	80800005 	stb	r2,0(r16)
   470d4:	9d84b03a 	or	r2,r19,r22
   470d8:	103ff51e 	bne	r2,zero,470b0 <__alt_data_end+0xfffc70b0>
   470dc:	d8c02817 	ldw	r3,160(sp)
   470e0:	1c07c83a 	sub	r3,r3,r16
   470e4:	d8c02e15 	stw	r3,184(sp)
   470e8:	003ecc06 	br	46c1c <__alt_data_end+0xfffc6c1c>
   470ec:	18c03fcc 	andi	r3,r3,255
   470f0:	183e9f26 	beq	r3,zero,46b70 <__alt_data_end+0xfffc6b70>
   470f4:	d9c02785 	stb	r7,158(sp)
   470f8:	003e9d06 	br	46b70 <__alt_data_end+0xfffc6b70>
   470fc:	00c00044 	movi	r3,1
   47100:	01c00ac4 	movi	r7,43
   47104:	ac400007 	ldb	r17,0(r21)
   47108:	003d5e06 	br	46684 <__alt_data_end+0xfffc6684>
   4710c:	94800814 	ori	r18,r18,32
   47110:	ac400007 	ldb	r17,0(r21)
   47114:	003d5b06 	br	46684 <__alt_data_end+0xfffc6684>
   47118:	d8c02d17 	ldw	r3,180(sp)
   4711c:	d8002785 	stb	zero,158(sp)
   47120:	1c000017 	ldw	r16,0(r3)
   47124:	1cc00104 	addi	r19,r3,4
   47128:	80041926 	beq	r16,zero,48190 <___vfprintf_internal_r+0x1c90>
   4712c:	d9002917 	ldw	r4,164(sp)
   47130:	2003d016 	blt	r4,zero,48074 <___vfprintf_internal_r+0x1b74>
   47134:	200d883a 	mov	r6,r4
   47138:	000b883a 	mov	r5,zero
   4713c:	8009883a 	mov	r4,r16
   47140:	da003d15 	stw	r8,244(sp)
   47144:	004bd100 	call	4bd10 <memchr>
   47148:	da003d17 	ldw	r8,244(sp)
   4714c:	10045426 	beq	r2,zero,482a0 <___vfprintf_internal_r+0x1da0>
   47150:	1405c83a 	sub	r2,r2,r16
   47154:	d8802e15 	stw	r2,184(sp)
   47158:	1003cc16 	blt	r2,zero,4808c <___vfprintf_internal_r+0x1b8c>
   4715c:	df002783 	ldbu	fp,158(sp)
   47160:	d8802a15 	stw	r2,168(sp)
   47164:	dcc02d15 	stw	r19,180(sp)
   47168:	d8002915 	stw	zero,164(sp)
   4716c:	d8003215 	stw	zero,200(sp)
   47170:	003eb006 	br	46c34 <__alt_data_end+0xfffc6c34>
   47174:	18c03fcc 	andi	r3,r3,255
   47178:	183f9b26 	beq	r3,zero,46fe8 <__alt_data_end+0xfffc6fe8>
   4717c:	d9c02785 	stb	r7,158(sp)
   47180:	003f9906 	br	46fe8 <__alt_data_end+0xfffc6fe8>
   47184:	18c03fcc 	andi	r3,r3,255
   47188:	1805551e 	bne	r3,zero,486e0 <___vfprintf_internal_r+0x21e0>
   4718c:	01400174 	movhi	r5,5
   47190:	294ee404 	addi	r5,r5,15248
   47194:	d9403915 	stw	r5,228(sp)
   47198:	9080080c 	andi	r2,r18,32
   4719c:	103fae1e 	bne	r2,zero,47058 <__alt_data_end+0xfffc7058>
   471a0:	9080040c 	andi	r2,r18,16
   471a4:	1002de26 	beq	r2,zero,47d20 <___vfprintf_internal_r+0x1820>
   471a8:	d8c02d17 	ldw	r3,180(sp)
   471ac:	002d883a 	mov	r22,zero
   471b0:	1cc00017 	ldw	r19,0(r3)
   471b4:	18c00104 	addi	r3,r3,4
   471b8:	d8c02d15 	stw	r3,180(sp)
   471bc:	003fab06 	br	4706c <__alt_data_end+0xfffc706c>
   471c0:	38803fcc 	andi	r2,r7,255
   471c4:	1080201c 	xori	r2,r2,128
   471c8:	10bfe004 	addi	r2,r2,-128
   471cc:	1002d21e 	bne	r2,zero,47d18 <___vfprintf_internal_r+0x1818>
   471d0:	00c00044 	movi	r3,1
   471d4:	01c00804 	movi	r7,32
   471d8:	ac400007 	ldb	r17,0(r21)
   471dc:	003d2906 	br	46684 <__alt_data_end+0xfffc6684>
   471e0:	94800054 	ori	r18,r18,1
   471e4:	ac400007 	ldb	r17,0(r21)
   471e8:	003d2606 	br	46684 <__alt_data_end+0xfffc6684>
   471ec:	18c03fcc 	andi	r3,r3,255
   471f0:	183e0526 	beq	r3,zero,46a08 <__alt_data_end+0xfffc6a08>
   471f4:	d9c02785 	stb	r7,158(sp)
   471f8:	003e0306 	br	46a08 <__alt_data_end+0xfffc6a08>
   471fc:	94801014 	ori	r18,r18,64
   47200:	ac400007 	ldb	r17,0(r21)
   47204:	003d1f06 	br	46684 <__alt_data_end+0xfffc6684>
   47208:	ac400007 	ldb	r17,0(r21)
   4720c:	8a438726 	beq	r17,r9,4802c <___vfprintf_internal_r+0x1b2c>
   47210:	94800414 	ori	r18,r18,16
   47214:	003d1b06 	br	46684 <__alt_data_end+0xfffc6684>
   47218:	18c03fcc 	andi	r3,r3,255
   4721c:	1805341e 	bne	r3,zero,486f0 <___vfprintf_internal_r+0x21f0>
   47220:	9080080c 	andi	r2,r18,32
   47224:	1002cd26 	beq	r2,zero,47d5c <___vfprintf_internal_r+0x185c>
   47228:	d9402d17 	ldw	r5,180(sp)
   4722c:	d9002f17 	ldw	r4,188(sp)
   47230:	28800017 	ldw	r2,0(r5)
   47234:	2007d7fa 	srai	r3,r4,31
   47238:	29400104 	addi	r5,r5,4
   4723c:	d9402d15 	stw	r5,180(sp)
   47240:	11000015 	stw	r4,0(r2)
   47244:	10c00115 	stw	r3,4(r2)
   47248:	003ce506 	br	465e0 <__alt_data_end+0xfffc65e0>
   4724c:	d8c02d17 	ldw	r3,180(sp)
   47250:	d9002d17 	ldw	r4,180(sp)
   47254:	d8002785 	stb	zero,158(sp)
   47258:	18800017 	ldw	r2,0(r3)
   4725c:	21000104 	addi	r4,r4,4
   47260:	00c00044 	movi	r3,1
   47264:	d8c02a15 	stw	r3,168(sp)
   47268:	d8801405 	stb	r2,80(sp)
   4726c:	d9002d15 	stw	r4,180(sp)
   47270:	d8c02e15 	stw	r3,184(sp)
   47274:	d8002915 	stw	zero,164(sp)
   47278:	d8003215 	stw	zero,200(sp)
   4727c:	dc001404 	addi	r16,sp,80
   47280:	0039883a 	mov	fp,zero
   47284:	003e7206 	br	46c50 <__alt_data_end+0xfffc6c50>
   47288:	01000174 	movhi	r4,5
   4728c:	210ee404 	addi	r4,r4,15248
   47290:	0039883a 	mov	fp,zero
   47294:	d9003915 	stw	r4,228(sp)
   47298:	04401e04 	movi	r17,120
   4729c:	003f8206 	br	470a8 <__alt_data_end+0xfffc70a8>
   472a0:	18c03fcc 	andi	r3,r3,255
   472a4:	1805061e 	bne	r3,zero,486c0 <___vfprintf_internal_r+0x21c0>
   472a8:	883d9126 	beq	r17,zero,468f0 <__alt_data_end+0xfffc68f0>
   472ac:	00c00044 	movi	r3,1
   472b0:	d8c02a15 	stw	r3,168(sp)
   472b4:	dc401405 	stb	r17,80(sp)
   472b8:	d8002785 	stb	zero,158(sp)
   472bc:	003fec06 	br	47270 <__alt_data_end+0xfffc7270>
   472c0:	01400174 	movhi	r5,5
   472c4:	294ee404 	addi	r5,r5,15248
   472c8:	d9403915 	stw	r5,228(sp)
   472cc:	d8c02d15 	stw	r3,180(sp)
   472d0:	1025883a 	mov	r18,r2
   472d4:	04401e04 	movi	r17,120
   472d8:	9d84b03a 	or	r2,r19,r22
   472dc:	1000fc1e 	bne	r2,zero,476d0 <___vfprintf_internal_r+0x11d0>
   472e0:	0039883a 	mov	fp,zero
   472e4:	00800084 	movi	r2,2
   472e8:	10803fcc 	andi	r2,r2,255
   472ec:	00c00044 	movi	r3,1
   472f0:	10c20f26 	beq	r2,r3,47b30 <___vfprintf_internal_r+0x1630>
   472f4:	00c00084 	movi	r3,2
   472f8:	10fd6326 	beq	r2,r3,46888 <__alt_data_end+0xfffc6888>
   472fc:	003e2d06 	br	46bb4 <__alt_data_end+0xfffc6bb4>
   47300:	d8c02017 	ldw	r3,128(sp)
   47304:	003e9306 	br	46d54 <__alt_data_end+0xfffc6d54>
   47308:	00801944 	movi	r2,101
   4730c:	14407e0e 	bge	r2,r17,47508 <___vfprintf_internal_r+0x1008>
   47310:	d9003617 	ldw	r4,216(sp)
   47314:	d9403817 	ldw	r5,224(sp)
   47318:	000d883a 	mov	r6,zero
   4731c:	000f883a 	mov	r7,zero
   47320:	d8c03c15 	stw	r3,240(sp)
   47324:	da003d15 	stw	r8,244(sp)
   47328:	0044d380 	call	44d38 <__eqdf2>
   4732c:	d8c03c17 	ldw	r3,240(sp)
   47330:	da003d17 	ldw	r8,244(sp)
   47334:	1000f71e 	bne	r2,zero,47714 <___vfprintf_internal_r+0x1214>
   47338:	d8801f17 	ldw	r2,124(sp)
   4733c:	01000174 	movhi	r4,5
   47340:	210eeb04 	addi	r4,r4,15276
   47344:	18c00044 	addi	r3,r3,1
   47348:	10800044 	addi	r2,r2,1
   4734c:	41000015 	stw	r4,0(r8)
   47350:	01000044 	movi	r4,1
   47354:	41000115 	stw	r4,4(r8)
   47358:	d8c02015 	stw	r3,128(sp)
   4735c:	d8801f15 	stw	r2,124(sp)
   47360:	010001c4 	movi	r4,7
   47364:	2082b816 	blt	r4,r2,47e48 <___vfprintf_internal_r+0x1948>
   47368:	42000204 	addi	r8,r8,8
   4736c:	d8802617 	ldw	r2,152(sp)
   47370:	d9403317 	ldw	r5,204(sp)
   47374:	11400216 	blt	r2,r5,47380 <___vfprintf_internal_r+0xe80>
   47378:	9080004c 	andi	r2,r18,1
   4737c:	103ed526 	beq	r2,zero,46ed4 <__alt_data_end+0xfffc6ed4>
   47380:	d8803717 	ldw	r2,220(sp)
   47384:	d9003417 	ldw	r4,208(sp)
   47388:	d9403717 	ldw	r5,220(sp)
   4738c:	1887883a 	add	r3,r3,r2
   47390:	d8801f17 	ldw	r2,124(sp)
   47394:	41000015 	stw	r4,0(r8)
   47398:	41400115 	stw	r5,4(r8)
   4739c:	10800044 	addi	r2,r2,1
   473a0:	d8c02015 	stw	r3,128(sp)
   473a4:	d8801f15 	stw	r2,124(sp)
   473a8:	010001c4 	movi	r4,7
   473ac:	20832916 	blt	r4,r2,48054 <___vfprintf_internal_r+0x1b54>
   473b0:	42000204 	addi	r8,r8,8
   473b4:	d8803317 	ldw	r2,204(sp)
   473b8:	143fffc4 	addi	r16,r2,-1
   473bc:	043ec50e 	bge	zero,r16,46ed4 <__alt_data_end+0xfffc6ed4>
   473c0:	04400404 	movi	r17,16
   473c4:	d8801f17 	ldw	r2,124(sp)
   473c8:	8c00880e 	bge	r17,r16,475ec <___vfprintf_internal_r+0x10ec>
   473cc:	01400174 	movhi	r5,5
   473d0:	294eeb84 	addi	r5,r5,15278
   473d4:	d9402b15 	stw	r5,172(sp)
   473d8:	058001c4 	movi	r22,7
   473dc:	dcc02c17 	ldw	r19,176(sp)
   473e0:	00000306 	br	473f0 <___vfprintf_internal_r+0xef0>
   473e4:	42000204 	addi	r8,r8,8
   473e8:	843ffc04 	addi	r16,r16,-16
   473ec:	8c00820e 	bge	r17,r16,475f8 <___vfprintf_internal_r+0x10f8>
   473f0:	18c00404 	addi	r3,r3,16
   473f4:	10800044 	addi	r2,r2,1
   473f8:	45000015 	stw	r20,0(r8)
   473fc:	44400115 	stw	r17,4(r8)
   47400:	d8c02015 	stw	r3,128(sp)
   47404:	d8801f15 	stw	r2,124(sp)
   47408:	b0bff60e 	bge	r22,r2,473e4 <__alt_data_end+0xfffc73e4>
   4740c:	d9801e04 	addi	r6,sp,120
   47410:	b80b883a 	mov	r5,r23
   47414:	9809883a 	mov	r4,r19
   47418:	004dafc0 	call	4dafc <__sprint_r>
   4741c:	103d3a1e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   47420:	d8c02017 	ldw	r3,128(sp)
   47424:	d8801f17 	ldw	r2,124(sp)
   47428:	da000404 	addi	r8,sp,16
   4742c:	003fee06 	br	473e8 <__alt_data_end+0xfffc73e8>
   47430:	d9403117 	ldw	r5,196(sp)
   47434:	d8802a17 	ldw	r2,168(sp)
   47438:	28adc83a 	sub	r22,r5,r2
   4743c:	05be630e 	bge	zero,r22,46dcc <__alt_data_end+0xfffc6dcc>
   47440:	07000404 	movi	fp,16
   47444:	d8801f17 	ldw	r2,124(sp)
   47448:	e5838f0e 	bge	fp,r22,48288 <___vfprintf_internal_r+0x1d88>
   4744c:	01400174 	movhi	r5,5
   47450:	294eeb84 	addi	r5,r5,15278
   47454:	dc403015 	stw	r17,192(sp)
   47458:	d9402b15 	stw	r5,172(sp)
   4745c:	b023883a 	mov	r17,r22
   47460:	04c001c4 	movi	r19,7
   47464:	a82d883a 	mov	r22,r21
   47468:	902b883a 	mov	r21,r18
   4746c:	8025883a 	mov	r18,r16
   47470:	dc002c17 	ldw	r16,176(sp)
   47474:	00000306 	br	47484 <___vfprintf_internal_r+0xf84>
   47478:	8c7ffc04 	addi	r17,r17,-16
   4747c:	42000204 	addi	r8,r8,8
   47480:	e440110e 	bge	fp,r17,474c8 <___vfprintf_internal_r+0xfc8>
   47484:	18c00404 	addi	r3,r3,16
   47488:	10800044 	addi	r2,r2,1
   4748c:	45000015 	stw	r20,0(r8)
   47490:	47000115 	stw	fp,4(r8)
   47494:	d8c02015 	stw	r3,128(sp)
   47498:	d8801f15 	stw	r2,124(sp)
   4749c:	98bff60e 	bge	r19,r2,47478 <__alt_data_end+0xfffc7478>
   474a0:	d9801e04 	addi	r6,sp,120
   474a4:	b80b883a 	mov	r5,r23
   474a8:	8009883a 	mov	r4,r16
   474ac:	004dafc0 	call	4dafc <__sprint_r>
   474b0:	103d151e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   474b4:	8c7ffc04 	addi	r17,r17,-16
   474b8:	d8c02017 	ldw	r3,128(sp)
   474bc:	d8801f17 	ldw	r2,124(sp)
   474c0:	da000404 	addi	r8,sp,16
   474c4:	e47fef16 	blt	fp,r17,47484 <__alt_data_end+0xfffc7484>
   474c8:	9021883a 	mov	r16,r18
   474cc:	a825883a 	mov	r18,r21
   474d0:	b02b883a 	mov	r21,r22
   474d4:	882d883a 	mov	r22,r17
   474d8:	dc403017 	ldw	r17,192(sp)
   474dc:	d9002b17 	ldw	r4,172(sp)
   474e0:	1d87883a 	add	r3,r3,r22
   474e4:	10800044 	addi	r2,r2,1
   474e8:	41000015 	stw	r4,0(r8)
   474ec:	45800115 	stw	r22,4(r8)
   474f0:	d8c02015 	stw	r3,128(sp)
   474f4:	d8801f15 	stw	r2,124(sp)
   474f8:	010001c4 	movi	r4,7
   474fc:	20818e16 	blt	r4,r2,47b38 <___vfprintf_internal_r+0x1638>
   47500:	42000204 	addi	r8,r8,8
   47504:	003e3106 	br	46dcc <__alt_data_end+0xfffc6dcc>
   47508:	d9403317 	ldw	r5,204(sp)
   4750c:	00800044 	movi	r2,1
   47510:	18c00044 	addi	r3,r3,1
   47514:	1141530e 	bge	r2,r5,47a64 <___vfprintf_internal_r+0x1564>
   47518:	dc401f17 	ldw	r17,124(sp)
   4751c:	00800044 	movi	r2,1
   47520:	40800115 	stw	r2,4(r8)
   47524:	8c400044 	addi	r17,r17,1
   47528:	44000015 	stw	r16,0(r8)
   4752c:	d8c02015 	stw	r3,128(sp)
   47530:	dc401f15 	stw	r17,124(sp)
   47534:	008001c4 	movi	r2,7
   47538:	14416b16 	blt	r2,r17,47ae8 <___vfprintf_internal_r+0x15e8>
   4753c:	42000204 	addi	r8,r8,8
   47540:	d8803717 	ldw	r2,220(sp)
   47544:	d9003417 	ldw	r4,208(sp)
   47548:	8c400044 	addi	r17,r17,1
   4754c:	10c7883a 	add	r3,r2,r3
   47550:	40800115 	stw	r2,4(r8)
   47554:	41000015 	stw	r4,0(r8)
   47558:	d8c02015 	stw	r3,128(sp)
   4755c:	dc401f15 	stw	r17,124(sp)
   47560:	008001c4 	movi	r2,7
   47564:	14416916 	blt	r2,r17,47b0c <___vfprintf_internal_r+0x160c>
   47568:	45800204 	addi	r22,r8,8
   4756c:	d9003617 	ldw	r4,216(sp)
   47570:	d9403817 	ldw	r5,224(sp)
   47574:	000d883a 	mov	r6,zero
   47578:	000f883a 	mov	r7,zero
   4757c:	d8c03c15 	stw	r3,240(sp)
   47580:	0044d380 	call	44d38 <__eqdf2>
   47584:	d8c03c17 	ldw	r3,240(sp)
   47588:	1000bc26 	beq	r2,zero,4787c <___vfprintf_internal_r+0x137c>
   4758c:	d9403317 	ldw	r5,204(sp)
   47590:	84000044 	addi	r16,r16,1
   47594:	8c400044 	addi	r17,r17,1
   47598:	28bfffc4 	addi	r2,r5,-1
   4759c:	1887883a 	add	r3,r3,r2
   475a0:	b0800115 	stw	r2,4(r22)
   475a4:	b4000015 	stw	r16,0(r22)
   475a8:	d8c02015 	stw	r3,128(sp)
   475ac:	dc401f15 	stw	r17,124(sp)
   475b0:	008001c4 	movi	r2,7
   475b4:	14414316 	blt	r2,r17,47ac4 <___vfprintf_internal_r+0x15c4>
   475b8:	b5800204 	addi	r22,r22,8
   475bc:	d9003a17 	ldw	r4,232(sp)
   475c0:	df0022c4 	addi	fp,sp,139
   475c4:	8c400044 	addi	r17,r17,1
   475c8:	20c7883a 	add	r3,r4,r3
   475cc:	b7000015 	stw	fp,0(r22)
   475d0:	b1000115 	stw	r4,4(r22)
   475d4:	d8c02015 	stw	r3,128(sp)
   475d8:	dc401f15 	stw	r17,124(sp)
   475dc:	008001c4 	movi	r2,7
   475e0:	14400e16 	blt	r2,r17,4761c <___vfprintf_internal_r+0x111c>
   475e4:	b2000204 	addi	r8,r22,8
   475e8:	003e3a06 	br	46ed4 <__alt_data_end+0xfffc6ed4>
   475ec:	01000174 	movhi	r4,5
   475f0:	210eeb84 	addi	r4,r4,15278
   475f4:	d9002b15 	stw	r4,172(sp)
   475f8:	d9002b17 	ldw	r4,172(sp)
   475fc:	1c07883a 	add	r3,r3,r16
   47600:	44000115 	stw	r16,4(r8)
   47604:	41000015 	stw	r4,0(r8)
   47608:	10800044 	addi	r2,r2,1
   4760c:	d8c02015 	stw	r3,128(sp)
   47610:	d8801f15 	stw	r2,124(sp)
   47614:	010001c4 	movi	r4,7
   47618:	20be2d0e 	bge	r4,r2,46ed0 <__alt_data_end+0xfffc6ed0>
   4761c:	d9002c17 	ldw	r4,176(sp)
   47620:	d9801e04 	addi	r6,sp,120
   47624:	b80b883a 	mov	r5,r23
   47628:	004dafc0 	call	4dafc <__sprint_r>
   4762c:	103cb61e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   47630:	d8c02017 	ldw	r3,128(sp)
   47634:	da000404 	addi	r8,sp,16
   47638:	003e2606 	br	46ed4 <__alt_data_end+0xfffc6ed4>
   4763c:	d9002c17 	ldw	r4,176(sp)
   47640:	d9801e04 	addi	r6,sp,120
   47644:	b80b883a 	mov	r5,r23
   47648:	004dafc0 	call	4dafc <__sprint_r>
   4764c:	103e5d26 	beq	r2,zero,46fc4 <__alt_data_end+0xfffc6fc4>
   47650:	003cad06 	br	46908 <__alt_data_end+0xfffc6908>
   47654:	d9002c17 	ldw	r4,176(sp)
   47658:	d9801e04 	addi	r6,sp,120
   4765c:	b80b883a 	mov	r5,r23
   47660:	004dafc0 	call	4dafc <__sprint_r>
   47664:	103ca81e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   47668:	d8c02017 	ldw	r3,128(sp)
   4766c:	da000404 	addi	r8,sp,16
   47670:	003e0b06 	br	46ea0 <__alt_data_end+0xfffc6ea0>
   47674:	d9002c17 	ldw	r4,176(sp)
   47678:	d9801e04 	addi	r6,sp,120
   4767c:	b80b883a 	mov	r5,r23
   47680:	004dafc0 	call	4dafc <__sprint_r>
   47684:	103ca01e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   47688:	d8c02017 	ldw	r3,128(sp)
   4768c:	da000404 	addi	r8,sp,16
   47690:	003dbd06 	br	46d88 <__alt_data_end+0xfffc6d88>
   47694:	d9002c17 	ldw	r4,176(sp)
   47698:	d9801e04 	addi	r6,sp,120
   4769c:	b80b883a 	mov	r5,r23
   476a0:	004dafc0 	call	4dafc <__sprint_r>
   476a4:	103c981e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   476a8:	d8c02017 	ldw	r3,128(sp)
   476ac:	da000404 	addi	r8,sp,16
   476b0:	003dc306 	br	46dc0 <__alt_data_end+0xfffc6dc0>
   476b4:	d8802917 	ldw	r2,164(sp)
   476b8:	d8002785 	stb	zero,158(sp)
   476bc:	103f0616 	blt	r2,zero,472d8 <__alt_data_end+0xfffc72d8>
   476c0:	00ffdfc4 	movi	r3,-129
   476c4:	9d84b03a 	or	r2,r19,r22
   476c8:	90e4703a 	and	r18,r18,r3
   476cc:	103c6b26 	beq	r2,zero,4687c <__alt_data_end+0xfffc687c>
   476d0:	0039883a 	mov	fp,zero
   476d4:	003e7406 	br	470a8 <__alt_data_end+0xfffc70a8>
   476d8:	9080040c 	andi	r2,r18,16
   476dc:	1001b326 	beq	r2,zero,47dac <___vfprintf_internal_r+0x18ac>
   476e0:	d9002d17 	ldw	r4,180(sp)
   476e4:	d9402917 	ldw	r5,164(sp)
   476e8:	d8002785 	stb	zero,158(sp)
   476ec:	20800104 	addi	r2,r4,4
   476f0:	24c00017 	ldw	r19,0(r4)
   476f4:	002d883a 	mov	r22,zero
   476f8:	2801b516 	blt	r5,zero,47dd0 <___vfprintf_internal_r+0x18d0>
   476fc:	00ffdfc4 	movi	r3,-129
   47700:	d8802d15 	stw	r2,180(sp)
   47704:	90e4703a 	and	r18,r18,r3
   47708:	983d2726 	beq	r19,zero,46ba8 <__alt_data_end+0xfffc6ba8>
   4770c:	0039883a 	mov	fp,zero
   47710:	003d2a06 	br	46bbc <__alt_data_end+0xfffc6bbc>
   47714:	dc402617 	ldw	r17,152(sp)
   47718:	0441d30e 	bge	zero,r17,47e68 <___vfprintf_internal_r+0x1968>
   4771c:	dc403217 	ldw	r17,200(sp)
   47720:	d8803317 	ldw	r2,204(sp)
   47724:	1440010e 	bge	r2,r17,4772c <___vfprintf_internal_r+0x122c>
   47728:	1023883a 	mov	r17,r2
   4772c:	04400a0e 	bge	zero,r17,47758 <___vfprintf_internal_r+0x1258>
   47730:	d8801f17 	ldw	r2,124(sp)
   47734:	1c47883a 	add	r3,r3,r17
   47738:	44000015 	stw	r16,0(r8)
   4773c:	10800044 	addi	r2,r2,1
   47740:	44400115 	stw	r17,4(r8)
   47744:	d8c02015 	stw	r3,128(sp)
   47748:	d8801f15 	stw	r2,124(sp)
   4774c:	010001c4 	movi	r4,7
   47750:	20826516 	blt	r4,r2,480e8 <___vfprintf_internal_r+0x1be8>
   47754:	42000204 	addi	r8,r8,8
   47758:	88026116 	blt	r17,zero,480e0 <___vfprintf_internal_r+0x1be0>
   4775c:	d9003217 	ldw	r4,200(sp)
   47760:	2463c83a 	sub	r17,r4,r17
   47764:	04407b0e 	bge	zero,r17,47954 <___vfprintf_internal_r+0x1454>
   47768:	05800404 	movi	r22,16
   4776c:	d8801f17 	ldw	r2,124(sp)
   47770:	b4419d0e 	bge	r22,r17,47de8 <___vfprintf_internal_r+0x18e8>
   47774:	01000174 	movhi	r4,5
   47778:	210eeb84 	addi	r4,r4,15278
   4777c:	d9002b15 	stw	r4,172(sp)
   47780:	070001c4 	movi	fp,7
   47784:	dcc02c17 	ldw	r19,176(sp)
   47788:	00000306 	br	47798 <___vfprintf_internal_r+0x1298>
   4778c:	42000204 	addi	r8,r8,8
   47790:	8c7ffc04 	addi	r17,r17,-16
   47794:	b441970e 	bge	r22,r17,47df4 <___vfprintf_internal_r+0x18f4>
   47798:	18c00404 	addi	r3,r3,16
   4779c:	10800044 	addi	r2,r2,1
   477a0:	45000015 	stw	r20,0(r8)
   477a4:	45800115 	stw	r22,4(r8)
   477a8:	d8c02015 	stw	r3,128(sp)
   477ac:	d8801f15 	stw	r2,124(sp)
   477b0:	e0bff60e 	bge	fp,r2,4778c <__alt_data_end+0xfffc778c>
   477b4:	d9801e04 	addi	r6,sp,120
   477b8:	b80b883a 	mov	r5,r23
   477bc:	9809883a 	mov	r4,r19
   477c0:	004dafc0 	call	4dafc <__sprint_r>
   477c4:	103c501e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   477c8:	d8c02017 	ldw	r3,128(sp)
   477cc:	d8801f17 	ldw	r2,124(sp)
   477d0:	da000404 	addi	r8,sp,16
   477d4:	003fee06 	br	47790 <__alt_data_end+0xfffc7790>
   477d8:	d9002c17 	ldw	r4,176(sp)
   477dc:	d9801e04 	addi	r6,sp,120
   477e0:	b80b883a 	mov	r5,r23
   477e4:	004dafc0 	call	4dafc <__sprint_r>
   477e8:	103c471e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   477ec:	d8c02017 	ldw	r3,128(sp)
   477f0:	df002787 	ldb	fp,158(sp)
   477f4:	da000404 	addi	r8,sp,16
   477f8:	003d5606 	br	46d54 <__alt_data_end+0xfffc6d54>
   477fc:	9080040c 	andi	r2,r18,16
   47800:	10016126 	beq	r2,zero,47d88 <___vfprintf_internal_r+0x1888>
   47804:	d8802d17 	ldw	r2,180(sp)
   47808:	14c00017 	ldw	r19,0(r2)
   4780c:	10800104 	addi	r2,r2,4
   47810:	d8802d15 	stw	r2,180(sp)
   47814:	982dd7fa 	srai	r22,r19,31
   47818:	b005883a 	mov	r2,r22
   4781c:	003c8206 	br	46a28 <__alt_data_end+0xfffc6a28>
   47820:	9080040c 	andi	r2,r18,16
   47824:	10003526 	beq	r2,zero,478fc <___vfprintf_internal_r+0x13fc>
   47828:	d9402d17 	ldw	r5,180(sp)
   4782c:	d8c02917 	ldw	r3,164(sp)
   47830:	d8002785 	stb	zero,158(sp)
   47834:	28800104 	addi	r2,r5,4
   47838:	2cc00017 	ldw	r19,0(r5)
   4783c:	002d883a 	mov	r22,zero
   47840:	18003716 	blt	r3,zero,47920 <___vfprintf_internal_r+0x1420>
   47844:	00ffdfc4 	movi	r3,-129
   47848:	d8802d15 	stw	r2,180(sp)
   4784c:	90e4703a 	and	r18,r18,r3
   47850:	0039883a 	mov	fp,zero
   47854:	983df326 	beq	r19,zero,47024 <__alt_data_end+0xfffc7024>
   47858:	00800244 	movi	r2,9
   4785c:	14fc7b36 	bltu	r2,r19,46a4c <__alt_data_end+0xfffc6a4c>
   47860:	d8c02817 	ldw	r3,160(sp)
   47864:	dc001dc4 	addi	r16,sp,119
   47868:	9cc00c04 	addi	r19,r19,48
   4786c:	1c07c83a 	sub	r3,r3,r16
   47870:	dcc01dc5 	stb	r19,119(sp)
   47874:	d8c02e15 	stw	r3,184(sp)
   47878:	003ce806 	br	46c1c <__alt_data_end+0xfffc6c1c>
   4787c:	d8803317 	ldw	r2,204(sp)
   47880:	143fffc4 	addi	r16,r2,-1
   47884:	043f4d0e 	bge	zero,r16,475bc <__alt_data_end+0xfffc75bc>
   47888:	07000404 	movi	fp,16
   4788c:	e400810e 	bge	fp,r16,47a94 <___vfprintf_internal_r+0x1594>
   47890:	01400174 	movhi	r5,5
   47894:	294eeb84 	addi	r5,r5,15278
   47898:	d9402b15 	stw	r5,172(sp)
   4789c:	01c001c4 	movi	r7,7
   478a0:	dcc02c17 	ldw	r19,176(sp)
   478a4:	00000306 	br	478b4 <___vfprintf_internal_r+0x13b4>
   478a8:	b5800204 	addi	r22,r22,8
   478ac:	843ffc04 	addi	r16,r16,-16
   478b0:	e4007b0e 	bge	fp,r16,47aa0 <___vfprintf_internal_r+0x15a0>
   478b4:	18c00404 	addi	r3,r3,16
   478b8:	8c400044 	addi	r17,r17,1
   478bc:	b5000015 	stw	r20,0(r22)
   478c0:	b7000115 	stw	fp,4(r22)
   478c4:	d8c02015 	stw	r3,128(sp)
   478c8:	dc401f15 	stw	r17,124(sp)
   478cc:	3c7ff60e 	bge	r7,r17,478a8 <__alt_data_end+0xfffc78a8>
   478d0:	d9801e04 	addi	r6,sp,120
   478d4:	b80b883a 	mov	r5,r23
   478d8:	9809883a 	mov	r4,r19
   478dc:	d9c03c15 	stw	r7,240(sp)
   478e0:	004dafc0 	call	4dafc <__sprint_r>
   478e4:	d9c03c17 	ldw	r7,240(sp)
   478e8:	103c071e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   478ec:	d8c02017 	ldw	r3,128(sp)
   478f0:	dc401f17 	ldw	r17,124(sp)
   478f4:	dd800404 	addi	r22,sp,16
   478f8:	003fec06 	br	478ac <__alt_data_end+0xfffc78ac>
   478fc:	9080100c 	andi	r2,r18,64
   47900:	d8002785 	stb	zero,158(sp)
   47904:	10010e26 	beq	r2,zero,47d40 <___vfprintf_internal_r+0x1840>
   47908:	d9002d17 	ldw	r4,180(sp)
   4790c:	d9402917 	ldw	r5,164(sp)
   47910:	002d883a 	mov	r22,zero
   47914:	20800104 	addi	r2,r4,4
   47918:	24c0000b 	ldhu	r19,0(r4)
   4791c:	283fc90e 	bge	r5,zero,47844 <__alt_data_end+0xfffc7844>
   47920:	d8802d15 	stw	r2,180(sp)
   47924:	0039883a 	mov	fp,zero
   47928:	9d84b03a 	or	r2,r19,r22
   4792c:	103c461e 	bne	r2,zero,46a48 <__alt_data_end+0xfffc6a48>
   47930:	00800044 	movi	r2,1
   47934:	003e6c06 	br	472e8 <__alt_data_end+0xfffc72e8>
   47938:	d9002c17 	ldw	r4,176(sp)
   4793c:	d9801e04 	addi	r6,sp,120
   47940:	b80b883a 	mov	r5,r23
   47944:	004dafc0 	call	4dafc <__sprint_r>
   47948:	103bef1e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   4794c:	d8c02017 	ldw	r3,128(sp)
   47950:	da000404 	addi	r8,sp,16
   47954:	d9003217 	ldw	r4,200(sp)
   47958:	d8802617 	ldw	r2,152(sp)
   4795c:	d9403317 	ldw	r5,204(sp)
   47960:	8123883a 	add	r17,r16,r4
   47964:	11400216 	blt	r2,r5,47970 <___vfprintf_internal_r+0x1470>
   47968:	9100004c 	andi	r4,r18,1
   4796c:	20000d26 	beq	r4,zero,479a4 <___vfprintf_internal_r+0x14a4>
   47970:	d9003717 	ldw	r4,220(sp)
   47974:	d9403417 	ldw	r5,208(sp)
   47978:	1907883a 	add	r3,r3,r4
   4797c:	d9001f17 	ldw	r4,124(sp)
   47980:	41400015 	stw	r5,0(r8)
   47984:	d9403717 	ldw	r5,220(sp)
   47988:	21000044 	addi	r4,r4,1
   4798c:	d8c02015 	stw	r3,128(sp)
   47990:	41400115 	stw	r5,4(r8)
   47994:	d9001f15 	stw	r4,124(sp)
   47998:	014001c4 	movi	r5,7
   4799c:	2901e816 	blt	r5,r4,48140 <___vfprintf_internal_r+0x1c40>
   479a0:	42000204 	addi	r8,r8,8
   479a4:	d9003317 	ldw	r4,204(sp)
   479a8:	8121883a 	add	r16,r16,r4
   479ac:	2085c83a 	sub	r2,r4,r2
   479b0:	8461c83a 	sub	r16,r16,r17
   479b4:	1400010e 	bge	r2,r16,479bc <___vfprintf_internal_r+0x14bc>
   479b8:	1021883a 	mov	r16,r2
   479bc:	04000a0e 	bge	zero,r16,479e8 <___vfprintf_internal_r+0x14e8>
   479c0:	d9001f17 	ldw	r4,124(sp)
   479c4:	1c07883a 	add	r3,r3,r16
   479c8:	44400015 	stw	r17,0(r8)
   479cc:	21000044 	addi	r4,r4,1
   479d0:	44000115 	stw	r16,4(r8)
   479d4:	d8c02015 	stw	r3,128(sp)
   479d8:	d9001f15 	stw	r4,124(sp)
   479dc:	014001c4 	movi	r5,7
   479e0:	2901fb16 	blt	r5,r4,481d0 <___vfprintf_internal_r+0x1cd0>
   479e4:	42000204 	addi	r8,r8,8
   479e8:	8001f716 	blt	r16,zero,481c8 <___vfprintf_internal_r+0x1cc8>
   479ec:	1421c83a 	sub	r16,r2,r16
   479f0:	043d380e 	bge	zero,r16,46ed4 <__alt_data_end+0xfffc6ed4>
   479f4:	04400404 	movi	r17,16
   479f8:	d8801f17 	ldw	r2,124(sp)
   479fc:	8c3efb0e 	bge	r17,r16,475ec <__alt_data_end+0xfffc75ec>
   47a00:	01400174 	movhi	r5,5
   47a04:	294eeb84 	addi	r5,r5,15278
   47a08:	d9402b15 	stw	r5,172(sp)
   47a0c:	058001c4 	movi	r22,7
   47a10:	dcc02c17 	ldw	r19,176(sp)
   47a14:	00000306 	br	47a24 <___vfprintf_internal_r+0x1524>
   47a18:	42000204 	addi	r8,r8,8
   47a1c:	843ffc04 	addi	r16,r16,-16
   47a20:	8c3ef50e 	bge	r17,r16,475f8 <__alt_data_end+0xfffc75f8>
   47a24:	18c00404 	addi	r3,r3,16
   47a28:	10800044 	addi	r2,r2,1
   47a2c:	45000015 	stw	r20,0(r8)
   47a30:	44400115 	stw	r17,4(r8)
   47a34:	d8c02015 	stw	r3,128(sp)
   47a38:	d8801f15 	stw	r2,124(sp)
   47a3c:	b0bff60e 	bge	r22,r2,47a18 <__alt_data_end+0xfffc7a18>
   47a40:	d9801e04 	addi	r6,sp,120
   47a44:	b80b883a 	mov	r5,r23
   47a48:	9809883a 	mov	r4,r19
   47a4c:	004dafc0 	call	4dafc <__sprint_r>
   47a50:	103bad1e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   47a54:	d8c02017 	ldw	r3,128(sp)
   47a58:	d8801f17 	ldw	r2,124(sp)
   47a5c:	da000404 	addi	r8,sp,16
   47a60:	003fee06 	br	47a1c <__alt_data_end+0xfffc7a1c>
   47a64:	9088703a 	and	r4,r18,r2
   47a68:	203eab1e 	bne	r4,zero,47518 <__alt_data_end+0xfffc7518>
   47a6c:	dc401f17 	ldw	r17,124(sp)
   47a70:	40800115 	stw	r2,4(r8)
   47a74:	44000015 	stw	r16,0(r8)
   47a78:	8c400044 	addi	r17,r17,1
   47a7c:	d8c02015 	stw	r3,128(sp)
   47a80:	dc401f15 	stw	r17,124(sp)
   47a84:	008001c4 	movi	r2,7
   47a88:	14400e16 	blt	r2,r17,47ac4 <___vfprintf_internal_r+0x15c4>
   47a8c:	45800204 	addi	r22,r8,8
   47a90:	003eca06 	br	475bc <__alt_data_end+0xfffc75bc>
   47a94:	01000174 	movhi	r4,5
   47a98:	210eeb84 	addi	r4,r4,15278
   47a9c:	d9002b15 	stw	r4,172(sp)
   47aa0:	d8802b17 	ldw	r2,172(sp)
   47aa4:	1c07883a 	add	r3,r3,r16
   47aa8:	8c400044 	addi	r17,r17,1
   47aac:	b0800015 	stw	r2,0(r22)
   47ab0:	b4000115 	stw	r16,4(r22)
   47ab4:	d8c02015 	stw	r3,128(sp)
   47ab8:	dc401f15 	stw	r17,124(sp)
   47abc:	008001c4 	movi	r2,7
   47ac0:	147ebd0e 	bge	r2,r17,475b8 <__alt_data_end+0xfffc75b8>
   47ac4:	d9002c17 	ldw	r4,176(sp)
   47ac8:	d9801e04 	addi	r6,sp,120
   47acc:	b80b883a 	mov	r5,r23
   47ad0:	004dafc0 	call	4dafc <__sprint_r>
   47ad4:	103b8c1e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   47ad8:	d8c02017 	ldw	r3,128(sp)
   47adc:	dc401f17 	ldw	r17,124(sp)
   47ae0:	dd800404 	addi	r22,sp,16
   47ae4:	003eb506 	br	475bc <__alt_data_end+0xfffc75bc>
   47ae8:	d9002c17 	ldw	r4,176(sp)
   47aec:	d9801e04 	addi	r6,sp,120
   47af0:	b80b883a 	mov	r5,r23
   47af4:	004dafc0 	call	4dafc <__sprint_r>
   47af8:	103b831e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   47afc:	d8c02017 	ldw	r3,128(sp)
   47b00:	dc401f17 	ldw	r17,124(sp)
   47b04:	da000404 	addi	r8,sp,16
   47b08:	003e8d06 	br	47540 <__alt_data_end+0xfffc7540>
   47b0c:	d9002c17 	ldw	r4,176(sp)
   47b10:	d9801e04 	addi	r6,sp,120
   47b14:	b80b883a 	mov	r5,r23
   47b18:	004dafc0 	call	4dafc <__sprint_r>
   47b1c:	103b7a1e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   47b20:	d8c02017 	ldw	r3,128(sp)
   47b24:	dc401f17 	ldw	r17,124(sp)
   47b28:	dd800404 	addi	r22,sp,16
   47b2c:	003e8f06 	br	4756c <__alt_data_end+0xfffc756c>
   47b30:	0027883a 	mov	r19,zero
   47b34:	003f4a06 	br	47860 <__alt_data_end+0xfffc7860>
   47b38:	d9002c17 	ldw	r4,176(sp)
   47b3c:	d9801e04 	addi	r6,sp,120
   47b40:	b80b883a 	mov	r5,r23
   47b44:	004dafc0 	call	4dafc <__sprint_r>
   47b48:	103b6f1e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   47b4c:	d8c02017 	ldw	r3,128(sp)
   47b50:	da000404 	addi	r8,sp,16
   47b54:	003c9d06 	br	46dcc <__alt_data_end+0xfffc6dcc>
   47b58:	04e7c83a 	sub	r19,zero,r19
   47b5c:	9804c03a 	cmpne	r2,r19,zero
   47b60:	05adc83a 	sub	r22,zero,r22
   47b64:	b0adc83a 	sub	r22,r22,r2
   47b68:	d8802917 	ldw	r2,164(sp)
   47b6c:	07000b44 	movi	fp,45
   47b70:	df002785 	stb	fp,158(sp)
   47b74:	10017b16 	blt	r2,zero,48164 <___vfprintf_internal_r+0x1c64>
   47b78:	00bfdfc4 	movi	r2,-129
   47b7c:	90a4703a 	and	r18,r18,r2
   47b80:	003bb106 	br	46a48 <__alt_data_end+0xfffc6a48>
   47b84:	d9003617 	ldw	r4,216(sp)
   47b88:	d9403817 	ldw	r5,224(sp)
   47b8c:	da003d15 	stw	r8,244(sp)
   47b90:	004d7200 	call	4d720 <__fpclassifyd>
   47b94:	da003d17 	ldw	r8,244(sp)
   47b98:	1000f026 	beq	r2,zero,47f5c <___vfprintf_internal_r+0x1a5c>
   47b9c:	d9002917 	ldw	r4,164(sp)
   47ba0:	05bff7c4 	movi	r22,-33
   47ba4:	00bfffc4 	movi	r2,-1
   47ba8:	8dac703a 	and	r22,r17,r22
   47bac:	20820026 	beq	r4,r2,483b0 <___vfprintf_internal_r+0x1eb0>
   47bb0:	008011c4 	movi	r2,71
   47bb4:	b081f726 	beq	r22,r2,48394 <___vfprintf_internal_r+0x1e94>
   47bb8:	d9003817 	ldw	r4,224(sp)
   47bbc:	90c04014 	ori	r3,r18,256
   47bc0:	d8c02b15 	stw	r3,172(sp)
   47bc4:	20021516 	blt	r4,zero,4841c <___vfprintf_internal_r+0x1f1c>
   47bc8:	dcc03817 	ldw	r19,224(sp)
   47bcc:	d8002a05 	stb	zero,168(sp)
   47bd0:	00801984 	movi	r2,102
   47bd4:	8881f926 	beq	r17,r2,483bc <___vfprintf_internal_r+0x1ebc>
   47bd8:	00801184 	movi	r2,70
   47bdc:	88821c26 	beq	r17,r2,48450 <___vfprintf_internal_r+0x1f50>
   47be0:	00801144 	movi	r2,69
   47be4:	b081ef26 	beq	r22,r2,483a4 <___vfprintf_internal_r+0x1ea4>
   47be8:	d8c02917 	ldw	r3,164(sp)
   47bec:	d8802104 	addi	r2,sp,132
   47bf0:	d8800315 	stw	r2,12(sp)
   47bf4:	d9403617 	ldw	r5,216(sp)
   47bf8:	d8802504 	addi	r2,sp,148
   47bfc:	d9002c17 	ldw	r4,176(sp)
   47c00:	d8800215 	stw	r2,8(sp)
   47c04:	d8802604 	addi	r2,sp,152
   47c08:	d8c00015 	stw	r3,0(sp)
   47c0c:	d8800115 	stw	r2,4(sp)
   47c10:	01c00084 	movi	r7,2
   47c14:	980d883a 	mov	r6,r19
   47c18:	d8c03c15 	stw	r3,240(sp)
   47c1c:	da003d15 	stw	r8,244(sp)
   47c20:	0048b240 	call	48b24 <_dtoa_r>
   47c24:	1021883a 	mov	r16,r2
   47c28:	008019c4 	movi	r2,103
   47c2c:	d8c03c17 	ldw	r3,240(sp)
   47c30:	da003d17 	ldw	r8,244(sp)
   47c34:	88817126 	beq	r17,r2,481fc <___vfprintf_internal_r+0x1cfc>
   47c38:	008011c4 	movi	r2,71
   47c3c:	88829226 	beq	r17,r2,48688 <___vfprintf_internal_r+0x2188>
   47c40:	80f9883a 	add	fp,r16,r3
   47c44:	d9003617 	ldw	r4,216(sp)
   47c48:	000d883a 	mov	r6,zero
   47c4c:	000f883a 	mov	r7,zero
   47c50:	980b883a 	mov	r5,r19
   47c54:	da003d15 	stw	r8,244(sp)
   47c58:	0044d380 	call	44d38 <__eqdf2>
   47c5c:	da003d17 	ldw	r8,244(sp)
   47c60:	10018d26 	beq	r2,zero,48298 <___vfprintf_internal_r+0x1d98>
   47c64:	d8802117 	ldw	r2,132(sp)
   47c68:	1700062e 	bgeu	r2,fp,47c84 <___vfprintf_internal_r+0x1784>
   47c6c:	01000c04 	movi	r4,48
   47c70:	10c00044 	addi	r3,r2,1
   47c74:	d8c02115 	stw	r3,132(sp)
   47c78:	11000005 	stb	r4,0(r2)
   47c7c:	d8802117 	ldw	r2,132(sp)
   47c80:	173ffb36 	bltu	r2,fp,47c70 <__alt_data_end+0xfffc7c70>
   47c84:	1405c83a 	sub	r2,r2,r16
   47c88:	d8803315 	stw	r2,204(sp)
   47c8c:	008011c4 	movi	r2,71
   47c90:	b0817626 	beq	r22,r2,4826c <___vfprintf_internal_r+0x1d6c>
   47c94:	00801944 	movi	r2,101
   47c98:	1442810e 	bge	r2,r17,486a0 <___vfprintf_internal_r+0x21a0>
   47c9c:	d8c02617 	ldw	r3,152(sp)
   47ca0:	00801984 	movi	r2,102
   47ca4:	d8c03215 	stw	r3,200(sp)
   47ca8:	8881fe26 	beq	r17,r2,484a4 <___vfprintf_internal_r+0x1fa4>
   47cac:	d8c03217 	ldw	r3,200(sp)
   47cb0:	d9003317 	ldw	r4,204(sp)
   47cb4:	1901dd16 	blt	r3,r4,4842c <___vfprintf_internal_r+0x1f2c>
   47cb8:	9480004c 	andi	r18,r18,1
   47cbc:	90022b1e 	bne	r18,zero,4856c <___vfprintf_internal_r+0x206c>
   47cc0:	1805883a 	mov	r2,r3
   47cc4:	18028016 	blt	r3,zero,486c8 <___vfprintf_internal_r+0x21c8>
   47cc8:	d8c03217 	ldw	r3,200(sp)
   47ccc:	044019c4 	movi	r17,103
   47cd0:	d8c02e15 	stw	r3,184(sp)
   47cd4:	df002a07 	ldb	fp,168(sp)
   47cd8:	e001531e 	bne	fp,zero,48228 <___vfprintf_internal_r+0x1d28>
   47cdc:	df002783 	ldbu	fp,158(sp)
   47ce0:	d8802a15 	stw	r2,168(sp)
   47ce4:	dc802b17 	ldw	r18,172(sp)
   47ce8:	d8002915 	stw	zero,164(sp)
   47cec:	003bd106 	br	46c34 <__alt_data_end+0xfffc6c34>
   47cf0:	d8802d17 	ldw	r2,180(sp)
   47cf4:	d8c02d17 	ldw	r3,180(sp)
   47cf8:	d9002d17 	ldw	r4,180(sp)
   47cfc:	10800017 	ldw	r2,0(r2)
   47d00:	18c00117 	ldw	r3,4(r3)
   47d04:	21000204 	addi	r4,r4,8
   47d08:	d8803615 	stw	r2,216(sp)
   47d0c:	d8c03815 	stw	r3,224(sp)
   47d10:	d9002d15 	stw	r4,180(sp)
   47d14:	003b7506 	br	46aec <__alt_data_end+0xfffc6aec>
   47d18:	ac400007 	ldb	r17,0(r21)
   47d1c:	003a5906 	br	46684 <__alt_data_end+0xfffc6684>
   47d20:	9080100c 	andi	r2,r18,64
   47d24:	1000a826 	beq	r2,zero,47fc8 <___vfprintf_internal_r+0x1ac8>
   47d28:	d9002d17 	ldw	r4,180(sp)
   47d2c:	002d883a 	mov	r22,zero
   47d30:	24c0000b 	ldhu	r19,0(r4)
   47d34:	21000104 	addi	r4,r4,4
   47d38:	d9002d15 	stw	r4,180(sp)
   47d3c:	003ccb06 	br	4706c <__alt_data_end+0xfffc706c>
   47d40:	d8c02d17 	ldw	r3,180(sp)
   47d44:	d9002917 	ldw	r4,164(sp)
   47d48:	002d883a 	mov	r22,zero
   47d4c:	18800104 	addi	r2,r3,4
   47d50:	1cc00017 	ldw	r19,0(r3)
   47d54:	203ebb0e 	bge	r4,zero,47844 <__alt_data_end+0xfffc7844>
   47d58:	003ef106 	br	47920 <__alt_data_end+0xfffc7920>
   47d5c:	9080040c 	andi	r2,r18,16
   47d60:	1000921e 	bne	r2,zero,47fac <___vfprintf_internal_r+0x1aac>
   47d64:	9480100c 	andi	r18,r18,64
   47d68:	90013926 	beq	r18,zero,48250 <___vfprintf_internal_r+0x1d50>
   47d6c:	d9002d17 	ldw	r4,180(sp)
   47d70:	d9402f17 	ldw	r5,188(sp)
   47d74:	20800017 	ldw	r2,0(r4)
   47d78:	21000104 	addi	r4,r4,4
   47d7c:	d9002d15 	stw	r4,180(sp)
   47d80:	1140000d 	sth	r5,0(r2)
   47d84:	003a1606 	br	465e0 <__alt_data_end+0xfffc65e0>
   47d88:	9080100c 	andi	r2,r18,64
   47d8c:	10008026 	beq	r2,zero,47f90 <___vfprintf_internal_r+0x1a90>
   47d90:	d8c02d17 	ldw	r3,180(sp)
   47d94:	1cc0000f 	ldh	r19,0(r3)
   47d98:	18c00104 	addi	r3,r3,4
   47d9c:	d8c02d15 	stw	r3,180(sp)
   47da0:	982dd7fa 	srai	r22,r19,31
   47da4:	b005883a 	mov	r2,r22
   47da8:	003b1f06 	br	46a28 <__alt_data_end+0xfffc6a28>
   47dac:	9080100c 	andi	r2,r18,64
   47db0:	d8002785 	stb	zero,158(sp)
   47db4:	10008a1e 	bne	r2,zero,47fe0 <___vfprintf_internal_r+0x1ae0>
   47db8:	d9402d17 	ldw	r5,180(sp)
   47dbc:	d8c02917 	ldw	r3,164(sp)
   47dc0:	002d883a 	mov	r22,zero
   47dc4:	28800104 	addi	r2,r5,4
   47dc8:	2cc00017 	ldw	r19,0(r5)
   47dcc:	183e4b0e 	bge	r3,zero,476fc <__alt_data_end+0xfffc76fc>
   47dd0:	9d86b03a 	or	r3,r19,r22
   47dd4:	d8802d15 	stw	r2,180(sp)
   47dd8:	183e4c1e 	bne	r3,zero,4770c <__alt_data_end+0xfffc770c>
   47ddc:	0039883a 	mov	fp,zero
   47de0:	0005883a 	mov	r2,zero
   47de4:	003d4006 	br	472e8 <__alt_data_end+0xfffc72e8>
   47de8:	01400174 	movhi	r5,5
   47dec:	294eeb84 	addi	r5,r5,15278
   47df0:	d9402b15 	stw	r5,172(sp)
   47df4:	d9402b17 	ldw	r5,172(sp)
   47df8:	1c47883a 	add	r3,r3,r17
   47dfc:	10800044 	addi	r2,r2,1
   47e00:	41400015 	stw	r5,0(r8)
   47e04:	44400115 	stw	r17,4(r8)
   47e08:	d8c02015 	stw	r3,128(sp)
   47e0c:	d8801f15 	stw	r2,124(sp)
   47e10:	010001c4 	movi	r4,7
   47e14:	20bec816 	blt	r4,r2,47938 <__alt_data_end+0xfffc7938>
   47e18:	42000204 	addi	r8,r8,8
   47e1c:	003ecd06 	br	47954 <__alt_data_end+0xfffc7954>
   47e20:	d9002917 	ldw	r4,164(sp)
   47e24:	d8002785 	stb	zero,158(sp)
   47e28:	203d2d16 	blt	r4,zero,472e0 <__alt_data_end+0xfffc72e0>
   47e2c:	00bfdfc4 	movi	r2,-129
   47e30:	90a4703a 	and	r18,r18,r2
   47e34:	003a9106 	br	4687c <__alt_data_end+0xfffc687c>
   47e38:	01000174 	movhi	r4,5
   47e3c:	210eeb84 	addi	r4,r4,15278
   47e40:	d9002b15 	stw	r4,172(sp)
   47e44:	003c0c06 	br	46e78 <__alt_data_end+0xfffc6e78>
   47e48:	d9002c17 	ldw	r4,176(sp)
   47e4c:	d9801e04 	addi	r6,sp,120
   47e50:	b80b883a 	mov	r5,r23
   47e54:	004dafc0 	call	4dafc <__sprint_r>
   47e58:	103aab1e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   47e5c:	d8c02017 	ldw	r3,128(sp)
   47e60:	da000404 	addi	r8,sp,16
   47e64:	003d4106 	br	4736c <__alt_data_end+0xfffc736c>
   47e68:	d8801f17 	ldw	r2,124(sp)
   47e6c:	01400174 	movhi	r5,5
   47e70:	01000044 	movi	r4,1
   47e74:	18c00044 	addi	r3,r3,1
   47e78:	10800044 	addi	r2,r2,1
   47e7c:	294eeb04 	addi	r5,r5,15276
   47e80:	41000115 	stw	r4,4(r8)
   47e84:	41400015 	stw	r5,0(r8)
   47e88:	d8c02015 	stw	r3,128(sp)
   47e8c:	d8801f15 	stw	r2,124(sp)
   47e90:	010001c4 	movi	r4,7
   47e94:	20805c16 	blt	r4,r2,48008 <___vfprintf_internal_r+0x1b08>
   47e98:	42000204 	addi	r8,r8,8
   47e9c:	8800041e 	bne	r17,zero,47eb0 <___vfprintf_internal_r+0x19b0>
   47ea0:	d8803317 	ldw	r2,204(sp)
   47ea4:	1000021e 	bne	r2,zero,47eb0 <___vfprintf_internal_r+0x19b0>
   47ea8:	9080004c 	andi	r2,r18,1
   47eac:	103c0926 	beq	r2,zero,46ed4 <__alt_data_end+0xfffc6ed4>
   47eb0:	d9003717 	ldw	r4,220(sp)
   47eb4:	d8801f17 	ldw	r2,124(sp)
   47eb8:	d9403417 	ldw	r5,208(sp)
   47ebc:	20c7883a 	add	r3,r4,r3
   47ec0:	10800044 	addi	r2,r2,1
   47ec4:	41000115 	stw	r4,4(r8)
   47ec8:	41400015 	stw	r5,0(r8)
   47ecc:	d8c02015 	stw	r3,128(sp)
   47ed0:	d8801f15 	stw	r2,124(sp)
   47ed4:	010001c4 	movi	r4,7
   47ed8:	20812116 	blt	r4,r2,48360 <___vfprintf_internal_r+0x1e60>
   47edc:	42000204 	addi	r8,r8,8
   47ee0:	0463c83a 	sub	r17,zero,r17
   47ee4:	0440730e 	bge	zero,r17,480b4 <___vfprintf_internal_r+0x1bb4>
   47ee8:	05800404 	movi	r22,16
   47eec:	b440860e 	bge	r22,r17,48108 <___vfprintf_internal_r+0x1c08>
   47ef0:	01400174 	movhi	r5,5
   47ef4:	294eeb84 	addi	r5,r5,15278
   47ef8:	d9402b15 	stw	r5,172(sp)
   47efc:	070001c4 	movi	fp,7
   47f00:	dcc02c17 	ldw	r19,176(sp)
   47f04:	00000306 	br	47f14 <___vfprintf_internal_r+0x1a14>
   47f08:	42000204 	addi	r8,r8,8
   47f0c:	8c7ffc04 	addi	r17,r17,-16
   47f10:	b440800e 	bge	r22,r17,48114 <___vfprintf_internal_r+0x1c14>
   47f14:	18c00404 	addi	r3,r3,16
   47f18:	10800044 	addi	r2,r2,1
   47f1c:	45000015 	stw	r20,0(r8)
   47f20:	45800115 	stw	r22,4(r8)
   47f24:	d8c02015 	stw	r3,128(sp)
   47f28:	d8801f15 	stw	r2,124(sp)
   47f2c:	e0bff60e 	bge	fp,r2,47f08 <__alt_data_end+0xfffc7f08>
   47f30:	d9801e04 	addi	r6,sp,120
   47f34:	b80b883a 	mov	r5,r23
   47f38:	9809883a 	mov	r4,r19
   47f3c:	004dafc0 	call	4dafc <__sprint_r>
   47f40:	103a711e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   47f44:	d8c02017 	ldw	r3,128(sp)
   47f48:	d8801f17 	ldw	r2,124(sp)
   47f4c:	da000404 	addi	r8,sp,16
   47f50:	003fee06 	br	47f0c <__alt_data_end+0xfffc7f0c>
   47f54:	00bfffc4 	movi	r2,-1
   47f58:	003a6f06 	br	46918 <__alt_data_end+0xfffc6918>
   47f5c:	008011c4 	movi	r2,71
   47f60:	1440b816 	blt	r2,r17,48244 <___vfprintf_internal_r+0x1d44>
   47f64:	04000174 	movhi	r16,5
   47f68:	840edd04 	addi	r16,r16,15220
   47f6c:	00c000c4 	movi	r3,3
   47f70:	00bfdfc4 	movi	r2,-129
   47f74:	d8c02a15 	stw	r3,168(sp)
   47f78:	90a4703a 	and	r18,r18,r2
   47f7c:	df002783 	ldbu	fp,158(sp)
   47f80:	d8c02e15 	stw	r3,184(sp)
   47f84:	d8002915 	stw	zero,164(sp)
   47f88:	d8003215 	stw	zero,200(sp)
   47f8c:	003b2906 	br	46c34 <__alt_data_end+0xfffc6c34>
   47f90:	d9002d17 	ldw	r4,180(sp)
   47f94:	24c00017 	ldw	r19,0(r4)
   47f98:	21000104 	addi	r4,r4,4
   47f9c:	d9002d15 	stw	r4,180(sp)
   47fa0:	982dd7fa 	srai	r22,r19,31
   47fa4:	b005883a 	mov	r2,r22
   47fa8:	003a9f06 	br	46a28 <__alt_data_end+0xfffc6a28>
   47fac:	d9402d17 	ldw	r5,180(sp)
   47fb0:	d8c02f17 	ldw	r3,188(sp)
   47fb4:	28800017 	ldw	r2,0(r5)
   47fb8:	29400104 	addi	r5,r5,4
   47fbc:	d9402d15 	stw	r5,180(sp)
   47fc0:	10c00015 	stw	r3,0(r2)
   47fc4:	00398606 	br	465e0 <__alt_data_end+0xfffc65e0>
   47fc8:	d9402d17 	ldw	r5,180(sp)
   47fcc:	002d883a 	mov	r22,zero
   47fd0:	2cc00017 	ldw	r19,0(r5)
   47fd4:	29400104 	addi	r5,r5,4
   47fd8:	d9402d15 	stw	r5,180(sp)
   47fdc:	003c2306 	br	4706c <__alt_data_end+0xfffc706c>
   47fe0:	d8c02d17 	ldw	r3,180(sp)
   47fe4:	d9002917 	ldw	r4,164(sp)
   47fe8:	002d883a 	mov	r22,zero
   47fec:	18800104 	addi	r2,r3,4
   47ff0:	1cc0000b 	ldhu	r19,0(r3)
   47ff4:	203dc10e 	bge	r4,zero,476fc <__alt_data_end+0xfffc76fc>
   47ff8:	003f7506 	br	47dd0 <__alt_data_end+0xfffc7dd0>
   47ffc:	04000174 	movhi	r16,5
   48000:	840edb04 	addi	r16,r16,15212
   48004:	003acc06 	br	46b38 <__alt_data_end+0xfffc6b38>
   48008:	d9002c17 	ldw	r4,176(sp)
   4800c:	d9801e04 	addi	r6,sp,120
   48010:	b80b883a 	mov	r5,r23
   48014:	004dafc0 	call	4dafc <__sprint_r>
   48018:	103a3b1e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   4801c:	dc402617 	ldw	r17,152(sp)
   48020:	d8c02017 	ldw	r3,128(sp)
   48024:	da000404 	addi	r8,sp,16
   48028:	003f9c06 	br	47e9c <__alt_data_end+0xfffc7e9c>
   4802c:	ac400043 	ldbu	r17,1(r21)
   48030:	94800814 	ori	r18,r18,32
   48034:	ad400044 	addi	r21,r21,1
   48038:	8c403fcc 	andi	r17,r17,255
   4803c:	8c40201c 	xori	r17,r17,128
   48040:	8c7fe004 	addi	r17,r17,-128
   48044:	00398f06 	br	46684 <__alt_data_end+0xfffc6684>
   48048:	d8c02d15 	stw	r3,180(sp)
   4804c:	0039883a 	mov	fp,zero
   48050:	003e3506 	br	47928 <__alt_data_end+0xfffc7928>
   48054:	d9002c17 	ldw	r4,176(sp)
   48058:	d9801e04 	addi	r6,sp,120
   4805c:	b80b883a 	mov	r5,r23
   48060:	004dafc0 	call	4dafc <__sprint_r>
   48064:	103a281e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   48068:	d8c02017 	ldw	r3,128(sp)
   4806c:	da000404 	addi	r8,sp,16
   48070:	003cd006 	br	473b4 <__alt_data_end+0xfffc73b4>
   48074:	8009883a 	mov	r4,r16
   48078:	da003d15 	stw	r8,244(sp)
   4807c:	00464680 	call	46468 <strlen>
   48080:	d8802e15 	stw	r2,184(sp)
   48084:	da003d17 	ldw	r8,244(sp)
   48088:	103c340e 	bge	r2,zero,4715c <__alt_data_end+0xfffc715c>
   4808c:	0005883a 	mov	r2,zero
   48090:	003c3206 	br	4715c <__alt_data_end+0xfffc715c>
   48094:	d9002c17 	ldw	r4,176(sp)
   48098:	d9801e04 	addi	r6,sp,120
   4809c:	b80b883a 	mov	r5,r23
   480a0:	004dafc0 	call	4dafc <__sprint_r>
   480a4:	103a181e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   480a8:	d8c02017 	ldw	r3,128(sp)
   480ac:	d8801f17 	ldw	r2,124(sp)
   480b0:	da000404 	addi	r8,sp,16
   480b4:	d9403317 	ldw	r5,204(sp)
   480b8:	10800044 	addi	r2,r2,1
   480bc:	44000015 	stw	r16,0(r8)
   480c0:	28c7883a 	add	r3,r5,r3
   480c4:	003b7d06 	br	46ebc <__alt_data_end+0xfffc6ebc>
   480c8:	01000174 	movhi	r4,5
   480cc:	210eef84 	addi	r4,r4,15294
   480d0:	d9003515 	stw	r4,212(sp)
   480d4:	003b1406 	br	46d28 <__alt_data_end+0xfffc6d28>
   480d8:	013fffc4 	movi	r4,-1
   480dc:	003a3506 	br	469b4 <__alt_data_end+0xfffc69b4>
   480e0:	0023883a 	mov	r17,zero
   480e4:	003d9d06 	br	4775c <__alt_data_end+0xfffc775c>
   480e8:	d9002c17 	ldw	r4,176(sp)
   480ec:	d9801e04 	addi	r6,sp,120
   480f0:	b80b883a 	mov	r5,r23
   480f4:	004dafc0 	call	4dafc <__sprint_r>
   480f8:	103a031e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   480fc:	d8c02017 	ldw	r3,128(sp)
   48100:	da000404 	addi	r8,sp,16
   48104:	003d9406 	br	47758 <__alt_data_end+0xfffc7758>
   48108:	01000174 	movhi	r4,5
   4810c:	210eeb84 	addi	r4,r4,15278
   48110:	d9002b15 	stw	r4,172(sp)
   48114:	d9002b17 	ldw	r4,172(sp)
   48118:	1c47883a 	add	r3,r3,r17
   4811c:	10800044 	addi	r2,r2,1
   48120:	41000015 	stw	r4,0(r8)
   48124:	44400115 	stw	r17,4(r8)
   48128:	d8c02015 	stw	r3,128(sp)
   4812c:	d8801f15 	stw	r2,124(sp)
   48130:	010001c4 	movi	r4,7
   48134:	20bfd716 	blt	r4,r2,48094 <__alt_data_end+0xfffc8094>
   48138:	42000204 	addi	r8,r8,8
   4813c:	003fdd06 	br	480b4 <__alt_data_end+0xfffc80b4>
   48140:	d9002c17 	ldw	r4,176(sp)
   48144:	d9801e04 	addi	r6,sp,120
   48148:	b80b883a 	mov	r5,r23
   4814c:	004dafc0 	call	4dafc <__sprint_r>
   48150:	1039ed1e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   48154:	d8802617 	ldw	r2,152(sp)
   48158:	d8c02017 	ldw	r3,128(sp)
   4815c:	da000404 	addi	r8,sp,16
   48160:	003e1006 	br	479a4 <__alt_data_end+0xfffc79a4>
   48164:	00800044 	movi	r2,1
   48168:	10803fcc 	andi	r2,r2,255
   4816c:	00c00044 	movi	r3,1
   48170:	10fa3526 	beq	r2,r3,46a48 <__alt_data_end+0xfffc6a48>
   48174:	00c00084 	movi	r3,2
   48178:	10fbcb26 	beq	r2,r3,470a8 <__alt_data_end+0xfffc70a8>
   4817c:	003a8f06 	br	46bbc <__alt_data_end+0xfffc6bbc>
   48180:	01000174 	movhi	r4,5
   48184:	210eef84 	addi	r4,r4,15294
   48188:	d9003515 	stw	r4,212(sp)
   4818c:	003b7606 	br	46f68 <__alt_data_end+0xfffc6f68>
   48190:	d8802917 	ldw	r2,164(sp)
   48194:	00c00184 	movi	r3,6
   48198:	1880012e 	bgeu	r3,r2,481a0 <___vfprintf_internal_r+0x1ca0>
   4819c:	1805883a 	mov	r2,r3
   481a0:	d8802e15 	stw	r2,184(sp)
   481a4:	1000ef16 	blt	r2,zero,48564 <___vfprintf_internal_r+0x2064>
   481a8:	04000174 	movhi	r16,5
   481ac:	d8802a15 	stw	r2,168(sp)
   481b0:	dcc02d15 	stw	r19,180(sp)
   481b4:	d8002915 	stw	zero,164(sp)
   481b8:	d8003215 	stw	zero,200(sp)
   481bc:	840ee904 	addi	r16,r16,15268
   481c0:	0039883a 	mov	fp,zero
   481c4:	003aa206 	br	46c50 <__alt_data_end+0xfffc6c50>
   481c8:	0021883a 	mov	r16,zero
   481cc:	003e0706 	br	479ec <__alt_data_end+0xfffc79ec>
   481d0:	d9002c17 	ldw	r4,176(sp)
   481d4:	d9801e04 	addi	r6,sp,120
   481d8:	b80b883a 	mov	r5,r23
   481dc:	004dafc0 	call	4dafc <__sprint_r>
   481e0:	1039c91e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   481e4:	d8802617 	ldw	r2,152(sp)
   481e8:	d9403317 	ldw	r5,204(sp)
   481ec:	d8c02017 	ldw	r3,128(sp)
   481f0:	da000404 	addi	r8,sp,16
   481f4:	2885c83a 	sub	r2,r5,r2
   481f8:	003dfb06 	br	479e8 <__alt_data_end+0xfffc79e8>
   481fc:	9080004c 	andi	r2,r18,1
   48200:	103e8f1e 	bne	r2,zero,47c40 <__alt_data_end+0xfffc7c40>
   48204:	d8802117 	ldw	r2,132(sp)
   48208:	003e9e06 	br	47c84 <__alt_data_end+0xfffc7c84>
   4820c:	1025883a 	mov	r18,r2
   48210:	0039883a 	mov	fp,zero
   48214:	00800084 	movi	r2,2
   48218:	003fd306 	br	48168 <__alt_data_end+0xfffc8168>
   4821c:	07000b44 	movi	fp,45
   48220:	df002785 	stb	fp,158(sp)
   48224:	003a4006 	br	46b28 <__alt_data_end+0xfffc6b28>
   48228:	00c00b44 	movi	r3,45
   4822c:	d8c02785 	stb	r3,158(sp)
   48230:	d8802a15 	stw	r2,168(sp)
   48234:	dc802b17 	ldw	r18,172(sp)
   48238:	d8002915 	stw	zero,164(sp)
   4823c:	07000b44 	movi	fp,45
   48240:	003a8006 	br	46c44 <__alt_data_end+0xfffc6c44>
   48244:	04000174 	movhi	r16,5
   48248:	840ede04 	addi	r16,r16,15224
   4824c:	003f4706 	br	47f6c <__alt_data_end+0xfffc7f6c>
   48250:	d8c02d17 	ldw	r3,180(sp)
   48254:	d9002f17 	ldw	r4,188(sp)
   48258:	18800017 	ldw	r2,0(r3)
   4825c:	18c00104 	addi	r3,r3,4
   48260:	d8c02d15 	stw	r3,180(sp)
   48264:	11000015 	stw	r4,0(r2)
   48268:	0038dd06 	br	465e0 <__alt_data_end+0xfffc65e0>
   4826c:	dd802617 	ldw	r22,152(sp)
   48270:	00bfff44 	movi	r2,-3
   48274:	b0801c16 	blt	r22,r2,482e8 <___vfprintf_internal_r+0x1de8>
   48278:	d9402917 	ldw	r5,164(sp)
   4827c:	2d801a16 	blt	r5,r22,482e8 <___vfprintf_internal_r+0x1de8>
   48280:	dd803215 	stw	r22,200(sp)
   48284:	003e8906 	br	47cac <__alt_data_end+0xfffc7cac>
   48288:	01000174 	movhi	r4,5
   4828c:	210eeb84 	addi	r4,r4,15278
   48290:	d9002b15 	stw	r4,172(sp)
   48294:	003c9106 	br	474dc <__alt_data_end+0xfffc74dc>
   48298:	e005883a 	mov	r2,fp
   4829c:	003e7906 	br	47c84 <__alt_data_end+0xfffc7c84>
   482a0:	d9402917 	ldw	r5,164(sp)
   482a4:	df002783 	ldbu	fp,158(sp)
   482a8:	dcc02d15 	stw	r19,180(sp)
   482ac:	d9402a15 	stw	r5,168(sp)
   482b0:	d9402e15 	stw	r5,184(sp)
   482b4:	d8002915 	stw	zero,164(sp)
   482b8:	d8003215 	stw	zero,200(sp)
   482bc:	003a5d06 	br	46c34 <__alt_data_end+0xfffc6c34>
   482c0:	9080004c 	andi	r2,r18,1
   482c4:	0039883a 	mov	fp,zero
   482c8:	10000426 	beq	r2,zero,482dc <___vfprintf_internal_r+0x1ddc>
   482cc:	00800c04 	movi	r2,48
   482d0:	dc001dc4 	addi	r16,sp,119
   482d4:	d8801dc5 	stb	r2,119(sp)
   482d8:	003b8006 	br	470dc <__alt_data_end+0xfffc70dc>
   482dc:	d8002e15 	stw	zero,184(sp)
   482e0:	dc001e04 	addi	r16,sp,120
   482e4:	003a4d06 	br	46c1c <__alt_data_end+0xfffc6c1c>
   482e8:	8c7fff84 	addi	r17,r17,-2
   482ec:	b5bfffc4 	addi	r22,r22,-1
   482f0:	dd802615 	stw	r22,152(sp)
   482f4:	dc4022c5 	stb	r17,139(sp)
   482f8:	b000bf16 	blt	r22,zero,485f8 <___vfprintf_internal_r+0x20f8>
   482fc:	00800ac4 	movi	r2,43
   48300:	d8802305 	stb	r2,140(sp)
   48304:	00800244 	movi	r2,9
   48308:	15807016 	blt	r2,r22,484cc <___vfprintf_internal_r+0x1fcc>
   4830c:	00800c04 	movi	r2,48
   48310:	b5800c04 	addi	r22,r22,48
   48314:	d8802345 	stb	r2,141(sp)
   48318:	dd802385 	stb	r22,142(sp)
   4831c:	d88023c4 	addi	r2,sp,143
   48320:	df0022c4 	addi	fp,sp,139
   48324:	d8c03317 	ldw	r3,204(sp)
   48328:	1739c83a 	sub	fp,r2,fp
   4832c:	d9003317 	ldw	r4,204(sp)
   48330:	e0c7883a 	add	r3,fp,r3
   48334:	df003a15 	stw	fp,232(sp)
   48338:	d8c02e15 	stw	r3,184(sp)
   4833c:	00800044 	movi	r2,1
   48340:	1100b30e 	bge	r2,r4,48610 <___vfprintf_internal_r+0x2110>
   48344:	d8c02e17 	ldw	r3,184(sp)
   48348:	18c00044 	addi	r3,r3,1
   4834c:	d8c02e15 	stw	r3,184(sp)
   48350:	1805883a 	mov	r2,r3
   48354:	1800ac16 	blt	r3,zero,48608 <___vfprintf_internal_r+0x2108>
   48358:	d8003215 	stw	zero,200(sp)
   4835c:	003e5d06 	br	47cd4 <__alt_data_end+0xfffc7cd4>
   48360:	d9002c17 	ldw	r4,176(sp)
   48364:	d9801e04 	addi	r6,sp,120
   48368:	b80b883a 	mov	r5,r23
   4836c:	004dafc0 	call	4dafc <__sprint_r>
   48370:	1039651e 	bne	r2,zero,46908 <__alt_data_end+0xfffc6908>
   48374:	dc402617 	ldw	r17,152(sp)
   48378:	d8c02017 	ldw	r3,128(sp)
   4837c:	d8801f17 	ldw	r2,124(sp)
   48380:	da000404 	addi	r8,sp,16
   48384:	003ed606 	br	47ee0 <__alt_data_end+0xfffc7ee0>
   48388:	582b883a 	mov	r21,r11
   4838c:	d8002915 	stw	zero,164(sp)
   48390:	0038bd06 	br	46688 <__alt_data_end+0xfffc6688>
   48394:	d8802917 	ldw	r2,164(sp)
   48398:	103e071e 	bne	r2,zero,47bb8 <__alt_data_end+0xfffc7bb8>
   4839c:	dc002915 	stw	r16,164(sp)
   483a0:	003e0506 	br	47bb8 <__alt_data_end+0xfffc7bb8>
   483a4:	d9002917 	ldw	r4,164(sp)
   483a8:	20c00044 	addi	r3,r4,1
   483ac:	003e0f06 	br	47bec <__alt_data_end+0xfffc7bec>
   483b0:	01400184 	movi	r5,6
   483b4:	d9402915 	stw	r5,164(sp)
   483b8:	003dff06 	br	47bb8 <__alt_data_end+0xfffc7bb8>
   483bc:	d8802104 	addi	r2,sp,132
   483c0:	d8800315 	stw	r2,12(sp)
   483c4:	d8802504 	addi	r2,sp,148
   483c8:	d8800215 	stw	r2,8(sp)
   483cc:	d8802604 	addi	r2,sp,152
   483d0:	d8800115 	stw	r2,4(sp)
   483d4:	d8802917 	ldw	r2,164(sp)
   483d8:	d9403617 	ldw	r5,216(sp)
   483dc:	d9002c17 	ldw	r4,176(sp)
   483e0:	d8800015 	stw	r2,0(sp)
   483e4:	01c000c4 	movi	r7,3
   483e8:	980d883a 	mov	r6,r19
   483ec:	da003d15 	stw	r8,244(sp)
   483f0:	0048b240 	call	48b24 <_dtoa_r>
   483f4:	d8c02917 	ldw	r3,164(sp)
   483f8:	da003d17 	ldw	r8,244(sp)
   483fc:	1021883a 	mov	r16,r2
   48400:	10f9883a 	add	fp,r2,r3
   48404:	81000007 	ldb	r4,0(r16)
   48408:	00800c04 	movi	r2,48
   4840c:	20805e26 	beq	r4,r2,48588 <___vfprintf_internal_r+0x2088>
   48410:	d8c02617 	ldw	r3,152(sp)
   48414:	e0f9883a 	add	fp,fp,r3
   48418:	003e0a06 	br	47c44 <__alt_data_end+0xfffc7c44>
   4841c:	00c00b44 	movi	r3,45
   48420:	24e0003c 	xorhi	r19,r4,32768
   48424:	d8c02a05 	stb	r3,168(sp)
   48428:	003de906 	br	47bd0 <__alt_data_end+0xfffc7bd0>
   4842c:	d8c03217 	ldw	r3,200(sp)
   48430:	00c07a0e 	bge	zero,r3,4861c <___vfprintf_internal_r+0x211c>
   48434:	00800044 	movi	r2,1
   48438:	d9003317 	ldw	r4,204(sp)
   4843c:	1105883a 	add	r2,r2,r4
   48440:	d8802e15 	stw	r2,184(sp)
   48444:	10004e16 	blt	r2,zero,48580 <___vfprintf_internal_r+0x2080>
   48448:	044019c4 	movi	r17,103
   4844c:	003e2106 	br	47cd4 <__alt_data_end+0xfffc7cd4>
   48450:	d9002917 	ldw	r4,164(sp)
   48454:	d8802104 	addi	r2,sp,132
   48458:	d8800315 	stw	r2,12(sp)
   4845c:	d9000015 	stw	r4,0(sp)
   48460:	d8802504 	addi	r2,sp,148
   48464:	d9403617 	ldw	r5,216(sp)
   48468:	d9002c17 	ldw	r4,176(sp)
   4846c:	d8800215 	stw	r2,8(sp)
   48470:	d8802604 	addi	r2,sp,152
   48474:	d8800115 	stw	r2,4(sp)
   48478:	01c000c4 	movi	r7,3
   4847c:	980d883a 	mov	r6,r19
   48480:	da003d15 	stw	r8,244(sp)
   48484:	0048b240 	call	48b24 <_dtoa_r>
   48488:	d8c02917 	ldw	r3,164(sp)
   4848c:	da003d17 	ldw	r8,244(sp)
   48490:	1021883a 	mov	r16,r2
   48494:	00801184 	movi	r2,70
   48498:	80f9883a 	add	fp,r16,r3
   4849c:	88bfd926 	beq	r17,r2,48404 <__alt_data_end+0xfffc8404>
   484a0:	003de806 	br	47c44 <__alt_data_end+0xfffc7c44>
   484a4:	d9002917 	ldw	r4,164(sp)
   484a8:	00c04d0e 	bge	zero,r3,485e0 <___vfprintf_internal_r+0x20e0>
   484ac:	2000441e 	bne	r4,zero,485c0 <___vfprintf_internal_r+0x20c0>
   484b0:	9480004c 	andi	r18,r18,1
   484b4:	9000421e 	bne	r18,zero,485c0 <___vfprintf_internal_r+0x20c0>
   484b8:	1805883a 	mov	r2,r3
   484bc:	18007016 	blt	r3,zero,48680 <___vfprintf_internal_r+0x2180>
   484c0:	d8c03217 	ldw	r3,200(sp)
   484c4:	d8c02e15 	stw	r3,184(sp)
   484c8:	003e0206 	br	47cd4 <__alt_data_end+0xfffc7cd4>
   484cc:	df0022c4 	addi	fp,sp,139
   484d0:	dc002915 	stw	r16,164(sp)
   484d4:	4027883a 	mov	r19,r8
   484d8:	e021883a 	mov	r16,fp
   484dc:	b009883a 	mov	r4,r22
   484e0:	01400284 	movi	r5,10
   484e4:	00431740 	call	43174 <__modsi3>
   484e8:	10800c04 	addi	r2,r2,48
   484ec:	843fffc4 	addi	r16,r16,-1
   484f0:	b009883a 	mov	r4,r22
   484f4:	01400284 	movi	r5,10
   484f8:	80800005 	stb	r2,0(r16)
   484fc:	00430f00 	call	430f0 <__divsi3>
   48500:	102d883a 	mov	r22,r2
   48504:	00800244 	movi	r2,9
   48508:	15bff416 	blt	r2,r22,484dc <__alt_data_end+0xfffc84dc>
   4850c:	9811883a 	mov	r8,r19
   48510:	b0800c04 	addi	r2,r22,48
   48514:	8027883a 	mov	r19,r16
   48518:	997fffc4 	addi	r5,r19,-1
   4851c:	98bfffc5 	stb	r2,-1(r19)
   48520:	dc002917 	ldw	r16,164(sp)
   48524:	2f006a2e 	bgeu	r5,fp,486d0 <___vfprintf_internal_r+0x21d0>
   48528:	d9c02384 	addi	r7,sp,142
   4852c:	3ccfc83a 	sub	r7,r7,r19
   48530:	d9002344 	addi	r4,sp,141
   48534:	e1cf883a 	add	r7,fp,r7
   48538:	00000106 	br	48540 <___vfprintf_internal_r+0x2040>
   4853c:	28800003 	ldbu	r2,0(r5)
   48540:	20800005 	stb	r2,0(r4)
   48544:	21000044 	addi	r4,r4,1
   48548:	29400044 	addi	r5,r5,1
   4854c:	393ffb1e 	bne	r7,r4,4853c <__alt_data_end+0xfffc853c>
   48550:	d8802304 	addi	r2,sp,140
   48554:	14c5c83a 	sub	r2,r2,r19
   48558:	d8c02344 	addi	r3,sp,141
   4855c:	1885883a 	add	r2,r3,r2
   48560:	003f7006 	br	48324 <__alt_data_end+0xfffc8324>
   48564:	0005883a 	mov	r2,zero
   48568:	003f0f06 	br	481a8 <__alt_data_end+0xfffc81a8>
   4856c:	d8c03217 	ldw	r3,200(sp)
   48570:	18c00044 	addi	r3,r3,1
   48574:	d8c02e15 	stw	r3,184(sp)
   48578:	1805883a 	mov	r2,r3
   4857c:	183fb20e 	bge	r3,zero,48448 <__alt_data_end+0xfffc8448>
   48580:	0005883a 	mov	r2,zero
   48584:	003fb006 	br	48448 <__alt_data_end+0xfffc8448>
   48588:	d9003617 	ldw	r4,216(sp)
   4858c:	000d883a 	mov	r6,zero
   48590:	000f883a 	mov	r7,zero
   48594:	980b883a 	mov	r5,r19
   48598:	d8c03c15 	stw	r3,240(sp)
   4859c:	da003d15 	stw	r8,244(sp)
   485a0:	0044d380 	call	44d38 <__eqdf2>
   485a4:	d8c03c17 	ldw	r3,240(sp)
   485a8:	da003d17 	ldw	r8,244(sp)
   485ac:	103f9826 	beq	r2,zero,48410 <__alt_data_end+0xfffc8410>
   485b0:	00800044 	movi	r2,1
   485b4:	10c7c83a 	sub	r3,r2,r3
   485b8:	d8c02615 	stw	r3,152(sp)
   485bc:	003f9506 	br	48414 <__alt_data_end+0xfffc8414>
   485c0:	d9002917 	ldw	r4,164(sp)
   485c4:	d8c03217 	ldw	r3,200(sp)
   485c8:	20800044 	addi	r2,r4,1
   485cc:	1885883a 	add	r2,r3,r2
   485d0:	d8802e15 	stw	r2,184(sp)
   485d4:	103dbf0e 	bge	r2,zero,47cd4 <__alt_data_end+0xfffc7cd4>
   485d8:	0005883a 	mov	r2,zero
   485dc:	003dbd06 	br	47cd4 <__alt_data_end+0xfffc7cd4>
   485e0:	2000211e 	bne	r4,zero,48668 <___vfprintf_internal_r+0x2168>
   485e4:	9480004c 	andi	r18,r18,1
   485e8:	90001f1e 	bne	r18,zero,48668 <___vfprintf_internal_r+0x2168>
   485ec:	00800044 	movi	r2,1
   485f0:	d8802e15 	stw	r2,184(sp)
   485f4:	003db706 	br	47cd4 <__alt_data_end+0xfffc7cd4>
   485f8:	00800b44 	movi	r2,45
   485fc:	05adc83a 	sub	r22,zero,r22
   48600:	d8802305 	stb	r2,140(sp)
   48604:	003f3f06 	br	48304 <__alt_data_end+0xfffc8304>
   48608:	0005883a 	mov	r2,zero
   4860c:	003f5206 	br	48358 <__alt_data_end+0xfffc8358>
   48610:	90a4703a 	and	r18,r18,r2
   48614:	903f4e26 	beq	r18,zero,48350 <__alt_data_end+0xfffc8350>
   48618:	003f4a06 	br	48344 <__alt_data_end+0xfffc8344>
   4861c:	00800084 	movi	r2,2
   48620:	10c5c83a 	sub	r2,r2,r3
   48624:	003f8406 	br	48438 <__alt_data_end+0xfffc8438>
   48628:	d8802d17 	ldw	r2,180(sp)
   4862c:	d9002d17 	ldw	r4,180(sp)
   48630:	ac400043 	ldbu	r17,1(r21)
   48634:	10800017 	ldw	r2,0(r2)
   48638:	582b883a 	mov	r21,r11
   4863c:	d8802915 	stw	r2,164(sp)
   48640:	20800104 	addi	r2,r4,4
   48644:	d9002917 	ldw	r4,164(sp)
   48648:	d8802d15 	stw	r2,180(sp)
   4864c:	203e7a0e 	bge	r4,zero,48038 <__alt_data_end+0xfffc8038>
   48650:	8c403fcc 	andi	r17,r17,255
   48654:	00bfffc4 	movi	r2,-1
   48658:	8c40201c 	xori	r17,r17,128
   4865c:	d8802915 	stw	r2,164(sp)
   48660:	8c7fe004 	addi	r17,r17,-128
   48664:	00380706 	br	46684 <__alt_data_end+0xfffc6684>
   48668:	d8c02917 	ldw	r3,164(sp)
   4866c:	18c00084 	addi	r3,r3,2
   48670:	d8c02e15 	stw	r3,184(sp)
   48674:	1805883a 	mov	r2,r3
   48678:	183d960e 	bge	r3,zero,47cd4 <__alt_data_end+0xfffc7cd4>
   4867c:	003fd606 	br	485d8 <__alt_data_end+0xfffc85d8>
   48680:	0005883a 	mov	r2,zero
   48684:	003f8e06 	br	484c0 <__alt_data_end+0xfffc84c0>
   48688:	9080004c 	andi	r2,r18,1
   4868c:	103f811e 	bne	r2,zero,48494 <__alt_data_end+0xfffc8494>
   48690:	d8802117 	ldw	r2,132(sp)
   48694:	1405c83a 	sub	r2,r2,r16
   48698:	d8803315 	stw	r2,204(sp)
   4869c:	b47ef326 	beq	r22,r17,4826c <__alt_data_end+0xfffc826c>
   486a0:	dd802617 	ldw	r22,152(sp)
   486a4:	003f1106 	br	482ec <__alt_data_end+0xfffc82ec>
   486a8:	d9c02785 	stb	r7,158(sp)
   486ac:	00390406 	br	46ac0 <__alt_data_end+0xfffc6ac0>
   486b0:	d9c02785 	stb	r7,158(sp)
   486b4:	0038d306 	br	46a04 <__alt_data_end+0xfffc6a04>
   486b8:	d9c02785 	stb	r7,158(sp)
   486bc:	003a6106 	br	47044 <__alt_data_end+0xfffc7044>
   486c0:	d9c02785 	stb	r7,158(sp)
   486c4:	003af806 	br	472a8 <__alt_data_end+0xfffc72a8>
   486c8:	0005883a 	mov	r2,zero
   486cc:	003d7e06 	br	47cc8 <__alt_data_end+0xfffc7cc8>
   486d0:	d8802344 	addi	r2,sp,141
   486d4:	003f1306 	br	48324 <__alt_data_end+0xfffc8324>
   486d8:	d9c02785 	stb	r7,158(sp)
   486dc:	00392306 	br	46b6c <__alt_data_end+0xfffc6b6c>
   486e0:	d9c02785 	stb	r7,158(sp)
   486e4:	003aa906 	br	4718c <__alt_data_end+0xfffc718c>
   486e8:	d9c02785 	stb	r7,158(sp)
   486ec:	003a3d06 	br	46fe4 <__alt_data_end+0xfffc6fe4>
   486f0:	d9c02785 	stb	r7,158(sp)
   486f4:	003aca06 	br	47220 <__alt_data_end+0xfffc7220>

000486f8 <__vfprintf_internal>:
   486f8:	00800174 	movhi	r2,5
   486fc:	10960604 	addi	r2,r2,22552
   48700:	300f883a 	mov	r7,r6
   48704:	280d883a 	mov	r6,r5
   48708:	200b883a 	mov	r5,r4
   4870c:	11000017 	ldw	r4,0(r2)
   48710:	00465001 	jmpi	46500 <___vfprintf_internal_r>

00048714 <__sbprintf>:
   48714:	2880030b 	ldhu	r2,12(r5)
   48718:	2ac01917 	ldw	r11,100(r5)
   4871c:	2a80038b 	ldhu	r10,14(r5)
   48720:	2a400717 	ldw	r9,28(r5)
   48724:	2a000917 	ldw	r8,36(r5)
   48728:	defee204 	addi	sp,sp,-1144
   4872c:	00c10004 	movi	r3,1024
   48730:	dc011a15 	stw	r16,1128(sp)
   48734:	10bfff4c 	andi	r2,r2,65533
   48738:	2821883a 	mov	r16,r5
   4873c:	d8cb883a 	add	r5,sp,r3
   48740:	dc811c15 	stw	r18,1136(sp)
   48744:	dc411b15 	stw	r17,1132(sp)
   48748:	dfc11d15 	stw	ra,1140(sp)
   4874c:	2025883a 	mov	r18,r4
   48750:	d881030d 	sth	r2,1036(sp)
   48754:	dac11915 	stw	r11,1124(sp)
   48758:	da81038d 	sth	r10,1038(sp)
   4875c:	da410715 	stw	r9,1052(sp)
   48760:	da010915 	stw	r8,1060(sp)
   48764:	dec10015 	stw	sp,1024(sp)
   48768:	dec10415 	stw	sp,1040(sp)
   4876c:	d8c10215 	stw	r3,1032(sp)
   48770:	d8c10515 	stw	r3,1044(sp)
   48774:	d8010615 	stw	zero,1048(sp)
   48778:	00465000 	call	46500 <___vfprintf_internal_r>
   4877c:	1023883a 	mov	r17,r2
   48780:	10000416 	blt	r2,zero,48794 <__sbprintf+0x80>
   48784:	d9410004 	addi	r5,sp,1024
   48788:	9009883a 	mov	r4,r18
   4878c:	004a3c80 	call	4a3c8 <_fflush_r>
   48790:	10000d1e 	bne	r2,zero,487c8 <__sbprintf+0xb4>
   48794:	d881030b 	ldhu	r2,1036(sp)
   48798:	1080100c 	andi	r2,r2,64
   4879c:	10000326 	beq	r2,zero,487ac <__sbprintf+0x98>
   487a0:	8080030b 	ldhu	r2,12(r16)
   487a4:	10801014 	ori	r2,r2,64
   487a8:	8080030d 	sth	r2,12(r16)
   487ac:	8805883a 	mov	r2,r17
   487b0:	dfc11d17 	ldw	ra,1140(sp)
   487b4:	dc811c17 	ldw	r18,1136(sp)
   487b8:	dc411b17 	ldw	r17,1132(sp)
   487bc:	dc011a17 	ldw	r16,1128(sp)
   487c0:	dec11e04 	addi	sp,sp,1144
   487c4:	f800283a 	ret
   487c8:	047fffc4 	movi	r17,-1
   487cc:	003ff106 	br	48794 <__alt_data_end+0xfffc8794>

000487d0 <__swsetup_r>:
   487d0:	00800174 	movhi	r2,5
   487d4:	defffd04 	addi	sp,sp,-12
   487d8:	10960604 	addi	r2,r2,22552
   487dc:	dc400115 	stw	r17,4(sp)
   487e0:	2023883a 	mov	r17,r4
   487e4:	11000017 	ldw	r4,0(r2)
   487e8:	dc000015 	stw	r16,0(sp)
   487ec:	dfc00215 	stw	ra,8(sp)
   487f0:	2821883a 	mov	r16,r5
   487f4:	20000226 	beq	r4,zero,48800 <__swsetup_r+0x30>
   487f8:	20800e17 	ldw	r2,56(r4)
   487fc:	10003126 	beq	r2,zero,488c4 <__swsetup_r+0xf4>
   48800:	8080030b 	ldhu	r2,12(r16)
   48804:	10c0020c 	andi	r3,r2,8
   48808:	1009883a 	mov	r4,r2
   4880c:	18000f26 	beq	r3,zero,4884c <__swsetup_r+0x7c>
   48810:	80c00417 	ldw	r3,16(r16)
   48814:	18001526 	beq	r3,zero,4886c <__swsetup_r+0x9c>
   48818:	1100004c 	andi	r4,r2,1
   4881c:	20001c1e 	bne	r4,zero,48890 <__swsetup_r+0xc0>
   48820:	1080008c 	andi	r2,r2,2
   48824:	1000291e 	bne	r2,zero,488cc <__swsetup_r+0xfc>
   48828:	80800517 	ldw	r2,20(r16)
   4882c:	80800215 	stw	r2,8(r16)
   48830:	18001c26 	beq	r3,zero,488a4 <__swsetup_r+0xd4>
   48834:	0005883a 	mov	r2,zero
   48838:	dfc00217 	ldw	ra,8(sp)
   4883c:	dc400117 	ldw	r17,4(sp)
   48840:	dc000017 	ldw	r16,0(sp)
   48844:	dec00304 	addi	sp,sp,12
   48848:	f800283a 	ret
   4884c:	2080040c 	andi	r2,r4,16
   48850:	10002e26 	beq	r2,zero,4890c <__swsetup_r+0x13c>
   48854:	2080010c 	andi	r2,r4,4
   48858:	10001e1e 	bne	r2,zero,488d4 <__swsetup_r+0x104>
   4885c:	80c00417 	ldw	r3,16(r16)
   48860:	20800214 	ori	r2,r4,8
   48864:	8080030d 	sth	r2,12(r16)
   48868:	183feb1e 	bne	r3,zero,48818 <__alt_data_end+0xfffc8818>
   4886c:	1100a00c 	andi	r4,r2,640
   48870:	01408004 	movi	r5,512
   48874:	217fe826 	beq	r4,r5,48818 <__alt_data_end+0xfffc8818>
   48878:	800b883a 	mov	r5,r16
   4887c:	8809883a 	mov	r4,r17
   48880:	004b3480 	call	4b348 <__smakebuf_r>
   48884:	8080030b 	ldhu	r2,12(r16)
   48888:	80c00417 	ldw	r3,16(r16)
   4888c:	003fe206 	br	48818 <__alt_data_end+0xfffc8818>
   48890:	80800517 	ldw	r2,20(r16)
   48894:	80000215 	stw	zero,8(r16)
   48898:	0085c83a 	sub	r2,zero,r2
   4889c:	80800615 	stw	r2,24(r16)
   488a0:	183fe41e 	bne	r3,zero,48834 <__alt_data_end+0xfffc8834>
   488a4:	80c0030b 	ldhu	r3,12(r16)
   488a8:	0005883a 	mov	r2,zero
   488ac:	1900200c 	andi	r4,r3,128
   488b0:	203fe126 	beq	r4,zero,48838 <__alt_data_end+0xfffc8838>
   488b4:	18c01014 	ori	r3,r3,64
   488b8:	80c0030d 	sth	r3,12(r16)
   488bc:	00bfffc4 	movi	r2,-1
   488c0:	003fdd06 	br	48838 <__alt_data_end+0xfffc8838>
   488c4:	004a7a40 	call	4a7a4 <__sinit>
   488c8:	003fcd06 	br	48800 <__alt_data_end+0xfffc8800>
   488cc:	0005883a 	mov	r2,zero
   488d0:	003fd606 	br	4882c <__alt_data_end+0xfffc882c>
   488d4:	81400c17 	ldw	r5,48(r16)
   488d8:	28000626 	beq	r5,zero,488f4 <__swsetup_r+0x124>
   488dc:	80801004 	addi	r2,r16,64
   488e0:	28800326 	beq	r5,r2,488f0 <__swsetup_r+0x120>
   488e4:	8809883a 	mov	r4,r17
   488e8:	004a9180 	call	4a918 <_free_r>
   488ec:	8100030b 	ldhu	r4,12(r16)
   488f0:	80000c15 	stw	zero,48(r16)
   488f4:	80c00417 	ldw	r3,16(r16)
   488f8:	00bff6c4 	movi	r2,-37
   488fc:	1108703a 	and	r4,r2,r4
   48900:	80000115 	stw	zero,4(r16)
   48904:	80c00015 	stw	r3,0(r16)
   48908:	003fd506 	br	48860 <__alt_data_end+0xfffc8860>
   4890c:	00800244 	movi	r2,9
   48910:	88800015 	stw	r2,0(r17)
   48914:	20801014 	ori	r2,r4,64
   48918:	8080030d 	sth	r2,12(r16)
   4891c:	00bfffc4 	movi	r2,-1
   48920:	003fc506 	br	48838 <__alt_data_end+0xfffc8838>

00048924 <quorem>:
   48924:	defff704 	addi	sp,sp,-36
   48928:	dc800215 	stw	r18,8(sp)
   4892c:	20800417 	ldw	r2,16(r4)
   48930:	2c800417 	ldw	r18,16(r5)
   48934:	dfc00815 	stw	ra,32(sp)
   48938:	ddc00715 	stw	r23,28(sp)
   4893c:	dd800615 	stw	r22,24(sp)
   48940:	dd400515 	stw	r21,20(sp)
   48944:	dd000415 	stw	r20,16(sp)
   48948:	dcc00315 	stw	r19,12(sp)
   4894c:	dc400115 	stw	r17,4(sp)
   48950:	dc000015 	stw	r16,0(sp)
   48954:	14807116 	blt	r2,r18,48b1c <quorem+0x1f8>
   48958:	94bfffc4 	addi	r18,r18,-1
   4895c:	94ad883a 	add	r22,r18,r18
   48960:	b5ad883a 	add	r22,r22,r22
   48964:	2c400504 	addi	r17,r5,20
   48968:	8da9883a 	add	r20,r17,r22
   4896c:	25400504 	addi	r21,r4,20
   48970:	282f883a 	mov	r23,r5
   48974:	adad883a 	add	r22,r21,r22
   48978:	a1400017 	ldw	r5,0(r20)
   4897c:	2021883a 	mov	r16,r4
   48980:	b1000017 	ldw	r4,0(r22)
   48984:	29400044 	addi	r5,r5,1
   48988:	00431e80 	call	431e8 <__udivsi3>
   4898c:	1027883a 	mov	r19,r2
   48990:	10002c26 	beq	r2,zero,48a44 <quorem+0x120>
   48994:	a813883a 	mov	r9,r21
   48998:	880b883a 	mov	r5,r17
   4899c:	0009883a 	mov	r4,zero
   489a0:	000d883a 	mov	r6,zero
   489a4:	2a000017 	ldw	r8,0(r5)
   489a8:	49c00017 	ldw	r7,0(r9)
   489ac:	29400104 	addi	r5,r5,4
   489b0:	40bfffcc 	andi	r2,r8,65535
   489b4:	14c5383a 	mul	r2,r2,r19
   489b8:	4010d43a 	srli	r8,r8,16
   489bc:	38ffffcc 	andi	r3,r7,65535
   489c0:	1105883a 	add	r2,r2,r4
   489c4:	1008d43a 	srli	r4,r2,16
   489c8:	44d1383a 	mul	r8,r8,r19
   489cc:	198d883a 	add	r6,r3,r6
   489d0:	10ffffcc 	andi	r3,r2,65535
   489d4:	30c7c83a 	sub	r3,r6,r3
   489d8:	380ed43a 	srli	r7,r7,16
   489dc:	4105883a 	add	r2,r8,r4
   489e0:	180dd43a 	srai	r6,r3,16
   489e4:	113fffcc 	andi	r4,r2,65535
   489e8:	390fc83a 	sub	r7,r7,r4
   489ec:	398d883a 	add	r6,r7,r6
   489f0:	300e943a 	slli	r7,r6,16
   489f4:	18ffffcc 	andi	r3,r3,65535
   489f8:	1008d43a 	srli	r4,r2,16
   489fc:	38ceb03a 	or	r7,r7,r3
   48a00:	49c00015 	stw	r7,0(r9)
   48a04:	300dd43a 	srai	r6,r6,16
   48a08:	4a400104 	addi	r9,r9,4
   48a0c:	a17fe52e 	bgeu	r20,r5,489a4 <__alt_data_end+0xfffc89a4>
   48a10:	b0800017 	ldw	r2,0(r22)
   48a14:	10000b1e 	bne	r2,zero,48a44 <quorem+0x120>
   48a18:	b0bfff04 	addi	r2,r22,-4
   48a1c:	a880082e 	bgeu	r21,r2,48a40 <quorem+0x11c>
   48a20:	b0ffff17 	ldw	r3,-4(r22)
   48a24:	18000326 	beq	r3,zero,48a34 <quorem+0x110>
   48a28:	00000506 	br	48a40 <quorem+0x11c>
   48a2c:	10c00017 	ldw	r3,0(r2)
   48a30:	1800031e 	bne	r3,zero,48a40 <quorem+0x11c>
   48a34:	10bfff04 	addi	r2,r2,-4
   48a38:	94bfffc4 	addi	r18,r18,-1
   48a3c:	a8bffb36 	bltu	r21,r2,48a2c <__alt_data_end+0xfffc8a2c>
   48a40:	84800415 	stw	r18,16(r16)
   48a44:	b80b883a 	mov	r5,r23
   48a48:	8009883a 	mov	r4,r16
   48a4c:	004ca880 	call	4ca88 <__mcmp>
   48a50:	10002616 	blt	r2,zero,48aec <quorem+0x1c8>
   48a54:	9cc00044 	addi	r19,r19,1
   48a58:	a805883a 	mov	r2,r21
   48a5c:	000b883a 	mov	r5,zero
   48a60:	11000017 	ldw	r4,0(r2)
   48a64:	89800017 	ldw	r6,0(r17)
   48a68:	10800104 	addi	r2,r2,4
   48a6c:	20ffffcc 	andi	r3,r4,65535
   48a70:	194b883a 	add	r5,r3,r5
   48a74:	30ffffcc 	andi	r3,r6,65535
   48a78:	28c7c83a 	sub	r3,r5,r3
   48a7c:	300cd43a 	srli	r6,r6,16
   48a80:	2008d43a 	srli	r4,r4,16
   48a84:	180bd43a 	srai	r5,r3,16
   48a88:	18ffffcc 	andi	r3,r3,65535
   48a8c:	2189c83a 	sub	r4,r4,r6
   48a90:	2149883a 	add	r4,r4,r5
   48a94:	200c943a 	slli	r6,r4,16
   48a98:	8c400104 	addi	r17,r17,4
   48a9c:	200bd43a 	srai	r5,r4,16
   48aa0:	30c6b03a 	or	r3,r6,r3
   48aa4:	10ffff15 	stw	r3,-4(r2)
   48aa8:	a47fed2e 	bgeu	r20,r17,48a60 <__alt_data_end+0xfffc8a60>
   48aac:	9485883a 	add	r2,r18,r18
   48ab0:	1085883a 	add	r2,r2,r2
   48ab4:	a887883a 	add	r3,r21,r2
   48ab8:	18800017 	ldw	r2,0(r3)
   48abc:	10000b1e 	bne	r2,zero,48aec <quorem+0x1c8>
   48ac0:	18bfff04 	addi	r2,r3,-4
   48ac4:	a880082e 	bgeu	r21,r2,48ae8 <quorem+0x1c4>
   48ac8:	18ffff17 	ldw	r3,-4(r3)
   48acc:	18000326 	beq	r3,zero,48adc <quorem+0x1b8>
   48ad0:	00000506 	br	48ae8 <quorem+0x1c4>
   48ad4:	10c00017 	ldw	r3,0(r2)
   48ad8:	1800031e 	bne	r3,zero,48ae8 <quorem+0x1c4>
   48adc:	10bfff04 	addi	r2,r2,-4
   48ae0:	94bfffc4 	addi	r18,r18,-1
   48ae4:	a8bffb36 	bltu	r21,r2,48ad4 <__alt_data_end+0xfffc8ad4>
   48ae8:	84800415 	stw	r18,16(r16)
   48aec:	9805883a 	mov	r2,r19
   48af0:	dfc00817 	ldw	ra,32(sp)
   48af4:	ddc00717 	ldw	r23,28(sp)
   48af8:	dd800617 	ldw	r22,24(sp)
   48afc:	dd400517 	ldw	r21,20(sp)
   48b00:	dd000417 	ldw	r20,16(sp)
   48b04:	dcc00317 	ldw	r19,12(sp)
   48b08:	dc800217 	ldw	r18,8(sp)
   48b0c:	dc400117 	ldw	r17,4(sp)
   48b10:	dc000017 	ldw	r16,0(sp)
   48b14:	dec00904 	addi	sp,sp,36
   48b18:	f800283a 	ret
   48b1c:	0005883a 	mov	r2,zero
   48b20:	003ff306 	br	48af0 <__alt_data_end+0xfffc8af0>

00048b24 <_dtoa_r>:
   48b24:	20801017 	ldw	r2,64(r4)
   48b28:	deffde04 	addi	sp,sp,-136
   48b2c:	df002015 	stw	fp,128(sp)
   48b30:	dcc01b15 	stw	r19,108(sp)
   48b34:	dc801a15 	stw	r18,104(sp)
   48b38:	dc401915 	stw	r17,100(sp)
   48b3c:	dc001815 	stw	r16,96(sp)
   48b40:	dfc02115 	stw	ra,132(sp)
   48b44:	ddc01f15 	stw	r23,124(sp)
   48b48:	dd801e15 	stw	r22,120(sp)
   48b4c:	dd401d15 	stw	r21,116(sp)
   48b50:	dd001c15 	stw	r20,112(sp)
   48b54:	d9c00315 	stw	r7,12(sp)
   48b58:	2039883a 	mov	fp,r4
   48b5c:	3023883a 	mov	r17,r6
   48b60:	2825883a 	mov	r18,r5
   48b64:	dc002417 	ldw	r16,144(sp)
   48b68:	3027883a 	mov	r19,r6
   48b6c:	10000826 	beq	r2,zero,48b90 <_dtoa_r+0x6c>
   48b70:	21801117 	ldw	r6,68(r4)
   48b74:	00c00044 	movi	r3,1
   48b78:	100b883a 	mov	r5,r2
   48b7c:	1986983a 	sll	r3,r3,r6
   48b80:	11800115 	stw	r6,4(r2)
   48b84:	10c00215 	stw	r3,8(r2)
   48b88:	004c2680 	call	4c268 <_Bfree>
   48b8c:	e0001015 	stw	zero,64(fp)
   48b90:	88002e16 	blt	r17,zero,48c4c <_dtoa_r+0x128>
   48b94:	80000015 	stw	zero,0(r16)
   48b98:	889ffc2c 	andhi	r2,r17,32752
   48b9c:	00dffc34 	movhi	r3,32752
   48ba0:	10c01c26 	beq	r2,r3,48c14 <_dtoa_r+0xf0>
   48ba4:	000d883a 	mov	r6,zero
   48ba8:	000f883a 	mov	r7,zero
   48bac:	9009883a 	mov	r4,r18
   48bb0:	980b883a 	mov	r5,r19
   48bb4:	0044d380 	call	44d38 <__eqdf2>
   48bb8:	10002b1e 	bne	r2,zero,48c68 <_dtoa_r+0x144>
   48bbc:	d9c02317 	ldw	r7,140(sp)
   48bc0:	00800044 	movi	r2,1
   48bc4:	38800015 	stw	r2,0(r7)
   48bc8:	d8802517 	ldw	r2,148(sp)
   48bcc:	10019e26 	beq	r2,zero,49248 <_dtoa_r+0x724>
   48bd0:	d8c02517 	ldw	r3,148(sp)
   48bd4:	00800174 	movhi	r2,5
   48bd8:	108eeb44 	addi	r2,r2,15277
   48bdc:	18800015 	stw	r2,0(r3)
   48be0:	10bfffc4 	addi	r2,r2,-1
   48be4:	dfc02117 	ldw	ra,132(sp)
   48be8:	df002017 	ldw	fp,128(sp)
   48bec:	ddc01f17 	ldw	r23,124(sp)
   48bf0:	dd801e17 	ldw	r22,120(sp)
   48bf4:	dd401d17 	ldw	r21,116(sp)
   48bf8:	dd001c17 	ldw	r20,112(sp)
   48bfc:	dcc01b17 	ldw	r19,108(sp)
   48c00:	dc801a17 	ldw	r18,104(sp)
   48c04:	dc401917 	ldw	r17,100(sp)
   48c08:	dc001817 	ldw	r16,96(sp)
   48c0c:	dec02204 	addi	sp,sp,136
   48c10:	f800283a 	ret
   48c14:	d8c02317 	ldw	r3,140(sp)
   48c18:	0089c3c4 	movi	r2,9999
   48c1c:	18800015 	stw	r2,0(r3)
   48c20:	90017726 	beq	r18,zero,49200 <_dtoa_r+0x6dc>
   48c24:	00800174 	movhi	r2,5
   48c28:	108ef704 	addi	r2,r2,15324
   48c2c:	d9002517 	ldw	r4,148(sp)
   48c30:	203fec26 	beq	r4,zero,48be4 <__alt_data_end+0xfffc8be4>
   48c34:	10c000c7 	ldb	r3,3(r2)
   48c38:	1801781e 	bne	r3,zero,4921c <_dtoa_r+0x6f8>
   48c3c:	10c000c4 	addi	r3,r2,3
   48c40:	d9802517 	ldw	r6,148(sp)
   48c44:	30c00015 	stw	r3,0(r6)
   48c48:	003fe606 	br	48be4 <__alt_data_end+0xfffc8be4>
   48c4c:	04e00034 	movhi	r19,32768
   48c50:	9cffffc4 	addi	r19,r19,-1
   48c54:	00800044 	movi	r2,1
   48c58:	8ce6703a 	and	r19,r17,r19
   48c5c:	80800015 	stw	r2,0(r16)
   48c60:	9823883a 	mov	r17,r19
   48c64:	003fcc06 	br	48b98 <__alt_data_end+0xfffc8b98>
   48c68:	d8800204 	addi	r2,sp,8
   48c6c:	d8800015 	stw	r2,0(sp)
   48c70:	d9c00104 	addi	r7,sp,4
   48c74:	900b883a 	mov	r5,r18
   48c78:	980d883a 	mov	r6,r19
   48c7c:	e009883a 	mov	r4,fp
   48c80:	8820d53a 	srli	r16,r17,20
   48c84:	004ce540 	call	4ce54 <__d2b>
   48c88:	d8800915 	stw	r2,36(sp)
   48c8c:	8001651e 	bne	r16,zero,49224 <_dtoa_r+0x700>
   48c90:	dd800217 	ldw	r22,8(sp)
   48c94:	dc000117 	ldw	r16,4(sp)
   48c98:	00800804 	movi	r2,32
   48c9c:	b421883a 	add	r16,r22,r16
   48ca0:	80c10c84 	addi	r3,r16,1074
   48ca4:	10c2d10e 	bge	r2,r3,497ec <_dtoa_r+0xcc8>
   48ca8:	00801004 	movi	r2,64
   48cac:	81010484 	addi	r4,r16,1042
   48cb0:	10c7c83a 	sub	r3,r2,r3
   48cb4:	9108d83a 	srl	r4,r18,r4
   48cb8:	88e2983a 	sll	r17,r17,r3
   48cbc:	2448b03a 	or	r4,r4,r17
   48cc0:	0050e080 	call	50e08 <__floatunsidf>
   48cc4:	017f8434 	movhi	r5,65040
   48cc8:	01800044 	movi	r6,1
   48ccc:	1009883a 	mov	r4,r2
   48cd0:	194b883a 	add	r5,r3,r5
   48cd4:	843fffc4 	addi	r16,r16,-1
   48cd8:	d9801115 	stw	r6,68(sp)
   48cdc:	000d883a 	mov	r6,zero
   48ce0:	01cffe34 	movhi	r7,16376
   48ce4:	00455b40 	call	455b4 <__subdf3>
   48ce8:	0198dbf4 	movhi	r6,25455
   48cec:	01cff4f4 	movhi	r7,16339
   48cf0:	3190d844 	addi	r6,r6,17249
   48cf4:	39e1e9c4 	addi	r7,r7,-30809
   48cf8:	1009883a 	mov	r4,r2
   48cfc:	180b883a 	mov	r5,r3
   48d00:	0044e9c0 	call	44e9c <__muldf3>
   48d04:	01a2d874 	movhi	r6,35681
   48d08:	01cff1f4 	movhi	r7,16327
   48d0c:	31b22cc4 	addi	r6,r6,-14157
   48d10:	39e28a04 	addi	r7,r7,-30168
   48d14:	180b883a 	mov	r5,r3
   48d18:	1009883a 	mov	r4,r2
   48d1c:	004448c0 	call	4448c <__adddf3>
   48d20:	8009883a 	mov	r4,r16
   48d24:	1029883a 	mov	r20,r2
   48d28:	1823883a 	mov	r17,r3
   48d2c:	0045f300 	call	45f30 <__floatsidf>
   48d30:	019427f4 	movhi	r6,20639
   48d34:	01cff4f4 	movhi	r7,16339
   48d38:	319e7ec4 	addi	r6,r6,31227
   48d3c:	39d104c4 	addi	r7,r7,17427
   48d40:	1009883a 	mov	r4,r2
   48d44:	180b883a 	mov	r5,r3
   48d48:	0044e9c0 	call	44e9c <__muldf3>
   48d4c:	100d883a 	mov	r6,r2
   48d50:	180f883a 	mov	r7,r3
   48d54:	a009883a 	mov	r4,r20
   48d58:	880b883a 	mov	r5,r17
   48d5c:	004448c0 	call	4448c <__adddf3>
   48d60:	1009883a 	mov	r4,r2
   48d64:	180b883a 	mov	r5,r3
   48d68:	1029883a 	mov	r20,r2
   48d6c:	1823883a 	mov	r17,r3
   48d70:	0045eb00 	call	45eb0 <__fixdfsi>
   48d74:	000d883a 	mov	r6,zero
   48d78:	000f883a 	mov	r7,zero
   48d7c:	a009883a 	mov	r4,r20
   48d80:	880b883a 	mov	r5,r17
   48d84:	d8800515 	stw	r2,20(sp)
   48d88:	0050d140 	call	50d14 <__ledf2>
   48d8c:	10028716 	blt	r2,zero,497ac <_dtoa_r+0xc88>
   48d90:	d8c00517 	ldw	r3,20(sp)
   48d94:	00800584 	movi	r2,22
   48d98:	10c27536 	bltu	r2,r3,49770 <_dtoa_r+0xc4c>
   48d9c:	180490fa 	slli	r2,r3,3
   48da0:	00c00174 	movhi	r3,5
   48da4:	18cf1304 	addi	r3,r3,15436
   48da8:	1885883a 	add	r2,r3,r2
   48dac:	11000017 	ldw	r4,0(r2)
   48db0:	11400117 	ldw	r5,4(r2)
   48db4:	900d883a 	mov	r6,r18
   48db8:	980f883a 	mov	r7,r19
   48dbc:	0044dc00 	call	44dc0 <__gedf2>
   48dc0:	00828d0e 	bge	zero,r2,497f8 <_dtoa_r+0xcd4>
   48dc4:	d9000517 	ldw	r4,20(sp)
   48dc8:	d8000e15 	stw	zero,56(sp)
   48dcc:	213fffc4 	addi	r4,r4,-1
   48dd0:	d9000515 	stw	r4,20(sp)
   48dd4:	b42dc83a 	sub	r22,r22,r16
   48dd8:	b5bfffc4 	addi	r22,r22,-1
   48ddc:	b0026f16 	blt	r22,zero,4979c <_dtoa_r+0xc78>
   48de0:	d8000815 	stw	zero,32(sp)
   48de4:	d9c00517 	ldw	r7,20(sp)
   48de8:	38026416 	blt	r7,zero,4977c <_dtoa_r+0xc58>
   48dec:	b1ed883a 	add	r22,r22,r7
   48df0:	d9c00d15 	stw	r7,52(sp)
   48df4:	d8000a15 	stw	zero,40(sp)
   48df8:	d9800317 	ldw	r6,12(sp)
   48dfc:	00800244 	movi	r2,9
   48e00:	11811436 	bltu	r2,r6,49254 <_dtoa_r+0x730>
   48e04:	00800144 	movi	r2,5
   48e08:	1184e10e 	bge	r2,r6,4a190 <_dtoa_r+0x166c>
   48e0c:	31bfff04 	addi	r6,r6,-4
   48e10:	d9800315 	stw	r6,12(sp)
   48e14:	0023883a 	mov	r17,zero
   48e18:	d9800317 	ldw	r6,12(sp)
   48e1c:	008000c4 	movi	r2,3
   48e20:	30836726 	beq	r6,r2,49bc0 <_dtoa_r+0x109c>
   48e24:	1183410e 	bge	r2,r6,49b2c <_dtoa_r+0x1008>
   48e28:	d9c00317 	ldw	r7,12(sp)
   48e2c:	00800104 	movi	r2,4
   48e30:	38827c26 	beq	r7,r2,49824 <_dtoa_r+0xd00>
   48e34:	00800144 	movi	r2,5
   48e38:	3884c41e 	bne	r7,r2,4a14c <_dtoa_r+0x1628>
   48e3c:	00800044 	movi	r2,1
   48e40:	d8800b15 	stw	r2,44(sp)
   48e44:	d8c00517 	ldw	r3,20(sp)
   48e48:	d9002217 	ldw	r4,136(sp)
   48e4c:	1907883a 	add	r3,r3,r4
   48e50:	19800044 	addi	r6,r3,1
   48e54:	d8c00c15 	stw	r3,48(sp)
   48e58:	d9800615 	stw	r6,24(sp)
   48e5c:	0183a40e 	bge	zero,r6,49cf0 <_dtoa_r+0x11cc>
   48e60:	d9800617 	ldw	r6,24(sp)
   48e64:	3021883a 	mov	r16,r6
   48e68:	e0001115 	stw	zero,68(fp)
   48e6c:	008005c4 	movi	r2,23
   48e70:	1184c92e 	bgeu	r2,r6,4a198 <_dtoa_r+0x1674>
   48e74:	00c00044 	movi	r3,1
   48e78:	00800104 	movi	r2,4
   48e7c:	1085883a 	add	r2,r2,r2
   48e80:	11000504 	addi	r4,r2,20
   48e84:	180b883a 	mov	r5,r3
   48e88:	18c00044 	addi	r3,r3,1
   48e8c:	313ffb2e 	bgeu	r6,r4,48e7c <__alt_data_end+0xfffc8e7c>
   48e90:	e1401115 	stw	r5,68(fp)
   48e94:	e009883a 	mov	r4,fp
   48e98:	004c1c00 	call	4c1c0 <_Balloc>
   48e9c:	d8800715 	stw	r2,28(sp)
   48ea0:	e0801015 	stw	r2,64(fp)
   48ea4:	00800384 	movi	r2,14
   48ea8:	1400f736 	bltu	r2,r16,49288 <_dtoa_r+0x764>
   48eac:	8800f626 	beq	r17,zero,49288 <_dtoa_r+0x764>
   48eb0:	d9c00517 	ldw	r7,20(sp)
   48eb4:	01c39a0e 	bge	zero,r7,49d20 <_dtoa_r+0x11fc>
   48eb8:	388003cc 	andi	r2,r7,15
   48ebc:	100490fa 	slli	r2,r2,3
   48ec0:	382bd13a 	srai	r21,r7,4
   48ec4:	00c00174 	movhi	r3,5
   48ec8:	18cf1304 	addi	r3,r3,15436
   48ecc:	1885883a 	add	r2,r3,r2
   48ed0:	a8c0040c 	andi	r3,r21,16
   48ed4:	12400017 	ldw	r9,0(r2)
   48ed8:	12000117 	ldw	r8,4(r2)
   48edc:	18037926 	beq	r3,zero,49cc4 <_dtoa_r+0x11a0>
   48ee0:	00800174 	movhi	r2,5
   48ee4:	108f0904 	addi	r2,r2,15396
   48ee8:	11800817 	ldw	r6,32(r2)
   48eec:	11c00917 	ldw	r7,36(r2)
   48ef0:	9009883a 	mov	r4,r18
   48ef4:	980b883a 	mov	r5,r19
   48ef8:	da001715 	stw	r8,92(sp)
   48efc:	da401615 	stw	r9,88(sp)
   48f00:	005042c0 	call	5042c <__divdf3>
   48f04:	da001717 	ldw	r8,92(sp)
   48f08:	da401617 	ldw	r9,88(sp)
   48f0c:	ad4003cc 	andi	r21,r21,15
   48f10:	040000c4 	movi	r16,3
   48f14:	1023883a 	mov	r17,r2
   48f18:	1829883a 	mov	r20,r3
   48f1c:	a8001126 	beq	r21,zero,48f64 <_dtoa_r+0x440>
   48f20:	05c00174 	movhi	r23,5
   48f24:	bdcf0904 	addi	r23,r23,15396
   48f28:	4805883a 	mov	r2,r9
   48f2c:	4007883a 	mov	r3,r8
   48f30:	a980004c 	andi	r6,r21,1
   48f34:	1009883a 	mov	r4,r2
   48f38:	a82bd07a 	srai	r21,r21,1
   48f3c:	180b883a 	mov	r5,r3
   48f40:	30000426 	beq	r6,zero,48f54 <_dtoa_r+0x430>
   48f44:	b9800017 	ldw	r6,0(r23)
   48f48:	b9c00117 	ldw	r7,4(r23)
   48f4c:	84000044 	addi	r16,r16,1
   48f50:	0044e9c0 	call	44e9c <__muldf3>
   48f54:	bdc00204 	addi	r23,r23,8
   48f58:	a83ff51e 	bne	r21,zero,48f30 <__alt_data_end+0xfffc8f30>
   48f5c:	1013883a 	mov	r9,r2
   48f60:	1811883a 	mov	r8,r3
   48f64:	480d883a 	mov	r6,r9
   48f68:	400f883a 	mov	r7,r8
   48f6c:	8809883a 	mov	r4,r17
   48f70:	a00b883a 	mov	r5,r20
   48f74:	005042c0 	call	5042c <__divdf3>
   48f78:	d8800f15 	stw	r2,60(sp)
   48f7c:	d8c01015 	stw	r3,64(sp)
   48f80:	d8c00e17 	ldw	r3,56(sp)
   48f84:	18000626 	beq	r3,zero,48fa0 <_dtoa_r+0x47c>
   48f88:	d9000f17 	ldw	r4,60(sp)
   48f8c:	d9401017 	ldw	r5,64(sp)
   48f90:	000d883a 	mov	r6,zero
   48f94:	01cffc34 	movhi	r7,16368
   48f98:	0050d140 	call	50d14 <__ledf2>
   48f9c:	10040b16 	blt	r2,zero,49fcc <_dtoa_r+0x14a8>
   48fa0:	8009883a 	mov	r4,r16
   48fa4:	0045f300 	call	45f30 <__floatsidf>
   48fa8:	d9800f17 	ldw	r6,60(sp)
   48fac:	d9c01017 	ldw	r7,64(sp)
   48fb0:	1009883a 	mov	r4,r2
   48fb4:	180b883a 	mov	r5,r3
   48fb8:	0044e9c0 	call	44e9c <__muldf3>
   48fbc:	000d883a 	mov	r6,zero
   48fc0:	01d00734 	movhi	r7,16412
   48fc4:	1009883a 	mov	r4,r2
   48fc8:	180b883a 	mov	r5,r3
   48fcc:	004448c0 	call	4448c <__adddf3>
   48fd0:	1021883a 	mov	r16,r2
   48fd4:	d8800617 	ldw	r2,24(sp)
   48fd8:	047f3034 	movhi	r17,64704
   48fdc:	1c63883a 	add	r17,r3,r17
   48fe0:	10031826 	beq	r2,zero,49c44 <_dtoa_r+0x1120>
   48fe4:	d8c00517 	ldw	r3,20(sp)
   48fe8:	db000617 	ldw	r12,24(sp)
   48fec:	d8c01315 	stw	r3,76(sp)
   48ff0:	d9000b17 	ldw	r4,44(sp)
   48ff4:	20038f26 	beq	r4,zero,49e34 <_dtoa_r+0x1310>
   48ff8:	60bfffc4 	addi	r2,r12,-1
   48ffc:	100490fa 	slli	r2,r2,3
   49000:	00c00174 	movhi	r3,5
   49004:	18cf1304 	addi	r3,r3,15436
   49008:	1885883a 	add	r2,r3,r2
   4900c:	11800017 	ldw	r6,0(r2)
   49010:	11c00117 	ldw	r7,4(r2)
   49014:	d8800717 	ldw	r2,28(sp)
   49018:	0009883a 	mov	r4,zero
   4901c:	014ff834 	movhi	r5,16352
   49020:	db001615 	stw	r12,88(sp)
   49024:	15c00044 	addi	r23,r2,1
   49028:	005042c0 	call	5042c <__divdf3>
   4902c:	800d883a 	mov	r6,r16
   49030:	880f883a 	mov	r7,r17
   49034:	1009883a 	mov	r4,r2
   49038:	180b883a 	mov	r5,r3
   4903c:	00455b40 	call	455b4 <__subdf3>
   49040:	d9401017 	ldw	r5,64(sp)
   49044:	d9000f17 	ldw	r4,60(sp)
   49048:	102b883a 	mov	r21,r2
   4904c:	d8c01215 	stw	r3,72(sp)
   49050:	0045eb00 	call	45eb0 <__fixdfsi>
   49054:	1009883a 	mov	r4,r2
   49058:	1029883a 	mov	r20,r2
   4905c:	0045f300 	call	45f30 <__floatsidf>
   49060:	d9000f17 	ldw	r4,60(sp)
   49064:	d9401017 	ldw	r5,64(sp)
   49068:	100d883a 	mov	r6,r2
   4906c:	180f883a 	mov	r7,r3
   49070:	00455b40 	call	455b4 <__subdf3>
   49074:	1823883a 	mov	r17,r3
   49078:	d8c00717 	ldw	r3,28(sp)
   4907c:	d9401217 	ldw	r5,72(sp)
   49080:	a2000c04 	addi	r8,r20,48
   49084:	1021883a 	mov	r16,r2
   49088:	1a000005 	stb	r8,0(r3)
   4908c:	800d883a 	mov	r6,r16
   49090:	880f883a 	mov	r7,r17
   49094:	a809883a 	mov	r4,r21
   49098:	4029883a 	mov	r20,r8
   4909c:	0044dc00 	call	44dc0 <__gedf2>
   490a0:	00841d16 	blt	zero,r2,4a118 <_dtoa_r+0x15f4>
   490a4:	800d883a 	mov	r6,r16
   490a8:	880f883a 	mov	r7,r17
   490ac:	0009883a 	mov	r4,zero
   490b0:	014ffc34 	movhi	r5,16368
   490b4:	00455b40 	call	455b4 <__subdf3>
   490b8:	d9401217 	ldw	r5,72(sp)
   490bc:	100d883a 	mov	r6,r2
   490c0:	180f883a 	mov	r7,r3
   490c4:	a809883a 	mov	r4,r21
   490c8:	0044dc00 	call	44dc0 <__gedf2>
   490cc:	db001617 	ldw	r12,88(sp)
   490d0:	00840e16 	blt	zero,r2,4a10c <_dtoa_r+0x15e8>
   490d4:	00800044 	movi	r2,1
   490d8:	13006b0e 	bge	r2,r12,49288 <_dtoa_r+0x764>
   490dc:	d9000717 	ldw	r4,28(sp)
   490e0:	dd800f15 	stw	r22,60(sp)
   490e4:	dcc01015 	stw	r19,64(sp)
   490e8:	2319883a 	add	r12,r4,r12
   490ec:	dcc01217 	ldw	r19,72(sp)
   490f0:	602d883a 	mov	r22,r12
   490f4:	dc801215 	stw	r18,72(sp)
   490f8:	b825883a 	mov	r18,r23
   490fc:	00000906 	br	49124 <_dtoa_r+0x600>
   49100:	00455b40 	call	455b4 <__subdf3>
   49104:	a80d883a 	mov	r6,r21
   49108:	980f883a 	mov	r7,r19
   4910c:	1009883a 	mov	r4,r2
   49110:	180b883a 	mov	r5,r3
   49114:	0050d140 	call	50d14 <__ledf2>
   49118:	1003e816 	blt	r2,zero,4a0bc <_dtoa_r+0x1598>
   4911c:	b825883a 	mov	r18,r23
   49120:	bd83e926 	beq	r23,r22,4a0c8 <_dtoa_r+0x15a4>
   49124:	a809883a 	mov	r4,r21
   49128:	980b883a 	mov	r5,r19
   4912c:	000d883a 	mov	r6,zero
   49130:	01d00934 	movhi	r7,16420
   49134:	0044e9c0 	call	44e9c <__muldf3>
   49138:	000d883a 	mov	r6,zero
   4913c:	01d00934 	movhi	r7,16420
   49140:	8009883a 	mov	r4,r16
   49144:	880b883a 	mov	r5,r17
   49148:	102b883a 	mov	r21,r2
   4914c:	1827883a 	mov	r19,r3
   49150:	0044e9c0 	call	44e9c <__muldf3>
   49154:	180b883a 	mov	r5,r3
   49158:	1009883a 	mov	r4,r2
   4915c:	1821883a 	mov	r16,r3
   49160:	1023883a 	mov	r17,r2
   49164:	0045eb00 	call	45eb0 <__fixdfsi>
   49168:	1009883a 	mov	r4,r2
   4916c:	1029883a 	mov	r20,r2
   49170:	0045f300 	call	45f30 <__floatsidf>
   49174:	8809883a 	mov	r4,r17
   49178:	800b883a 	mov	r5,r16
   4917c:	100d883a 	mov	r6,r2
   49180:	180f883a 	mov	r7,r3
   49184:	00455b40 	call	455b4 <__subdf3>
   49188:	a5000c04 	addi	r20,r20,48
   4918c:	a80d883a 	mov	r6,r21
   49190:	980f883a 	mov	r7,r19
   49194:	1009883a 	mov	r4,r2
   49198:	180b883a 	mov	r5,r3
   4919c:	95000005 	stb	r20,0(r18)
   491a0:	1021883a 	mov	r16,r2
   491a4:	1823883a 	mov	r17,r3
   491a8:	0050d140 	call	50d14 <__ledf2>
   491ac:	bdc00044 	addi	r23,r23,1
   491b0:	800d883a 	mov	r6,r16
   491b4:	880f883a 	mov	r7,r17
   491b8:	0009883a 	mov	r4,zero
   491bc:	014ffc34 	movhi	r5,16368
   491c0:	103fcf0e 	bge	r2,zero,49100 <__alt_data_end+0xfffc9100>
   491c4:	d8c01317 	ldw	r3,76(sp)
   491c8:	d8c00515 	stw	r3,20(sp)
   491cc:	d9400917 	ldw	r5,36(sp)
   491d0:	e009883a 	mov	r4,fp
   491d4:	004c2680 	call	4c268 <_Bfree>
   491d8:	d9000517 	ldw	r4,20(sp)
   491dc:	d9802317 	ldw	r6,140(sp)
   491e0:	d9c02517 	ldw	r7,148(sp)
   491e4:	b8000005 	stb	zero,0(r23)
   491e8:	20800044 	addi	r2,r4,1
   491ec:	30800015 	stw	r2,0(r6)
   491f0:	3802aa26 	beq	r7,zero,49c9c <_dtoa_r+0x1178>
   491f4:	3dc00015 	stw	r23,0(r7)
   491f8:	d8800717 	ldw	r2,28(sp)
   491fc:	003e7906 	br	48be4 <__alt_data_end+0xfffc8be4>
   49200:	00800434 	movhi	r2,16
   49204:	10bfffc4 	addi	r2,r2,-1
   49208:	88a2703a 	and	r17,r17,r2
   4920c:	883e851e 	bne	r17,zero,48c24 <__alt_data_end+0xfffc8c24>
   49210:	00800174 	movhi	r2,5
   49214:	108ef404 	addi	r2,r2,15312
   49218:	003e8406 	br	48c2c <__alt_data_end+0xfffc8c2c>
   4921c:	10c00204 	addi	r3,r2,8
   49220:	003e8706 	br	48c40 <__alt_data_end+0xfffc8c40>
   49224:	01400434 	movhi	r5,16
   49228:	297fffc4 	addi	r5,r5,-1
   4922c:	994a703a 	and	r5,r19,r5
   49230:	9009883a 	mov	r4,r18
   49234:	843f0044 	addi	r16,r16,-1023
   49238:	294ffc34 	orhi	r5,r5,16368
   4923c:	dd800217 	ldw	r22,8(sp)
   49240:	d8001115 	stw	zero,68(sp)
   49244:	003ea506 	br	48cdc <__alt_data_end+0xfffc8cdc>
   49248:	00800174 	movhi	r2,5
   4924c:	108eeb04 	addi	r2,r2,15276
   49250:	003e6406 	br	48be4 <__alt_data_end+0xfffc8be4>
   49254:	e0001115 	stw	zero,68(fp)
   49258:	000b883a 	mov	r5,zero
   4925c:	e009883a 	mov	r4,fp
   49260:	004c1c00 	call	4c1c0 <_Balloc>
   49264:	01bfffc4 	movi	r6,-1
   49268:	01c00044 	movi	r7,1
   4926c:	d8800715 	stw	r2,28(sp)
   49270:	d9800c15 	stw	r6,48(sp)
   49274:	e0801015 	stw	r2,64(fp)
   49278:	d8000315 	stw	zero,12(sp)
   4927c:	d9c00b15 	stw	r7,44(sp)
   49280:	d9800615 	stw	r6,24(sp)
   49284:	d8002215 	stw	zero,136(sp)
   49288:	d8800117 	ldw	r2,4(sp)
   4928c:	10008916 	blt	r2,zero,494b4 <_dtoa_r+0x990>
   49290:	d9000517 	ldw	r4,20(sp)
   49294:	00c00384 	movi	r3,14
   49298:	19008616 	blt	r3,r4,494b4 <_dtoa_r+0x990>
   4929c:	200490fa 	slli	r2,r4,3
   492a0:	00c00174 	movhi	r3,5
   492a4:	d9802217 	ldw	r6,136(sp)
   492a8:	18cf1304 	addi	r3,r3,15436
   492ac:	1885883a 	add	r2,r3,r2
   492b0:	14000017 	ldw	r16,0(r2)
   492b4:	14400117 	ldw	r17,4(r2)
   492b8:	30016316 	blt	r6,zero,49848 <_dtoa_r+0xd24>
   492bc:	800d883a 	mov	r6,r16
   492c0:	880f883a 	mov	r7,r17
   492c4:	9009883a 	mov	r4,r18
   492c8:	980b883a 	mov	r5,r19
   492cc:	005042c0 	call	5042c <__divdf3>
   492d0:	180b883a 	mov	r5,r3
   492d4:	1009883a 	mov	r4,r2
   492d8:	0045eb00 	call	45eb0 <__fixdfsi>
   492dc:	1009883a 	mov	r4,r2
   492e0:	102b883a 	mov	r21,r2
   492e4:	0045f300 	call	45f30 <__floatsidf>
   492e8:	800d883a 	mov	r6,r16
   492ec:	880f883a 	mov	r7,r17
   492f0:	1009883a 	mov	r4,r2
   492f4:	180b883a 	mov	r5,r3
   492f8:	0044e9c0 	call	44e9c <__muldf3>
   492fc:	100d883a 	mov	r6,r2
   49300:	180f883a 	mov	r7,r3
   49304:	9009883a 	mov	r4,r18
   49308:	980b883a 	mov	r5,r19
   4930c:	00455b40 	call	455b4 <__subdf3>
   49310:	d9c00717 	ldw	r7,28(sp)
   49314:	1009883a 	mov	r4,r2
   49318:	a8800c04 	addi	r2,r21,48
   4931c:	38800005 	stb	r2,0(r7)
   49320:	3dc00044 	addi	r23,r7,1
   49324:	d9c00617 	ldw	r7,24(sp)
   49328:	01800044 	movi	r6,1
   4932c:	180b883a 	mov	r5,r3
   49330:	2005883a 	mov	r2,r4
   49334:	39803826 	beq	r7,r6,49418 <_dtoa_r+0x8f4>
   49338:	000d883a 	mov	r6,zero
   4933c:	01d00934 	movhi	r7,16420
   49340:	0044e9c0 	call	44e9c <__muldf3>
   49344:	000d883a 	mov	r6,zero
   49348:	000f883a 	mov	r7,zero
   4934c:	1009883a 	mov	r4,r2
   49350:	180b883a 	mov	r5,r3
   49354:	1025883a 	mov	r18,r2
   49358:	1827883a 	mov	r19,r3
   4935c:	0044d380 	call	44d38 <__eqdf2>
   49360:	103f9a26 	beq	r2,zero,491cc <__alt_data_end+0xfffc91cc>
   49364:	d9c00617 	ldw	r7,24(sp)
   49368:	d8c00717 	ldw	r3,28(sp)
   4936c:	b829883a 	mov	r20,r23
   49370:	38bfffc4 	addi	r2,r7,-1
   49374:	18ad883a 	add	r22,r3,r2
   49378:	00000a06 	br	493a4 <_dtoa_r+0x880>
   4937c:	0044e9c0 	call	44e9c <__muldf3>
   49380:	000d883a 	mov	r6,zero
   49384:	000f883a 	mov	r7,zero
   49388:	1009883a 	mov	r4,r2
   4938c:	180b883a 	mov	r5,r3
   49390:	1025883a 	mov	r18,r2
   49394:	1827883a 	mov	r19,r3
   49398:	b829883a 	mov	r20,r23
   4939c:	0044d380 	call	44d38 <__eqdf2>
   493a0:	103f8a26 	beq	r2,zero,491cc <__alt_data_end+0xfffc91cc>
   493a4:	800d883a 	mov	r6,r16
   493a8:	880f883a 	mov	r7,r17
   493ac:	9009883a 	mov	r4,r18
   493b0:	980b883a 	mov	r5,r19
   493b4:	005042c0 	call	5042c <__divdf3>
   493b8:	180b883a 	mov	r5,r3
   493bc:	1009883a 	mov	r4,r2
   493c0:	0045eb00 	call	45eb0 <__fixdfsi>
   493c4:	1009883a 	mov	r4,r2
   493c8:	102b883a 	mov	r21,r2
   493cc:	0045f300 	call	45f30 <__floatsidf>
   493d0:	800d883a 	mov	r6,r16
   493d4:	880f883a 	mov	r7,r17
   493d8:	1009883a 	mov	r4,r2
   493dc:	180b883a 	mov	r5,r3
   493e0:	0044e9c0 	call	44e9c <__muldf3>
   493e4:	100d883a 	mov	r6,r2
   493e8:	180f883a 	mov	r7,r3
   493ec:	9009883a 	mov	r4,r18
   493f0:	980b883a 	mov	r5,r19
   493f4:	00455b40 	call	455b4 <__subdf3>
   493f8:	aa000c04 	addi	r8,r21,48
   493fc:	a2000005 	stb	r8,0(r20)
   49400:	000d883a 	mov	r6,zero
   49404:	01d00934 	movhi	r7,16420
   49408:	1009883a 	mov	r4,r2
   4940c:	180b883a 	mov	r5,r3
   49410:	a5c00044 	addi	r23,r20,1
   49414:	b53fd91e 	bne	r22,r20,4937c <__alt_data_end+0xfffc937c>
   49418:	100d883a 	mov	r6,r2
   4941c:	180f883a 	mov	r7,r3
   49420:	1009883a 	mov	r4,r2
   49424:	180b883a 	mov	r5,r3
   49428:	004448c0 	call	4448c <__adddf3>
   4942c:	100d883a 	mov	r6,r2
   49430:	180f883a 	mov	r7,r3
   49434:	8009883a 	mov	r4,r16
   49438:	880b883a 	mov	r5,r17
   4943c:	1027883a 	mov	r19,r2
   49440:	1825883a 	mov	r18,r3
   49444:	0050d140 	call	50d14 <__ledf2>
   49448:	10000816 	blt	r2,zero,4946c <_dtoa_r+0x948>
   4944c:	980d883a 	mov	r6,r19
   49450:	900f883a 	mov	r7,r18
   49454:	8009883a 	mov	r4,r16
   49458:	880b883a 	mov	r5,r17
   4945c:	0044d380 	call	44d38 <__eqdf2>
   49460:	103f5a1e 	bne	r2,zero,491cc <__alt_data_end+0xfffc91cc>
   49464:	ad40004c 	andi	r21,r21,1
   49468:	a83f5826 	beq	r21,zero,491cc <__alt_data_end+0xfffc91cc>
   4946c:	bd3fffc3 	ldbu	r20,-1(r23)
   49470:	b8bfffc4 	addi	r2,r23,-1
   49474:	1007883a 	mov	r3,r2
   49478:	01400e44 	movi	r5,57
   4947c:	d9800717 	ldw	r6,28(sp)
   49480:	00000506 	br	49498 <_dtoa_r+0x974>
   49484:	18ffffc4 	addi	r3,r3,-1
   49488:	11824726 	beq	r2,r6,49da8 <_dtoa_r+0x1284>
   4948c:	1d000003 	ldbu	r20,0(r3)
   49490:	102f883a 	mov	r23,r2
   49494:	10bfffc4 	addi	r2,r2,-1
   49498:	a1003fcc 	andi	r4,r20,255
   4949c:	2100201c 	xori	r4,r4,128
   494a0:	213fe004 	addi	r4,r4,-128
   494a4:	217ff726 	beq	r4,r5,49484 <__alt_data_end+0xfffc9484>
   494a8:	a2000044 	addi	r8,r20,1
   494ac:	12000005 	stb	r8,0(r2)
   494b0:	003f4606 	br	491cc <__alt_data_end+0xfffc91cc>
   494b4:	d9000b17 	ldw	r4,44(sp)
   494b8:	2000c826 	beq	r4,zero,497dc <_dtoa_r+0xcb8>
   494bc:	d9800317 	ldw	r6,12(sp)
   494c0:	00c00044 	movi	r3,1
   494c4:	1980f90e 	bge	r3,r6,498ac <_dtoa_r+0xd88>
   494c8:	d8800617 	ldw	r2,24(sp)
   494cc:	d8c00a17 	ldw	r3,40(sp)
   494d0:	157fffc4 	addi	r21,r2,-1
   494d4:	1d41f316 	blt	r3,r21,49ca4 <_dtoa_r+0x1180>
   494d8:	1d6bc83a 	sub	r21,r3,r21
   494dc:	d9c00617 	ldw	r7,24(sp)
   494e0:	3802aa16 	blt	r7,zero,49f8c <_dtoa_r+0x1468>
   494e4:	dd000817 	ldw	r20,32(sp)
   494e8:	d8800617 	ldw	r2,24(sp)
   494ec:	d8c00817 	ldw	r3,32(sp)
   494f0:	01400044 	movi	r5,1
   494f4:	e009883a 	mov	r4,fp
   494f8:	1887883a 	add	r3,r3,r2
   494fc:	d8c00815 	stw	r3,32(sp)
   49500:	b0ad883a 	add	r22,r22,r2
   49504:	004c5cc0 	call	4c5cc <__i2b>
   49508:	1023883a 	mov	r17,r2
   4950c:	a0000826 	beq	r20,zero,49530 <_dtoa_r+0xa0c>
   49510:	0580070e 	bge	zero,r22,49530 <_dtoa_r+0xa0c>
   49514:	a005883a 	mov	r2,r20
   49518:	b500b916 	blt	r22,r20,49800 <_dtoa_r+0xcdc>
   4951c:	d9000817 	ldw	r4,32(sp)
   49520:	a0a9c83a 	sub	r20,r20,r2
   49524:	b0adc83a 	sub	r22,r22,r2
   49528:	2089c83a 	sub	r4,r4,r2
   4952c:	d9000815 	stw	r4,32(sp)
   49530:	d9800a17 	ldw	r6,40(sp)
   49534:	0181810e 	bge	zero,r6,49b3c <_dtoa_r+0x1018>
   49538:	d9c00b17 	ldw	r7,44(sp)
   4953c:	3800b326 	beq	r7,zero,4980c <_dtoa_r+0xce8>
   49540:	a800b226 	beq	r21,zero,4980c <_dtoa_r+0xce8>
   49544:	880b883a 	mov	r5,r17
   49548:	a80d883a 	mov	r6,r21
   4954c:	e009883a 	mov	r4,fp
   49550:	004c8000 	call	4c800 <__pow5mult>
   49554:	d9800917 	ldw	r6,36(sp)
   49558:	100b883a 	mov	r5,r2
   4955c:	e009883a 	mov	r4,fp
   49560:	1023883a 	mov	r17,r2
   49564:	004c6080 	call	4c608 <__multiply>
   49568:	1021883a 	mov	r16,r2
   4956c:	d8800a17 	ldw	r2,40(sp)
   49570:	d9400917 	ldw	r5,36(sp)
   49574:	e009883a 	mov	r4,fp
   49578:	1545c83a 	sub	r2,r2,r21
   4957c:	d8800a15 	stw	r2,40(sp)
   49580:	004c2680 	call	4c268 <_Bfree>
   49584:	d8c00a17 	ldw	r3,40(sp)
   49588:	18009f1e 	bne	r3,zero,49808 <_dtoa_r+0xce4>
   4958c:	05c00044 	movi	r23,1
   49590:	e009883a 	mov	r4,fp
   49594:	b80b883a 	mov	r5,r23
   49598:	004c5cc0 	call	4c5cc <__i2b>
   4959c:	d9000d17 	ldw	r4,52(sp)
   495a0:	102b883a 	mov	r21,r2
   495a4:	2000ce26 	beq	r4,zero,498e0 <_dtoa_r+0xdbc>
   495a8:	200d883a 	mov	r6,r4
   495ac:	100b883a 	mov	r5,r2
   495b0:	e009883a 	mov	r4,fp
   495b4:	004c8000 	call	4c800 <__pow5mult>
   495b8:	d9800317 	ldw	r6,12(sp)
   495bc:	102b883a 	mov	r21,r2
   495c0:	b981810e 	bge	r23,r6,49bc8 <_dtoa_r+0x10a4>
   495c4:	0027883a 	mov	r19,zero
   495c8:	a8800417 	ldw	r2,16(r21)
   495cc:	05c00804 	movi	r23,32
   495d0:	10800104 	addi	r2,r2,4
   495d4:	1085883a 	add	r2,r2,r2
   495d8:	1085883a 	add	r2,r2,r2
   495dc:	a885883a 	add	r2,r21,r2
   495e0:	11000017 	ldw	r4,0(r2)
   495e4:	004c4b40 	call	4c4b4 <__hi0bits>
   495e8:	b885c83a 	sub	r2,r23,r2
   495ec:	1585883a 	add	r2,r2,r22
   495f0:	108007cc 	andi	r2,r2,31
   495f4:	1000b326 	beq	r2,zero,498c4 <_dtoa_r+0xda0>
   495f8:	00c00804 	movi	r3,32
   495fc:	1887c83a 	sub	r3,r3,r2
   49600:	01000104 	movi	r4,4
   49604:	20c2cd0e 	bge	r4,r3,4a13c <_dtoa_r+0x1618>
   49608:	00c00704 	movi	r3,28
   4960c:	1885c83a 	sub	r2,r3,r2
   49610:	d8c00817 	ldw	r3,32(sp)
   49614:	a0a9883a 	add	r20,r20,r2
   49618:	b0ad883a 	add	r22,r22,r2
   4961c:	1887883a 	add	r3,r3,r2
   49620:	d8c00815 	stw	r3,32(sp)
   49624:	d9800817 	ldw	r6,32(sp)
   49628:	0180040e 	bge	zero,r6,4963c <_dtoa_r+0xb18>
   4962c:	800b883a 	mov	r5,r16
   49630:	e009883a 	mov	r4,fp
   49634:	004c9400 	call	4c940 <__lshift>
   49638:	1021883a 	mov	r16,r2
   4963c:	0580050e 	bge	zero,r22,49654 <_dtoa_r+0xb30>
   49640:	a80b883a 	mov	r5,r21
   49644:	b00d883a 	mov	r6,r22
   49648:	e009883a 	mov	r4,fp
   4964c:	004c9400 	call	4c940 <__lshift>
   49650:	102b883a 	mov	r21,r2
   49654:	d9c00e17 	ldw	r7,56(sp)
   49658:	3801211e 	bne	r7,zero,49ae0 <_dtoa_r+0xfbc>
   4965c:	d9800617 	ldw	r6,24(sp)
   49660:	0181380e 	bge	zero,r6,49b44 <_dtoa_r+0x1020>
   49664:	d8c00b17 	ldw	r3,44(sp)
   49668:	1800ab1e 	bne	r3,zero,49918 <_dtoa_r+0xdf4>
   4966c:	dc800717 	ldw	r18,28(sp)
   49670:	dcc00617 	ldw	r19,24(sp)
   49674:	9029883a 	mov	r20,r18
   49678:	00000206 	br	49684 <_dtoa_r+0xb60>
   4967c:	004c2900 	call	4c290 <__multadd>
   49680:	1021883a 	mov	r16,r2
   49684:	a80b883a 	mov	r5,r21
   49688:	8009883a 	mov	r4,r16
   4968c:	00489240 	call	48924 <quorem>
   49690:	10800c04 	addi	r2,r2,48
   49694:	90800005 	stb	r2,0(r18)
   49698:	94800044 	addi	r18,r18,1
   4969c:	9507c83a 	sub	r3,r18,r20
   496a0:	000f883a 	mov	r7,zero
   496a4:	01800284 	movi	r6,10
   496a8:	800b883a 	mov	r5,r16
   496ac:	e009883a 	mov	r4,fp
   496b0:	1cfff216 	blt	r3,r19,4967c <__alt_data_end+0xfffc967c>
   496b4:	1011883a 	mov	r8,r2
   496b8:	d8800617 	ldw	r2,24(sp)
   496bc:	0082370e 	bge	zero,r2,49f9c <_dtoa_r+0x1478>
   496c0:	d9000717 	ldw	r4,28(sp)
   496c4:	0025883a 	mov	r18,zero
   496c8:	20af883a 	add	r23,r4,r2
   496cc:	01800044 	movi	r6,1
   496d0:	800b883a 	mov	r5,r16
   496d4:	e009883a 	mov	r4,fp
   496d8:	da001715 	stw	r8,92(sp)
   496dc:	004c9400 	call	4c940 <__lshift>
   496e0:	a80b883a 	mov	r5,r21
   496e4:	1009883a 	mov	r4,r2
   496e8:	d8800915 	stw	r2,36(sp)
   496ec:	004ca880 	call	4ca88 <__mcmp>
   496f0:	da001717 	ldw	r8,92(sp)
   496f4:	0081800e 	bge	zero,r2,49cf8 <_dtoa_r+0x11d4>
   496f8:	b93fffc3 	ldbu	r4,-1(r23)
   496fc:	b8bfffc4 	addi	r2,r23,-1
   49700:	1007883a 	mov	r3,r2
   49704:	01800e44 	movi	r6,57
   49708:	d9c00717 	ldw	r7,28(sp)
   4970c:	00000506 	br	49724 <_dtoa_r+0xc00>
   49710:	18ffffc4 	addi	r3,r3,-1
   49714:	11c12326 	beq	r2,r7,49ba4 <_dtoa_r+0x1080>
   49718:	19000003 	ldbu	r4,0(r3)
   4971c:	102f883a 	mov	r23,r2
   49720:	10bfffc4 	addi	r2,r2,-1
   49724:	21403fcc 	andi	r5,r4,255
   49728:	2940201c 	xori	r5,r5,128
   4972c:	297fe004 	addi	r5,r5,-128
   49730:	29bff726 	beq	r5,r6,49710 <__alt_data_end+0xfffc9710>
   49734:	21000044 	addi	r4,r4,1
   49738:	11000005 	stb	r4,0(r2)
   4973c:	a80b883a 	mov	r5,r21
   49740:	e009883a 	mov	r4,fp
   49744:	004c2680 	call	4c268 <_Bfree>
   49748:	883ea026 	beq	r17,zero,491cc <__alt_data_end+0xfffc91cc>
   4974c:	90000426 	beq	r18,zero,49760 <_dtoa_r+0xc3c>
   49750:	94400326 	beq	r18,r17,49760 <_dtoa_r+0xc3c>
   49754:	900b883a 	mov	r5,r18
   49758:	e009883a 	mov	r4,fp
   4975c:	004c2680 	call	4c268 <_Bfree>
   49760:	880b883a 	mov	r5,r17
   49764:	e009883a 	mov	r4,fp
   49768:	004c2680 	call	4c268 <_Bfree>
   4976c:	003e9706 	br	491cc <__alt_data_end+0xfffc91cc>
   49770:	01800044 	movi	r6,1
   49774:	d9800e15 	stw	r6,56(sp)
   49778:	003d9606 	br	48dd4 <__alt_data_end+0xfffc8dd4>
   4977c:	d8800817 	ldw	r2,32(sp)
   49780:	d8c00517 	ldw	r3,20(sp)
   49784:	d8000d15 	stw	zero,52(sp)
   49788:	10c5c83a 	sub	r2,r2,r3
   4978c:	00c9c83a 	sub	r4,zero,r3
   49790:	d8800815 	stw	r2,32(sp)
   49794:	d9000a15 	stw	r4,40(sp)
   49798:	003d9706 	br	48df8 <__alt_data_end+0xfffc8df8>
   4979c:	05adc83a 	sub	r22,zero,r22
   497a0:	dd800815 	stw	r22,32(sp)
   497a4:	002d883a 	mov	r22,zero
   497a8:	003d8e06 	br	48de4 <__alt_data_end+0xfffc8de4>
   497ac:	d9000517 	ldw	r4,20(sp)
   497b0:	0045f300 	call	45f30 <__floatsidf>
   497b4:	100d883a 	mov	r6,r2
   497b8:	180f883a 	mov	r7,r3
   497bc:	a009883a 	mov	r4,r20
   497c0:	880b883a 	mov	r5,r17
   497c4:	0044d380 	call	44d38 <__eqdf2>
   497c8:	103d7126 	beq	r2,zero,48d90 <__alt_data_end+0xfffc8d90>
   497cc:	d9c00517 	ldw	r7,20(sp)
   497d0:	39ffffc4 	addi	r7,r7,-1
   497d4:	d9c00515 	stw	r7,20(sp)
   497d8:	003d6d06 	br	48d90 <__alt_data_end+0xfffc8d90>
   497dc:	dd400a17 	ldw	r21,40(sp)
   497e0:	dd000817 	ldw	r20,32(sp)
   497e4:	0023883a 	mov	r17,zero
   497e8:	003f4806 	br	4950c <__alt_data_end+0xfffc950c>
   497ec:	10e3c83a 	sub	r17,r2,r3
   497f0:	9448983a 	sll	r4,r18,r17
   497f4:	003d3206 	br	48cc0 <__alt_data_end+0xfffc8cc0>
   497f8:	d8000e15 	stw	zero,56(sp)
   497fc:	003d7506 	br	48dd4 <__alt_data_end+0xfffc8dd4>
   49800:	b005883a 	mov	r2,r22
   49804:	003f4506 	br	4951c <__alt_data_end+0xfffc951c>
   49808:	dc000915 	stw	r16,36(sp)
   4980c:	d9800a17 	ldw	r6,40(sp)
   49810:	d9400917 	ldw	r5,36(sp)
   49814:	e009883a 	mov	r4,fp
   49818:	004c8000 	call	4c800 <__pow5mult>
   4981c:	1021883a 	mov	r16,r2
   49820:	003f5a06 	br	4958c <__alt_data_end+0xfffc958c>
   49824:	01c00044 	movi	r7,1
   49828:	d9c00b15 	stw	r7,44(sp)
   4982c:	d8802217 	ldw	r2,136(sp)
   49830:	0081280e 	bge	zero,r2,49cd4 <_dtoa_r+0x11b0>
   49834:	100d883a 	mov	r6,r2
   49838:	1021883a 	mov	r16,r2
   4983c:	d8800c15 	stw	r2,48(sp)
   49840:	d8800615 	stw	r2,24(sp)
   49844:	003d8806 	br	48e68 <__alt_data_end+0xfffc8e68>
   49848:	d8800617 	ldw	r2,24(sp)
   4984c:	00be9b16 	blt	zero,r2,492bc <__alt_data_end+0xfffc92bc>
   49850:	10010f1e 	bne	r2,zero,49c90 <_dtoa_r+0x116c>
   49854:	880b883a 	mov	r5,r17
   49858:	000d883a 	mov	r6,zero
   4985c:	01d00534 	movhi	r7,16404
   49860:	8009883a 	mov	r4,r16
   49864:	0044e9c0 	call	44e9c <__muldf3>
   49868:	900d883a 	mov	r6,r18
   4986c:	980f883a 	mov	r7,r19
   49870:	1009883a 	mov	r4,r2
   49874:	180b883a 	mov	r5,r3
   49878:	0044dc00 	call	44dc0 <__gedf2>
   4987c:	002b883a 	mov	r21,zero
   49880:	0023883a 	mov	r17,zero
   49884:	1000bf16 	blt	r2,zero,49b84 <_dtoa_r+0x1060>
   49888:	d9802217 	ldw	r6,136(sp)
   4988c:	ddc00717 	ldw	r23,28(sp)
   49890:	018c303a 	nor	r6,zero,r6
   49894:	d9800515 	stw	r6,20(sp)
   49898:	a80b883a 	mov	r5,r21
   4989c:	e009883a 	mov	r4,fp
   498a0:	004c2680 	call	4c268 <_Bfree>
   498a4:	883e4926 	beq	r17,zero,491cc <__alt_data_end+0xfffc91cc>
   498a8:	003fad06 	br	49760 <__alt_data_end+0xfffc9760>
   498ac:	d9c01117 	ldw	r7,68(sp)
   498b0:	3801bc26 	beq	r7,zero,49fa4 <_dtoa_r+0x1480>
   498b4:	10810cc4 	addi	r2,r2,1075
   498b8:	dd400a17 	ldw	r21,40(sp)
   498bc:	dd000817 	ldw	r20,32(sp)
   498c0:	003f0a06 	br	494ec <__alt_data_end+0xfffc94ec>
   498c4:	00800704 	movi	r2,28
   498c8:	d9000817 	ldw	r4,32(sp)
   498cc:	a0a9883a 	add	r20,r20,r2
   498d0:	b0ad883a 	add	r22,r22,r2
   498d4:	2089883a 	add	r4,r4,r2
   498d8:	d9000815 	stw	r4,32(sp)
   498dc:	003f5106 	br	49624 <__alt_data_end+0xfffc9624>
   498e0:	d8c00317 	ldw	r3,12(sp)
   498e4:	b8c1fc0e 	bge	r23,r3,4a0d8 <_dtoa_r+0x15b4>
   498e8:	0027883a 	mov	r19,zero
   498ec:	b805883a 	mov	r2,r23
   498f0:	003f3e06 	br	495ec <__alt_data_end+0xfffc95ec>
   498f4:	880b883a 	mov	r5,r17
   498f8:	e009883a 	mov	r4,fp
   498fc:	000f883a 	mov	r7,zero
   49900:	01800284 	movi	r6,10
   49904:	004c2900 	call	4c290 <__multadd>
   49908:	d9000c17 	ldw	r4,48(sp)
   4990c:	1023883a 	mov	r17,r2
   49910:	0102040e 	bge	zero,r4,4a124 <_dtoa_r+0x1600>
   49914:	d9000615 	stw	r4,24(sp)
   49918:	0500050e 	bge	zero,r20,49930 <_dtoa_r+0xe0c>
   4991c:	880b883a 	mov	r5,r17
   49920:	a00d883a 	mov	r6,r20
   49924:	e009883a 	mov	r4,fp
   49928:	004c9400 	call	4c940 <__lshift>
   4992c:	1023883a 	mov	r17,r2
   49930:	9801241e 	bne	r19,zero,49dc4 <_dtoa_r+0x12a0>
   49934:	8829883a 	mov	r20,r17
   49938:	d9000617 	ldw	r4,24(sp)
   4993c:	dcc00717 	ldw	r19,28(sp)
   49940:	9480004c 	andi	r18,r18,1
   49944:	20bfffc4 	addi	r2,r4,-1
   49948:	9885883a 	add	r2,r19,r2
   4994c:	d8800415 	stw	r2,16(sp)
   49950:	dc800615 	stw	r18,24(sp)
   49954:	a80b883a 	mov	r5,r21
   49958:	8009883a 	mov	r4,r16
   4995c:	00489240 	call	48924 <quorem>
   49960:	880b883a 	mov	r5,r17
   49964:	8009883a 	mov	r4,r16
   49968:	102f883a 	mov	r23,r2
   4996c:	004ca880 	call	4ca88 <__mcmp>
   49970:	a80b883a 	mov	r5,r21
   49974:	a00d883a 	mov	r6,r20
   49978:	e009883a 	mov	r4,fp
   4997c:	102d883a 	mov	r22,r2
   49980:	004cae80 	call	4cae8 <__mdiff>
   49984:	1007883a 	mov	r3,r2
   49988:	10800317 	ldw	r2,12(r2)
   4998c:	bc800c04 	addi	r18,r23,48
   49990:	180b883a 	mov	r5,r3
   49994:	10004e1e 	bne	r2,zero,49ad0 <_dtoa_r+0xfac>
   49998:	8009883a 	mov	r4,r16
   4999c:	d8c01615 	stw	r3,88(sp)
   499a0:	004ca880 	call	4ca88 <__mcmp>
   499a4:	d8c01617 	ldw	r3,88(sp)
   499a8:	e009883a 	mov	r4,fp
   499ac:	d8801615 	stw	r2,88(sp)
   499b0:	180b883a 	mov	r5,r3
   499b4:	004c2680 	call	4c268 <_Bfree>
   499b8:	d8801617 	ldw	r2,88(sp)
   499bc:	1000041e 	bne	r2,zero,499d0 <_dtoa_r+0xeac>
   499c0:	d9800317 	ldw	r6,12(sp)
   499c4:	3000021e 	bne	r6,zero,499d0 <_dtoa_r+0xeac>
   499c8:	d8c00617 	ldw	r3,24(sp)
   499cc:	18003726 	beq	r3,zero,49aac <_dtoa_r+0xf88>
   499d0:	b0002016 	blt	r22,zero,49a54 <_dtoa_r+0xf30>
   499d4:	b000041e 	bne	r22,zero,499e8 <_dtoa_r+0xec4>
   499d8:	d9000317 	ldw	r4,12(sp)
   499dc:	2000021e 	bne	r4,zero,499e8 <_dtoa_r+0xec4>
   499e0:	d8c00617 	ldw	r3,24(sp)
   499e4:	18001b26 	beq	r3,zero,49a54 <_dtoa_r+0xf30>
   499e8:	00810716 	blt	zero,r2,49e08 <_dtoa_r+0x12e4>
   499ec:	d8c00417 	ldw	r3,16(sp)
   499f0:	9d800044 	addi	r22,r19,1
   499f4:	9c800005 	stb	r18,0(r19)
   499f8:	b02f883a 	mov	r23,r22
   499fc:	98c10626 	beq	r19,r3,49e18 <_dtoa_r+0x12f4>
   49a00:	800b883a 	mov	r5,r16
   49a04:	000f883a 	mov	r7,zero
   49a08:	01800284 	movi	r6,10
   49a0c:	e009883a 	mov	r4,fp
   49a10:	004c2900 	call	4c290 <__multadd>
   49a14:	1021883a 	mov	r16,r2
   49a18:	000f883a 	mov	r7,zero
   49a1c:	01800284 	movi	r6,10
   49a20:	880b883a 	mov	r5,r17
   49a24:	e009883a 	mov	r4,fp
   49a28:	8d002526 	beq	r17,r20,49ac0 <_dtoa_r+0xf9c>
   49a2c:	004c2900 	call	4c290 <__multadd>
   49a30:	a00b883a 	mov	r5,r20
   49a34:	000f883a 	mov	r7,zero
   49a38:	01800284 	movi	r6,10
   49a3c:	e009883a 	mov	r4,fp
   49a40:	1023883a 	mov	r17,r2
   49a44:	004c2900 	call	4c290 <__multadd>
   49a48:	1029883a 	mov	r20,r2
   49a4c:	b027883a 	mov	r19,r22
   49a50:	003fc006 	br	49954 <__alt_data_end+0xfffc9954>
   49a54:	9011883a 	mov	r8,r18
   49a58:	00800e0e 	bge	zero,r2,49a94 <_dtoa_r+0xf70>
   49a5c:	800b883a 	mov	r5,r16
   49a60:	01800044 	movi	r6,1
   49a64:	e009883a 	mov	r4,fp
   49a68:	da001715 	stw	r8,92(sp)
   49a6c:	004c9400 	call	4c940 <__lshift>
   49a70:	a80b883a 	mov	r5,r21
   49a74:	1009883a 	mov	r4,r2
   49a78:	1021883a 	mov	r16,r2
   49a7c:	004ca880 	call	4ca88 <__mcmp>
   49a80:	da001717 	ldw	r8,92(sp)
   49a84:	0081960e 	bge	zero,r2,4a0e0 <_dtoa_r+0x15bc>
   49a88:	00800e44 	movi	r2,57
   49a8c:	40817026 	beq	r8,r2,4a050 <_dtoa_r+0x152c>
   49a90:	ba000c44 	addi	r8,r23,49
   49a94:	8825883a 	mov	r18,r17
   49a98:	9dc00044 	addi	r23,r19,1
   49a9c:	9a000005 	stb	r8,0(r19)
   49aa0:	a023883a 	mov	r17,r20
   49aa4:	dc000915 	stw	r16,36(sp)
   49aa8:	003f2406 	br	4973c <__alt_data_end+0xfffc973c>
   49aac:	00800e44 	movi	r2,57
   49ab0:	9011883a 	mov	r8,r18
   49ab4:	90816626 	beq	r18,r2,4a050 <_dtoa_r+0x152c>
   49ab8:	05bff516 	blt	zero,r22,49a90 <__alt_data_end+0xfffc9a90>
   49abc:	003ff506 	br	49a94 <__alt_data_end+0xfffc9a94>
   49ac0:	004c2900 	call	4c290 <__multadd>
   49ac4:	1023883a 	mov	r17,r2
   49ac8:	1029883a 	mov	r20,r2
   49acc:	003fdf06 	br	49a4c <__alt_data_end+0xfffc9a4c>
   49ad0:	e009883a 	mov	r4,fp
   49ad4:	004c2680 	call	4c268 <_Bfree>
   49ad8:	00800044 	movi	r2,1
   49adc:	003fbc06 	br	499d0 <__alt_data_end+0xfffc99d0>
   49ae0:	a80b883a 	mov	r5,r21
   49ae4:	8009883a 	mov	r4,r16
   49ae8:	004ca880 	call	4ca88 <__mcmp>
   49aec:	103edb0e 	bge	r2,zero,4965c <__alt_data_end+0xfffc965c>
   49af0:	800b883a 	mov	r5,r16
   49af4:	000f883a 	mov	r7,zero
   49af8:	01800284 	movi	r6,10
   49afc:	e009883a 	mov	r4,fp
   49b00:	004c2900 	call	4c290 <__multadd>
   49b04:	1021883a 	mov	r16,r2
   49b08:	d8800517 	ldw	r2,20(sp)
   49b0c:	d8c00b17 	ldw	r3,44(sp)
   49b10:	10bfffc4 	addi	r2,r2,-1
   49b14:	d8800515 	stw	r2,20(sp)
   49b18:	183f761e 	bne	r3,zero,498f4 <__alt_data_end+0xfffc98f4>
   49b1c:	d9000c17 	ldw	r4,48(sp)
   49b20:	0101730e 	bge	zero,r4,4a0f0 <_dtoa_r+0x15cc>
   49b24:	d9000615 	stw	r4,24(sp)
   49b28:	003ed006 	br	4966c <__alt_data_end+0xfffc966c>
   49b2c:	00800084 	movi	r2,2
   49b30:	3081861e 	bne	r6,r2,4a14c <_dtoa_r+0x1628>
   49b34:	d8000b15 	stw	zero,44(sp)
   49b38:	003f3c06 	br	4982c <__alt_data_end+0xfffc982c>
   49b3c:	dc000917 	ldw	r16,36(sp)
   49b40:	003e9206 	br	4958c <__alt_data_end+0xfffc958c>
   49b44:	d9c00317 	ldw	r7,12(sp)
   49b48:	00800084 	movi	r2,2
   49b4c:	11fec50e 	bge	r2,r7,49664 <__alt_data_end+0xfffc9664>
   49b50:	d9000617 	ldw	r4,24(sp)
   49b54:	20013c1e 	bne	r4,zero,4a048 <_dtoa_r+0x1524>
   49b58:	a80b883a 	mov	r5,r21
   49b5c:	000f883a 	mov	r7,zero
   49b60:	01800144 	movi	r6,5
   49b64:	e009883a 	mov	r4,fp
   49b68:	004c2900 	call	4c290 <__multadd>
   49b6c:	100b883a 	mov	r5,r2
   49b70:	8009883a 	mov	r4,r16
   49b74:	102b883a 	mov	r21,r2
   49b78:	004ca880 	call	4ca88 <__mcmp>
   49b7c:	dc000915 	stw	r16,36(sp)
   49b80:	00bf410e 	bge	zero,r2,49888 <__alt_data_end+0xfffc9888>
   49b84:	d9c00717 	ldw	r7,28(sp)
   49b88:	00800c44 	movi	r2,49
   49b8c:	38800005 	stb	r2,0(r7)
   49b90:	d8800517 	ldw	r2,20(sp)
   49b94:	3dc00044 	addi	r23,r7,1
   49b98:	10800044 	addi	r2,r2,1
   49b9c:	d8800515 	stw	r2,20(sp)
   49ba0:	003f3d06 	br	49898 <__alt_data_end+0xfffc9898>
   49ba4:	d9800517 	ldw	r6,20(sp)
   49ba8:	d9c00717 	ldw	r7,28(sp)
   49bac:	00800c44 	movi	r2,49
   49bb0:	31800044 	addi	r6,r6,1
   49bb4:	d9800515 	stw	r6,20(sp)
   49bb8:	38800005 	stb	r2,0(r7)
   49bbc:	003edf06 	br	4973c <__alt_data_end+0xfffc973c>
   49bc0:	d8000b15 	stw	zero,44(sp)
   49bc4:	003c9f06 	br	48e44 <__alt_data_end+0xfffc8e44>
   49bc8:	903e7e1e 	bne	r18,zero,495c4 <__alt_data_end+0xfffc95c4>
   49bcc:	00800434 	movhi	r2,16
   49bd0:	10bfffc4 	addi	r2,r2,-1
   49bd4:	9884703a 	and	r2,r19,r2
   49bd8:	1000ea1e 	bne	r2,zero,49f84 <_dtoa_r+0x1460>
   49bdc:	9cdffc2c 	andhi	r19,r19,32752
   49be0:	9800e826 	beq	r19,zero,49f84 <_dtoa_r+0x1460>
   49be4:	d9c00817 	ldw	r7,32(sp)
   49be8:	b5800044 	addi	r22,r22,1
   49bec:	04c00044 	movi	r19,1
   49bf0:	39c00044 	addi	r7,r7,1
   49bf4:	d9c00815 	stw	r7,32(sp)
   49bf8:	d8800d17 	ldw	r2,52(sp)
   49bfc:	103e721e 	bne	r2,zero,495c8 <__alt_data_end+0xfffc95c8>
   49c00:	00800044 	movi	r2,1
   49c04:	003e7906 	br	495ec <__alt_data_end+0xfffc95ec>
   49c08:	8009883a 	mov	r4,r16
   49c0c:	0045f300 	call	45f30 <__floatsidf>
   49c10:	d9800f17 	ldw	r6,60(sp)
   49c14:	d9c01017 	ldw	r7,64(sp)
   49c18:	1009883a 	mov	r4,r2
   49c1c:	180b883a 	mov	r5,r3
   49c20:	0044e9c0 	call	44e9c <__muldf3>
   49c24:	000d883a 	mov	r6,zero
   49c28:	01d00734 	movhi	r7,16412
   49c2c:	1009883a 	mov	r4,r2
   49c30:	180b883a 	mov	r5,r3
   49c34:	004448c0 	call	4448c <__adddf3>
   49c38:	047f3034 	movhi	r17,64704
   49c3c:	1021883a 	mov	r16,r2
   49c40:	1c63883a 	add	r17,r3,r17
   49c44:	d9000f17 	ldw	r4,60(sp)
   49c48:	d9401017 	ldw	r5,64(sp)
   49c4c:	000d883a 	mov	r6,zero
   49c50:	01d00534 	movhi	r7,16404
   49c54:	00455b40 	call	455b4 <__subdf3>
   49c58:	800d883a 	mov	r6,r16
   49c5c:	880f883a 	mov	r7,r17
   49c60:	1009883a 	mov	r4,r2
   49c64:	180b883a 	mov	r5,r3
   49c68:	102b883a 	mov	r21,r2
   49c6c:	1829883a 	mov	r20,r3
   49c70:	0044dc00 	call	44dc0 <__gedf2>
   49c74:	00806c16 	blt	zero,r2,49e28 <_dtoa_r+0x1304>
   49c78:	89e0003c 	xorhi	r7,r17,32768
   49c7c:	800d883a 	mov	r6,r16
   49c80:	a809883a 	mov	r4,r21
   49c84:	a00b883a 	mov	r5,r20
   49c88:	0050d140 	call	50d14 <__ledf2>
   49c8c:	103d7e0e 	bge	r2,zero,49288 <__alt_data_end+0xfffc9288>
   49c90:	002b883a 	mov	r21,zero
   49c94:	0023883a 	mov	r17,zero
   49c98:	003efb06 	br	49888 <__alt_data_end+0xfffc9888>
   49c9c:	d8800717 	ldw	r2,28(sp)
   49ca0:	003bd006 	br	48be4 <__alt_data_end+0xfffc8be4>
   49ca4:	d9000a17 	ldw	r4,40(sp)
   49ca8:	d9800d17 	ldw	r6,52(sp)
   49cac:	dd400a15 	stw	r21,40(sp)
   49cb0:	a905c83a 	sub	r2,r21,r4
   49cb4:	308d883a 	add	r6,r6,r2
   49cb8:	d9800d15 	stw	r6,52(sp)
   49cbc:	002b883a 	mov	r21,zero
   49cc0:	003e0606 	br	494dc <__alt_data_end+0xfffc94dc>
   49cc4:	9023883a 	mov	r17,r18
   49cc8:	9829883a 	mov	r20,r19
   49ccc:	04000084 	movi	r16,2
   49cd0:	003c9206 	br	48f1c <__alt_data_end+0xfffc8f1c>
   49cd4:	04000044 	movi	r16,1
   49cd8:	dc000c15 	stw	r16,48(sp)
   49cdc:	dc000615 	stw	r16,24(sp)
   49ce0:	dc002215 	stw	r16,136(sp)
   49ce4:	e0001115 	stw	zero,68(fp)
   49ce8:	000b883a 	mov	r5,zero
   49cec:	003c6906 	br	48e94 <__alt_data_end+0xfffc8e94>
   49cf0:	3021883a 	mov	r16,r6
   49cf4:	003ffb06 	br	49ce4 <__alt_data_end+0xfffc9ce4>
   49cf8:	1000021e 	bne	r2,zero,49d04 <_dtoa_r+0x11e0>
   49cfc:	4200004c 	andi	r8,r8,1
   49d00:	403e7d1e 	bne	r8,zero,496f8 <__alt_data_end+0xfffc96f8>
   49d04:	01000c04 	movi	r4,48
   49d08:	00000106 	br	49d10 <_dtoa_r+0x11ec>
   49d0c:	102f883a 	mov	r23,r2
   49d10:	b8bfffc4 	addi	r2,r23,-1
   49d14:	10c00007 	ldb	r3,0(r2)
   49d18:	193ffc26 	beq	r3,r4,49d0c <__alt_data_end+0xfffc9d0c>
   49d1c:	003e8706 	br	4973c <__alt_data_end+0xfffc973c>
   49d20:	d8800517 	ldw	r2,20(sp)
   49d24:	00a3c83a 	sub	r17,zero,r2
   49d28:	8800a426 	beq	r17,zero,49fbc <_dtoa_r+0x1498>
   49d2c:	888003cc 	andi	r2,r17,15
   49d30:	100490fa 	slli	r2,r2,3
   49d34:	00c00174 	movhi	r3,5
   49d38:	18cf1304 	addi	r3,r3,15436
   49d3c:	1885883a 	add	r2,r3,r2
   49d40:	11800017 	ldw	r6,0(r2)
   49d44:	11c00117 	ldw	r7,4(r2)
   49d48:	9009883a 	mov	r4,r18
   49d4c:	980b883a 	mov	r5,r19
   49d50:	8823d13a 	srai	r17,r17,4
   49d54:	0044e9c0 	call	44e9c <__muldf3>
   49d58:	d8800f15 	stw	r2,60(sp)
   49d5c:	d8c01015 	stw	r3,64(sp)
   49d60:	8800e826 	beq	r17,zero,4a104 <_dtoa_r+0x15e0>
   49d64:	05000174 	movhi	r20,5
   49d68:	a50f0904 	addi	r20,r20,15396
   49d6c:	04000084 	movi	r16,2
   49d70:	8980004c 	andi	r6,r17,1
   49d74:	1009883a 	mov	r4,r2
   49d78:	8823d07a 	srai	r17,r17,1
   49d7c:	180b883a 	mov	r5,r3
   49d80:	30000426 	beq	r6,zero,49d94 <_dtoa_r+0x1270>
   49d84:	a1800017 	ldw	r6,0(r20)
   49d88:	a1c00117 	ldw	r7,4(r20)
   49d8c:	84000044 	addi	r16,r16,1
   49d90:	0044e9c0 	call	44e9c <__muldf3>
   49d94:	a5000204 	addi	r20,r20,8
   49d98:	883ff51e 	bne	r17,zero,49d70 <__alt_data_end+0xfffc9d70>
   49d9c:	d8800f15 	stw	r2,60(sp)
   49da0:	d8c01015 	stw	r3,64(sp)
   49da4:	003c7606 	br	48f80 <__alt_data_end+0xfffc8f80>
   49da8:	00c00c04 	movi	r3,48
   49dac:	10c00005 	stb	r3,0(r2)
   49db0:	d8c00517 	ldw	r3,20(sp)
   49db4:	bd3fffc3 	ldbu	r20,-1(r23)
   49db8:	18c00044 	addi	r3,r3,1
   49dbc:	d8c00515 	stw	r3,20(sp)
   49dc0:	003db906 	br	494a8 <__alt_data_end+0xfffc94a8>
   49dc4:	89400117 	ldw	r5,4(r17)
   49dc8:	e009883a 	mov	r4,fp
   49dcc:	004c1c00 	call	4c1c0 <_Balloc>
   49dd0:	89800417 	ldw	r6,16(r17)
   49dd4:	89400304 	addi	r5,r17,12
   49dd8:	11000304 	addi	r4,r2,12
   49ddc:	31800084 	addi	r6,r6,2
   49de0:	318d883a 	add	r6,r6,r6
   49de4:	318d883a 	add	r6,r6,r6
   49de8:	1027883a 	mov	r19,r2
   49dec:	004bdf40 	call	4bdf4 <memcpy>
   49df0:	01800044 	movi	r6,1
   49df4:	980b883a 	mov	r5,r19
   49df8:	e009883a 	mov	r4,fp
   49dfc:	004c9400 	call	4c940 <__lshift>
   49e00:	1029883a 	mov	r20,r2
   49e04:	003ecc06 	br	49938 <__alt_data_end+0xfffc9938>
   49e08:	00800e44 	movi	r2,57
   49e0c:	90809026 	beq	r18,r2,4a050 <_dtoa_r+0x152c>
   49e10:	92000044 	addi	r8,r18,1
   49e14:	003f1f06 	br	49a94 <__alt_data_end+0xfffc9a94>
   49e18:	9011883a 	mov	r8,r18
   49e1c:	8825883a 	mov	r18,r17
   49e20:	a023883a 	mov	r17,r20
   49e24:	003e2906 	br	496cc <__alt_data_end+0xfffc96cc>
   49e28:	002b883a 	mov	r21,zero
   49e2c:	0023883a 	mov	r17,zero
   49e30:	003f5406 	br	49b84 <__alt_data_end+0xfffc9b84>
   49e34:	61bfffc4 	addi	r6,r12,-1
   49e38:	300490fa 	slli	r2,r6,3
   49e3c:	00c00174 	movhi	r3,5
   49e40:	18cf1304 	addi	r3,r3,15436
   49e44:	1885883a 	add	r2,r3,r2
   49e48:	11000017 	ldw	r4,0(r2)
   49e4c:	11400117 	ldw	r5,4(r2)
   49e50:	d8800717 	ldw	r2,28(sp)
   49e54:	880f883a 	mov	r7,r17
   49e58:	d9801215 	stw	r6,72(sp)
   49e5c:	800d883a 	mov	r6,r16
   49e60:	db001615 	stw	r12,88(sp)
   49e64:	15c00044 	addi	r23,r2,1
   49e68:	0044e9c0 	call	44e9c <__muldf3>
   49e6c:	d9401017 	ldw	r5,64(sp)
   49e70:	d9000f17 	ldw	r4,60(sp)
   49e74:	d8c01515 	stw	r3,84(sp)
   49e78:	d8801415 	stw	r2,80(sp)
   49e7c:	0045eb00 	call	45eb0 <__fixdfsi>
   49e80:	1009883a 	mov	r4,r2
   49e84:	1021883a 	mov	r16,r2
   49e88:	0045f300 	call	45f30 <__floatsidf>
   49e8c:	d9000f17 	ldw	r4,60(sp)
   49e90:	d9401017 	ldw	r5,64(sp)
   49e94:	100d883a 	mov	r6,r2
   49e98:	180f883a 	mov	r7,r3
   49e9c:	00455b40 	call	455b4 <__subdf3>
   49ea0:	1829883a 	mov	r20,r3
   49ea4:	d8c00717 	ldw	r3,28(sp)
   49ea8:	84000c04 	addi	r16,r16,48
   49eac:	1023883a 	mov	r17,r2
   49eb0:	1c000005 	stb	r16,0(r3)
   49eb4:	db001617 	ldw	r12,88(sp)
   49eb8:	00800044 	movi	r2,1
   49ebc:	60802226 	beq	r12,r2,49f48 <_dtoa_r+0x1424>
   49ec0:	d9c00717 	ldw	r7,28(sp)
   49ec4:	8805883a 	mov	r2,r17
   49ec8:	b82b883a 	mov	r21,r23
   49ecc:	3b19883a 	add	r12,r7,r12
   49ed0:	6023883a 	mov	r17,r12
   49ed4:	a007883a 	mov	r3,r20
   49ed8:	dc800f15 	stw	r18,60(sp)
   49edc:	000d883a 	mov	r6,zero
   49ee0:	01d00934 	movhi	r7,16420
   49ee4:	1009883a 	mov	r4,r2
   49ee8:	180b883a 	mov	r5,r3
   49eec:	0044e9c0 	call	44e9c <__muldf3>
   49ef0:	180b883a 	mov	r5,r3
   49ef4:	1009883a 	mov	r4,r2
   49ef8:	1829883a 	mov	r20,r3
   49efc:	1025883a 	mov	r18,r2
   49f00:	0045eb00 	call	45eb0 <__fixdfsi>
   49f04:	1009883a 	mov	r4,r2
   49f08:	1021883a 	mov	r16,r2
   49f0c:	0045f300 	call	45f30 <__floatsidf>
   49f10:	100d883a 	mov	r6,r2
   49f14:	180f883a 	mov	r7,r3
   49f18:	9009883a 	mov	r4,r18
   49f1c:	a00b883a 	mov	r5,r20
   49f20:	84000c04 	addi	r16,r16,48
   49f24:	00455b40 	call	455b4 <__subdf3>
   49f28:	ad400044 	addi	r21,r21,1
   49f2c:	ac3fffc5 	stb	r16,-1(r21)
   49f30:	ac7fea1e 	bne	r21,r17,49edc <__alt_data_end+0xfffc9edc>
   49f34:	1023883a 	mov	r17,r2
   49f38:	d8801217 	ldw	r2,72(sp)
   49f3c:	dc800f17 	ldw	r18,60(sp)
   49f40:	1829883a 	mov	r20,r3
   49f44:	b8af883a 	add	r23,r23,r2
   49f48:	d9001417 	ldw	r4,80(sp)
   49f4c:	d9401517 	ldw	r5,84(sp)
   49f50:	000d883a 	mov	r6,zero
   49f54:	01cff834 	movhi	r7,16352
   49f58:	004448c0 	call	4448c <__adddf3>
   49f5c:	880d883a 	mov	r6,r17
   49f60:	a00f883a 	mov	r7,r20
   49f64:	1009883a 	mov	r4,r2
   49f68:	180b883a 	mov	r5,r3
   49f6c:	0050d140 	call	50d14 <__ledf2>
   49f70:	10003e0e 	bge	r2,zero,4a06c <_dtoa_r+0x1548>
   49f74:	d9001317 	ldw	r4,76(sp)
   49f78:	bd3fffc3 	ldbu	r20,-1(r23)
   49f7c:	d9000515 	stw	r4,20(sp)
   49f80:	003d3b06 	br	49470 <__alt_data_end+0xfffc9470>
   49f84:	0027883a 	mov	r19,zero
   49f88:	003f1b06 	br	49bf8 <__alt_data_end+0xfffc9bf8>
   49f8c:	d8800817 	ldw	r2,32(sp)
   49f90:	11e9c83a 	sub	r20,r2,r7
   49f94:	0005883a 	mov	r2,zero
   49f98:	003d5406 	br	494ec <__alt_data_end+0xfffc94ec>
   49f9c:	00800044 	movi	r2,1
   49fa0:	003dc706 	br	496c0 <__alt_data_end+0xfffc96c0>
   49fa4:	d8c00217 	ldw	r3,8(sp)
   49fa8:	00800d84 	movi	r2,54
   49fac:	dd400a17 	ldw	r21,40(sp)
   49fb0:	10c5c83a 	sub	r2,r2,r3
   49fb4:	dd000817 	ldw	r20,32(sp)
   49fb8:	003d4c06 	br	494ec <__alt_data_end+0xfffc94ec>
   49fbc:	dc800f15 	stw	r18,60(sp)
   49fc0:	dcc01015 	stw	r19,64(sp)
   49fc4:	04000084 	movi	r16,2
   49fc8:	003bed06 	br	48f80 <__alt_data_end+0xfffc8f80>
   49fcc:	d9000617 	ldw	r4,24(sp)
   49fd0:	203f0d26 	beq	r4,zero,49c08 <__alt_data_end+0xfffc9c08>
   49fd4:	d9800c17 	ldw	r6,48(sp)
   49fd8:	01bcab0e 	bge	zero,r6,49288 <__alt_data_end+0xfffc9288>
   49fdc:	d9401017 	ldw	r5,64(sp)
   49fe0:	d9000f17 	ldw	r4,60(sp)
   49fe4:	000d883a 	mov	r6,zero
   49fe8:	01d00934 	movhi	r7,16420
   49fec:	0044e9c0 	call	44e9c <__muldf3>
   49ff0:	81000044 	addi	r4,r16,1
   49ff4:	d8800f15 	stw	r2,60(sp)
   49ff8:	d8c01015 	stw	r3,64(sp)
   49ffc:	0045f300 	call	45f30 <__floatsidf>
   4a000:	d9800f17 	ldw	r6,60(sp)
   4a004:	d9c01017 	ldw	r7,64(sp)
   4a008:	1009883a 	mov	r4,r2
   4a00c:	180b883a 	mov	r5,r3
   4a010:	0044e9c0 	call	44e9c <__muldf3>
   4a014:	01d00734 	movhi	r7,16412
   4a018:	000d883a 	mov	r6,zero
   4a01c:	1009883a 	mov	r4,r2
   4a020:	180b883a 	mov	r5,r3
   4a024:	004448c0 	call	4448c <__adddf3>
   4a028:	d9c00517 	ldw	r7,20(sp)
   4a02c:	047f3034 	movhi	r17,64704
   4a030:	1021883a 	mov	r16,r2
   4a034:	39ffffc4 	addi	r7,r7,-1
   4a038:	d9c01315 	stw	r7,76(sp)
   4a03c:	1c63883a 	add	r17,r3,r17
   4a040:	db000c17 	ldw	r12,48(sp)
   4a044:	003bea06 	br	48ff0 <__alt_data_end+0xfffc8ff0>
   4a048:	dc000915 	stw	r16,36(sp)
   4a04c:	003e0e06 	br	49888 <__alt_data_end+0xfffc9888>
   4a050:	01000e44 	movi	r4,57
   4a054:	8825883a 	mov	r18,r17
   4a058:	9dc00044 	addi	r23,r19,1
   4a05c:	99000005 	stb	r4,0(r19)
   4a060:	a023883a 	mov	r17,r20
   4a064:	dc000915 	stw	r16,36(sp)
   4a068:	003da406 	br	496fc <__alt_data_end+0xfffc96fc>
   4a06c:	d9801417 	ldw	r6,80(sp)
   4a070:	d9c01517 	ldw	r7,84(sp)
   4a074:	0009883a 	mov	r4,zero
   4a078:	014ff834 	movhi	r5,16352
   4a07c:	00455b40 	call	455b4 <__subdf3>
   4a080:	880d883a 	mov	r6,r17
   4a084:	a00f883a 	mov	r7,r20
   4a088:	1009883a 	mov	r4,r2
   4a08c:	180b883a 	mov	r5,r3
   4a090:	0044dc00 	call	44dc0 <__gedf2>
   4a094:	00bc7c0e 	bge	zero,r2,49288 <__alt_data_end+0xfffc9288>
   4a098:	01000c04 	movi	r4,48
   4a09c:	00000106 	br	4a0a4 <_dtoa_r+0x1580>
   4a0a0:	102f883a 	mov	r23,r2
   4a0a4:	b8bfffc4 	addi	r2,r23,-1
   4a0a8:	10c00007 	ldb	r3,0(r2)
   4a0ac:	193ffc26 	beq	r3,r4,4a0a0 <__alt_data_end+0xfffca0a0>
   4a0b0:	d9801317 	ldw	r6,76(sp)
   4a0b4:	d9800515 	stw	r6,20(sp)
   4a0b8:	003c4406 	br	491cc <__alt_data_end+0xfffc91cc>
   4a0bc:	d9801317 	ldw	r6,76(sp)
   4a0c0:	d9800515 	stw	r6,20(sp)
   4a0c4:	003cea06 	br	49470 <__alt_data_end+0xfffc9470>
   4a0c8:	dd800f17 	ldw	r22,60(sp)
   4a0cc:	dcc01017 	ldw	r19,64(sp)
   4a0d0:	dc801217 	ldw	r18,72(sp)
   4a0d4:	003c6c06 	br	49288 <__alt_data_end+0xfffc9288>
   4a0d8:	903e031e 	bne	r18,zero,498e8 <__alt_data_end+0xfffc98e8>
   4a0dc:	003ebb06 	br	49bcc <__alt_data_end+0xfffc9bcc>
   4a0e0:	103e6c1e 	bne	r2,zero,49a94 <__alt_data_end+0xfffc9a94>
   4a0e4:	4080004c 	andi	r2,r8,1
   4a0e8:	103e6a26 	beq	r2,zero,49a94 <__alt_data_end+0xfffc9a94>
   4a0ec:	003e6606 	br	49a88 <__alt_data_end+0xfffc9a88>
   4a0f0:	d8c00317 	ldw	r3,12(sp)
   4a0f4:	00800084 	movi	r2,2
   4a0f8:	10c02916 	blt	r2,r3,4a1a0 <_dtoa_r+0x167c>
   4a0fc:	d9000c17 	ldw	r4,48(sp)
   4a100:	003e8806 	br	49b24 <__alt_data_end+0xfffc9b24>
   4a104:	04000084 	movi	r16,2
   4a108:	003b9d06 	br	48f80 <__alt_data_end+0xfffc8f80>
   4a10c:	d9001317 	ldw	r4,76(sp)
   4a110:	d9000515 	stw	r4,20(sp)
   4a114:	003cd606 	br	49470 <__alt_data_end+0xfffc9470>
   4a118:	d8801317 	ldw	r2,76(sp)
   4a11c:	d8800515 	stw	r2,20(sp)
   4a120:	003c2a06 	br	491cc <__alt_data_end+0xfffc91cc>
   4a124:	d9800317 	ldw	r6,12(sp)
   4a128:	00800084 	movi	r2,2
   4a12c:	11801516 	blt	r2,r6,4a184 <_dtoa_r+0x1660>
   4a130:	d9c00c17 	ldw	r7,48(sp)
   4a134:	d9c00615 	stw	r7,24(sp)
   4a138:	003df706 	br	49918 <__alt_data_end+0xfffc9918>
   4a13c:	193d3926 	beq	r3,r4,49624 <__alt_data_end+0xfffc9624>
   4a140:	00c00f04 	movi	r3,60
   4a144:	1885c83a 	sub	r2,r3,r2
   4a148:	003ddf06 	br	498c8 <__alt_data_end+0xfffc98c8>
   4a14c:	e009883a 	mov	r4,fp
   4a150:	e0001115 	stw	zero,68(fp)
   4a154:	000b883a 	mov	r5,zero
   4a158:	004c1c00 	call	4c1c0 <_Balloc>
   4a15c:	d8800715 	stw	r2,28(sp)
   4a160:	d8c00717 	ldw	r3,28(sp)
   4a164:	00bfffc4 	movi	r2,-1
   4a168:	01000044 	movi	r4,1
   4a16c:	d8800c15 	stw	r2,48(sp)
   4a170:	e0c01015 	stw	r3,64(fp)
   4a174:	d9000b15 	stw	r4,44(sp)
   4a178:	d8800615 	stw	r2,24(sp)
   4a17c:	d8002215 	stw	zero,136(sp)
   4a180:	003c4106 	br	49288 <__alt_data_end+0xfffc9288>
   4a184:	d8c00c17 	ldw	r3,48(sp)
   4a188:	d8c00615 	stw	r3,24(sp)
   4a18c:	003e7006 	br	49b50 <__alt_data_end+0xfffc9b50>
   4a190:	04400044 	movi	r17,1
   4a194:	003b2006 	br	48e18 <__alt_data_end+0xfffc8e18>
   4a198:	000b883a 	mov	r5,zero
   4a19c:	003b3d06 	br	48e94 <__alt_data_end+0xfffc8e94>
   4a1a0:	d8800c17 	ldw	r2,48(sp)
   4a1a4:	d8800615 	stw	r2,24(sp)
   4a1a8:	003e6906 	br	49b50 <__alt_data_end+0xfffc9b50>

0004a1ac <__sflush_r>:
   4a1ac:	2880030b 	ldhu	r2,12(r5)
   4a1b0:	defffb04 	addi	sp,sp,-20
   4a1b4:	dcc00315 	stw	r19,12(sp)
   4a1b8:	dc400115 	stw	r17,4(sp)
   4a1bc:	dfc00415 	stw	ra,16(sp)
   4a1c0:	dc800215 	stw	r18,8(sp)
   4a1c4:	dc000015 	stw	r16,0(sp)
   4a1c8:	10c0020c 	andi	r3,r2,8
   4a1cc:	2823883a 	mov	r17,r5
   4a1d0:	2027883a 	mov	r19,r4
   4a1d4:	1800311e 	bne	r3,zero,4a29c <__sflush_r+0xf0>
   4a1d8:	28c00117 	ldw	r3,4(r5)
   4a1dc:	10820014 	ori	r2,r2,2048
   4a1e0:	2880030d 	sth	r2,12(r5)
   4a1e4:	00c04b0e 	bge	zero,r3,4a314 <__sflush_r+0x168>
   4a1e8:	8a000a17 	ldw	r8,40(r17)
   4a1ec:	40002326 	beq	r8,zero,4a27c <__sflush_r+0xd0>
   4a1f0:	9c000017 	ldw	r16,0(r19)
   4a1f4:	10c4000c 	andi	r3,r2,4096
   4a1f8:	98000015 	stw	zero,0(r19)
   4a1fc:	18004826 	beq	r3,zero,4a320 <__sflush_r+0x174>
   4a200:	89801417 	ldw	r6,80(r17)
   4a204:	10c0010c 	andi	r3,r2,4
   4a208:	18000626 	beq	r3,zero,4a224 <__sflush_r+0x78>
   4a20c:	88c00117 	ldw	r3,4(r17)
   4a210:	88800c17 	ldw	r2,48(r17)
   4a214:	30cdc83a 	sub	r6,r6,r3
   4a218:	10000226 	beq	r2,zero,4a224 <__sflush_r+0x78>
   4a21c:	88800f17 	ldw	r2,60(r17)
   4a220:	308dc83a 	sub	r6,r6,r2
   4a224:	89400717 	ldw	r5,28(r17)
   4a228:	000f883a 	mov	r7,zero
   4a22c:	9809883a 	mov	r4,r19
   4a230:	403ee83a 	callr	r8
   4a234:	00ffffc4 	movi	r3,-1
   4a238:	10c04426 	beq	r2,r3,4a34c <__sflush_r+0x1a0>
   4a23c:	88c0030b 	ldhu	r3,12(r17)
   4a240:	89000417 	ldw	r4,16(r17)
   4a244:	88000115 	stw	zero,4(r17)
   4a248:	197dffcc 	andi	r5,r3,63487
   4a24c:	8940030d 	sth	r5,12(r17)
   4a250:	89000015 	stw	r4,0(r17)
   4a254:	18c4000c 	andi	r3,r3,4096
   4a258:	18002c1e 	bne	r3,zero,4a30c <__sflush_r+0x160>
   4a25c:	89400c17 	ldw	r5,48(r17)
   4a260:	9c000015 	stw	r16,0(r19)
   4a264:	28000526 	beq	r5,zero,4a27c <__sflush_r+0xd0>
   4a268:	88801004 	addi	r2,r17,64
   4a26c:	28800226 	beq	r5,r2,4a278 <__sflush_r+0xcc>
   4a270:	9809883a 	mov	r4,r19
   4a274:	004a9180 	call	4a918 <_free_r>
   4a278:	88000c15 	stw	zero,48(r17)
   4a27c:	0005883a 	mov	r2,zero
   4a280:	dfc00417 	ldw	ra,16(sp)
   4a284:	dcc00317 	ldw	r19,12(sp)
   4a288:	dc800217 	ldw	r18,8(sp)
   4a28c:	dc400117 	ldw	r17,4(sp)
   4a290:	dc000017 	ldw	r16,0(sp)
   4a294:	dec00504 	addi	sp,sp,20
   4a298:	f800283a 	ret
   4a29c:	2c800417 	ldw	r18,16(r5)
   4a2a0:	903ff626 	beq	r18,zero,4a27c <__alt_data_end+0xfffca27c>
   4a2a4:	2c000017 	ldw	r16,0(r5)
   4a2a8:	108000cc 	andi	r2,r2,3
   4a2ac:	2c800015 	stw	r18,0(r5)
   4a2b0:	84a1c83a 	sub	r16,r16,r18
   4a2b4:	1000131e 	bne	r2,zero,4a304 <__sflush_r+0x158>
   4a2b8:	28800517 	ldw	r2,20(r5)
   4a2bc:	88800215 	stw	r2,8(r17)
   4a2c0:	04000316 	blt	zero,r16,4a2d0 <__sflush_r+0x124>
   4a2c4:	003fed06 	br	4a27c <__alt_data_end+0xfffca27c>
   4a2c8:	90a5883a 	add	r18,r18,r2
   4a2cc:	043feb0e 	bge	zero,r16,4a27c <__alt_data_end+0xfffca27c>
   4a2d0:	88800917 	ldw	r2,36(r17)
   4a2d4:	89400717 	ldw	r5,28(r17)
   4a2d8:	800f883a 	mov	r7,r16
   4a2dc:	900d883a 	mov	r6,r18
   4a2e0:	9809883a 	mov	r4,r19
   4a2e4:	103ee83a 	callr	r2
   4a2e8:	80a1c83a 	sub	r16,r16,r2
   4a2ec:	00bff616 	blt	zero,r2,4a2c8 <__alt_data_end+0xfffca2c8>
   4a2f0:	88c0030b 	ldhu	r3,12(r17)
   4a2f4:	00bfffc4 	movi	r2,-1
   4a2f8:	18c01014 	ori	r3,r3,64
   4a2fc:	88c0030d 	sth	r3,12(r17)
   4a300:	003fdf06 	br	4a280 <__alt_data_end+0xfffca280>
   4a304:	0005883a 	mov	r2,zero
   4a308:	003fec06 	br	4a2bc <__alt_data_end+0xfffca2bc>
   4a30c:	88801415 	stw	r2,80(r17)
   4a310:	003fd206 	br	4a25c <__alt_data_end+0xfffca25c>
   4a314:	28c00f17 	ldw	r3,60(r5)
   4a318:	00ffb316 	blt	zero,r3,4a1e8 <__alt_data_end+0xfffca1e8>
   4a31c:	003fd706 	br	4a27c <__alt_data_end+0xfffca27c>
   4a320:	89400717 	ldw	r5,28(r17)
   4a324:	000d883a 	mov	r6,zero
   4a328:	01c00044 	movi	r7,1
   4a32c:	9809883a 	mov	r4,r19
   4a330:	403ee83a 	callr	r8
   4a334:	100d883a 	mov	r6,r2
   4a338:	00bfffc4 	movi	r2,-1
   4a33c:	30801426 	beq	r6,r2,4a390 <__sflush_r+0x1e4>
   4a340:	8880030b 	ldhu	r2,12(r17)
   4a344:	8a000a17 	ldw	r8,40(r17)
   4a348:	003fae06 	br	4a204 <__alt_data_end+0xfffca204>
   4a34c:	98c00017 	ldw	r3,0(r19)
   4a350:	183fba26 	beq	r3,zero,4a23c <__alt_data_end+0xfffca23c>
   4a354:	01000744 	movi	r4,29
   4a358:	19000626 	beq	r3,r4,4a374 <__sflush_r+0x1c8>
   4a35c:	01000584 	movi	r4,22
   4a360:	19000426 	beq	r3,r4,4a374 <__sflush_r+0x1c8>
   4a364:	88c0030b 	ldhu	r3,12(r17)
   4a368:	18c01014 	ori	r3,r3,64
   4a36c:	88c0030d 	sth	r3,12(r17)
   4a370:	003fc306 	br	4a280 <__alt_data_end+0xfffca280>
   4a374:	8880030b 	ldhu	r2,12(r17)
   4a378:	88c00417 	ldw	r3,16(r17)
   4a37c:	88000115 	stw	zero,4(r17)
   4a380:	10bdffcc 	andi	r2,r2,63487
   4a384:	8880030d 	sth	r2,12(r17)
   4a388:	88c00015 	stw	r3,0(r17)
   4a38c:	003fb306 	br	4a25c <__alt_data_end+0xfffca25c>
   4a390:	98800017 	ldw	r2,0(r19)
   4a394:	103fea26 	beq	r2,zero,4a340 <__alt_data_end+0xfffca340>
   4a398:	00c00744 	movi	r3,29
   4a39c:	10c00226 	beq	r2,r3,4a3a8 <__sflush_r+0x1fc>
   4a3a0:	00c00584 	movi	r3,22
   4a3a4:	10c0031e 	bne	r2,r3,4a3b4 <__sflush_r+0x208>
   4a3a8:	9c000015 	stw	r16,0(r19)
   4a3ac:	0005883a 	mov	r2,zero
   4a3b0:	003fb306 	br	4a280 <__alt_data_end+0xfffca280>
   4a3b4:	88c0030b 	ldhu	r3,12(r17)
   4a3b8:	3005883a 	mov	r2,r6
   4a3bc:	18c01014 	ori	r3,r3,64
   4a3c0:	88c0030d 	sth	r3,12(r17)
   4a3c4:	003fae06 	br	4a280 <__alt_data_end+0xfffca280>

0004a3c8 <_fflush_r>:
   4a3c8:	defffd04 	addi	sp,sp,-12
   4a3cc:	dc000115 	stw	r16,4(sp)
   4a3d0:	dfc00215 	stw	ra,8(sp)
   4a3d4:	2021883a 	mov	r16,r4
   4a3d8:	20000226 	beq	r4,zero,4a3e4 <_fflush_r+0x1c>
   4a3dc:	20800e17 	ldw	r2,56(r4)
   4a3e0:	10000c26 	beq	r2,zero,4a414 <_fflush_r+0x4c>
   4a3e4:	2880030f 	ldh	r2,12(r5)
   4a3e8:	1000051e 	bne	r2,zero,4a400 <_fflush_r+0x38>
   4a3ec:	0005883a 	mov	r2,zero
   4a3f0:	dfc00217 	ldw	ra,8(sp)
   4a3f4:	dc000117 	ldw	r16,4(sp)
   4a3f8:	dec00304 	addi	sp,sp,12
   4a3fc:	f800283a 	ret
   4a400:	8009883a 	mov	r4,r16
   4a404:	dfc00217 	ldw	ra,8(sp)
   4a408:	dc000117 	ldw	r16,4(sp)
   4a40c:	dec00304 	addi	sp,sp,12
   4a410:	004a1ac1 	jmpi	4a1ac <__sflush_r>
   4a414:	d9400015 	stw	r5,0(sp)
   4a418:	004a7a40 	call	4a7a4 <__sinit>
   4a41c:	d9400017 	ldw	r5,0(sp)
   4a420:	003ff006 	br	4a3e4 <__alt_data_end+0xfffca3e4>

0004a424 <fflush>:
   4a424:	20000526 	beq	r4,zero,4a43c <fflush+0x18>
   4a428:	00800174 	movhi	r2,5
   4a42c:	10960604 	addi	r2,r2,22552
   4a430:	200b883a 	mov	r5,r4
   4a434:	11000017 	ldw	r4,0(r2)
   4a438:	004a3c81 	jmpi	4a3c8 <_fflush_r>
   4a43c:	00800174 	movhi	r2,5
   4a440:	10960504 	addi	r2,r2,22548
   4a444:	11000017 	ldw	r4,0(r2)
   4a448:	01400174 	movhi	r5,5
   4a44c:	2968f204 	addi	r5,r5,-23608
   4a450:	004b1a81 	jmpi	4b1a8 <_fwalk_reent>

0004a454 <__fp_unlock>:
   4a454:	0005883a 	mov	r2,zero
   4a458:	f800283a 	ret

0004a45c <_cleanup_r>:
   4a45c:	01400174 	movhi	r5,5
   4a460:	297c7004 	addi	r5,r5,-3648
   4a464:	004b1a81 	jmpi	4b1a8 <_fwalk_reent>

0004a468 <__sinit.part.1>:
   4a468:	defff704 	addi	sp,sp,-36
   4a46c:	00c00174 	movhi	r3,5
   4a470:	dfc00815 	stw	ra,32(sp)
   4a474:	ddc00715 	stw	r23,28(sp)
   4a478:	dd800615 	stw	r22,24(sp)
   4a47c:	dd400515 	stw	r21,20(sp)
   4a480:	dd000415 	stw	r20,16(sp)
   4a484:	dcc00315 	stw	r19,12(sp)
   4a488:	dc800215 	stw	r18,8(sp)
   4a48c:	dc400115 	stw	r17,4(sp)
   4a490:	dc000015 	stw	r16,0(sp)
   4a494:	18e91704 	addi	r3,r3,-23460
   4a498:	24000117 	ldw	r16,4(r4)
   4a49c:	20c00f15 	stw	r3,60(r4)
   4a4a0:	2080bb04 	addi	r2,r4,748
   4a4a4:	00c000c4 	movi	r3,3
   4a4a8:	20c0b915 	stw	r3,740(r4)
   4a4ac:	2080ba15 	stw	r2,744(r4)
   4a4b0:	2000b815 	stw	zero,736(r4)
   4a4b4:	05c00204 	movi	r23,8
   4a4b8:	00800104 	movi	r2,4
   4a4bc:	2025883a 	mov	r18,r4
   4a4c0:	b80d883a 	mov	r6,r23
   4a4c4:	81001704 	addi	r4,r16,92
   4a4c8:	000b883a 	mov	r5,zero
   4a4cc:	80000015 	stw	zero,0(r16)
   4a4d0:	80000115 	stw	zero,4(r16)
   4a4d4:	80000215 	stw	zero,8(r16)
   4a4d8:	8080030d 	sth	r2,12(r16)
   4a4dc:	80001915 	stw	zero,100(r16)
   4a4e0:	8000038d 	sth	zero,14(r16)
   4a4e4:	80000415 	stw	zero,16(r16)
   4a4e8:	80000515 	stw	zero,20(r16)
   4a4ec:	80000615 	stw	zero,24(r16)
   4a4f0:	004c0980 	call	4c098 <memset>
   4a4f4:	05800174 	movhi	r22,5
   4a4f8:	94400217 	ldw	r17,8(r18)
   4a4fc:	05400174 	movhi	r21,5
   4a500:	05000174 	movhi	r20,5
   4a504:	04c00174 	movhi	r19,5
   4a508:	b5b5fa04 	addi	r22,r22,-10264
   4a50c:	ad761104 	addi	r21,r21,-10172
   4a510:	a5363004 	addi	r20,r20,-10048
   4a514:	9cf64704 	addi	r19,r19,-9956
   4a518:	85800815 	stw	r22,32(r16)
   4a51c:	85400915 	stw	r21,36(r16)
   4a520:	85000a15 	stw	r20,40(r16)
   4a524:	84c00b15 	stw	r19,44(r16)
   4a528:	84000715 	stw	r16,28(r16)
   4a52c:	00800284 	movi	r2,10
   4a530:	8880030d 	sth	r2,12(r17)
   4a534:	00800044 	movi	r2,1
   4a538:	b80d883a 	mov	r6,r23
   4a53c:	89001704 	addi	r4,r17,92
   4a540:	000b883a 	mov	r5,zero
   4a544:	88000015 	stw	zero,0(r17)
   4a548:	88000115 	stw	zero,4(r17)
   4a54c:	88000215 	stw	zero,8(r17)
   4a550:	88001915 	stw	zero,100(r17)
   4a554:	8880038d 	sth	r2,14(r17)
   4a558:	88000415 	stw	zero,16(r17)
   4a55c:	88000515 	stw	zero,20(r17)
   4a560:	88000615 	stw	zero,24(r17)
   4a564:	004c0980 	call	4c098 <memset>
   4a568:	94000317 	ldw	r16,12(r18)
   4a56c:	00800484 	movi	r2,18
   4a570:	8c400715 	stw	r17,28(r17)
   4a574:	8d800815 	stw	r22,32(r17)
   4a578:	8d400915 	stw	r21,36(r17)
   4a57c:	8d000a15 	stw	r20,40(r17)
   4a580:	8cc00b15 	stw	r19,44(r17)
   4a584:	8080030d 	sth	r2,12(r16)
   4a588:	00800084 	movi	r2,2
   4a58c:	80000015 	stw	zero,0(r16)
   4a590:	80000115 	stw	zero,4(r16)
   4a594:	80000215 	stw	zero,8(r16)
   4a598:	80001915 	stw	zero,100(r16)
   4a59c:	8080038d 	sth	r2,14(r16)
   4a5a0:	80000415 	stw	zero,16(r16)
   4a5a4:	80000515 	stw	zero,20(r16)
   4a5a8:	80000615 	stw	zero,24(r16)
   4a5ac:	b80d883a 	mov	r6,r23
   4a5b0:	000b883a 	mov	r5,zero
   4a5b4:	81001704 	addi	r4,r16,92
   4a5b8:	004c0980 	call	4c098 <memset>
   4a5bc:	00800044 	movi	r2,1
   4a5c0:	84000715 	stw	r16,28(r16)
   4a5c4:	85800815 	stw	r22,32(r16)
   4a5c8:	85400915 	stw	r21,36(r16)
   4a5cc:	85000a15 	stw	r20,40(r16)
   4a5d0:	84c00b15 	stw	r19,44(r16)
   4a5d4:	90800e15 	stw	r2,56(r18)
   4a5d8:	dfc00817 	ldw	ra,32(sp)
   4a5dc:	ddc00717 	ldw	r23,28(sp)
   4a5e0:	dd800617 	ldw	r22,24(sp)
   4a5e4:	dd400517 	ldw	r21,20(sp)
   4a5e8:	dd000417 	ldw	r20,16(sp)
   4a5ec:	dcc00317 	ldw	r19,12(sp)
   4a5f0:	dc800217 	ldw	r18,8(sp)
   4a5f4:	dc400117 	ldw	r17,4(sp)
   4a5f8:	dc000017 	ldw	r16,0(sp)
   4a5fc:	dec00904 	addi	sp,sp,36
   4a600:	f800283a 	ret

0004a604 <__fp_lock>:
   4a604:	0005883a 	mov	r2,zero
   4a608:	f800283a 	ret

0004a60c <__sfmoreglue>:
   4a60c:	defffc04 	addi	sp,sp,-16
   4a610:	dc400115 	stw	r17,4(sp)
   4a614:	2c7fffc4 	addi	r17,r5,-1
   4a618:	8c401a24 	muli	r17,r17,104
   4a61c:	dc800215 	stw	r18,8(sp)
   4a620:	2825883a 	mov	r18,r5
   4a624:	89401d04 	addi	r5,r17,116
   4a628:	dc000015 	stw	r16,0(sp)
   4a62c:	dfc00315 	stw	ra,12(sp)
   4a630:	004b5040 	call	4b504 <_malloc_r>
   4a634:	1021883a 	mov	r16,r2
   4a638:	10000726 	beq	r2,zero,4a658 <__sfmoreglue+0x4c>
   4a63c:	11000304 	addi	r4,r2,12
   4a640:	10000015 	stw	zero,0(r2)
   4a644:	14800115 	stw	r18,4(r2)
   4a648:	11000215 	stw	r4,8(r2)
   4a64c:	89801a04 	addi	r6,r17,104
   4a650:	000b883a 	mov	r5,zero
   4a654:	004c0980 	call	4c098 <memset>
   4a658:	8005883a 	mov	r2,r16
   4a65c:	dfc00317 	ldw	ra,12(sp)
   4a660:	dc800217 	ldw	r18,8(sp)
   4a664:	dc400117 	ldw	r17,4(sp)
   4a668:	dc000017 	ldw	r16,0(sp)
   4a66c:	dec00404 	addi	sp,sp,16
   4a670:	f800283a 	ret

0004a674 <__sfp>:
   4a674:	defffb04 	addi	sp,sp,-20
   4a678:	dc000015 	stw	r16,0(sp)
   4a67c:	04000174 	movhi	r16,5
   4a680:	84160504 	addi	r16,r16,22548
   4a684:	dcc00315 	stw	r19,12(sp)
   4a688:	2027883a 	mov	r19,r4
   4a68c:	81000017 	ldw	r4,0(r16)
   4a690:	dfc00415 	stw	ra,16(sp)
   4a694:	dc800215 	stw	r18,8(sp)
   4a698:	20800e17 	ldw	r2,56(r4)
   4a69c:	dc400115 	stw	r17,4(sp)
   4a6a0:	1000021e 	bne	r2,zero,4a6ac <__sfp+0x38>
   4a6a4:	004a4680 	call	4a468 <__sinit.part.1>
   4a6a8:	81000017 	ldw	r4,0(r16)
   4a6ac:	2480b804 	addi	r18,r4,736
   4a6b0:	047fffc4 	movi	r17,-1
   4a6b4:	91000117 	ldw	r4,4(r18)
   4a6b8:	94000217 	ldw	r16,8(r18)
   4a6bc:	213fffc4 	addi	r4,r4,-1
   4a6c0:	20000a16 	blt	r4,zero,4a6ec <__sfp+0x78>
   4a6c4:	8080030f 	ldh	r2,12(r16)
   4a6c8:	10000c26 	beq	r2,zero,4a6fc <__sfp+0x88>
   4a6cc:	80c01d04 	addi	r3,r16,116
   4a6d0:	00000206 	br	4a6dc <__sfp+0x68>
   4a6d4:	18bfe60f 	ldh	r2,-104(r3)
   4a6d8:	10000826 	beq	r2,zero,4a6fc <__sfp+0x88>
   4a6dc:	213fffc4 	addi	r4,r4,-1
   4a6e0:	1c3ffd04 	addi	r16,r3,-12
   4a6e4:	18c01a04 	addi	r3,r3,104
   4a6e8:	247ffa1e 	bne	r4,r17,4a6d4 <__alt_data_end+0xfffca6d4>
   4a6ec:	90800017 	ldw	r2,0(r18)
   4a6f0:	10001d26 	beq	r2,zero,4a768 <__sfp+0xf4>
   4a6f4:	1025883a 	mov	r18,r2
   4a6f8:	003fee06 	br	4a6b4 <__alt_data_end+0xfffca6b4>
   4a6fc:	00bfffc4 	movi	r2,-1
   4a700:	8080038d 	sth	r2,14(r16)
   4a704:	00800044 	movi	r2,1
   4a708:	8080030d 	sth	r2,12(r16)
   4a70c:	80001915 	stw	zero,100(r16)
   4a710:	80000015 	stw	zero,0(r16)
   4a714:	80000215 	stw	zero,8(r16)
   4a718:	80000115 	stw	zero,4(r16)
   4a71c:	80000415 	stw	zero,16(r16)
   4a720:	80000515 	stw	zero,20(r16)
   4a724:	80000615 	stw	zero,24(r16)
   4a728:	01800204 	movi	r6,8
   4a72c:	000b883a 	mov	r5,zero
   4a730:	81001704 	addi	r4,r16,92
   4a734:	004c0980 	call	4c098 <memset>
   4a738:	8005883a 	mov	r2,r16
   4a73c:	80000c15 	stw	zero,48(r16)
   4a740:	80000d15 	stw	zero,52(r16)
   4a744:	80001115 	stw	zero,68(r16)
   4a748:	80001215 	stw	zero,72(r16)
   4a74c:	dfc00417 	ldw	ra,16(sp)
   4a750:	dcc00317 	ldw	r19,12(sp)
   4a754:	dc800217 	ldw	r18,8(sp)
   4a758:	dc400117 	ldw	r17,4(sp)
   4a75c:	dc000017 	ldw	r16,0(sp)
   4a760:	dec00504 	addi	sp,sp,20
   4a764:	f800283a 	ret
   4a768:	01400104 	movi	r5,4
   4a76c:	9809883a 	mov	r4,r19
   4a770:	004a60c0 	call	4a60c <__sfmoreglue>
   4a774:	90800015 	stw	r2,0(r18)
   4a778:	103fde1e 	bne	r2,zero,4a6f4 <__alt_data_end+0xfffca6f4>
   4a77c:	00800304 	movi	r2,12
   4a780:	98800015 	stw	r2,0(r19)
   4a784:	0005883a 	mov	r2,zero
   4a788:	003ff006 	br	4a74c <__alt_data_end+0xfffca74c>

0004a78c <_cleanup>:
   4a78c:	00800174 	movhi	r2,5
   4a790:	10960504 	addi	r2,r2,22548
   4a794:	11000017 	ldw	r4,0(r2)
   4a798:	01400174 	movhi	r5,5
   4a79c:	297c7004 	addi	r5,r5,-3648
   4a7a0:	004b1a81 	jmpi	4b1a8 <_fwalk_reent>

0004a7a4 <__sinit>:
   4a7a4:	20800e17 	ldw	r2,56(r4)
   4a7a8:	10000126 	beq	r2,zero,4a7b0 <__sinit+0xc>
   4a7ac:	f800283a 	ret
   4a7b0:	004a4681 	jmpi	4a468 <__sinit.part.1>

0004a7b4 <__sfp_lock_acquire>:
   4a7b4:	f800283a 	ret

0004a7b8 <__sfp_lock_release>:
   4a7b8:	f800283a 	ret

0004a7bc <__sinit_lock_acquire>:
   4a7bc:	f800283a 	ret

0004a7c0 <__sinit_lock_release>:
   4a7c0:	f800283a 	ret

0004a7c4 <__fp_lock_all>:
   4a7c4:	00800174 	movhi	r2,5
   4a7c8:	10960604 	addi	r2,r2,22552
   4a7cc:	11000017 	ldw	r4,0(r2)
   4a7d0:	01400174 	movhi	r5,5
   4a7d4:	29698104 	addi	r5,r5,-23036
   4a7d8:	004b0e41 	jmpi	4b0e4 <_fwalk>

0004a7dc <__fp_unlock_all>:
   4a7dc:	00800174 	movhi	r2,5
   4a7e0:	10960604 	addi	r2,r2,22552
   4a7e4:	11000017 	ldw	r4,0(r2)
   4a7e8:	01400174 	movhi	r5,5
   4a7ec:	29691504 	addi	r5,r5,-23468
   4a7f0:	004b0e41 	jmpi	4b0e4 <_fwalk>

0004a7f4 <_malloc_trim_r>:
   4a7f4:	defffb04 	addi	sp,sp,-20
   4a7f8:	dcc00315 	stw	r19,12(sp)
   4a7fc:	04c00174 	movhi	r19,5
   4a800:	dc800215 	stw	r18,8(sp)
   4a804:	dc400115 	stw	r17,4(sp)
   4a808:	dc000015 	stw	r16,0(sp)
   4a80c:	dfc00415 	stw	ra,16(sp)
   4a810:	2821883a 	mov	r16,r5
   4a814:	9cd08104 	addi	r19,r19,16900
   4a818:	2025883a 	mov	r18,r4
   4a81c:	005142c0 	call	5142c <__malloc_lock>
   4a820:	98800217 	ldw	r2,8(r19)
   4a824:	14400117 	ldw	r17,4(r2)
   4a828:	00bfff04 	movi	r2,-4
   4a82c:	88a2703a 	and	r17,r17,r2
   4a830:	8c21c83a 	sub	r16,r17,r16
   4a834:	8403fbc4 	addi	r16,r16,4079
   4a838:	8020d33a 	srli	r16,r16,12
   4a83c:	0083ffc4 	movi	r2,4095
   4a840:	843fffc4 	addi	r16,r16,-1
   4a844:	8020933a 	slli	r16,r16,12
   4a848:	1400060e 	bge	r2,r16,4a864 <_malloc_trim_r+0x70>
   4a84c:	000b883a 	mov	r5,zero
   4a850:	9009883a 	mov	r4,r18
   4a854:	004d7940 	call	4d794 <_sbrk_r>
   4a858:	98c00217 	ldw	r3,8(r19)
   4a85c:	1c47883a 	add	r3,r3,r17
   4a860:	10c00a26 	beq	r2,r3,4a88c <_malloc_trim_r+0x98>
   4a864:	9009883a 	mov	r4,r18
   4a868:	00514500 	call	51450 <__malloc_unlock>
   4a86c:	0005883a 	mov	r2,zero
   4a870:	dfc00417 	ldw	ra,16(sp)
   4a874:	dcc00317 	ldw	r19,12(sp)
   4a878:	dc800217 	ldw	r18,8(sp)
   4a87c:	dc400117 	ldw	r17,4(sp)
   4a880:	dc000017 	ldw	r16,0(sp)
   4a884:	dec00504 	addi	sp,sp,20
   4a888:	f800283a 	ret
   4a88c:	040bc83a 	sub	r5,zero,r16
   4a890:	9009883a 	mov	r4,r18
   4a894:	004d7940 	call	4d794 <_sbrk_r>
   4a898:	00ffffc4 	movi	r3,-1
   4a89c:	10c00d26 	beq	r2,r3,4a8d4 <_malloc_trim_r+0xe0>
   4a8a0:	00c00174 	movhi	r3,5
   4a8a4:	18dce404 	addi	r3,r3,29584
   4a8a8:	18800017 	ldw	r2,0(r3)
   4a8ac:	99000217 	ldw	r4,8(r19)
   4a8b0:	8c23c83a 	sub	r17,r17,r16
   4a8b4:	8c400054 	ori	r17,r17,1
   4a8b8:	1421c83a 	sub	r16,r2,r16
   4a8bc:	24400115 	stw	r17,4(r4)
   4a8c0:	9009883a 	mov	r4,r18
   4a8c4:	1c000015 	stw	r16,0(r3)
   4a8c8:	00514500 	call	51450 <__malloc_unlock>
   4a8cc:	00800044 	movi	r2,1
   4a8d0:	003fe706 	br	4a870 <__alt_data_end+0xfffca870>
   4a8d4:	000b883a 	mov	r5,zero
   4a8d8:	9009883a 	mov	r4,r18
   4a8dc:	004d7940 	call	4d794 <_sbrk_r>
   4a8e0:	99000217 	ldw	r4,8(r19)
   4a8e4:	014003c4 	movi	r5,15
   4a8e8:	1107c83a 	sub	r3,r2,r4
   4a8ec:	28ffdd0e 	bge	r5,r3,4a864 <__alt_data_end+0xfffca864>
   4a8f0:	01400174 	movhi	r5,5
   4a8f4:	29560804 	addi	r5,r5,22560
   4a8f8:	29400017 	ldw	r5,0(r5)
   4a8fc:	18c00054 	ori	r3,r3,1
   4a900:	20c00115 	stw	r3,4(r4)
   4a904:	00c00174 	movhi	r3,5
   4a908:	1145c83a 	sub	r2,r2,r5
   4a90c:	18dce404 	addi	r3,r3,29584
   4a910:	18800015 	stw	r2,0(r3)
   4a914:	003fd306 	br	4a864 <__alt_data_end+0xfffca864>

0004a918 <_free_r>:
   4a918:	28004126 	beq	r5,zero,4aa20 <_free_r+0x108>
   4a91c:	defffd04 	addi	sp,sp,-12
   4a920:	dc400115 	stw	r17,4(sp)
   4a924:	dc000015 	stw	r16,0(sp)
   4a928:	2023883a 	mov	r17,r4
   4a92c:	2821883a 	mov	r16,r5
   4a930:	dfc00215 	stw	ra,8(sp)
   4a934:	005142c0 	call	5142c <__malloc_lock>
   4a938:	81ffff17 	ldw	r7,-4(r16)
   4a93c:	00bfff84 	movi	r2,-2
   4a940:	01000174 	movhi	r4,5
   4a944:	81bffe04 	addi	r6,r16,-8
   4a948:	3884703a 	and	r2,r7,r2
   4a94c:	21108104 	addi	r4,r4,16900
   4a950:	308b883a 	add	r5,r6,r2
   4a954:	2a400117 	ldw	r9,4(r5)
   4a958:	22000217 	ldw	r8,8(r4)
   4a95c:	00ffff04 	movi	r3,-4
   4a960:	48c6703a 	and	r3,r9,r3
   4a964:	2a005726 	beq	r5,r8,4aac4 <_free_r+0x1ac>
   4a968:	28c00115 	stw	r3,4(r5)
   4a96c:	39c0004c 	andi	r7,r7,1
   4a970:	3800091e 	bne	r7,zero,4a998 <_free_r+0x80>
   4a974:	823ffe17 	ldw	r8,-8(r16)
   4a978:	22400204 	addi	r9,r4,8
   4a97c:	320dc83a 	sub	r6,r6,r8
   4a980:	31c00217 	ldw	r7,8(r6)
   4a984:	1205883a 	add	r2,r2,r8
   4a988:	3a406526 	beq	r7,r9,4ab20 <_free_r+0x208>
   4a98c:	32000317 	ldw	r8,12(r6)
   4a990:	3a000315 	stw	r8,12(r7)
   4a994:	41c00215 	stw	r7,8(r8)
   4a998:	28cf883a 	add	r7,r5,r3
   4a99c:	39c00117 	ldw	r7,4(r7)
   4a9a0:	39c0004c 	andi	r7,r7,1
   4a9a4:	38003a26 	beq	r7,zero,4aa90 <_free_r+0x178>
   4a9a8:	10c00054 	ori	r3,r2,1
   4a9ac:	30c00115 	stw	r3,4(r6)
   4a9b0:	3087883a 	add	r3,r6,r2
   4a9b4:	18800015 	stw	r2,0(r3)
   4a9b8:	00c07fc4 	movi	r3,511
   4a9bc:	18801936 	bltu	r3,r2,4aa24 <_free_r+0x10c>
   4a9c0:	1004d0fa 	srli	r2,r2,3
   4a9c4:	01c00044 	movi	r7,1
   4a9c8:	21400117 	ldw	r5,4(r4)
   4a9cc:	10c00044 	addi	r3,r2,1
   4a9d0:	18c7883a 	add	r3,r3,r3
   4a9d4:	1005d0ba 	srai	r2,r2,2
   4a9d8:	18c7883a 	add	r3,r3,r3
   4a9dc:	18c7883a 	add	r3,r3,r3
   4a9e0:	1907883a 	add	r3,r3,r4
   4a9e4:	3884983a 	sll	r2,r7,r2
   4a9e8:	19c00017 	ldw	r7,0(r3)
   4a9ec:	1a3ffe04 	addi	r8,r3,-8
   4a9f0:	1144b03a 	or	r2,r2,r5
   4a9f4:	32000315 	stw	r8,12(r6)
   4a9f8:	31c00215 	stw	r7,8(r6)
   4a9fc:	20800115 	stw	r2,4(r4)
   4aa00:	19800015 	stw	r6,0(r3)
   4aa04:	39800315 	stw	r6,12(r7)
   4aa08:	8809883a 	mov	r4,r17
   4aa0c:	dfc00217 	ldw	ra,8(sp)
   4aa10:	dc400117 	ldw	r17,4(sp)
   4aa14:	dc000017 	ldw	r16,0(sp)
   4aa18:	dec00304 	addi	sp,sp,12
   4aa1c:	00514501 	jmpi	51450 <__malloc_unlock>
   4aa20:	f800283a 	ret
   4aa24:	100ad27a 	srli	r5,r2,9
   4aa28:	00c00104 	movi	r3,4
   4aa2c:	19404a36 	bltu	r3,r5,4ab58 <_free_r+0x240>
   4aa30:	100ad1ba 	srli	r5,r2,6
   4aa34:	28c00e44 	addi	r3,r5,57
   4aa38:	18c7883a 	add	r3,r3,r3
   4aa3c:	29400e04 	addi	r5,r5,56
   4aa40:	18c7883a 	add	r3,r3,r3
   4aa44:	18c7883a 	add	r3,r3,r3
   4aa48:	1909883a 	add	r4,r3,r4
   4aa4c:	20c00017 	ldw	r3,0(r4)
   4aa50:	01c00174 	movhi	r7,5
   4aa54:	213ffe04 	addi	r4,r4,-8
   4aa58:	39d08104 	addi	r7,r7,16900
   4aa5c:	20c04426 	beq	r4,r3,4ab70 <_free_r+0x258>
   4aa60:	01ffff04 	movi	r7,-4
   4aa64:	19400117 	ldw	r5,4(r3)
   4aa68:	29ca703a 	and	r5,r5,r7
   4aa6c:	1140022e 	bgeu	r2,r5,4aa78 <_free_r+0x160>
   4aa70:	18c00217 	ldw	r3,8(r3)
   4aa74:	20fffb1e 	bne	r4,r3,4aa64 <__alt_data_end+0xfffcaa64>
   4aa78:	19000317 	ldw	r4,12(r3)
   4aa7c:	31000315 	stw	r4,12(r6)
   4aa80:	30c00215 	stw	r3,8(r6)
   4aa84:	21800215 	stw	r6,8(r4)
   4aa88:	19800315 	stw	r6,12(r3)
   4aa8c:	003fde06 	br	4aa08 <__alt_data_end+0xfffcaa08>
   4aa90:	29c00217 	ldw	r7,8(r5)
   4aa94:	10c5883a 	add	r2,r2,r3
   4aa98:	00c00174 	movhi	r3,5
   4aa9c:	18d08304 	addi	r3,r3,16908
   4aaa0:	38c03b26 	beq	r7,r3,4ab90 <_free_r+0x278>
   4aaa4:	2a000317 	ldw	r8,12(r5)
   4aaa8:	11400054 	ori	r5,r2,1
   4aaac:	3087883a 	add	r3,r6,r2
   4aab0:	3a000315 	stw	r8,12(r7)
   4aab4:	41c00215 	stw	r7,8(r8)
   4aab8:	31400115 	stw	r5,4(r6)
   4aabc:	18800015 	stw	r2,0(r3)
   4aac0:	003fbd06 	br	4a9b8 <__alt_data_end+0xfffca9b8>
   4aac4:	39c0004c 	andi	r7,r7,1
   4aac8:	10c5883a 	add	r2,r2,r3
   4aacc:	3800071e 	bne	r7,zero,4aaec <_free_r+0x1d4>
   4aad0:	81fffe17 	ldw	r7,-8(r16)
   4aad4:	31cdc83a 	sub	r6,r6,r7
   4aad8:	30c00317 	ldw	r3,12(r6)
   4aadc:	31400217 	ldw	r5,8(r6)
   4aae0:	11c5883a 	add	r2,r2,r7
   4aae4:	28c00315 	stw	r3,12(r5)
   4aae8:	19400215 	stw	r5,8(r3)
   4aaec:	10c00054 	ori	r3,r2,1
   4aaf0:	30c00115 	stw	r3,4(r6)
   4aaf4:	00c00174 	movhi	r3,5
   4aaf8:	18d60904 	addi	r3,r3,22564
   4aafc:	18c00017 	ldw	r3,0(r3)
   4ab00:	21800215 	stw	r6,8(r4)
   4ab04:	10ffc036 	bltu	r2,r3,4aa08 <__alt_data_end+0xfffcaa08>
   4ab08:	00800174 	movhi	r2,5
   4ab0c:	109cdb04 	addi	r2,r2,29548
   4ab10:	11400017 	ldw	r5,0(r2)
   4ab14:	8809883a 	mov	r4,r17
   4ab18:	004a7f40 	call	4a7f4 <_malloc_trim_r>
   4ab1c:	003fba06 	br	4aa08 <__alt_data_end+0xfffcaa08>
   4ab20:	28c9883a 	add	r4,r5,r3
   4ab24:	21000117 	ldw	r4,4(r4)
   4ab28:	2100004c 	andi	r4,r4,1
   4ab2c:	2000391e 	bne	r4,zero,4ac14 <_free_r+0x2fc>
   4ab30:	29c00217 	ldw	r7,8(r5)
   4ab34:	29000317 	ldw	r4,12(r5)
   4ab38:	1885883a 	add	r2,r3,r2
   4ab3c:	10c00054 	ori	r3,r2,1
   4ab40:	39000315 	stw	r4,12(r7)
   4ab44:	21c00215 	stw	r7,8(r4)
   4ab48:	30c00115 	stw	r3,4(r6)
   4ab4c:	308d883a 	add	r6,r6,r2
   4ab50:	30800015 	stw	r2,0(r6)
   4ab54:	003fac06 	br	4aa08 <__alt_data_end+0xfffcaa08>
   4ab58:	00c00504 	movi	r3,20
   4ab5c:	19401536 	bltu	r3,r5,4abb4 <_free_r+0x29c>
   4ab60:	28c01704 	addi	r3,r5,92
   4ab64:	18c7883a 	add	r3,r3,r3
   4ab68:	294016c4 	addi	r5,r5,91
   4ab6c:	003fb406 	br	4aa40 <__alt_data_end+0xfffcaa40>
   4ab70:	280bd0ba 	srai	r5,r5,2
   4ab74:	00c00044 	movi	r3,1
   4ab78:	38800117 	ldw	r2,4(r7)
   4ab7c:	194a983a 	sll	r5,r3,r5
   4ab80:	2007883a 	mov	r3,r4
   4ab84:	2884b03a 	or	r2,r5,r2
   4ab88:	38800115 	stw	r2,4(r7)
   4ab8c:	003fbb06 	br	4aa7c <__alt_data_end+0xfffcaa7c>
   4ab90:	21800515 	stw	r6,20(r4)
   4ab94:	21800415 	stw	r6,16(r4)
   4ab98:	10c00054 	ori	r3,r2,1
   4ab9c:	31c00315 	stw	r7,12(r6)
   4aba0:	31c00215 	stw	r7,8(r6)
   4aba4:	30c00115 	stw	r3,4(r6)
   4aba8:	308d883a 	add	r6,r6,r2
   4abac:	30800015 	stw	r2,0(r6)
   4abb0:	003f9506 	br	4aa08 <__alt_data_end+0xfffcaa08>
   4abb4:	00c01504 	movi	r3,84
   4abb8:	19400536 	bltu	r3,r5,4abd0 <_free_r+0x2b8>
   4abbc:	100ad33a 	srli	r5,r2,12
   4abc0:	28c01bc4 	addi	r3,r5,111
   4abc4:	18c7883a 	add	r3,r3,r3
   4abc8:	29401b84 	addi	r5,r5,110
   4abcc:	003f9c06 	br	4aa40 <__alt_data_end+0xfffcaa40>
   4abd0:	00c05504 	movi	r3,340
   4abd4:	19400536 	bltu	r3,r5,4abec <_free_r+0x2d4>
   4abd8:	100ad3fa 	srli	r5,r2,15
   4abdc:	28c01e04 	addi	r3,r5,120
   4abe0:	18c7883a 	add	r3,r3,r3
   4abe4:	29401dc4 	addi	r5,r5,119
   4abe8:	003f9506 	br	4aa40 <__alt_data_end+0xfffcaa40>
   4abec:	00c15504 	movi	r3,1364
   4abf0:	19400536 	bltu	r3,r5,4ac08 <_free_r+0x2f0>
   4abf4:	100ad4ba 	srli	r5,r2,18
   4abf8:	28c01f44 	addi	r3,r5,125
   4abfc:	18c7883a 	add	r3,r3,r3
   4ac00:	29401f04 	addi	r5,r5,124
   4ac04:	003f8e06 	br	4aa40 <__alt_data_end+0xfffcaa40>
   4ac08:	00c03f84 	movi	r3,254
   4ac0c:	01401f84 	movi	r5,126
   4ac10:	003f8b06 	br	4aa40 <__alt_data_end+0xfffcaa40>
   4ac14:	10c00054 	ori	r3,r2,1
   4ac18:	30c00115 	stw	r3,4(r6)
   4ac1c:	308d883a 	add	r6,r6,r2
   4ac20:	30800015 	stw	r2,0(r6)
   4ac24:	003f7806 	br	4aa08 <__alt_data_end+0xfffcaa08>

0004ac28 <__sfvwrite_r>:
   4ac28:	30800217 	ldw	r2,8(r6)
   4ac2c:	10006726 	beq	r2,zero,4adcc <__sfvwrite_r+0x1a4>
   4ac30:	28c0030b 	ldhu	r3,12(r5)
   4ac34:	defff404 	addi	sp,sp,-48
   4ac38:	dd400715 	stw	r21,28(sp)
   4ac3c:	dd000615 	stw	r20,24(sp)
   4ac40:	dc000215 	stw	r16,8(sp)
   4ac44:	dfc00b15 	stw	ra,44(sp)
   4ac48:	df000a15 	stw	fp,40(sp)
   4ac4c:	ddc00915 	stw	r23,36(sp)
   4ac50:	dd800815 	stw	r22,32(sp)
   4ac54:	dcc00515 	stw	r19,20(sp)
   4ac58:	dc800415 	stw	r18,16(sp)
   4ac5c:	dc400315 	stw	r17,12(sp)
   4ac60:	1880020c 	andi	r2,r3,8
   4ac64:	2821883a 	mov	r16,r5
   4ac68:	202b883a 	mov	r21,r4
   4ac6c:	3029883a 	mov	r20,r6
   4ac70:	10002726 	beq	r2,zero,4ad10 <__sfvwrite_r+0xe8>
   4ac74:	28800417 	ldw	r2,16(r5)
   4ac78:	10002526 	beq	r2,zero,4ad10 <__sfvwrite_r+0xe8>
   4ac7c:	1880008c 	andi	r2,r3,2
   4ac80:	a4400017 	ldw	r17,0(r20)
   4ac84:	10002a26 	beq	r2,zero,4ad30 <__sfvwrite_r+0x108>
   4ac88:	05a00034 	movhi	r22,32768
   4ac8c:	0027883a 	mov	r19,zero
   4ac90:	0025883a 	mov	r18,zero
   4ac94:	b5bf0004 	addi	r22,r22,-1024
   4ac98:	980d883a 	mov	r6,r19
   4ac9c:	a809883a 	mov	r4,r21
   4aca0:	90004626 	beq	r18,zero,4adbc <__sfvwrite_r+0x194>
   4aca4:	900f883a 	mov	r7,r18
   4aca8:	b480022e 	bgeu	r22,r18,4acb4 <__sfvwrite_r+0x8c>
   4acac:	01e00034 	movhi	r7,32768
   4acb0:	39ff0004 	addi	r7,r7,-1024
   4acb4:	80800917 	ldw	r2,36(r16)
   4acb8:	81400717 	ldw	r5,28(r16)
   4acbc:	103ee83a 	callr	r2
   4acc0:	0080570e 	bge	zero,r2,4ae20 <__sfvwrite_r+0x1f8>
   4acc4:	a0c00217 	ldw	r3,8(r20)
   4acc8:	98a7883a 	add	r19,r19,r2
   4accc:	90a5c83a 	sub	r18,r18,r2
   4acd0:	1885c83a 	sub	r2,r3,r2
   4acd4:	a0800215 	stw	r2,8(r20)
   4acd8:	103fef1e 	bne	r2,zero,4ac98 <__alt_data_end+0xfffcac98>
   4acdc:	0005883a 	mov	r2,zero
   4ace0:	dfc00b17 	ldw	ra,44(sp)
   4ace4:	df000a17 	ldw	fp,40(sp)
   4ace8:	ddc00917 	ldw	r23,36(sp)
   4acec:	dd800817 	ldw	r22,32(sp)
   4acf0:	dd400717 	ldw	r21,28(sp)
   4acf4:	dd000617 	ldw	r20,24(sp)
   4acf8:	dcc00517 	ldw	r19,20(sp)
   4acfc:	dc800417 	ldw	r18,16(sp)
   4ad00:	dc400317 	ldw	r17,12(sp)
   4ad04:	dc000217 	ldw	r16,8(sp)
   4ad08:	dec00c04 	addi	sp,sp,48
   4ad0c:	f800283a 	ret
   4ad10:	800b883a 	mov	r5,r16
   4ad14:	a809883a 	mov	r4,r21
   4ad18:	00487d00 	call	487d0 <__swsetup_r>
   4ad1c:	1000eb1e 	bne	r2,zero,4b0cc <__sfvwrite_r+0x4a4>
   4ad20:	80c0030b 	ldhu	r3,12(r16)
   4ad24:	a4400017 	ldw	r17,0(r20)
   4ad28:	1880008c 	andi	r2,r3,2
   4ad2c:	103fd61e 	bne	r2,zero,4ac88 <__alt_data_end+0xfffcac88>
   4ad30:	1880004c 	andi	r2,r3,1
   4ad34:	10003f1e 	bne	r2,zero,4ae34 <__sfvwrite_r+0x20c>
   4ad38:	0039883a 	mov	fp,zero
   4ad3c:	0025883a 	mov	r18,zero
   4ad40:	90001a26 	beq	r18,zero,4adac <__sfvwrite_r+0x184>
   4ad44:	1880800c 	andi	r2,r3,512
   4ad48:	84c00217 	ldw	r19,8(r16)
   4ad4c:	10002126 	beq	r2,zero,4add4 <__sfvwrite_r+0x1ac>
   4ad50:	982f883a 	mov	r23,r19
   4ad54:	94c09336 	bltu	r18,r19,4afa4 <__sfvwrite_r+0x37c>
   4ad58:	1881200c 	andi	r2,r3,1152
   4ad5c:	10009e1e 	bne	r2,zero,4afd8 <__sfvwrite_r+0x3b0>
   4ad60:	81000017 	ldw	r4,0(r16)
   4ad64:	b80d883a 	mov	r6,r23
   4ad68:	e00b883a 	mov	r5,fp
   4ad6c:	004bf3c0 	call	4bf3c <memmove>
   4ad70:	80c00217 	ldw	r3,8(r16)
   4ad74:	81000017 	ldw	r4,0(r16)
   4ad78:	9005883a 	mov	r2,r18
   4ad7c:	1ce7c83a 	sub	r19,r3,r19
   4ad80:	25cf883a 	add	r7,r4,r23
   4ad84:	84c00215 	stw	r19,8(r16)
   4ad88:	81c00015 	stw	r7,0(r16)
   4ad8c:	a0c00217 	ldw	r3,8(r20)
   4ad90:	e0b9883a 	add	fp,fp,r2
   4ad94:	90a5c83a 	sub	r18,r18,r2
   4ad98:	18a7c83a 	sub	r19,r3,r2
   4ad9c:	a4c00215 	stw	r19,8(r20)
   4ada0:	983fce26 	beq	r19,zero,4acdc <__alt_data_end+0xfffcacdc>
   4ada4:	80c0030b 	ldhu	r3,12(r16)
   4ada8:	903fe61e 	bne	r18,zero,4ad44 <__alt_data_end+0xfffcad44>
   4adac:	8f000017 	ldw	fp,0(r17)
   4adb0:	8c800117 	ldw	r18,4(r17)
   4adb4:	8c400204 	addi	r17,r17,8
   4adb8:	003fe106 	br	4ad40 <__alt_data_end+0xfffcad40>
   4adbc:	8cc00017 	ldw	r19,0(r17)
   4adc0:	8c800117 	ldw	r18,4(r17)
   4adc4:	8c400204 	addi	r17,r17,8
   4adc8:	003fb306 	br	4ac98 <__alt_data_end+0xfffcac98>
   4adcc:	0005883a 	mov	r2,zero
   4add0:	f800283a 	ret
   4add4:	81000017 	ldw	r4,0(r16)
   4add8:	80800417 	ldw	r2,16(r16)
   4addc:	11005736 	bltu	r2,r4,4af3c <__sfvwrite_r+0x314>
   4ade0:	85c00517 	ldw	r23,20(r16)
   4ade4:	95c05536 	bltu	r18,r23,4af3c <__sfvwrite_r+0x314>
   4ade8:	00a00034 	movhi	r2,32768
   4adec:	10bfffc4 	addi	r2,r2,-1
   4adf0:	9009883a 	mov	r4,r18
   4adf4:	1480012e 	bgeu	r2,r18,4adfc <__sfvwrite_r+0x1d4>
   4adf8:	1009883a 	mov	r4,r2
   4adfc:	b80b883a 	mov	r5,r23
   4ae00:	00430f00 	call	430f0 <__divsi3>
   4ae04:	15cf383a 	mul	r7,r2,r23
   4ae08:	81400717 	ldw	r5,28(r16)
   4ae0c:	80800917 	ldw	r2,36(r16)
   4ae10:	e00d883a 	mov	r6,fp
   4ae14:	a809883a 	mov	r4,r21
   4ae18:	103ee83a 	callr	r2
   4ae1c:	00bfdb16 	blt	zero,r2,4ad8c <__alt_data_end+0xfffcad8c>
   4ae20:	8080030b 	ldhu	r2,12(r16)
   4ae24:	10801014 	ori	r2,r2,64
   4ae28:	8080030d 	sth	r2,12(r16)
   4ae2c:	00bfffc4 	movi	r2,-1
   4ae30:	003fab06 	br	4ace0 <__alt_data_end+0xfffcace0>
   4ae34:	0027883a 	mov	r19,zero
   4ae38:	0011883a 	mov	r8,zero
   4ae3c:	0039883a 	mov	fp,zero
   4ae40:	0025883a 	mov	r18,zero
   4ae44:	90001f26 	beq	r18,zero,4aec4 <__sfvwrite_r+0x29c>
   4ae48:	40005a26 	beq	r8,zero,4afb4 <__sfvwrite_r+0x38c>
   4ae4c:	982d883a 	mov	r22,r19
   4ae50:	94c0012e 	bgeu	r18,r19,4ae58 <__sfvwrite_r+0x230>
   4ae54:	902d883a 	mov	r22,r18
   4ae58:	81000017 	ldw	r4,0(r16)
   4ae5c:	80800417 	ldw	r2,16(r16)
   4ae60:	b02f883a 	mov	r23,r22
   4ae64:	81c00517 	ldw	r7,20(r16)
   4ae68:	1100032e 	bgeu	r2,r4,4ae78 <__sfvwrite_r+0x250>
   4ae6c:	80c00217 	ldw	r3,8(r16)
   4ae70:	38c7883a 	add	r3,r7,r3
   4ae74:	1d801816 	blt	r3,r22,4aed8 <__sfvwrite_r+0x2b0>
   4ae78:	b1c03e16 	blt	r22,r7,4af74 <__sfvwrite_r+0x34c>
   4ae7c:	80800917 	ldw	r2,36(r16)
   4ae80:	81400717 	ldw	r5,28(r16)
   4ae84:	e00d883a 	mov	r6,fp
   4ae88:	da000115 	stw	r8,4(sp)
   4ae8c:	a809883a 	mov	r4,r21
   4ae90:	103ee83a 	callr	r2
   4ae94:	102f883a 	mov	r23,r2
   4ae98:	da000117 	ldw	r8,4(sp)
   4ae9c:	00bfe00e 	bge	zero,r2,4ae20 <__alt_data_end+0xfffcae20>
   4aea0:	9de7c83a 	sub	r19,r19,r23
   4aea4:	98001f26 	beq	r19,zero,4af24 <__sfvwrite_r+0x2fc>
   4aea8:	a0800217 	ldw	r2,8(r20)
   4aeac:	e5f9883a 	add	fp,fp,r23
   4aeb0:	95e5c83a 	sub	r18,r18,r23
   4aeb4:	15efc83a 	sub	r23,r2,r23
   4aeb8:	a5c00215 	stw	r23,8(r20)
   4aebc:	b83f8726 	beq	r23,zero,4acdc <__alt_data_end+0xfffcacdc>
   4aec0:	903fe11e 	bne	r18,zero,4ae48 <__alt_data_end+0xfffcae48>
   4aec4:	8f000017 	ldw	fp,0(r17)
   4aec8:	8c800117 	ldw	r18,4(r17)
   4aecc:	0011883a 	mov	r8,zero
   4aed0:	8c400204 	addi	r17,r17,8
   4aed4:	003fdb06 	br	4ae44 <__alt_data_end+0xfffcae44>
   4aed8:	180d883a 	mov	r6,r3
   4aedc:	e00b883a 	mov	r5,fp
   4aee0:	da000115 	stw	r8,4(sp)
   4aee4:	d8c00015 	stw	r3,0(sp)
   4aee8:	004bf3c0 	call	4bf3c <memmove>
   4aeec:	d8c00017 	ldw	r3,0(sp)
   4aef0:	80800017 	ldw	r2,0(r16)
   4aef4:	800b883a 	mov	r5,r16
   4aef8:	a809883a 	mov	r4,r21
   4aefc:	10c5883a 	add	r2,r2,r3
   4af00:	80800015 	stw	r2,0(r16)
   4af04:	d8c00015 	stw	r3,0(sp)
   4af08:	004a3c80 	call	4a3c8 <_fflush_r>
   4af0c:	d8c00017 	ldw	r3,0(sp)
   4af10:	da000117 	ldw	r8,4(sp)
   4af14:	103fc21e 	bne	r2,zero,4ae20 <__alt_data_end+0xfffcae20>
   4af18:	182f883a 	mov	r23,r3
   4af1c:	9de7c83a 	sub	r19,r19,r23
   4af20:	983fe11e 	bne	r19,zero,4aea8 <__alt_data_end+0xfffcaea8>
   4af24:	800b883a 	mov	r5,r16
   4af28:	a809883a 	mov	r4,r21
   4af2c:	004a3c80 	call	4a3c8 <_fflush_r>
   4af30:	103fbb1e 	bne	r2,zero,4ae20 <__alt_data_end+0xfffcae20>
   4af34:	0011883a 	mov	r8,zero
   4af38:	003fdb06 	br	4aea8 <__alt_data_end+0xfffcaea8>
   4af3c:	94c0012e 	bgeu	r18,r19,4af44 <__sfvwrite_r+0x31c>
   4af40:	9027883a 	mov	r19,r18
   4af44:	980d883a 	mov	r6,r19
   4af48:	e00b883a 	mov	r5,fp
   4af4c:	004bf3c0 	call	4bf3c <memmove>
   4af50:	80800217 	ldw	r2,8(r16)
   4af54:	80c00017 	ldw	r3,0(r16)
   4af58:	14c5c83a 	sub	r2,r2,r19
   4af5c:	1cc7883a 	add	r3,r3,r19
   4af60:	80800215 	stw	r2,8(r16)
   4af64:	80c00015 	stw	r3,0(r16)
   4af68:	10004326 	beq	r2,zero,4b078 <__sfvwrite_r+0x450>
   4af6c:	9805883a 	mov	r2,r19
   4af70:	003f8606 	br	4ad8c <__alt_data_end+0xfffcad8c>
   4af74:	b00d883a 	mov	r6,r22
   4af78:	e00b883a 	mov	r5,fp
   4af7c:	da000115 	stw	r8,4(sp)
   4af80:	004bf3c0 	call	4bf3c <memmove>
   4af84:	80800217 	ldw	r2,8(r16)
   4af88:	80c00017 	ldw	r3,0(r16)
   4af8c:	da000117 	ldw	r8,4(sp)
   4af90:	1585c83a 	sub	r2,r2,r22
   4af94:	1dad883a 	add	r22,r3,r22
   4af98:	80800215 	stw	r2,8(r16)
   4af9c:	85800015 	stw	r22,0(r16)
   4afa0:	003fbf06 	br	4aea0 <__alt_data_end+0xfffcaea0>
   4afa4:	81000017 	ldw	r4,0(r16)
   4afa8:	9027883a 	mov	r19,r18
   4afac:	902f883a 	mov	r23,r18
   4afb0:	003f6c06 	br	4ad64 <__alt_data_end+0xfffcad64>
   4afb4:	900d883a 	mov	r6,r18
   4afb8:	01400284 	movi	r5,10
   4afbc:	e009883a 	mov	r4,fp
   4afc0:	004bd100 	call	4bd10 <memchr>
   4afc4:	10003e26 	beq	r2,zero,4b0c0 <__sfvwrite_r+0x498>
   4afc8:	10800044 	addi	r2,r2,1
   4afcc:	1727c83a 	sub	r19,r2,fp
   4afd0:	02000044 	movi	r8,1
   4afd4:	003f9d06 	br	4ae4c <__alt_data_end+0xfffcae4c>
   4afd8:	80800517 	ldw	r2,20(r16)
   4afdc:	81400417 	ldw	r5,16(r16)
   4afe0:	81c00017 	ldw	r7,0(r16)
   4afe4:	10a7883a 	add	r19,r2,r2
   4afe8:	9885883a 	add	r2,r19,r2
   4afec:	1026d7fa 	srli	r19,r2,31
   4aff0:	396dc83a 	sub	r22,r7,r5
   4aff4:	b1000044 	addi	r4,r22,1
   4aff8:	9885883a 	add	r2,r19,r2
   4affc:	1027d07a 	srai	r19,r2,1
   4b000:	2485883a 	add	r2,r4,r18
   4b004:	980d883a 	mov	r6,r19
   4b008:	9880022e 	bgeu	r19,r2,4b014 <__sfvwrite_r+0x3ec>
   4b00c:	1027883a 	mov	r19,r2
   4b010:	100d883a 	mov	r6,r2
   4b014:	18c1000c 	andi	r3,r3,1024
   4b018:	18001c26 	beq	r3,zero,4b08c <__sfvwrite_r+0x464>
   4b01c:	300b883a 	mov	r5,r6
   4b020:	a809883a 	mov	r4,r21
   4b024:	004b5040 	call	4b504 <_malloc_r>
   4b028:	102f883a 	mov	r23,r2
   4b02c:	10002926 	beq	r2,zero,4b0d4 <__sfvwrite_r+0x4ac>
   4b030:	81400417 	ldw	r5,16(r16)
   4b034:	b00d883a 	mov	r6,r22
   4b038:	1009883a 	mov	r4,r2
   4b03c:	004bdf40 	call	4bdf4 <memcpy>
   4b040:	8080030b 	ldhu	r2,12(r16)
   4b044:	00fedfc4 	movi	r3,-1153
   4b048:	10c4703a 	and	r2,r2,r3
   4b04c:	10802014 	ori	r2,r2,128
   4b050:	8080030d 	sth	r2,12(r16)
   4b054:	bd89883a 	add	r4,r23,r22
   4b058:	9d8fc83a 	sub	r7,r19,r22
   4b05c:	85c00415 	stw	r23,16(r16)
   4b060:	84c00515 	stw	r19,20(r16)
   4b064:	81000015 	stw	r4,0(r16)
   4b068:	9027883a 	mov	r19,r18
   4b06c:	81c00215 	stw	r7,8(r16)
   4b070:	902f883a 	mov	r23,r18
   4b074:	003f3b06 	br	4ad64 <__alt_data_end+0xfffcad64>
   4b078:	800b883a 	mov	r5,r16
   4b07c:	a809883a 	mov	r4,r21
   4b080:	004a3c80 	call	4a3c8 <_fflush_r>
   4b084:	103fb926 	beq	r2,zero,4af6c <__alt_data_end+0xfffcaf6c>
   4b088:	003f6506 	br	4ae20 <__alt_data_end+0xfffcae20>
   4b08c:	a809883a 	mov	r4,r21
   4b090:	004d1bc0 	call	4d1bc <_realloc_r>
   4b094:	102f883a 	mov	r23,r2
   4b098:	103fee1e 	bne	r2,zero,4b054 <__alt_data_end+0xfffcb054>
   4b09c:	81400417 	ldw	r5,16(r16)
   4b0a0:	a809883a 	mov	r4,r21
   4b0a4:	004a9180 	call	4a918 <_free_r>
   4b0a8:	8080030b 	ldhu	r2,12(r16)
   4b0ac:	00ffdfc4 	movi	r3,-129
   4b0b0:	1884703a 	and	r2,r3,r2
   4b0b4:	00c00304 	movi	r3,12
   4b0b8:	a8c00015 	stw	r3,0(r21)
   4b0bc:	003f5906 	br	4ae24 <__alt_data_end+0xfffcae24>
   4b0c0:	94c00044 	addi	r19,r18,1
   4b0c4:	02000044 	movi	r8,1
   4b0c8:	003f6006 	br	4ae4c <__alt_data_end+0xfffcae4c>
   4b0cc:	00bfffc4 	movi	r2,-1
   4b0d0:	003f0306 	br	4ace0 <__alt_data_end+0xfffcace0>
   4b0d4:	00800304 	movi	r2,12
   4b0d8:	a8800015 	stw	r2,0(r21)
   4b0dc:	8080030b 	ldhu	r2,12(r16)
   4b0e0:	003f5006 	br	4ae24 <__alt_data_end+0xfffcae24>

0004b0e4 <_fwalk>:
   4b0e4:	defff704 	addi	sp,sp,-36
   4b0e8:	dd000415 	stw	r20,16(sp)
   4b0ec:	dfc00815 	stw	ra,32(sp)
   4b0f0:	ddc00715 	stw	r23,28(sp)
   4b0f4:	dd800615 	stw	r22,24(sp)
   4b0f8:	dd400515 	stw	r21,20(sp)
   4b0fc:	dcc00315 	stw	r19,12(sp)
   4b100:	dc800215 	stw	r18,8(sp)
   4b104:	dc400115 	stw	r17,4(sp)
   4b108:	dc000015 	stw	r16,0(sp)
   4b10c:	2500b804 	addi	r20,r4,736
   4b110:	a0002326 	beq	r20,zero,4b1a0 <_fwalk+0xbc>
   4b114:	282b883a 	mov	r21,r5
   4b118:	002f883a 	mov	r23,zero
   4b11c:	05800044 	movi	r22,1
   4b120:	04ffffc4 	movi	r19,-1
   4b124:	a4400117 	ldw	r17,4(r20)
   4b128:	a4800217 	ldw	r18,8(r20)
   4b12c:	8c7fffc4 	addi	r17,r17,-1
   4b130:	88000d16 	blt	r17,zero,4b168 <_fwalk+0x84>
   4b134:	94000304 	addi	r16,r18,12
   4b138:	94800384 	addi	r18,r18,14
   4b13c:	8080000b 	ldhu	r2,0(r16)
   4b140:	8c7fffc4 	addi	r17,r17,-1
   4b144:	813ffd04 	addi	r4,r16,-12
   4b148:	b080042e 	bgeu	r22,r2,4b15c <_fwalk+0x78>
   4b14c:	9080000f 	ldh	r2,0(r18)
   4b150:	14c00226 	beq	r2,r19,4b15c <_fwalk+0x78>
   4b154:	a83ee83a 	callr	r21
   4b158:	b8aeb03a 	or	r23,r23,r2
   4b15c:	84001a04 	addi	r16,r16,104
   4b160:	94801a04 	addi	r18,r18,104
   4b164:	8cfff51e 	bne	r17,r19,4b13c <__alt_data_end+0xfffcb13c>
   4b168:	a5000017 	ldw	r20,0(r20)
   4b16c:	a03fed1e 	bne	r20,zero,4b124 <__alt_data_end+0xfffcb124>
   4b170:	b805883a 	mov	r2,r23
   4b174:	dfc00817 	ldw	ra,32(sp)
   4b178:	ddc00717 	ldw	r23,28(sp)
   4b17c:	dd800617 	ldw	r22,24(sp)
   4b180:	dd400517 	ldw	r21,20(sp)
   4b184:	dd000417 	ldw	r20,16(sp)
   4b188:	dcc00317 	ldw	r19,12(sp)
   4b18c:	dc800217 	ldw	r18,8(sp)
   4b190:	dc400117 	ldw	r17,4(sp)
   4b194:	dc000017 	ldw	r16,0(sp)
   4b198:	dec00904 	addi	sp,sp,36
   4b19c:	f800283a 	ret
   4b1a0:	002f883a 	mov	r23,zero
   4b1a4:	003ff206 	br	4b170 <__alt_data_end+0xfffcb170>

0004b1a8 <_fwalk_reent>:
   4b1a8:	defff704 	addi	sp,sp,-36
   4b1ac:	dd000415 	stw	r20,16(sp)
   4b1b0:	dfc00815 	stw	ra,32(sp)
   4b1b4:	ddc00715 	stw	r23,28(sp)
   4b1b8:	dd800615 	stw	r22,24(sp)
   4b1bc:	dd400515 	stw	r21,20(sp)
   4b1c0:	dcc00315 	stw	r19,12(sp)
   4b1c4:	dc800215 	stw	r18,8(sp)
   4b1c8:	dc400115 	stw	r17,4(sp)
   4b1cc:	dc000015 	stw	r16,0(sp)
   4b1d0:	2500b804 	addi	r20,r4,736
   4b1d4:	a0002326 	beq	r20,zero,4b264 <_fwalk_reent+0xbc>
   4b1d8:	282b883a 	mov	r21,r5
   4b1dc:	2027883a 	mov	r19,r4
   4b1e0:	002f883a 	mov	r23,zero
   4b1e4:	05800044 	movi	r22,1
   4b1e8:	04bfffc4 	movi	r18,-1
   4b1ec:	a4400117 	ldw	r17,4(r20)
   4b1f0:	a4000217 	ldw	r16,8(r20)
   4b1f4:	8c7fffc4 	addi	r17,r17,-1
   4b1f8:	88000c16 	blt	r17,zero,4b22c <_fwalk_reent+0x84>
   4b1fc:	84000304 	addi	r16,r16,12
   4b200:	8080000b 	ldhu	r2,0(r16)
   4b204:	8c7fffc4 	addi	r17,r17,-1
   4b208:	817ffd04 	addi	r5,r16,-12
   4b20c:	b080052e 	bgeu	r22,r2,4b224 <_fwalk_reent+0x7c>
   4b210:	8080008f 	ldh	r2,2(r16)
   4b214:	9809883a 	mov	r4,r19
   4b218:	14800226 	beq	r2,r18,4b224 <_fwalk_reent+0x7c>
   4b21c:	a83ee83a 	callr	r21
   4b220:	b8aeb03a 	or	r23,r23,r2
   4b224:	84001a04 	addi	r16,r16,104
   4b228:	8cbff51e 	bne	r17,r18,4b200 <__alt_data_end+0xfffcb200>
   4b22c:	a5000017 	ldw	r20,0(r20)
   4b230:	a03fee1e 	bne	r20,zero,4b1ec <__alt_data_end+0xfffcb1ec>
   4b234:	b805883a 	mov	r2,r23
   4b238:	dfc00817 	ldw	ra,32(sp)
   4b23c:	ddc00717 	ldw	r23,28(sp)
   4b240:	dd800617 	ldw	r22,24(sp)
   4b244:	dd400517 	ldw	r21,20(sp)
   4b248:	dd000417 	ldw	r20,16(sp)
   4b24c:	dcc00317 	ldw	r19,12(sp)
   4b250:	dc800217 	ldw	r18,8(sp)
   4b254:	dc400117 	ldw	r17,4(sp)
   4b258:	dc000017 	ldw	r16,0(sp)
   4b25c:	dec00904 	addi	sp,sp,36
   4b260:	f800283a 	ret
   4b264:	002f883a 	mov	r23,zero
   4b268:	003ff206 	br	4b234 <__alt_data_end+0xfffcb234>

0004b26c <_setlocale_r>:
   4b26c:	30001b26 	beq	r6,zero,4b2dc <_setlocale_r+0x70>
   4b270:	01400174 	movhi	r5,5
   4b274:	defffe04 	addi	sp,sp,-8
   4b278:	294ef904 	addi	r5,r5,15332
   4b27c:	3009883a 	mov	r4,r6
   4b280:	dc000015 	stw	r16,0(sp)
   4b284:	dfc00115 	stw	ra,4(sp)
   4b288:	3021883a 	mov	r16,r6
   4b28c:	004d9240 	call	4d924 <strcmp>
   4b290:	1000061e 	bne	r2,zero,4b2ac <_setlocale_r+0x40>
   4b294:	00800174 	movhi	r2,5
   4b298:	108ef804 	addi	r2,r2,15328
   4b29c:	dfc00117 	ldw	ra,4(sp)
   4b2a0:	dc000017 	ldw	r16,0(sp)
   4b2a4:	dec00204 	addi	sp,sp,8
   4b2a8:	f800283a 	ret
   4b2ac:	01400174 	movhi	r5,5
   4b2b0:	294ef804 	addi	r5,r5,15328
   4b2b4:	8009883a 	mov	r4,r16
   4b2b8:	004d9240 	call	4d924 <strcmp>
   4b2bc:	103ff526 	beq	r2,zero,4b294 <__alt_data_end+0xfffcb294>
   4b2c0:	01400174 	movhi	r5,5
   4b2c4:	294ee304 	addi	r5,r5,15244
   4b2c8:	8009883a 	mov	r4,r16
   4b2cc:	004d9240 	call	4d924 <strcmp>
   4b2d0:	103ff026 	beq	r2,zero,4b294 <__alt_data_end+0xfffcb294>
   4b2d4:	0005883a 	mov	r2,zero
   4b2d8:	003ff006 	br	4b29c <__alt_data_end+0xfffcb29c>
   4b2dc:	00800174 	movhi	r2,5
   4b2e0:	108ef804 	addi	r2,r2,15328
   4b2e4:	f800283a 	ret

0004b2e8 <__locale_charset>:
   4b2e8:	00800174 	movhi	r2,5
   4b2ec:	10906b04 	addi	r2,r2,16812
   4b2f0:	f800283a 	ret

0004b2f4 <__locale_mb_cur_max>:
   4b2f4:	00800174 	movhi	r2,5
   4b2f8:	10960704 	addi	r2,r2,22556
   4b2fc:	10800017 	ldw	r2,0(r2)
   4b300:	f800283a 	ret

0004b304 <__locale_msgcharset>:
   4b304:	00800174 	movhi	r2,5
   4b308:	10906304 	addi	r2,r2,16780
   4b30c:	f800283a 	ret

0004b310 <__locale_cjk_lang>:
   4b310:	0005883a 	mov	r2,zero
   4b314:	f800283a 	ret

0004b318 <_localeconv_r>:
   4b318:	00800174 	movhi	r2,5
   4b31c:	10907304 	addi	r2,r2,16844
   4b320:	f800283a 	ret

0004b324 <setlocale>:
   4b324:	00800174 	movhi	r2,5
   4b328:	10960604 	addi	r2,r2,22552
   4b32c:	280d883a 	mov	r6,r5
   4b330:	200b883a 	mov	r5,r4
   4b334:	11000017 	ldw	r4,0(r2)
   4b338:	004b26c1 	jmpi	4b26c <_setlocale_r>

0004b33c <localeconv>:
   4b33c:	00800174 	movhi	r2,5
   4b340:	10907304 	addi	r2,r2,16844
   4b344:	f800283a 	ret

0004b348 <__smakebuf_r>:
   4b348:	2880030b 	ldhu	r2,12(r5)
   4b34c:	10c0008c 	andi	r3,r2,2
   4b350:	1800411e 	bne	r3,zero,4b458 <__smakebuf_r+0x110>
   4b354:	deffec04 	addi	sp,sp,-80
   4b358:	dc000f15 	stw	r16,60(sp)
   4b35c:	2821883a 	mov	r16,r5
   4b360:	2940038f 	ldh	r5,14(r5)
   4b364:	dc401015 	stw	r17,64(sp)
   4b368:	dfc01315 	stw	ra,76(sp)
   4b36c:	dcc01215 	stw	r19,72(sp)
   4b370:	dc801115 	stw	r18,68(sp)
   4b374:	2023883a 	mov	r17,r4
   4b378:	28001c16 	blt	r5,zero,4b3ec <__smakebuf_r+0xa4>
   4b37c:	d80d883a 	mov	r6,sp
   4b380:	004f4cc0 	call	4f4cc <_fstat_r>
   4b384:	10001816 	blt	r2,zero,4b3e8 <__smakebuf_r+0xa0>
   4b388:	d8800117 	ldw	r2,4(sp)
   4b38c:	00e00014 	movui	r3,32768
   4b390:	10bc000c 	andi	r2,r2,61440
   4b394:	14c80020 	cmpeqi	r19,r2,8192
   4b398:	10c03726 	beq	r2,r3,4b478 <__smakebuf_r+0x130>
   4b39c:	80c0030b 	ldhu	r3,12(r16)
   4b3a0:	18c20014 	ori	r3,r3,2048
   4b3a4:	80c0030d 	sth	r3,12(r16)
   4b3a8:	00c80004 	movi	r3,8192
   4b3ac:	10c0521e 	bne	r2,r3,4b4f8 <__smakebuf_r+0x1b0>
   4b3b0:	8140038f 	ldh	r5,14(r16)
   4b3b4:	8809883a 	mov	r4,r17
   4b3b8:	004f5280 	call	4f528 <_isatty_r>
   4b3bc:	10004c26 	beq	r2,zero,4b4f0 <__smakebuf_r+0x1a8>
   4b3c0:	8080030b 	ldhu	r2,12(r16)
   4b3c4:	80c010c4 	addi	r3,r16,67
   4b3c8:	80c00015 	stw	r3,0(r16)
   4b3cc:	10800054 	ori	r2,r2,1
   4b3d0:	8080030d 	sth	r2,12(r16)
   4b3d4:	00800044 	movi	r2,1
   4b3d8:	80c00415 	stw	r3,16(r16)
   4b3dc:	80800515 	stw	r2,20(r16)
   4b3e0:	04810004 	movi	r18,1024
   4b3e4:	00000706 	br	4b404 <__smakebuf_r+0xbc>
   4b3e8:	8080030b 	ldhu	r2,12(r16)
   4b3ec:	10c0200c 	andi	r3,r2,128
   4b3f0:	18001f1e 	bne	r3,zero,4b470 <__smakebuf_r+0x128>
   4b3f4:	04810004 	movi	r18,1024
   4b3f8:	10820014 	ori	r2,r2,2048
   4b3fc:	8080030d 	sth	r2,12(r16)
   4b400:	0027883a 	mov	r19,zero
   4b404:	900b883a 	mov	r5,r18
   4b408:	8809883a 	mov	r4,r17
   4b40c:	004b5040 	call	4b504 <_malloc_r>
   4b410:	10002c26 	beq	r2,zero,4b4c4 <__smakebuf_r+0x17c>
   4b414:	80c0030b 	ldhu	r3,12(r16)
   4b418:	01000174 	movhi	r4,5
   4b41c:	21291704 	addi	r4,r4,-23460
   4b420:	89000f15 	stw	r4,60(r17)
   4b424:	18c02014 	ori	r3,r3,128
   4b428:	80c0030d 	sth	r3,12(r16)
   4b42c:	80800015 	stw	r2,0(r16)
   4b430:	80800415 	stw	r2,16(r16)
   4b434:	84800515 	stw	r18,20(r16)
   4b438:	98001a1e 	bne	r19,zero,4b4a4 <__smakebuf_r+0x15c>
   4b43c:	dfc01317 	ldw	ra,76(sp)
   4b440:	dcc01217 	ldw	r19,72(sp)
   4b444:	dc801117 	ldw	r18,68(sp)
   4b448:	dc401017 	ldw	r17,64(sp)
   4b44c:	dc000f17 	ldw	r16,60(sp)
   4b450:	dec01404 	addi	sp,sp,80
   4b454:	f800283a 	ret
   4b458:	288010c4 	addi	r2,r5,67
   4b45c:	28800015 	stw	r2,0(r5)
   4b460:	28800415 	stw	r2,16(r5)
   4b464:	00800044 	movi	r2,1
   4b468:	28800515 	stw	r2,20(r5)
   4b46c:	f800283a 	ret
   4b470:	04801004 	movi	r18,64
   4b474:	003fe006 	br	4b3f8 <__alt_data_end+0xfffcb3f8>
   4b478:	81000a17 	ldw	r4,40(r16)
   4b47c:	00c00174 	movhi	r3,5
   4b480:	18f63004 	addi	r3,r3,-10048
   4b484:	20ffc51e 	bne	r4,r3,4b39c <__alt_data_end+0xfffcb39c>
   4b488:	8080030b 	ldhu	r2,12(r16)
   4b48c:	04810004 	movi	r18,1024
   4b490:	84801315 	stw	r18,76(r16)
   4b494:	1484b03a 	or	r2,r2,r18
   4b498:	8080030d 	sth	r2,12(r16)
   4b49c:	0027883a 	mov	r19,zero
   4b4a0:	003fd806 	br	4b404 <__alt_data_end+0xfffcb404>
   4b4a4:	8140038f 	ldh	r5,14(r16)
   4b4a8:	8809883a 	mov	r4,r17
   4b4ac:	004f5280 	call	4f528 <_isatty_r>
   4b4b0:	103fe226 	beq	r2,zero,4b43c <__alt_data_end+0xfffcb43c>
   4b4b4:	8080030b 	ldhu	r2,12(r16)
   4b4b8:	10800054 	ori	r2,r2,1
   4b4bc:	8080030d 	sth	r2,12(r16)
   4b4c0:	003fde06 	br	4b43c <__alt_data_end+0xfffcb43c>
   4b4c4:	8080030b 	ldhu	r2,12(r16)
   4b4c8:	10c0800c 	andi	r3,r2,512
   4b4cc:	183fdb1e 	bne	r3,zero,4b43c <__alt_data_end+0xfffcb43c>
   4b4d0:	10800094 	ori	r2,r2,2
   4b4d4:	80c010c4 	addi	r3,r16,67
   4b4d8:	8080030d 	sth	r2,12(r16)
   4b4dc:	00800044 	movi	r2,1
   4b4e0:	80c00015 	stw	r3,0(r16)
   4b4e4:	80c00415 	stw	r3,16(r16)
   4b4e8:	80800515 	stw	r2,20(r16)
   4b4ec:	003fd306 	br	4b43c <__alt_data_end+0xfffcb43c>
   4b4f0:	04810004 	movi	r18,1024
   4b4f4:	003fc306 	br	4b404 <__alt_data_end+0xfffcb404>
   4b4f8:	0027883a 	mov	r19,zero
   4b4fc:	04810004 	movi	r18,1024
   4b500:	003fc006 	br	4b404 <__alt_data_end+0xfffcb404>

0004b504 <_malloc_r>:
   4b504:	defff504 	addi	sp,sp,-44
   4b508:	dc800315 	stw	r18,12(sp)
   4b50c:	dfc00a15 	stw	ra,40(sp)
   4b510:	df000915 	stw	fp,36(sp)
   4b514:	ddc00815 	stw	r23,32(sp)
   4b518:	dd800715 	stw	r22,28(sp)
   4b51c:	dd400615 	stw	r21,24(sp)
   4b520:	dd000515 	stw	r20,20(sp)
   4b524:	dcc00415 	stw	r19,16(sp)
   4b528:	dc400215 	stw	r17,8(sp)
   4b52c:	dc000115 	stw	r16,4(sp)
   4b530:	288002c4 	addi	r2,r5,11
   4b534:	00c00584 	movi	r3,22
   4b538:	2025883a 	mov	r18,r4
   4b53c:	18807f2e 	bgeu	r3,r2,4b73c <_malloc_r+0x238>
   4b540:	047ffe04 	movi	r17,-8
   4b544:	1462703a 	and	r17,r2,r17
   4b548:	8800a316 	blt	r17,zero,4b7d8 <_malloc_r+0x2d4>
   4b54c:	8940a236 	bltu	r17,r5,4b7d8 <_malloc_r+0x2d4>
   4b550:	005142c0 	call	5142c <__malloc_lock>
   4b554:	00807dc4 	movi	r2,503
   4b558:	1441e92e 	bgeu	r2,r17,4bd00 <_malloc_r+0x7fc>
   4b55c:	8804d27a 	srli	r2,r17,9
   4b560:	1000a126 	beq	r2,zero,4b7e8 <_malloc_r+0x2e4>
   4b564:	00c00104 	movi	r3,4
   4b568:	18811e36 	bltu	r3,r2,4b9e4 <_malloc_r+0x4e0>
   4b56c:	8804d1ba 	srli	r2,r17,6
   4b570:	12000e44 	addi	r8,r2,57
   4b574:	11c00e04 	addi	r7,r2,56
   4b578:	4209883a 	add	r4,r8,r8
   4b57c:	04c00174 	movhi	r19,5
   4b580:	2109883a 	add	r4,r4,r4
   4b584:	9cd08104 	addi	r19,r19,16900
   4b588:	2109883a 	add	r4,r4,r4
   4b58c:	9909883a 	add	r4,r19,r4
   4b590:	24000117 	ldw	r16,4(r4)
   4b594:	213ffe04 	addi	r4,r4,-8
   4b598:	24009726 	beq	r4,r16,4b7f8 <_malloc_r+0x2f4>
   4b59c:	80800117 	ldw	r2,4(r16)
   4b5a0:	01bfff04 	movi	r6,-4
   4b5a4:	014003c4 	movi	r5,15
   4b5a8:	1184703a 	and	r2,r2,r6
   4b5ac:	1447c83a 	sub	r3,r2,r17
   4b5b0:	28c00716 	blt	r5,r3,4b5d0 <_malloc_r+0xcc>
   4b5b4:	1800920e 	bge	r3,zero,4b800 <_malloc_r+0x2fc>
   4b5b8:	84000317 	ldw	r16,12(r16)
   4b5bc:	24008e26 	beq	r4,r16,4b7f8 <_malloc_r+0x2f4>
   4b5c0:	80800117 	ldw	r2,4(r16)
   4b5c4:	1184703a 	and	r2,r2,r6
   4b5c8:	1447c83a 	sub	r3,r2,r17
   4b5cc:	28fff90e 	bge	r5,r3,4b5b4 <__alt_data_end+0xfffcb5b4>
   4b5d0:	3809883a 	mov	r4,r7
   4b5d4:	01800174 	movhi	r6,5
   4b5d8:	9c000417 	ldw	r16,16(r19)
   4b5dc:	31908104 	addi	r6,r6,16900
   4b5e0:	32000204 	addi	r8,r6,8
   4b5e4:	82013426 	beq	r16,r8,4bab8 <_malloc_r+0x5b4>
   4b5e8:	80c00117 	ldw	r3,4(r16)
   4b5ec:	00bfff04 	movi	r2,-4
   4b5f0:	188e703a 	and	r7,r3,r2
   4b5f4:	3c45c83a 	sub	r2,r7,r17
   4b5f8:	00c003c4 	movi	r3,15
   4b5fc:	18811f16 	blt	r3,r2,4ba7c <_malloc_r+0x578>
   4b600:	32000515 	stw	r8,20(r6)
   4b604:	32000415 	stw	r8,16(r6)
   4b608:	10007f0e 	bge	r2,zero,4b808 <_malloc_r+0x304>
   4b60c:	00807fc4 	movi	r2,511
   4b610:	11c0fd36 	bltu	r2,r7,4ba08 <_malloc_r+0x504>
   4b614:	3806d0fa 	srli	r3,r7,3
   4b618:	01c00044 	movi	r7,1
   4b61c:	30800117 	ldw	r2,4(r6)
   4b620:	19400044 	addi	r5,r3,1
   4b624:	294b883a 	add	r5,r5,r5
   4b628:	1807d0ba 	srai	r3,r3,2
   4b62c:	294b883a 	add	r5,r5,r5
   4b630:	294b883a 	add	r5,r5,r5
   4b634:	298b883a 	add	r5,r5,r6
   4b638:	38c6983a 	sll	r3,r7,r3
   4b63c:	29c00017 	ldw	r7,0(r5)
   4b640:	2a7ffe04 	addi	r9,r5,-8
   4b644:	1886b03a 	or	r3,r3,r2
   4b648:	82400315 	stw	r9,12(r16)
   4b64c:	81c00215 	stw	r7,8(r16)
   4b650:	30c00115 	stw	r3,4(r6)
   4b654:	2c000015 	stw	r16,0(r5)
   4b658:	3c000315 	stw	r16,12(r7)
   4b65c:	2005d0ba 	srai	r2,r4,2
   4b660:	01400044 	movi	r5,1
   4b664:	288a983a 	sll	r5,r5,r2
   4b668:	19406f36 	bltu	r3,r5,4b828 <_malloc_r+0x324>
   4b66c:	28c4703a 	and	r2,r5,r3
   4b670:	10000a1e 	bne	r2,zero,4b69c <_malloc_r+0x198>
   4b674:	00bfff04 	movi	r2,-4
   4b678:	294b883a 	add	r5,r5,r5
   4b67c:	2088703a 	and	r4,r4,r2
   4b680:	28c4703a 	and	r2,r5,r3
   4b684:	21000104 	addi	r4,r4,4
   4b688:	1000041e 	bne	r2,zero,4b69c <_malloc_r+0x198>
   4b68c:	294b883a 	add	r5,r5,r5
   4b690:	28c4703a 	and	r2,r5,r3
   4b694:	21000104 	addi	r4,r4,4
   4b698:	103ffc26 	beq	r2,zero,4b68c <__alt_data_end+0xfffcb68c>
   4b69c:	02bfff04 	movi	r10,-4
   4b6a0:	024003c4 	movi	r9,15
   4b6a4:	21800044 	addi	r6,r4,1
   4b6a8:	318d883a 	add	r6,r6,r6
   4b6ac:	318d883a 	add	r6,r6,r6
   4b6b0:	318d883a 	add	r6,r6,r6
   4b6b4:	998d883a 	add	r6,r19,r6
   4b6b8:	333ffe04 	addi	r12,r6,-8
   4b6bc:	2017883a 	mov	r11,r4
   4b6c0:	31800104 	addi	r6,r6,4
   4b6c4:	34000017 	ldw	r16,0(r6)
   4b6c8:	31fffd04 	addi	r7,r6,-12
   4b6cc:	81c0041e 	bne	r16,r7,4b6e0 <_malloc_r+0x1dc>
   4b6d0:	0000fb06 	br	4bac0 <_malloc_r+0x5bc>
   4b6d4:	1801030e 	bge	r3,zero,4bae4 <_malloc_r+0x5e0>
   4b6d8:	84000317 	ldw	r16,12(r16)
   4b6dc:	81c0f826 	beq	r16,r7,4bac0 <_malloc_r+0x5bc>
   4b6e0:	80800117 	ldw	r2,4(r16)
   4b6e4:	1284703a 	and	r2,r2,r10
   4b6e8:	1447c83a 	sub	r3,r2,r17
   4b6ec:	48fff90e 	bge	r9,r3,4b6d4 <__alt_data_end+0xfffcb6d4>
   4b6f0:	80800317 	ldw	r2,12(r16)
   4b6f4:	81000217 	ldw	r4,8(r16)
   4b6f8:	89400054 	ori	r5,r17,1
   4b6fc:	81400115 	stw	r5,4(r16)
   4b700:	20800315 	stw	r2,12(r4)
   4b704:	11000215 	stw	r4,8(r2)
   4b708:	8463883a 	add	r17,r16,r17
   4b70c:	9c400515 	stw	r17,20(r19)
   4b710:	9c400415 	stw	r17,16(r19)
   4b714:	18800054 	ori	r2,r3,1
   4b718:	88800115 	stw	r2,4(r17)
   4b71c:	8a000315 	stw	r8,12(r17)
   4b720:	8a000215 	stw	r8,8(r17)
   4b724:	88e3883a 	add	r17,r17,r3
   4b728:	88c00015 	stw	r3,0(r17)
   4b72c:	9009883a 	mov	r4,r18
   4b730:	00514500 	call	51450 <__malloc_unlock>
   4b734:	80800204 	addi	r2,r16,8
   4b738:	00001b06 	br	4b7a8 <_malloc_r+0x2a4>
   4b73c:	04400404 	movi	r17,16
   4b740:	89402536 	bltu	r17,r5,4b7d8 <_malloc_r+0x2d4>
   4b744:	005142c0 	call	5142c <__malloc_lock>
   4b748:	00800184 	movi	r2,6
   4b74c:	01000084 	movi	r4,2
   4b750:	04c00174 	movhi	r19,5
   4b754:	1085883a 	add	r2,r2,r2
   4b758:	9cd08104 	addi	r19,r19,16900
   4b75c:	1085883a 	add	r2,r2,r2
   4b760:	9885883a 	add	r2,r19,r2
   4b764:	14000117 	ldw	r16,4(r2)
   4b768:	10fffe04 	addi	r3,r2,-8
   4b76c:	80c0d926 	beq	r16,r3,4bad4 <_malloc_r+0x5d0>
   4b770:	80c00117 	ldw	r3,4(r16)
   4b774:	81000317 	ldw	r4,12(r16)
   4b778:	00bfff04 	movi	r2,-4
   4b77c:	1884703a 	and	r2,r3,r2
   4b780:	81400217 	ldw	r5,8(r16)
   4b784:	8085883a 	add	r2,r16,r2
   4b788:	10c00117 	ldw	r3,4(r2)
   4b78c:	29000315 	stw	r4,12(r5)
   4b790:	21400215 	stw	r5,8(r4)
   4b794:	18c00054 	ori	r3,r3,1
   4b798:	10c00115 	stw	r3,4(r2)
   4b79c:	9009883a 	mov	r4,r18
   4b7a0:	00514500 	call	51450 <__malloc_unlock>
   4b7a4:	80800204 	addi	r2,r16,8
   4b7a8:	dfc00a17 	ldw	ra,40(sp)
   4b7ac:	df000917 	ldw	fp,36(sp)
   4b7b0:	ddc00817 	ldw	r23,32(sp)
   4b7b4:	dd800717 	ldw	r22,28(sp)
   4b7b8:	dd400617 	ldw	r21,24(sp)
   4b7bc:	dd000517 	ldw	r20,20(sp)
   4b7c0:	dcc00417 	ldw	r19,16(sp)
   4b7c4:	dc800317 	ldw	r18,12(sp)
   4b7c8:	dc400217 	ldw	r17,8(sp)
   4b7cc:	dc000117 	ldw	r16,4(sp)
   4b7d0:	dec00b04 	addi	sp,sp,44
   4b7d4:	f800283a 	ret
   4b7d8:	00800304 	movi	r2,12
   4b7dc:	90800015 	stw	r2,0(r18)
   4b7e0:	0005883a 	mov	r2,zero
   4b7e4:	003ff006 	br	4b7a8 <__alt_data_end+0xfffcb7a8>
   4b7e8:	01002004 	movi	r4,128
   4b7ec:	02001004 	movi	r8,64
   4b7f0:	01c00fc4 	movi	r7,63
   4b7f4:	003f6106 	br	4b57c <__alt_data_end+0xfffcb57c>
   4b7f8:	4009883a 	mov	r4,r8
   4b7fc:	003f7506 	br	4b5d4 <__alt_data_end+0xfffcb5d4>
   4b800:	81000317 	ldw	r4,12(r16)
   4b804:	003fde06 	br	4b780 <__alt_data_end+0xfffcb780>
   4b808:	81c5883a 	add	r2,r16,r7
   4b80c:	11400117 	ldw	r5,4(r2)
   4b810:	9009883a 	mov	r4,r18
   4b814:	29400054 	ori	r5,r5,1
   4b818:	11400115 	stw	r5,4(r2)
   4b81c:	00514500 	call	51450 <__malloc_unlock>
   4b820:	80800204 	addi	r2,r16,8
   4b824:	003fe006 	br	4b7a8 <__alt_data_end+0xfffcb7a8>
   4b828:	9c000217 	ldw	r16,8(r19)
   4b82c:	00bfff04 	movi	r2,-4
   4b830:	85800117 	ldw	r22,4(r16)
   4b834:	b0ac703a 	and	r22,r22,r2
   4b838:	b4400336 	bltu	r22,r17,4b848 <_malloc_r+0x344>
   4b83c:	b445c83a 	sub	r2,r22,r17
   4b840:	00c003c4 	movi	r3,15
   4b844:	18805d16 	blt	r3,r2,4b9bc <_malloc_r+0x4b8>
   4b848:	05c00174 	movhi	r23,5
   4b84c:	00800174 	movhi	r2,5
   4b850:	109cdb04 	addi	r2,r2,29548
   4b854:	bdd60804 	addi	r23,r23,22560
   4b858:	15400017 	ldw	r21,0(r2)
   4b85c:	b8c00017 	ldw	r3,0(r23)
   4b860:	00bfffc4 	movi	r2,-1
   4b864:	858d883a 	add	r6,r16,r22
   4b868:	8d6b883a 	add	r21,r17,r21
   4b86c:	1880ea26 	beq	r3,r2,4bc18 <_malloc_r+0x714>
   4b870:	ad4403c4 	addi	r21,r21,4111
   4b874:	00bc0004 	movi	r2,-4096
   4b878:	a8aa703a 	and	r21,r21,r2
   4b87c:	a80b883a 	mov	r5,r21
   4b880:	9009883a 	mov	r4,r18
   4b884:	d9800015 	stw	r6,0(sp)
   4b888:	004d7940 	call	4d794 <_sbrk_r>
   4b88c:	1029883a 	mov	r20,r2
   4b890:	00bfffc4 	movi	r2,-1
   4b894:	d9800017 	ldw	r6,0(sp)
   4b898:	a080e826 	beq	r20,r2,4bc3c <_malloc_r+0x738>
   4b89c:	a180a636 	bltu	r20,r6,4bb38 <_malloc_r+0x634>
   4b8a0:	07000174 	movhi	fp,5
   4b8a4:	e71ce404 	addi	fp,fp,29584
   4b8a8:	e0800017 	ldw	r2,0(fp)
   4b8ac:	a887883a 	add	r3,r21,r2
   4b8b0:	e0c00015 	stw	r3,0(fp)
   4b8b4:	3500e626 	beq	r6,r20,4bc50 <_malloc_r+0x74c>
   4b8b8:	b9000017 	ldw	r4,0(r23)
   4b8bc:	00bfffc4 	movi	r2,-1
   4b8c0:	2080ee26 	beq	r4,r2,4bc7c <_malloc_r+0x778>
   4b8c4:	a185c83a 	sub	r2,r20,r6
   4b8c8:	10c5883a 	add	r2,r2,r3
   4b8cc:	e0800015 	stw	r2,0(fp)
   4b8d0:	a0c001cc 	andi	r3,r20,7
   4b8d4:	1800bc26 	beq	r3,zero,4bbc8 <_malloc_r+0x6c4>
   4b8d8:	a0e9c83a 	sub	r20,r20,r3
   4b8dc:	00840204 	movi	r2,4104
   4b8e0:	a5000204 	addi	r20,r20,8
   4b8e4:	10c7c83a 	sub	r3,r2,r3
   4b8e8:	a545883a 	add	r2,r20,r21
   4b8ec:	1083ffcc 	andi	r2,r2,4095
   4b8f0:	18abc83a 	sub	r21,r3,r2
   4b8f4:	a80b883a 	mov	r5,r21
   4b8f8:	9009883a 	mov	r4,r18
   4b8fc:	004d7940 	call	4d794 <_sbrk_r>
   4b900:	00ffffc4 	movi	r3,-1
   4b904:	10c0e126 	beq	r2,r3,4bc8c <_malloc_r+0x788>
   4b908:	1505c83a 	sub	r2,r2,r20
   4b90c:	1545883a 	add	r2,r2,r21
   4b910:	10800054 	ori	r2,r2,1
   4b914:	e0c00017 	ldw	r3,0(fp)
   4b918:	9d000215 	stw	r20,8(r19)
   4b91c:	a0800115 	stw	r2,4(r20)
   4b920:	a8c7883a 	add	r3,r21,r3
   4b924:	e0c00015 	stw	r3,0(fp)
   4b928:	84c00e26 	beq	r16,r19,4b964 <_malloc_r+0x460>
   4b92c:	018003c4 	movi	r6,15
   4b930:	3580a72e 	bgeu	r6,r22,4bbd0 <_malloc_r+0x6cc>
   4b934:	81400117 	ldw	r5,4(r16)
   4b938:	013ffe04 	movi	r4,-8
   4b93c:	b0bffd04 	addi	r2,r22,-12
   4b940:	1104703a 	and	r2,r2,r4
   4b944:	2900004c 	andi	r4,r5,1
   4b948:	2088b03a 	or	r4,r4,r2
   4b94c:	81000115 	stw	r4,4(r16)
   4b950:	01400144 	movi	r5,5
   4b954:	8089883a 	add	r4,r16,r2
   4b958:	21400115 	stw	r5,4(r4)
   4b95c:	21400215 	stw	r5,8(r4)
   4b960:	3080cd36 	bltu	r6,r2,4bc98 <_malloc_r+0x794>
   4b964:	00800174 	movhi	r2,5
   4b968:	109cda04 	addi	r2,r2,29544
   4b96c:	11000017 	ldw	r4,0(r2)
   4b970:	20c0012e 	bgeu	r4,r3,4b978 <_malloc_r+0x474>
   4b974:	10c00015 	stw	r3,0(r2)
   4b978:	00800174 	movhi	r2,5
   4b97c:	109cd904 	addi	r2,r2,29540
   4b980:	11000017 	ldw	r4,0(r2)
   4b984:	9c000217 	ldw	r16,8(r19)
   4b988:	20c0012e 	bgeu	r4,r3,4b990 <_malloc_r+0x48c>
   4b98c:	10c00015 	stw	r3,0(r2)
   4b990:	80c00117 	ldw	r3,4(r16)
   4b994:	00bfff04 	movi	r2,-4
   4b998:	1886703a 	and	r3,r3,r2
   4b99c:	1c45c83a 	sub	r2,r3,r17
   4b9a0:	1c400236 	bltu	r3,r17,4b9ac <_malloc_r+0x4a8>
   4b9a4:	00c003c4 	movi	r3,15
   4b9a8:	18800416 	blt	r3,r2,4b9bc <_malloc_r+0x4b8>
   4b9ac:	9009883a 	mov	r4,r18
   4b9b0:	00514500 	call	51450 <__malloc_unlock>
   4b9b4:	0005883a 	mov	r2,zero
   4b9b8:	003f7b06 	br	4b7a8 <__alt_data_end+0xfffcb7a8>
   4b9bc:	88c00054 	ori	r3,r17,1
   4b9c0:	80c00115 	stw	r3,4(r16)
   4b9c4:	8463883a 	add	r17,r16,r17
   4b9c8:	10800054 	ori	r2,r2,1
   4b9cc:	9c400215 	stw	r17,8(r19)
   4b9d0:	88800115 	stw	r2,4(r17)
   4b9d4:	9009883a 	mov	r4,r18
   4b9d8:	00514500 	call	51450 <__malloc_unlock>
   4b9dc:	80800204 	addi	r2,r16,8
   4b9e0:	003f7106 	br	4b7a8 <__alt_data_end+0xfffcb7a8>
   4b9e4:	00c00504 	movi	r3,20
   4b9e8:	18804a2e 	bgeu	r3,r2,4bb14 <_malloc_r+0x610>
   4b9ec:	00c01504 	movi	r3,84
   4b9f0:	18806e36 	bltu	r3,r2,4bbac <_malloc_r+0x6a8>
   4b9f4:	8804d33a 	srli	r2,r17,12
   4b9f8:	12001bc4 	addi	r8,r2,111
   4b9fc:	11c01b84 	addi	r7,r2,110
   4ba00:	4209883a 	add	r4,r8,r8
   4ba04:	003edd06 	br	4b57c <__alt_data_end+0xfffcb57c>
   4ba08:	3804d27a 	srli	r2,r7,9
   4ba0c:	00c00104 	movi	r3,4
   4ba10:	1880442e 	bgeu	r3,r2,4bb24 <_malloc_r+0x620>
   4ba14:	00c00504 	movi	r3,20
   4ba18:	18808136 	bltu	r3,r2,4bc20 <_malloc_r+0x71c>
   4ba1c:	11401704 	addi	r5,r2,92
   4ba20:	10c016c4 	addi	r3,r2,91
   4ba24:	294b883a 	add	r5,r5,r5
   4ba28:	294b883a 	add	r5,r5,r5
   4ba2c:	294b883a 	add	r5,r5,r5
   4ba30:	994b883a 	add	r5,r19,r5
   4ba34:	28800017 	ldw	r2,0(r5)
   4ba38:	01800174 	movhi	r6,5
   4ba3c:	297ffe04 	addi	r5,r5,-8
   4ba40:	31908104 	addi	r6,r6,16900
   4ba44:	28806526 	beq	r5,r2,4bbdc <_malloc_r+0x6d8>
   4ba48:	01bfff04 	movi	r6,-4
   4ba4c:	10c00117 	ldw	r3,4(r2)
   4ba50:	1986703a 	and	r3,r3,r6
   4ba54:	38c0022e 	bgeu	r7,r3,4ba60 <_malloc_r+0x55c>
   4ba58:	10800217 	ldw	r2,8(r2)
   4ba5c:	28bffb1e 	bne	r5,r2,4ba4c <__alt_data_end+0xfffcba4c>
   4ba60:	11400317 	ldw	r5,12(r2)
   4ba64:	98c00117 	ldw	r3,4(r19)
   4ba68:	81400315 	stw	r5,12(r16)
   4ba6c:	80800215 	stw	r2,8(r16)
   4ba70:	2c000215 	stw	r16,8(r5)
   4ba74:	14000315 	stw	r16,12(r2)
   4ba78:	003ef806 	br	4b65c <__alt_data_end+0xfffcb65c>
   4ba7c:	88c00054 	ori	r3,r17,1
   4ba80:	80c00115 	stw	r3,4(r16)
   4ba84:	8463883a 	add	r17,r16,r17
   4ba88:	34400515 	stw	r17,20(r6)
   4ba8c:	34400415 	stw	r17,16(r6)
   4ba90:	10c00054 	ori	r3,r2,1
   4ba94:	8a000315 	stw	r8,12(r17)
   4ba98:	8a000215 	stw	r8,8(r17)
   4ba9c:	88c00115 	stw	r3,4(r17)
   4baa0:	88a3883a 	add	r17,r17,r2
   4baa4:	88800015 	stw	r2,0(r17)
   4baa8:	9009883a 	mov	r4,r18
   4baac:	00514500 	call	51450 <__malloc_unlock>
   4bab0:	80800204 	addi	r2,r16,8
   4bab4:	003f3c06 	br	4b7a8 <__alt_data_end+0xfffcb7a8>
   4bab8:	30c00117 	ldw	r3,4(r6)
   4babc:	003ee706 	br	4b65c <__alt_data_end+0xfffcb65c>
   4bac0:	5ac00044 	addi	r11,r11,1
   4bac4:	588000cc 	andi	r2,r11,3
   4bac8:	31800204 	addi	r6,r6,8
   4bacc:	103efd1e 	bne	r2,zero,4b6c4 <__alt_data_end+0xfffcb6c4>
   4bad0:	00002406 	br	4bb64 <_malloc_r+0x660>
   4bad4:	14000317 	ldw	r16,12(r2)
   4bad8:	143f251e 	bne	r2,r16,4b770 <__alt_data_end+0xfffcb770>
   4badc:	21000084 	addi	r4,r4,2
   4bae0:	003ebc06 	br	4b5d4 <__alt_data_end+0xfffcb5d4>
   4bae4:	8085883a 	add	r2,r16,r2
   4bae8:	10c00117 	ldw	r3,4(r2)
   4baec:	81000317 	ldw	r4,12(r16)
   4baf0:	81400217 	ldw	r5,8(r16)
   4baf4:	18c00054 	ori	r3,r3,1
   4baf8:	10c00115 	stw	r3,4(r2)
   4bafc:	29000315 	stw	r4,12(r5)
   4bb00:	21400215 	stw	r5,8(r4)
   4bb04:	9009883a 	mov	r4,r18
   4bb08:	00514500 	call	51450 <__malloc_unlock>
   4bb0c:	80800204 	addi	r2,r16,8
   4bb10:	003f2506 	br	4b7a8 <__alt_data_end+0xfffcb7a8>
   4bb14:	12001704 	addi	r8,r2,92
   4bb18:	11c016c4 	addi	r7,r2,91
   4bb1c:	4209883a 	add	r4,r8,r8
   4bb20:	003e9606 	br	4b57c <__alt_data_end+0xfffcb57c>
   4bb24:	3804d1ba 	srli	r2,r7,6
   4bb28:	11400e44 	addi	r5,r2,57
   4bb2c:	10c00e04 	addi	r3,r2,56
   4bb30:	294b883a 	add	r5,r5,r5
   4bb34:	003fbc06 	br	4ba28 <__alt_data_end+0xfffcba28>
   4bb38:	84ff5926 	beq	r16,r19,4b8a0 <__alt_data_end+0xfffcb8a0>
   4bb3c:	00800174 	movhi	r2,5
   4bb40:	10908104 	addi	r2,r2,16900
   4bb44:	14000217 	ldw	r16,8(r2)
   4bb48:	00bfff04 	movi	r2,-4
   4bb4c:	80c00117 	ldw	r3,4(r16)
   4bb50:	1886703a 	and	r3,r3,r2
   4bb54:	003f9106 	br	4b99c <__alt_data_end+0xfffcb99c>
   4bb58:	60800217 	ldw	r2,8(r12)
   4bb5c:	213fffc4 	addi	r4,r4,-1
   4bb60:	1300651e 	bne	r2,r12,4bcf8 <_malloc_r+0x7f4>
   4bb64:	208000cc 	andi	r2,r4,3
   4bb68:	633ffe04 	addi	r12,r12,-8
   4bb6c:	103ffa1e 	bne	r2,zero,4bb58 <__alt_data_end+0xfffcbb58>
   4bb70:	98800117 	ldw	r2,4(r19)
   4bb74:	0146303a 	nor	r3,zero,r5
   4bb78:	1884703a 	and	r2,r3,r2
   4bb7c:	98800115 	stw	r2,4(r19)
   4bb80:	294b883a 	add	r5,r5,r5
   4bb84:	117f2836 	bltu	r2,r5,4b828 <__alt_data_end+0xfffcb828>
   4bb88:	283f2726 	beq	r5,zero,4b828 <__alt_data_end+0xfffcb828>
   4bb8c:	2886703a 	and	r3,r5,r2
   4bb90:	5809883a 	mov	r4,r11
   4bb94:	183ec31e 	bne	r3,zero,4b6a4 <__alt_data_end+0xfffcb6a4>
   4bb98:	294b883a 	add	r5,r5,r5
   4bb9c:	2886703a 	and	r3,r5,r2
   4bba0:	21000104 	addi	r4,r4,4
   4bba4:	183ffc26 	beq	r3,zero,4bb98 <__alt_data_end+0xfffcbb98>
   4bba8:	003ebe06 	br	4b6a4 <__alt_data_end+0xfffcb6a4>
   4bbac:	00c05504 	movi	r3,340
   4bbb0:	18801236 	bltu	r3,r2,4bbfc <_malloc_r+0x6f8>
   4bbb4:	8804d3fa 	srli	r2,r17,15
   4bbb8:	12001e04 	addi	r8,r2,120
   4bbbc:	11c01dc4 	addi	r7,r2,119
   4bbc0:	4209883a 	add	r4,r8,r8
   4bbc4:	003e6d06 	br	4b57c <__alt_data_end+0xfffcb57c>
   4bbc8:	00c40004 	movi	r3,4096
   4bbcc:	003f4606 	br	4b8e8 <__alt_data_end+0xfffcb8e8>
   4bbd0:	00800044 	movi	r2,1
   4bbd4:	a0800115 	stw	r2,4(r20)
   4bbd8:	003f7406 	br	4b9ac <__alt_data_end+0xfffcb9ac>
   4bbdc:	1805d0ba 	srai	r2,r3,2
   4bbe0:	01c00044 	movi	r7,1
   4bbe4:	30c00117 	ldw	r3,4(r6)
   4bbe8:	388e983a 	sll	r7,r7,r2
   4bbec:	2805883a 	mov	r2,r5
   4bbf0:	38c6b03a 	or	r3,r7,r3
   4bbf4:	30c00115 	stw	r3,4(r6)
   4bbf8:	003f9b06 	br	4ba68 <__alt_data_end+0xfffcba68>
   4bbfc:	00c15504 	movi	r3,1364
   4bc00:	18801a36 	bltu	r3,r2,4bc6c <_malloc_r+0x768>
   4bc04:	8804d4ba 	srli	r2,r17,18
   4bc08:	12001f44 	addi	r8,r2,125
   4bc0c:	11c01f04 	addi	r7,r2,124
   4bc10:	4209883a 	add	r4,r8,r8
   4bc14:	003e5906 	br	4b57c <__alt_data_end+0xfffcb57c>
   4bc18:	ad400404 	addi	r21,r21,16
   4bc1c:	003f1706 	br	4b87c <__alt_data_end+0xfffcb87c>
   4bc20:	00c01504 	movi	r3,84
   4bc24:	18802336 	bltu	r3,r2,4bcb4 <_malloc_r+0x7b0>
   4bc28:	3804d33a 	srli	r2,r7,12
   4bc2c:	11401bc4 	addi	r5,r2,111
   4bc30:	10c01b84 	addi	r3,r2,110
   4bc34:	294b883a 	add	r5,r5,r5
   4bc38:	003f7b06 	br	4ba28 <__alt_data_end+0xfffcba28>
   4bc3c:	9c000217 	ldw	r16,8(r19)
   4bc40:	00bfff04 	movi	r2,-4
   4bc44:	80c00117 	ldw	r3,4(r16)
   4bc48:	1886703a 	and	r3,r3,r2
   4bc4c:	003f5306 	br	4b99c <__alt_data_end+0xfffcb99c>
   4bc50:	3083ffcc 	andi	r2,r6,4095
   4bc54:	103f181e 	bne	r2,zero,4b8b8 <__alt_data_end+0xfffcb8b8>
   4bc58:	99000217 	ldw	r4,8(r19)
   4bc5c:	b545883a 	add	r2,r22,r21
   4bc60:	10800054 	ori	r2,r2,1
   4bc64:	20800115 	stw	r2,4(r4)
   4bc68:	003f3e06 	br	4b964 <__alt_data_end+0xfffcb964>
   4bc6c:	01003f84 	movi	r4,254
   4bc70:	02001fc4 	movi	r8,127
   4bc74:	01c01f84 	movi	r7,126
   4bc78:	003e4006 	br	4b57c <__alt_data_end+0xfffcb57c>
   4bc7c:	00800174 	movhi	r2,5
   4bc80:	10960804 	addi	r2,r2,22560
   4bc84:	15000015 	stw	r20,0(r2)
   4bc88:	003f1106 	br	4b8d0 <__alt_data_end+0xfffcb8d0>
   4bc8c:	00800044 	movi	r2,1
   4bc90:	002b883a 	mov	r21,zero
   4bc94:	003f1f06 	br	4b914 <__alt_data_end+0xfffcb914>
   4bc98:	81400204 	addi	r5,r16,8
   4bc9c:	9009883a 	mov	r4,r18
   4bca0:	004a9180 	call	4a918 <_free_r>
   4bca4:	00800174 	movhi	r2,5
   4bca8:	109ce404 	addi	r2,r2,29584
   4bcac:	10c00017 	ldw	r3,0(r2)
   4bcb0:	003f2c06 	br	4b964 <__alt_data_end+0xfffcb964>
   4bcb4:	00c05504 	movi	r3,340
   4bcb8:	18800536 	bltu	r3,r2,4bcd0 <_malloc_r+0x7cc>
   4bcbc:	3804d3fa 	srli	r2,r7,15
   4bcc0:	11401e04 	addi	r5,r2,120
   4bcc4:	10c01dc4 	addi	r3,r2,119
   4bcc8:	294b883a 	add	r5,r5,r5
   4bccc:	003f5606 	br	4ba28 <__alt_data_end+0xfffcba28>
   4bcd0:	00c15504 	movi	r3,1364
   4bcd4:	18800536 	bltu	r3,r2,4bcec <_malloc_r+0x7e8>
   4bcd8:	3804d4ba 	srli	r2,r7,18
   4bcdc:	11401f44 	addi	r5,r2,125
   4bce0:	10c01f04 	addi	r3,r2,124
   4bce4:	294b883a 	add	r5,r5,r5
   4bce8:	003f4f06 	br	4ba28 <__alt_data_end+0xfffcba28>
   4bcec:	01403f84 	movi	r5,254
   4bcf0:	00c01f84 	movi	r3,126
   4bcf4:	003f4c06 	br	4ba28 <__alt_data_end+0xfffcba28>
   4bcf8:	98800117 	ldw	r2,4(r19)
   4bcfc:	003fa006 	br	4bb80 <__alt_data_end+0xfffcbb80>
   4bd00:	8808d0fa 	srli	r4,r17,3
   4bd04:	20800044 	addi	r2,r4,1
   4bd08:	1085883a 	add	r2,r2,r2
   4bd0c:	003e9006 	br	4b750 <__alt_data_end+0xfffcb750>

0004bd10 <memchr>:
   4bd10:	208000cc 	andi	r2,r4,3
   4bd14:	280f883a 	mov	r7,r5
   4bd18:	10003426 	beq	r2,zero,4bdec <memchr+0xdc>
   4bd1c:	30bfffc4 	addi	r2,r6,-1
   4bd20:	30001a26 	beq	r6,zero,4bd8c <memchr+0x7c>
   4bd24:	20c00003 	ldbu	r3,0(r4)
   4bd28:	29803fcc 	andi	r6,r5,255
   4bd2c:	30c0051e 	bne	r6,r3,4bd44 <memchr+0x34>
   4bd30:	00001806 	br	4bd94 <memchr+0x84>
   4bd34:	10001526 	beq	r2,zero,4bd8c <memchr+0x7c>
   4bd38:	20c00003 	ldbu	r3,0(r4)
   4bd3c:	10bfffc4 	addi	r2,r2,-1
   4bd40:	30c01426 	beq	r6,r3,4bd94 <memchr+0x84>
   4bd44:	21000044 	addi	r4,r4,1
   4bd48:	20c000cc 	andi	r3,r4,3
   4bd4c:	183ff91e 	bne	r3,zero,4bd34 <__alt_data_end+0xfffcbd34>
   4bd50:	020000c4 	movi	r8,3
   4bd54:	40801136 	bltu	r8,r2,4bd9c <memchr+0x8c>
   4bd58:	10000c26 	beq	r2,zero,4bd8c <memchr+0x7c>
   4bd5c:	20c00003 	ldbu	r3,0(r4)
   4bd60:	29403fcc 	andi	r5,r5,255
   4bd64:	28c00b26 	beq	r5,r3,4bd94 <memchr+0x84>
   4bd68:	20c00044 	addi	r3,r4,1
   4bd6c:	39803fcc 	andi	r6,r7,255
   4bd70:	2089883a 	add	r4,r4,r2
   4bd74:	00000306 	br	4bd84 <memchr+0x74>
   4bd78:	18c00044 	addi	r3,r3,1
   4bd7c:	197fffc3 	ldbu	r5,-1(r3)
   4bd80:	31400526 	beq	r6,r5,4bd98 <memchr+0x88>
   4bd84:	1805883a 	mov	r2,r3
   4bd88:	20fffb1e 	bne	r4,r3,4bd78 <__alt_data_end+0xfffcbd78>
   4bd8c:	0005883a 	mov	r2,zero
   4bd90:	f800283a 	ret
   4bd94:	2005883a 	mov	r2,r4
   4bd98:	f800283a 	ret
   4bd9c:	28c03fcc 	andi	r3,r5,255
   4bda0:	1812923a 	slli	r9,r3,8
   4bda4:	02ffbff4 	movhi	r11,65279
   4bda8:	02a02074 	movhi	r10,32897
   4bdac:	48d2b03a 	or	r9,r9,r3
   4bdb0:	4806943a 	slli	r3,r9,16
   4bdb4:	5affbfc4 	addi	r11,r11,-257
   4bdb8:	52a02004 	addi	r10,r10,-32640
   4bdbc:	48d2b03a 	or	r9,r9,r3
   4bdc0:	20c00017 	ldw	r3,0(r4)
   4bdc4:	48c6f03a 	xor	r3,r9,r3
   4bdc8:	1acd883a 	add	r6,r3,r11
   4bdcc:	00c6303a 	nor	r3,zero,r3
   4bdd0:	30c6703a 	and	r3,r6,r3
   4bdd4:	1a86703a 	and	r3,r3,r10
   4bdd8:	183fe01e 	bne	r3,zero,4bd5c <__alt_data_end+0xfffcbd5c>
   4bddc:	10bfff04 	addi	r2,r2,-4
   4bde0:	21000104 	addi	r4,r4,4
   4bde4:	40bff636 	bltu	r8,r2,4bdc0 <__alt_data_end+0xfffcbdc0>
   4bde8:	003fdb06 	br	4bd58 <__alt_data_end+0xfffcbd58>
   4bdec:	3005883a 	mov	r2,r6
   4bdf0:	003fd706 	br	4bd50 <__alt_data_end+0xfffcbd50>

0004bdf4 <memcpy>:
   4bdf4:	defffd04 	addi	sp,sp,-12
   4bdf8:	dfc00215 	stw	ra,8(sp)
   4bdfc:	dc400115 	stw	r17,4(sp)
   4be00:	dc000015 	stw	r16,0(sp)
   4be04:	00c003c4 	movi	r3,15
   4be08:	2005883a 	mov	r2,r4
   4be0c:	1980452e 	bgeu	r3,r6,4bf24 <memcpy+0x130>
   4be10:	2906b03a 	or	r3,r5,r4
   4be14:	18c000cc 	andi	r3,r3,3
   4be18:	1800441e 	bne	r3,zero,4bf2c <memcpy+0x138>
   4be1c:	347ffc04 	addi	r17,r6,-16
   4be20:	8822d13a 	srli	r17,r17,4
   4be24:	28c00104 	addi	r3,r5,4
   4be28:	23400104 	addi	r13,r4,4
   4be2c:	8820913a 	slli	r16,r17,4
   4be30:	2b000204 	addi	r12,r5,8
   4be34:	22c00204 	addi	r11,r4,8
   4be38:	84000504 	addi	r16,r16,20
   4be3c:	2a800304 	addi	r10,r5,12
   4be40:	22400304 	addi	r9,r4,12
   4be44:	2c21883a 	add	r16,r5,r16
   4be48:	2811883a 	mov	r8,r5
   4be4c:	200f883a 	mov	r7,r4
   4be50:	41000017 	ldw	r4,0(r8)
   4be54:	1fc00017 	ldw	ra,0(r3)
   4be58:	63c00017 	ldw	r15,0(r12)
   4be5c:	39000015 	stw	r4,0(r7)
   4be60:	53800017 	ldw	r14,0(r10)
   4be64:	6fc00015 	stw	ra,0(r13)
   4be68:	5bc00015 	stw	r15,0(r11)
   4be6c:	4b800015 	stw	r14,0(r9)
   4be70:	18c00404 	addi	r3,r3,16
   4be74:	39c00404 	addi	r7,r7,16
   4be78:	42000404 	addi	r8,r8,16
   4be7c:	6b400404 	addi	r13,r13,16
   4be80:	63000404 	addi	r12,r12,16
   4be84:	5ac00404 	addi	r11,r11,16
   4be88:	52800404 	addi	r10,r10,16
   4be8c:	4a400404 	addi	r9,r9,16
   4be90:	1c3fef1e 	bne	r3,r16,4be50 <__alt_data_end+0xfffcbe50>
   4be94:	89c00044 	addi	r7,r17,1
   4be98:	380e913a 	slli	r7,r7,4
   4be9c:	310003cc 	andi	r4,r6,15
   4bea0:	02c000c4 	movi	r11,3
   4bea4:	11c7883a 	add	r3,r2,r7
   4bea8:	29cb883a 	add	r5,r5,r7
   4beac:	5900212e 	bgeu	r11,r4,4bf34 <memcpy+0x140>
   4beb0:	1813883a 	mov	r9,r3
   4beb4:	2811883a 	mov	r8,r5
   4beb8:	200f883a 	mov	r7,r4
   4bebc:	42800017 	ldw	r10,0(r8)
   4bec0:	4a400104 	addi	r9,r9,4
   4bec4:	39ffff04 	addi	r7,r7,-4
   4bec8:	4abfff15 	stw	r10,-4(r9)
   4becc:	42000104 	addi	r8,r8,4
   4bed0:	59fffa36 	bltu	r11,r7,4bebc <__alt_data_end+0xfffcbebc>
   4bed4:	213fff04 	addi	r4,r4,-4
   4bed8:	2008d0ba 	srli	r4,r4,2
   4bedc:	318000cc 	andi	r6,r6,3
   4bee0:	21000044 	addi	r4,r4,1
   4bee4:	2109883a 	add	r4,r4,r4
   4bee8:	2109883a 	add	r4,r4,r4
   4beec:	1907883a 	add	r3,r3,r4
   4bef0:	290b883a 	add	r5,r5,r4
   4bef4:	30000626 	beq	r6,zero,4bf10 <memcpy+0x11c>
   4bef8:	198d883a 	add	r6,r3,r6
   4befc:	29c00003 	ldbu	r7,0(r5)
   4bf00:	18c00044 	addi	r3,r3,1
   4bf04:	29400044 	addi	r5,r5,1
   4bf08:	19ffffc5 	stb	r7,-1(r3)
   4bf0c:	19bffb1e 	bne	r3,r6,4befc <__alt_data_end+0xfffcbefc>
   4bf10:	dfc00217 	ldw	ra,8(sp)
   4bf14:	dc400117 	ldw	r17,4(sp)
   4bf18:	dc000017 	ldw	r16,0(sp)
   4bf1c:	dec00304 	addi	sp,sp,12
   4bf20:	f800283a 	ret
   4bf24:	2007883a 	mov	r3,r4
   4bf28:	003ff206 	br	4bef4 <__alt_data_end+0xfffcbef4>
   4bf2c:	2007883a 	mov	r3,r4
   4bf30:	003ff106 	br	4bef8 <__alt_data_end+0xfffcbef8>
   4bf34:	200d883a 	mov	r6,r4
   4bf38:	003fee06 	br	4bef4 <__alt_data_end+0xfffcbef4>

0004bf3c <memmove>:
   4bf3c:	2005883a 	mov	r2,r4
   4bf40:	29000b2e 	bgeu	r5,r4,4bf70 <memmove+0x34>
   4bf44:	298f883a 	add	r7,r5,r6
   4bf48:	21c0092e 	bgeu	r4,r7,4bf70 <memmove+0x34>
   4bf4c:	2187883a 	add	r3,r4,r6
   4bf50:	198bc83a 	sub	r5,r3,r6
   4bf54:	30004826 	beq	r6,zero,4c078 <memmove+0x13c>
   4bf58:	39ffffc4 	addi	r7,r7,-1
   4bf5c:	39000003 	ldbu	r4,0(r7)
   4bf60:	18ffffc4 	addi	r3,r3,-1
   4bf64:	19000005 	stb	r4,0(r3)
   4bf68:	28fffb1e 	bne	r5,r3,4bf58 <__alt_data_end+0xfffcbf58>
   4bf6c:	f800283a 	ret
   4bf70:	00c003c4 	movi	r3,15
   4bf74:	1980412e 	bgeu	r3,r6,4c07c <memmove+0x140>
   4bf78:	2886b03a 	or	r3,r5,r2
   4bf7c:	18c000cc 	andi	r3,r3,3
   4bf80:	1800401e 	bne	r3,zero,4c084 <memmove+0x148>
   4bf84:	33fffc04 	addi	r15,r6,-16
   4bf88:	781ed13a 	srli	r15,r15,4
   4bf8c:	28c00104 	addi	r3,r5,4
   4bf90:	13400104 	addi	r13,r2,4
   4bf94:	781c913a 	slli	r14,r15,4
   4bf98:	2b000204 	addi	r12,r5,8
   4bf9c:	12c00204 	addi	r11,r2,8
   4bfa0:	73800504 	addi	r14,r14,20
   4bfa4:	2a800304 	addi	r10,r5,12
   4bfa8:	12400304 	addi	r9,r2,12
   4bfac:	2b9d883a 	add	r14,r5,r14
   4bfb0:	2811883a 	mov	r8,r5
   4bfb4:	100f883a 	mov	r7,r2
   4bfb8:	41000017 	ldw	r4,0(r8)
   4bfbc:	39c00404 	addi	r7,r7,16
   4bfc0:	18c00404 	addi	r3,r3,16
   4bfc4:	393ffc15 	stw	r4,-16(r7)
   4bfc8:	193ffc17 	ldw	r4,-16(r3)
   4bfcc:	6b400404 	addi	r13,r13,16
   4bfd0:	5ac00404 	addi	r11,r11,16
   4bfd4:	693ffc15 	stw	r4,-16(r13)
   4bfd8:	61000017 	ldw	r4,0(r12)
   4bfdc:	4a400404 	addi	r9,r9,16
   4bfe0:	42000404 	addi	r8,r8,16
   4bfe4:	593ffc15 	stw	r4,-16(r11)
   4bfe8:	51000017 	ldw	r4,0(r10)
   4bfec:	63000404 	addi	r12,r12,16
   4bff0:	52800404 	addi	r10,r10,16
   4bff4:	493ffc15 	stw	r4,-16(r9)
   4bff8:	1bbfef1e 	bne	r3,r14,4bfb8 <__alt_data_end+0xfffcbfb8>
   4bffc:	79000044 	addi	r4,r15,1
   4c000:	2008913a 	slli	r4,r4,4
   4c004:	328003cc 	andi	r10,r6,15
   4c008:	02c000c4 	movi	r11,3
   4c00c:	1107883a 	add	r3,r2,r4
   4c010:	290b883a 	add	r5,r5,r4
   4c014:	5a801e2e 	bgeu	r11,r10,4c090 <memmove+0x154>
   4c018:	1813883a 	mov	r9,r3
   4c01c:	2811883a 	mov	r8,r5
   4c020:	500f883a 	mov	r7,r10
   4c024:	41000017 	ldw	r4,0(r8)
   4c028:	4a400104 	addi	r9,r9,4
   4c02c:	39ffff04 	addi	r7,r7,-4
   4c030:	493fff15 	stw	r4,-4(r9)
   4c034:	42000104 	addi	r8,r8,4
   4c038:	59fffa36 	bltu	r11,r7,4c024 <__alt_data_end+0xfffcc024>
   4c03c:	513fff04 	addi	r4,r10,-4
   4c040:	2008d0ba 	srli	r4,r4,2
   4c044:	318000cc 	andi	r6,r6,3
   4c048:	21000044 	addi	r4,r4,1
   4c04c:	2109883a 	add	r4,r4,r4
   4c050:	2109883a 	add	r4,r4,r4
   4c054:	1907883a 	add	r3,r3,r4
   4c058:	290b883a 	add	r5,r5,r4
   4c05c:	30000b26 	beq	r6,zero,4c08c <memmove+0x150>
   4c060:	198d883a 	add	r6,r3,r6
   4c064:	29c00003 	ldbu	r7,0(r5)
   4c068:	18c00044 	addi	r3,r3,1
   4c06c:	29400044 	addi	r5,r5,1
   4c070:	19ffffc5 	stb	r7,-1(r3)
   4c074:	19bffb1e 	bne	r3,r6,4c064 <__alt_data_end+0xfffcc064>
   4c078:	f800283a 	ret
   4c07c:	1007883a 	mov	r3,r2
   4c080:	003ff606 	br	4c05c <__alt_data_end+0xfffcc05c>
   4c084:	1007883a 	mov	r3,r2
   4c088:	003ff506 	br	4c060 <__alt_data_end+0xfffcc060>
   4c08c:	f800283a 	ret
   4c090:	500d883a 	mov	r6,r10
   4c094:	003ff106 	br	4c05c <__alt_data_end+0xfffcc05c>

0004c098 <memset>:
   4c098:	20c000cc 	andi	r3,r4,3
   4c09c:	2005883a 	mov	r2,r4
   4c0a0:	18004426 	beq	r3,zero,4c1b4 <memset+0x11c>
   4c0a4:	31ffffc4 	addi	r7,r6,-1
   4c0a8:	30004026 	beq	r6,zero,4c1ac <memset+0x114>
   4c0ac:	2813883a 	mov	r9,r5
   4c0b0:	200d883a 	mov	r6,r4
   4c0b4:	2007883a 	mov	r3,r4
   4c0b8:	00000406 	br	4c0cc <memset+0x34>
   4c0bc:	3a3fffc4 	addi	r8,r7,-1
   4c0c0:	31800044 	addi	r6,r6,1
   4c0c4:	38003926 	beq	r7,zero,4c1ac <memset+0x114>
   4c0c8:	400f883a 	mov	r7,r8
   4c0cc:	18c00044 	addi	r3,r3,1
   4c0d0:	32400005 	stb	r9,0(r6)
   4c0d4:	1a0000cc 	andi	r8,r3,3
   4c0d8:	403ff81e 	bne	r8,zero,4c0bc <__alt_data_end+0xfffcc0bc>
   4c0dc:	010000c4 	movi	r4,3
   4c0e0:	21c02d2e 	bgeu	r4,r7,4c198 <memset+0x100>
   4c0e4:	29003fcc 	andi	r4,r5,255
   4c0e8:	200c923a 	slli	r6,r4,8
   4c0ec:	3108b03a 	or	r4,r6,r4
   4c0f0:	200c943a 	slli	r6,r4,16
   4c0f4:	218cb03a 	or	r6,r4,r6
   4c0f8:	010003c4 	movi	r4,15
   4c0fc:	21c0182e 	bgeu	r4,r7,4c160 <memset+0xc8>
   4c100:	3b3ffc04 	addi	r12,r7,-16
   4c104:	6018d13a 	srli	r12,r12,4
   4c108:	1a000104 	addi	r8,r3,4
   4c10c:	1ac00204 	addi	r11,r3,8
   4c110:	6008913a 	slli	r4,r12,4
   4c114:	1a800304 	addi	r10,r3,12
   4c118:	1813883a 	mov	r9,r3
   4c11c:	21000504 	addi	r4,r4,20
   4c120:	1909883a 	add	r4,r3,r4
   4c124:	49800015 	stw	r6,0(r9)
   4c128:	41800015 	stw	r6,0(r8)
   4c12c:	59800015 	stw	r6,0(r11)
   4c130:	51800015 	stw	r6,0(r10)
   4c134:	42000404 	addi	r8,r8,16
   4c138:	4a400404 	addi	r9,r9,16
   4c13c:	5ac00404 	addi	r11,r11,16
   4c140:	52800404 	addi	r10,r10,16
   4c144:	413ff71e 	bne	r8,r4,4c124 <__alt_data_end+0xfffcc124>
   4c148:	63000044 	addi	r12,r12,1
   4c14c:	6018913a 	slli	r12,r12,4
   4c150:	39c003cc 	andi	r7,r7,15
   4c154:	010000c4 	movi	r4,3
   4c158:	1b07883a 	add	r3,r3,r12
   4c15c:	21c00e2e 	bgeu	r4,r7,4c198 <memset+0x100>
   4c160:	1813883a 	mov	r9,r3
   4c164:	3811883a 	mov	r8,r7
   4c168:	010000c4 	movi	r4,3
   4c16c:	49800015 	stw	r6,0(r9)
   4c170:	423fff04 	addi	r8,r8,-4
   4c174:	4a400104 	addi	r9,r9,4
   4c178:	223ffc36 	bltu	r4,r8,4c16c <__alt_data_end+0xfffcc16c>
   4c17c:	393fff04 	addi	r4,r7,-4
   4c180:	2008d0ba 	srli	r4,r4,2
   4c184:	39c000cc 	andi	r7,r7,3
   4c188:	21000044 	addi	r4,r4,1
   4c18c:	2109883a 	add	r4,r4,r4
   4c190:	2109883a 	add	r4,r4,r4
   4c194:	1907883a 	add	r3,r3,r4
   4c198:	38000526 	beq	r7,zero,4c1b0 <memset+0x118>
   4c19c:	19cf883a 	add	r7,r3,r7
   4c1a0:	19400005 	stb	r5,0(r3)
   4c1a4:	18c00044 	addi	r3,r3,1
   4c1a8:	38fffd1e 	bne	r7,r3,4c1a0 <__alt_data_end+0xfffcc1a0>
   4c1ac:	f800283a 	ret
   4c1b0:	f800283a 	ret
   4c1b4:	2007883a 	mov	r3,r4
   4c1b8:	300f883a 	mov	r7,r6
   4c1bc:	003fc706 	br	4c0dc <__alt_data_end+0xfffcc0dc>

0004c1c0 <_Balloc>:
   4c1c0:	20801317 	ldw	r2,76(r4)
   4c1c4:	defffc04 	addi	sp,sp,-16
   4c1c8:	dc400115 	stw	r17,4(sp)
   4c1cc:	dc000015 	stw	r16,0(sp)
   4c1d0:	dfc00315 	stw	ra,12(sp)
   4c1d4:	dc800215 	stw	r18,8(sp)
   4c1d8:	2023883a 	mov	r17,r4
   4c1dc:	2821883a 	mov	r16,r5
   4c1e0:	10000f26 	beq	r2,zero,4c220 <_Balloc+0x60>
   4c1e4:	8407883a 	add	r3,r16,r16
   4c1e8:	18c7883a 	add	r3,r3,r3
   4c1ec:	10c7883a 	add	r3,r2,r3
   4c1f0:	18800017 	ldw	r2,0(r3)
   4c1f4:	10001126 	beq	r2,zero,4c23c <_Balloc+0x7c>
   4c1f8:	11000017 	ldw	r4,0(r2)
   4c1fc:	19000015 	stw	r4,0(r3)
   4c200:	10000415 	stw	zero,16(r2)
   4c204:	10000315 	stw	zero,12(r2)
   4c208:	dfc00317 	ldw	ra,12(sp)
   4c20c:	dc800217 	ldw	r18,8(sp)
   4c210:	dc400117 	ldw	r17,4(sp)
   4c214:	dc000017 	ldw	r16,0(sp)
   4c218:	dec00404 	addi	sp,sp,16
   4c21c:	f800283a 	ret
   4c220:	01800844 	movi	r6,33
   4c224:	01400104 	movi	r5,4
   4c228:	004f0fc0 	call	4f0fc <_calloc_r>
   4c22c:	88801315 	stw	r2,76(r17)
   4c230:	103fec1e 	bne	r2,zero,4c1e4 <__alt_data_end+0xfffcc1e4>
   4c234:	0005883a 	mov	r2,zero
   4c238:	003ff306 	br	4c208 <__alt_data_end+0xfffcc208>
   4c23c:	01400044 	movi	r5,1
   4c240:	2c24983a 	sll	r18,r5,r16
   4c244:	8809883a 	mov	r4,r17
   4c248:	91800144 	addi	r6,r18,5
   4c24c:	318d883a 	add	r6,r6,r6
   4c250:	318d883a 	add	r6,r6,r6
   4c254:	004f0fc0 	call	4f0fc <_calloc_r>
   4c258:	103ff626 	beq	r2,zero,4c234 <__alt_data_end+0xfffcc234>
   4c25c:	14000115 	stw	r16,4(r2)
   4c260:	14800215 	stw	r18,8(r2)
   4c264:	003fe606 	br	4c200 <__alt_data_end+0xfffcc200>

0004c268 <_Bfree>:
   4c268:	28000826 	beq	r5,zero,4c28c <_Bfree+0x24>
   4c26c:	28c00117 	ldw	r3,4(r5)
   4c270:	20801317 	ldw	r2,76(r4)
   4c274:	18c7883a 	add	r3,r3,r3
   4c278:	18c7883a 	add	r3,r3,r3
   4c27c:	10c5883a 	add	r2,r2,r3
   4c280:	10c00017 	ldw	r3,0(r2)
   4c284:	28c00015 	stw	r3,0(r5)
   4c288:	11400015 	stw	r5,0(r2)
   4c28c:	f800283a 	ret

0004c290 <__multadd>:
   4c290:	defffa04 	addi	sp,sp,-24
   4c294:	dc800315 	stw	r18,12(sp)
   4c298:	dc400215 	stw	r17,8(sp)
   4c29c:	dc000115 	stw	r16,4(sp)
   4c2a0:	2823883a 	mov	r17,r5
   4c2a4:	2c000417 	ldw	r16,16(r5)
   4c2a8:	dfc00515 	stw	ra,20(sp)
   4c2ac:	dcc00415 	stw	r19,16(sp)
   4c2b0:	2025883a 	mov	r18,r4
   4c2b4:	29400504 	addi	r5,r5,20
   4c2b8:	0011883a 	mov	r8,zero
   4c2bc:	28c00017 	ldw	r3,0(r5)
   4c2c0:	29400104 	addi	r5,r5,4
   4c2c4:	42000044 	addi	r8,r8,1
   4c2c8:	18bfffcc 	andi	r2,r3,65535
   4c2cc:	1185383a 	mul	r2,r2,r6
   4c2d0:	1806d43a 	srli	r3,r3,16
   4c2d4:	11cf883a 	add	r7,r2,r7
   4c2d8:	3808d43a 	srli	r4,r7,16
   4c2dc:	1987383a 	mul	r3,r3,r6
   4c2e0:	38bfffcc 	andi	r2,r7,65535
   4c2e4:	1907883a 	add	r3,r3,r4
   4c2e8:	1808943a 	slli	r4,r3,16
   4c2ec:	180ed43a 	srli	r7,r3,16
   4c2f0:	2085883a 	add	r2,r4,r2
   4c2f4:	28bfff15 	stw	r2,-4(r5)
   4c2f8:	443ff016 	blt	r8,r16,4c2bc <__alt_data_end+0xfffcc2bc>
   4c2fc:	38000926 	beq	r7,zero,4c324 <__multadd+0x94>
   4c300:	88800217 	ldw	r2,8(r17)
   4c304:	80800f0e 	bge	r16,r2,4c344 <__multadd+0xb4>
   4c308:	80800144 	addi	r2,r16,5
   4c30c:	1085883a 	add	r2,r2,r2
   4c310:	1085883a 	add	r2,r2,r2
   4c314:	8885883a 	add	r2,r17,r2
   4c318:	11c00015 	stw	r7,0(r2)
   4c31c:	84000044 	addi	r16,r16,1
   4c320:	8c000415 	stw	r16,16(r17)
   4c324:	8805883a 	mov	r2,r17
   4c328:	dfc00517 	ldw	ra,20(sp)
   4c32c:	dcc00417 	ldw	r19,16(sp)
   4c330:	dc800317 	ldw	r18,12(sp)
   4c334:	dc400217 	ldw	r17,8(sp)
   4c338:	dc000117 	ldw	r16,4(sp)
   4c33c:	dec00604 	addi	sp,sp,24
   4c340:	f800283a 	ret
   4c344:	89400117 	ldw	r5,4(r17)
   4c348:	9009883a 	mov	r4,r18
   4c34c:	d9c00015 	stw	r7,0(sp)
   4c350:	29400044 	addi	r5,r5,1
   4c354:	004c1c00 	call	4c1c0 <_Balloc>
   4c358:	89800417 	ldw	r6,16(r17)
   4c35c:	89400304 	addi	r5,r17,12
   4c360:	11000304 	addi	r4,r2,12
   4c364:	31800084 	addi	r6,r6,2
   4c368:	318d883a 	add	r6,r6,r6
   4c36c:	318d883a 	add	r6,r6,r6
   4c370:	1027883a 	mov	r19,r2
   4c374:	004bdf40 	call	4bdf4 <memcpy>
   4c378:	d9c00017 	ldw	r7,0(sp)
   4c37c:	88000a26 	beq	r17,zero,4c3a8 <__multadd+0x118>
   4c380:	88c00117 	ldw	r3,4(r17)
   4c384:	90801317 	ldw	r2,76(r18)
   4c388:	18c7883a 	add	r3,r3,r3
   4c38c:	18c7883a 	add	r3,r3,r3
   4c390:	10c5883a 	add	r2,r2,r3
   4c394:	10c00017 	ldw	r3,0(r2)
   4c398:	88c00015 	stw	r3,0(r17)
   4c39c:	14400015 	stw	r17,0(r2)
   4c3a0:	9823883a 	mov	r17,r19
   4c3a4:	003fd806 	br	4c308 <__alt_data_end+0xfffcc308>
   4c3a8:	9823883a 	mov	r17,r19
   4c3ac:	003fd606 	br	4c308 <__alt_data_end+0xfffcc308>

0004c3b0 <__s2b>:
   4c3b0:	defff904 	addi	sp,sp,-28
   4c3b4:	dc400115 	stw	r17,4(sp)
   4c3b8:	dc000015 	stw	r16,0(sp)
   4c3bc:	2023883a 	mov	r17,r4
   4c3c0:	2821883a 	mov	r16,r5
   4c3c4:	39000204 	addi	r4,r7,8
   4c3c8:	01400244 	movi	r5,9
   4c3cc:	dcc00315 	stw	r19,12(sp)
   4c3d0:	dc800215 	stw	r18,8(sp)
   4c3d4:	dfc00615 	stw	ra,24(sp)
   4c3d8:	dd400515 	stw	r21,20(sp)
   4c3dc:	dd000415 	stw	r20,16(sp)
   4c3e0:	3825883a 	mov	r18,r7
   4c3e4:	3027883a 	mov	r19,r6
   4c3e8:	00430f00 	call	430f0 <__divsi3>
   4c3ec:	00c00044 	movi	r3,1
   4c3f0:	000b883a 	mov	r5,zero
   4c3f4:	1880030e 	bge	r3,r2,4c404 <__s2b+0x54>
   4c3f8:	18c7883a 	add	r3,r3,r3
   4c3fc:	29400044 	addi	r5,r5,1
   4c400:	18bffd16 	blt	r3,r2,4c3f8 <__alt_data_end+0xfffcc3f8>
   4c404:	8809883a 	mov	r4,r17
   4c408:	004c1c00 	call	4c1c0 <_Balloc>
   4c40c:	d8c00717 	ldw	r3,28(sp)
   4c410:	10c00515 	stw	r3,20(r2)
   4c414:	00c00044 	movi	r3,1
   4c418:	10c00415 	stw	r3,16(r2)
   4c41c:	00c00244 	movi	r3,9
   4c420:	1cc0210e 	bge	r3,r19,4c4a8 <__s2b+0xf8>
   4c424:	80eb883a 	add	r21,r16,r3
   4c428:	a829883a 	mov	r20,r21
   4c42c:	84e1883a 	add	r16,r16,r19
   4c430:	a1c00007 	ldb	r7,0(r20)
   4c434:	01800284 	movi	r6,10
   4c438:	a5000044 	addi	r20,r20,1
   4c43c:	100b883a 	mov	r5,r2
   4c440:	39fff404 	addi	r7,r7,-48
   4c444:	8809883a 	mov	r4,r17
   4c448:	004c2900 	call	4c290 <__multadd>
   4c44c:	a43ff81e 	bne	r20,r16,4c430 <__alt_data_end+0xfffcc430>
   4c450:	ace1883a 	add	r16,r21,r19
   4c454:	843ffe04 	addi	r16,r16,-8
   4c458:	9c800a0e 	bge	r19,r18,4c484 <__s2b+0xd4>
   4c45c:	94e5c83a 	sub	r18,r18,r19
   4c460:	84a5883a 	add	r18,r16,r18
   4c464:	81c00007 	ldb	r7,0(r16)
   4c468:	01800284 	movi	r6,10
   4c46c:	84000044 	addi	r16,r16,1
   4c470:	100b883a 	mov	r5,r2
   4c474:	39fff404 	addi	r7,r7,-48
   4c478:	8809883a 	mov	r4,r17
   4c47c:	004c2900 	call	4c290 <__multadd>
   4c480:	84bff81e 	bne	r16,r18,4c464 <__alt_data_end+0xfffcc464>
   4c484:	dfc00617 	ldw	ra,24(sp)
   4c488:	dd400517 	ldw	r21,20(sp)
   4c48c:	dd000417 	ldw	r20,16(sp)
   4c490:	dcc00317 	ldw	r19,12(sp)
   4c494:	dc800217 	ldw	r18,8(sp)
   4c498:	dc400117 	ldw	r17,4(sp)
   4c49c:	dc000017 	ldw	r16,0(sp)
   4c4a0:	dec00704 	addi	sp,sp,28
   4c4a4:	f800283a 	ret
   4c4a8:	84000284 	addi	r16,r16,10
   4c4ac:	1827883a 	mov	r19,r3
   4c4b0:	003fe906 	br	4c458 <__alt_data_end+0xfffcc458>

0004c4b4 <__hi0bits>:
   4c4b4:	20bfffec 	andhi	r2,r4,65535
   4c4b8:	1000141e 	bne	r2,zero,4c50c <__hi0bits+0x58>
   4c4bc:	2008943a 	slli	r4,r4,16
   4c4c0:	00800404 	movi	r2,16
   4c4c4:	20ffc02c 	andhi	r3,r4,65280
   4c4c8:	1800021e 	bne	r3,zero,4c4d4 <__hi0bits+0x20>
   4c4cc:	2008923a 	slli	r4,r4,8
   4c4d0:	10800204 	addi	r2,r2,8
   4c4d4:	20fc002c 	andhi	r3,r4,61440
   4c4d8:	1800021e 	bne	r3,zero,4c4e4 <__hi0bits+0x30>
   4c4dc:	2008913a 	slli	r4,r4,4
   4c4e0:	10800104 	addi	r2,r2,4
   4c4e4:	20f0002c 	andhi	r3,r4,49152
   4c4e8:	1800031e 	bne	r3,zero,4c4f8 <__hi0bits+0x44>
   4c4ec:	2109883a 	add	r4,r4,r4
   4c4f0:	10800084 	addi	r2,r2,2
   4c4f4:	2109883a 	add	r4,r4,r4
   4c4f8:	20000316 	blt	r4,zero,4c508 <__hi0bits+0x54>
   4c4fc:	2110002c 	andhi	r4,r4,16384
   4c500:	2000041e 	bne	r4,zero,4c514 <__hi0bits+0x60>
   4c504:	00800804 	movi	r2,32
   4c508:	f800283a 	ret
   4c50c:	0005883a 	mov	r2,zero
   4c510:	003fec06 	br	4c4c4 <__alt_data_end+0xfffcc4c4>
   4c514:	10800044 	addi	r2,r2,1
   4c518:	f800283a 	ret

0004c51c <__lo0bits>:
   4c51c:	20c00017 	ldw	r3,0(r4)
   4c520:	188001cc 	andi	r2,r3,7
   4c524:	10000826 	beq	r2,zero,4c548 <__lo0bits+0x2c>
   4c528:	1880004c 	andi	r2,r3,1
   4c52c:	1000211e 	bne	r2,zero,4c5b4 <__lo0bits+0x98>
   4c530:	1880008c 	andi	r2,r3,2
   4c534:	1000211e 	bne	r2,zero,4c5bc <__lo0bits+0xa0>
   4c538:	1806d0ba 	srli	r3,r3,2
   4c53c:	00800084 	movi	r2,2
   4c540:	20c00015 	stw	r3,0(r4)
   4c544:	f800283a 	ret
   4c548:	18bfffcc 	andi	r2,r3,65535
   4c54c:	10001326 	beq	r2,zero,4c59c <__lo0bits+0x80>
   4c550:	0005883a 	mov	r2,zero
   4c554:	19403fcc 	andi	r5,r3,255
   4c558:	2800021e 	bne	r5,zero,4c564 <__lo0bits+0x48>
   4c55c:	1806d23a 	srli	r3,r3,8
   4c560:	10800204 	addi	r2,r2,8
   4c564:	194003cc 	andi	r5,r3,15
   4c568:	2800021e 	bne	r5,zero,4c574 <__lo0bits+0x58>
   4c56c:	1806d13a 	srli	r3,r3,4
   4c570:	10800104 	addi	r2,r2,4
   4c574:	194000cc 	andi	r5,r3,3
   4c578:	2800021e 	bne	r5,zero,4c584 <__lo0bits+0x68>
   4c57c:	1806d0ba 	srli	r3,r3,2
   4c580:	10800084 	addi	r2,r2,2
   4c584:	1940004c 	andi	r5,r3,1
   4c588:	2800081e 	bne	r5,zero,4c5ac <__lo0bits+0x90>
   4c58c:	1806d07a 	srli	r3,r3,1
   4c590:	1800051e 	bne	r3,zero,4c5a8 <__lo0bits+0x8c>
   4c594:	00800804 	movi	r2,32
   4c598:	f800283a 	ret
   4c59c:	1806d43a 	srli	r3,r3,16
   4c5a0:	00800404 	movi	r2,16
   4c5a4:	003feb06 	br	4c554 <__alt_data_end+0xfffcc554>
   4c5a8:	10800044 	addi	r2,r2,1
   4c5ac:	20c00015 	stw	r3,0(r4)
   4c5b0:	f800283a 	ret
   4c5b4:	0005883a 	mov	r2,zero
   4c5b8:	f800283a 	ret
   4c5bc:	1806d07a 	srli	r3,r3,1
   4c5c0:	00800044 	movi	r2,1
   4c5c4:	20c00015 	stw	r3,0(r4)
   4c5c8:	f800283a 	ret

0004c5cc <__i2b>:
   4c5cc:	defffd04 	addi	sp,sp,-12
   4c5d0:	dc000015 	stw	r16,0(sp)
   4c5d4:	04000044 	movi	r16,1
   4c5d8:	dc400115 	stw	r17,4(sp)
   4c5dc:	2823883a 	mov	r17,r5
   4c5e0:	800b883a 	mov	r5,r16
   4c5e4:	dfc00215 	stw	ra,8(sp)
   4c5e8:	004c1c00 	call	4c1c0 <_Balloc>
   4c5ec:	14400515 	stw	r17,20(r2)
   4c5f0:	14000415 	stw	r16,16(r2)
   4c5f4:	dfc00217 	ldw	ra,8(sp)
   4c5f8:	dc400117 	ldw	r17,4(sp)
   4c5fc:	dc000017 	ldw	r16,0(sp)
   4c600:	dec00304 	addi	sp,sp,12
   4c604:	f800283a 	ret

0004c608 <__multiply>:
   4c608:	defffa04 	addi	sp,sp,-24
   4c60c:	dcc00315 	stw	r19,12(sp)
   4c610:	dc800215 	stw	r18,8(sp)
   4c614:	34c00417 	ldw	r19,16(r6)
   4c618:	2c800417 	ldw	r18,16(r5)
   4c61c:	dd000415 	stw	r20,16(sp)
   4c620:	dc400115 	stw	r17,4(sp)
   4c624:	dfc00515 	stw	ra,20(sp)
   4c628:	dc000015 	stw	r16,0(sp)
   4c62c:	2829883a 	mov	r20,r5
   4c630:	3023883a 	mov	r17,r6
   4c634:	94c0050e 	bge	r18,r19,4c64c <__multiply+0x44>
   4c638:	9007883a 	mov	r3,r18
   4c63c:	3029883a 	mov	r20,r6
   4c640:	9825883a 	mov	r18,r19
   4c644:	2823883a 	mov	r17,r5
   4c648:	1827883a 	mov	r19,r3
   4c64c:	a0800217 	ldw	r2,8(r20)
   4c650:	94e1883a 	add	r16,r18,r19
   4c654:	a1400117 	ldw	r5,4(r20)
   4c658:	1400010e 	bge	r2,r16,4c660 <__multiply+0x58>
   4c65c:	29400044 	addi	r5,r5,1
   4c660:	004c1c00 	call	4c1c0 <_Balloc>
   4c664:	8415883a 	add	r10,r16,r16
   4c668:	12c00504 	addi	r11,r2,20
   4c66c:	5295883a 	add	r10,r10,r10
   4c670:	5a95883a 	add	r10,r11,r10
   4c674:	5807883a 	mov	r3,r11
   4c678:	5a80032e 	bgeu	r11,r10,4c688 <__multiply+0x80>
   4c67c:	18000015 	stw	zero,0(r3)
   4c680:	18c00104 	addi	r3,r3,4
   4c684:	1abffd36 	bltu	r3,r10,4c67c <__alt_data_end+0xfffcc67c>
   4c688:	9ce7883a 	add	r19,r19,r19
   4c68c:	94a5883a 	add	r18,r18,r18
   4c690:	89800504 	addi	r6,r17,20
   4c694:	9ce7883a 	add	r19,r19,r19
   4c698:	a3400504 	addi	r13,r20,20
   4c69c:	94a5883a 	add	r18,r18,r18
   4c6a0:	34d9883a 	add	r12,r6,r19
   4c6a4:	6c93883a 	add	r9,r13,r18
   4c6a8:	3300422e 	bgeu	r6,r12,4c7b4 <__multiply+0x1ac>
   4c6ac:	37c00017 	ldw	ra,0(r6)
   4c6b0:	fbffffcc 	andi	r15,ra,65535
   4c6b4:	78001b26 	beq	r15,zero,4c724 <__multiply+0x11c>
   4c6b8:	5811883a 	mov	r8,r11
   4c6bc:	681d883a 	mov	r14,r13
   4c6c0:	000f883a 	mov	r7,zero
   4c6c4:	71000017 	ldw	r4,0(r14)
   4c6c8:	40c00017 	ldw	r3,0(r8)
   4c6cc:	73800104 	addi	r14,r14,4
   4c6d0:	217fffcc 	andi	r5,r4,65535
   4c6d4:	2bcb383a 	mul	r5,r5,r15
   4c6d8:	2008d43a 	srli	r4,r4,16
   4c6dc:	1c7fffcc 	andi	r17,r3,65535
   4c6e0:	2c4b883a 	add	r5,r5,r17
   4c6e4:	29cb883a 	add	r5,r5,r7
   4c6e8:	23c9383a 	mul	r4,r4,r15
   4c6ec:	1806d43a 	srli	r3,r3,16
   4c6f0:	280ed43a 	srli	r7,r5,16
   4c6f4:	297fffcc 	andi	r5,r5,65535
   4c6f8:	20c7883a 	add	r3,r4,r3
   4c6fc:	19c7883a 	add	r3,r3,r7
   4c700:	1808943a 	slli	r4,r3,16
   4c704:	4023883a 	mov	r17,r8
   4c708:	180ed43a 	srli	r7,r3,16
   4c70c:	214ab03a 	or	r5,r4,r5
   4c710:	41400015 	stw	r5,0(r8)
   4c714:	42000104 	addi	r8,r8,4
   4c718:	727fea36 	bltu	r14,r9,4c6c4 <__alt_data_end+0xfffcc6c4>
   4c71c:	89c00115 	stw	r7,4(r17)
   4c720:	37c00017 	ldw	ra,0(r6)
   4c724:	f83ed43a 	srli	ra,ra,16
   4c728:	f8001f26 	beq	ra,zero,4c7a8 <__multiply+0x1a0>
   4c72c:	58c00017 	ldw	r3,0(r11)
   4c730:	681d883a 	mov	r14,r13
   4c734:	581f883a 	mov	r15,r11
   4c738:	1811883a 	mov	r8,r3
   4c73c:	5825883a 	mov	r18,r11
   4c740:	000f883a 	mov	r7,zero
   4c744:	00000106 	br	4c74c <__multiply+0x144>
   4c748:	8825883a 	mov	r18,r17
   4c74c:	7140000b 	ldhu	r5,0(r14)
   4c750:	4010d43a 	srli	r8,r8,16
   4c754:	193fffcc 	andi	r4,r3,65535
   4c758:	2fcb383a 	mul	r5,r5,ra
   4c75c:	7bc00104 	addi	r15,r15,4
   4c760:	73800104 	addi	r14,r14,4
   4c764:	2a0b883a 	add	r5,r5,r8
   4c768:	29cb883a 	add	r5,r5,r7
   4c76c:	2806943a 	slli	r3,r5,16
   4c770:	94400104 	addi	r17,r18,4
   4c774:	280ad43a 	srli	r5,r5,16
   4c778:	1908b03a 	or	r4,r3,r4
   4c77c:	793fff15 	stw	r4,-4(r15)
   4c780:	70ffff17 	ldw	r3,-4(r14)
   4c784:	8a000017 	ldw	r8,0(r17)
   4c788:	1806d43a 	srli	r3,r3,16
   4c78c:	413fffcc 	andi	r4,r8,65535
   4c790:	1fc7383a 	mul	r3,r3,ra
   4c794:	1907883a 	add	r3,r3,r4
   4c798:	1947883a 	add	r3,r3,r5
   4c79c:	180ed43a 	srli	r7,r3,16
   4c7a0:	727fe936 	bltu	r14,r9,4c748 <__alt_data_end+0xfffcc748>
   4c7a4:	90c00115 	stw	r3,4(r18)
   4c7a8:	31800104 	addi	r6,r6,4
   4c7ac:	5ac00104 	addi	r11,r11,4
   4c7b0:	333fbe36 	bltu	r6,r12,4c6ac <__alt_data_end+0xfffcc6ac>
   4c7b4:	0400090e 	bge	zero,r16,4c7dc <__multiply+0x1d4>
   4c7b8:	50ffff17 	ldw	r3,-4(r10)
   4c7bc:	52bfff04 	addi	r10,r10,-4
   4c7c0:	18000326 	beq	r3,zero,4c7d0 <__multiply+0x1c8>
   4c7c4:	00000506 	br	4c7dc <__multiply+0x1d4>
   4c7c8:	50c00017 	ldw	r3,0(r10)
   4c7cc:	1800031e 	bne	r3,zero,4c7dc <__multiply+0x1d4>
   4c7d0:	843fffc4 	addi	r16,r16,-1
   4c7d4:	52bfff04 	addi	r10,r10,-4
   4c7d8:	803ffb1e 	bne	r16,zero,4c7c8 <__alt_data_end+0xfffcc7c8>
   4c7dc:	14000415 	stw	r16,16(r2)
   4c7e0:	dfc00517 	ldw	ra,20(sp)
   4c7e4:	dd000417 	ldw	r20,16(sp)
   4c7e8:	dcc00317 	ldw	r19,12(sp)
   4c7ec:	dc800217 	ldw	r18,8(sp)
   4c7f0:	dc400117 	ldw	r17,4(sp)
   4c7f4:	dc000017 	ldw	r16,0(sp)
   4c7f8:	dec00604 	addi	sp,sp,24
   4c7fc:	f800283a 	ret

0004c800 <__pow5mult>:
   4c800:	defffa04 	addi	sp,sp,-24
   4c804:	dcc00315 	stw	r19,12(sp)
   4c808:	dc000015 	stw	r16,0(sp)
   4c80c:	dfc00515 	stw	ra,20(sp)
   4c810:	dd000415 	stw	r20,16(sp)
   4c814:	dc800215 	stw	r18,8(sp)
   4c818:	dc400115 	stw	r17,4(sp)
   4c81c:	308000cc 	andi	r2,r6,3
   4c820:	3021883a 	mov	r16,r6
   4c824:	2027883a 	mov	r19,r4
   4c828:	10002f1e 	bne	r2,zero,4c8e8 <__pow5mult+0xe8>
   4c82c:	2825883a 	mov	r18,r5
   4c830:	8021d0ba 	srai	r16,r16,2
   4c834:	80001a26 	beq	r16,zero,4c8a0 <__pow5mult+0xa0>
   4c838:	9c401217 	ldw	r17,72(r19)
   4c83c:	8800061e 	bne	r17,zero,4c858 <__pow5mult+0x58>
   4c840:	00003406 	br	4c914 <__pow5mult+0x114>
   4c844:	8021d07a 	srai	r16,r16,1
   4c848:	80001526 	beq	r16,zero,4c8a0 <__pow5mult+0xa0>
   4c84c:	88800017 	ldw	r2,0(r17)
   4c850:	10001c26 	beq	r2,zero,4c8c4 <__pow5mult+0xc4>
   4c854:	1023883a 	mov	r17,r2
   4c858:	8080004c 	andi	r2,r16,1
   4c85c:	103ff926 	beq	r2,zero,4c844 <__alt_data_end+0xfffcc844>
   4c860:	880d883a 	mov	r6,r17
   4c864:	900b883a 	mov	r5,r18
   4c868:	9809883a 	mov	r4,r19
   4c86c:	004c6080 	call	4c608 <__multiply>
   4c870:	90001b26 	beq	r18,zero,4c8e0 <__pow5mult+0xe0>
   4c874:	91000117 	ldw	r4,4(r18)
   4c878:	98c01317 	ldw	r3,76(r19)
   4c87c:	8021d07a 	srai	r16,r16,1
   4c880:	2109883a 	add	r4,r4,r4
   4c884:	2109883a 	add	r4,r4,r4
   4c888:	1907883a 	add	r3,r3,r4
   4c88c:	19000017 	ldw	r4,0(r3)
   4c890:	91000015 	stw	r4,0(r18)
   4c894:	1c800015 	stw	r18,0(r3)
   4c898:	1025883a 	mov	r18,r2
   4c89c:	803feb1e 	bne	r16,zero,4c84c <__alt_data_end+0xfffcc84c>
   4c8a0:	9005883a 	mov	r2,r18
   4c8a4:	dfc00517 	ldw	ra,20(sp)
   4c8a8:	dd000417 	ldw	r20,16(sp)
   4c8ac:	dcc00317 	ldw	r19,12(sp)
   4c8b0:	dc800217 	ldw	r18,8(sp)
   4c8b4:	dc400117 	ldw	r17,4(sp)
   4c8b8:	dc000017 	ldw	r16,0(sp)
   4c8bc:	dec00604 	addi	sp,sp,24
   4c8c0:	f800283a 	ret
   4c8c4:	880d883a 	mov	r6,r17
   4c8c8:	880b883a 	mov	r5,r17
   4c8cc:	9809883a 	mov	r4,r19
   4c8d0:	004c6080 	call	4c608 <__multiply>
   4c8d4:	88800015 	stw	r2,0(r17)
   4c8d8:	10000015 	stw	zero,0(r2)
   4c8dc:	003fdd06 	br	4c854 <__alt_data_end+0xfffcc854>
   4c8e0:	1025883a 	mov	r18,r2
   4c8e4:	003fd706 	br	4c844 <__alt_data_end+0xfffcc844>
   4c8e8:	10bfffc4 	addi	r2,r2,-1
   4c8ec:	1085883a 	add	r2,r2,r2
   4c8f0:	00c00174 	movhi	r3,5
   4c8f4:	18cefc04 	addi	r3,r3,15344
   4c8f8:	1085883a 	add	r2,r2,r2
   4c8fc:	1885883a 	add	r2,r3,r2
   4c900:	11800017 	ldw	r6,0(r2)
   4c904:	000f883a 	mov	r7,zero
   4c908:	004c2900 	call	4c290 <__multadd>
   4c90c:	1025883a 	mov	r18,r2
   4c910:	003fc706 	br	4c830 <__alt_data_end+0xfffcc830>
   4c914:	05000044 	movi	r20,1
   4c918:	a00b883a 	mov	r5,r20
   4c91c:	9809883a 	mov	r4,r19
   4c920:	004c1c00 	call	4c1c0 <_Balloc>
   4c924:	1023883a 	mov	r17,r2
   4c928:	00809c44 	movi	r2,625
   4c92c:	88800515 	stw	r2,20(r17)
   4c930:	8d000415 	stw	r20,16(r17)
   4c934:	9c401215 	stw	r17,72(r19)
   4c938:	88000015 	stw	zero,0(r17)
   4c93c:	003fc606 	br	4c858 <__alt_data_end+0xfffcc858>

0004c940 <__lshift>:
   4c940:	defff904 	addi	sp,sp,-28
   4c944:	dd400515 	stw	r21,20(sp)
   4c948:	dcc00315 	stw	r19,12(sp)
   4c94c:	302bd17a 	srai	r21,r6,5
   4c950:	2cc00417 	ldw	r19,16(r5)
   4c954:	28800217 	ldw	r2,8(r5)
   4c958:	dd000415 	stw	r20,16(sp)
   4c95c:	ace7883a 	add	r19,r21,r19
   4c960:	dc800215 	stw	r18,8(sp)
   4c964:	dc400115 	stw	r17,4(sp)
   4c968:	dc000015 	stw	r16,0(sp)
   4c96c:	dfc00615 	stw	ra,24(sp)
   4c970:	9c000044 	addi	r16,r19,1
   4c974:	2823883a 	mov	r17,r5
   4c978:	3029883a 	mov	r20,r6
   4c97c:	2025883a 	mov	r18,r4
   4c980:	29400117 	ldw	r5,4(r5)
   4c984:	1400030e 	bge	r2,r16,4c994 <__lshift+0x54>
   4c988:	1085883a 	add	r2,r2,r2
   4c98c:	29400044 	addi	r5,r5,1
   4c990:	143ffd16 	blt	r2,r16,4c988 <__alt_data_end+0xfffcc988>
   4c994:	9009883a 	mov	r4,r18
   4c998:	004c1c00 	call	4c1c0 <_Balloc>
   4c99c:	10c00504 	addi	r3,r2,20
   4c9a0:	0540070e 	bge	zero,r21,4c9c0 <__lshift+0x80>
   4c9a4:	ad6b883a 	add	r21,r21,r21
   4c9a8:	ad6b883a 	add	r21,r21,r21
   4c9ac:	1809883a 	mov	r4,r3
   4c9b0:	1d47883a 	add	r3,r3,r21
   4c9b4:	20000015 	stw	zero,0(r4)
   4c9b8:	21000104 	addi	r4,r4,4
   4c9bc:	193ffd1e 	bne	r3,r4,4c9b4 <__alt_data_end+0xfffcc9b4>
   4c9c0:	8a000417 	ldw	r8,16(r17)
   4c9c4:	89000504 	addi	r4,r17,20
   4c9c8:	a18007cc 	andi	r6,r20,31
   4c9cc:	4211883a 	add	r8,r8,r8
   4c9d0:	4211883a 	add	r8,r8,r8
   4c9d4:	2211883a 	add	r8,r4,r8
   4c9d8:	30002326 	beq	r6,zero,4ca68 <__lshift+0x128>
   4c9dc:	02400804 	movi	r9,32
   4c9e0:	4993c83a 	sub	r9,r9,r6
   4c9e4:	000b883a 	mov	r5,zero
   4c9e8:	21c00017 	ldw	r7,0(r4)
   4c9ec:	1815883a 	mov	r10,r3
   4c9f0:	18c00104 	addi	r3,r3,4
   4c9f4:	398e983a 	sll	r7,r7,r6
   4c9f8:	21000104 	addi	r4,r4,4
   4c9fc:	394ab03a 	or	r5,r7,r5
   4ca00:	197fff15 	stw	r5,-4(r3)
   4ca04:	217fff17 	ldw	r5,-4(r4)
   4ca08:	2a4ad83a 	srl	r5,r5,r9
   4ca0c:	223ff636 	bltu	r4,r8,4c9e8 <__alt_data_end+0xfffcc9e8>
   4ca10:	51400115 	stw	r5,4(r10)
   4ca14:	28001a1e 	bne	r5,zero,4ca80 <__lshift+0x140>
   4ca18:	843fffc4 	addi	r16,r16,-1
   4ca1c:	14000415 	stw	r16,16(r2)
   4ca20:	88000826 	beq	r17,zero,4ca44 <__lshift+0x104>
   4ca24:	89000117 	ldw	r4,4(r17)
   4ca28:	90c01317 	ldw	r3,76(r18)
   4ca2c:	2109883a 	add	r4,r4,r4
   4ca30:	2109883a 	add	r4,r4,r4
   4ca34:	1907883a 	add	r3,r3,r4
   4ca38:	19000017 	ldw	r4,0(r3)
   4ca3c:	89000015 	stw	r4,0(r17)
   4ca40:	1c400015 	stw	r17,0(r3)
   4ca44:	dfc00617 	ldw	ra,24(sp)
   4ca48:	dd400517 	ldw	r21,20(sp)
   4ca4c:	dd000417 	ldw	r20,16(sp)
   4ca50:	dcc00317 	ldw	r19,12(sp)
   4ca54:	dc800217 	ldw	r18,8(sp)
   4ca58:	dc400117 	ldw	r17,4(sp)
   4ca5c:	dc000017 	ldw	r16,0(sp)
   4ca60:	dec00704 	addi	sp,sp,28
   4ca64:	f800283a 	ret
   4ca68:	21400017 	ldw	r5,0(r4)
   4ca6c:	18c00104 	addi	r3,r3,4
   4ca70:	21000104 	addi	r4,r4,4
   4ca74:	197fff15 	stw	r5,-4(r3)
   4ca78:	223ffb36 	bltu	r4,r8,4ca68 <__alt_data_end+0xfffcca68>
   4ca7c:	003fe606 	br	4ca18 <__alt_data_end+0xfffcca18>
   4ca80:	9c000084 	addi	r16,r19,2
   4ca84:	003fe406 	br	4ca18 <__alt_data_end+0xfffcca18>

0004ca88 <__mcmp>:
   4ca88:	20800417 	ldw	r2,16(r4)
   4ca8c:	28c00417 	ldw	r3,16(r5)
   4ca90:	10c5c83a 	sub	r2,r2,r3
   4ca94:	1000111e 	bne	r2,zero,4cadc <__mcmp+0x54>
   4ca98:	18c7883a 	add	r3,r3,r3
   4ca9c:	18c7883a 	add	r3,r3,r3
   4caa0:	21000504 	addi	r4,r4,20
   4caa4:	29400504 	addi	r5,r5,20
   4caa8:	20c5883a 	add	r2,r4,r3
   4caac:	28cb883a 	add	r5,r5,r3
   4cab0:	00000106 	br	4cab8 <__mcmp+0x30>
   4cab4:	20800a2e 	bgeu	r4,r2,4cae0 <__mcmp+0x58>
   4cab8:	10bfff04 	addi	r2,r2,-4
   4cabc:	297fff04 	addi	r5,r5,-4
   4cac0:	11800017 	ldw	r6,0(r2)
   4cac4:	28c00017 	ldw	r3,0(r5)
   4cac8:	30fffa26 	beq	r6,r3,4cab4 <__alt_data_end+0xfffccab4>
   4cacc:	30c00236 	bltu	r6,r3,4cad8 <__mcmp+0x50>
   4cad0:	00800044 	movi	r2,1
   4cad4:	f800283a 	ret
   4cad8:	00bfffc4 	movi	r2,-1
   4cadc:	f800283a 	ret
   4cae0:	0005883a 	mov	r2,zero
   4cae4:	f800283a 	ret

0004cae8 <__mdiff>:
   4cae8:	28c00417 	ldw	r3,16(r5)
   4caec:	30800417 	ldw	r2,16(r6)
   4caf0:	defffa04 	addi	sp,sp,-24
   4caf4:	dcc00315 	stw	r19,12(sp)
   4caf8:	dc800215 	stw	r18,8(sp)
   4cafc:	dfc00515 	stw	ra,20(sp)
   4cb00:	dd000415 	stw	r20,16(sp)
   4cb04:	dc400115 	stw	r17,4(sp)
   4cb08:	dc000015 	stw	r16,0(sp)
   4cb0c:	1887c83a 	sub	r3,r3,r2
   4cb10:	2825883a 	mov	r18,r5
   4cb14:	3027883a 	mov	r19,r6
   4cb18:	1800141e 	bne	r3,zero,4cb6c <__mdiff+0x84>
   4cb1c:	1085883a 	add	r2,r2,r2
   4cb20:	1085883a 	add	r2,r2,r2
   4cb24:	2a000504 	addi	r8,r5,20
   4cb28:	34000504 	addi	r16,r6,20
   4cb2c:	4087883a 	add	r3,r8,r2
   4cb30:	8085883a 	add	r2,r16,r2
   4cb34:	00000106 	br	4cb3c <__mdiff+0x54>
   4cb38:	40c0592e 	bgeu	r8,r3,4cca0 <__mdiff+0x1b8>
   4cb3c:	18ffff04 	addi	r3,r3,-4
   4cb40:	10bfff04 	addi	r2,r2,-4
   4cb44:	19c00017 	ldw	r7,0(r3)
   4cb48:	11400017 	ldw	r5,0(r2)
   4cb4c:	397ffa26 	beq	r7,r5,4cb38 <__alt_data_end+0xfffccb38>
   4cb50:	3940592e 	bgeu	r7,r5,4ccb8 <__mdiff+0x1d0>
   4cb54:	9005883a 	mov	r2,r18
   4cb58:	4023883a 	mov	r17,r8
   4cb5c:	9825883a 	mov	r18,r19
   4cb60:	05000044 	movi	r20,1
   4cb64:	1027883a 	mov	r19,r2
   4cb68:	00000406 	br	4cb7c <__mdiff+0x94>
   4cb6c:	18005616 	blt	r3,zero,4ccc8 <__mdiff+0x1e0>
   4cb70:	34400504 	addi	r17,r6,20
   4cb74:	2c000504 	addi	r16,r5,20
   4cb78:	0029883a 	mov	r20,zero
   4cb7c:	91400117 	ldw	r5,4(r18)
   4cb80:	004c1c00 	call	4c1c0 <_Balloc>
   4cb84:	92400417 	ldw	r9,16(r18)
   4cb88:	9b000417 	ldw	r12,16(r19)
   4cb8c:	12c00504 	addi	r11,r2,20
   4cb90:	4a51883a 	add	r8,r9,r9
   4cb94:	6319883a 	add	r12,r12,r12
   4cb98:	4211883a 	add	r8,r8,r8
   4cb9c:	6319883a 	add	r12,r12,r12
   4cba0:	15000315 	stw	r20,12(r2)
   4cba4:	8211883a 	add	r8,r16,r8
   4cba8:	8b19883a 	add	r12,r17,r12
   4cbac:	0007883a 	mov	r3,zero
   4cbb0:	81400017 	ldw	r5,0(r16)
   4cbb4:	89c00017 	ldw	r7,0(r17)
   4cbb8:	59800104 	addi	r6,r11,4
   4cbbc:	293fffcc 	andi	r4,r5,65535
   4cbc0:	20c7883a 	add	r3,r4,r3
   4cbc4:	393fffcc 	andi	r4,r7,65535
   4cbc8:	1909c83a 	sub	r4,r3,r4
   4cbcc:	280ad43a 	srli	r5,r5,16
   4cbd0:	380ed43a 	srli	r7,r7,16
   4cbd4:	2007d43a 	srai	r3,r4,16
   4cbd8:	213fffcc 	andi	r4,r4,65535
   4cbdc:	29cbc83a 	sub	r5,r5,r7
   4cbe0:	28c7883a 	add	r3,r5,r3
   4cbe4:	180a943a 	slli	r5,r3,16
   4cbe8:	8c400104 	addi	r17,r17,4
   4cbec:	84000104 	addi	r16,r16,4
   4cbf0:	2908b03a 	or	r4,r5,r4
   4cbf4:	59000015 	stw	r4,0(r11)
   4cbf8:	1807d43a 	srai	r3,r3,16
   4cbfc:	3015883a 	mov	r10,r6
   4cc00:	3017883a 	mov	r11,r6
   4cc04:	8b3fea36 	bltu	r17,r12,4cbb0 <__alt_data_end+0xfffccbb0>
   4cc08:	8200162e 	bgeu	r16,r8,4cc64 <__mdiff+0x17c>
   4cc0c:	8017883a 	mov	r11,r16
   4cc10:	59400017 	ldw	r5,0(r11)
   4cc14:	31800104 	addi	r6,r6,4
   4cc18:	5ac00104 	addi	r11,r11,4
   4cc1c:	293fffcc 	andi	r4,r5,65535
   4cc20:	20c7883a 	add	r3,r4,r3
   4cc24:	280ed43a 	srli	r7,r5,16
   4cc28:	180bd43a 	srai	r5,r3,16
   4cc2c:	193fffcc 	andi	r4,r3,65535
   4cc30:	3947883a 	add	r3,r7,r5
   4cc34:	180a943a 	slli	r5,r3,16
   4cc38:	1807d43a 	srai	r3,r3,16
   4cc3c:	2908b03a 	or	r4,r5,r4
   4cc40:	313fff15 	stw	r4,-4(r6)
   4cc44:	5a3ff236 	bltu	r11,r8,4cc10 <__alt_data_end+0xfffccc10>
   4cc48:	0406303a 	nor	r3,zero,r16
   4cc4c:	1a07883a 	add	r3,r3,r8
   4cc50:	1806d0ba 	srli	r3,r3,2
   4cc54:	18c00044 	addi	r3,r3,1
   4cc58:	18c7883a 	add	r3,r3,r3
   4cc5c:	18c7883a 	add	r3,r3,r3
   4cc60:	50d5883a 	add	r10,r10,r3
   4cc64:	50ffff04 	addi	r3,r10,-4
   4cc68:	2000041e 	bne	r4,zero,4cc7c <__mdiff+0x194>
   4cc6c:	18ffff04 	addi	r3,r3,-4
   4cc70:	19000017 	ldw	r4,0(r3)
   4cc74:	4a7fffc4 	addi	r9,r9,-1
   4cc78:	203ffc26 	beq	r4,zero,4cc6c <__alt_data_end+0xfffccc6c>
   4cc7c:	12400415 	stw	r9,16(r2)
   4cc80:	dfc00517 	ldw	ra,20(sp)
   4cc84:	dd000417 	ldw	r20,16(sp)
   4cc88:	dcc00317 	ldw	r19,12(sp)
   4cc8c:	dc800217 	ldw	r18,8(sp)
   4cc90:	dc400117 	ldw	r17,4(sp)
   4cc94:	dc000017 	ldw	r16,0(sp)
   4cc98:	dec00604 	addi	sp,sp,24
   4cc9c:	f800283a 	ret
   4cca0:	000b883a 	mov	r5,zero
   4cca4:	004c1c00 	call	4c1c0 <_Balloc>
   4cca8:	00c00044 	movi	r3,1
   4ccac:	10c00415 	stw	r3,16(r2)
   4ccb0:	10000515 	stw	zero,20(r2)
   4ccb4:	003ff206 	br	4cc80 <__alt_data_end+0xfffccc80>
   4ccb8:	8023883a 	mov	r17,r16
   4ccbc:	0029883a 	mov	r20,zero
   4ccc0:	4021883a 	mov	r16,r8
   4ccc4:	003fad06 	br	4cb7c <__alt_data_end+0xfffccb7c>
   4ccc8:	9005883a 	mov	r2,r18
   4cccc:	94400504 	addi	r17,r18,20
   4ccd0:	9c000504 	addi	r16,r19,20
   4ccd4:	9825883a 	mov	r18,r19
   4ccd8:	05000044 	movi	r20,1
   4ccdc:	1027883a 	mov	r19,r2
   4cce0:	003fa606 	br	4cb7c <__alt_data_end+0xfffccb7c>

0004cce4 <__ulp>:
   4cce4:	295ffc2c 	andhi	r5,r5,32752
   4cce8:	00bf3034 	movhi	r2,64704
   4ccec:	2887883a 	add	r3,r5,r2
   4ccf0:	00c0020e 	bge	zero,r3,4ccfc <__ulp+0x18>
   4ccf4:	0005883a 	mov	r2,zero
   4ccf8:	f800283a 	ret
   4ccfc:	00c7c83a 	sub	r3,zero,r3
   4cd00:	1807d53a 	srai	r3,r3,20
   4cd04:	008004c4 	movi	r2,19
   4cd08:	10c00b0e 	bge	r2,r3,4cd38 <__ulp+0x54>
   4cd0c:	18bffb04 	addi	r2,r3,-20
   4cd10:	01000784 	movi	r4,30
   4cd14:	0007883a 	mov	r3,zero
   4cd18:	20800516 	blt	r4,r2,4cd30 <__ulp+0x4c>
   4cd1c:	010007c4 	movi	r4,31
   4cd20:	2089c83a 	sub	r4,r4,r2
   4cd24:	00800044 	movi	r2,1
   4cd28:	1104983a 	sll	r2,r2,r4
   4cd2c:	f800283a 	ret
   4cd30:	00800044 	movi	r2,1
   4cd34:	f800283a 	ret
   4cd38:	01400234 	movhi	r5,8
   4cd3c:	28c7d83a 	sra	r3,r5,r3
   4cd40:	0005883a 	mov	r2,zero
   4cd44:	f800283a 	ret

0004cd48 <__b2d>:
   4cd48:	defffa04 	addi	sp,sp,-24
   4cd4c:	dc000015 	stw	r16,0(sp)
   4cd50:	24000417 	ldw	r16,16(r4)
   4cd54:	dc400115 	stw	r17,4(sp)
   4cd58:	24400504 	addi	r17,r4,20
   4cd5c:	8421883a 	add	r16,r16,r16
   4cd60:	8421883a 	add	r16,r16,r16
   4cd64:	8c21883a 	add	r16,r17,r16
   4cd68:	dc800215 	stw	r18,8(sp)
   4cd6c:	84bfff17 	ldw	r18,-4(r16)
   4cd70:	dd000415 	stw	r20,16(sp)
   4cd74:	dcc00315 	stw	r19,12(sp)
   4cd78:	9009883a 	mov	r4,r18
   4cd7c:	2829883a 	mov	r20,r5
   4cd80:	dfc00515 	stw	ra,20(sp)
   4cd84:	004c4b40 	call	4c4b4 <__hi0bits>
   4cd88:	00c00804 	movi	r3,32
   4cd8c:	1889c83a 	sub	r4,r3,r2
   4cd90:	a1000015 	stw	r4,0(r20)
   4cd94:	01000284 	movi	r4,10
   4cd98:	84ffff04 	addi	r19,r16,-4
   4cd9c:	20801216 	blt	r4,r2,4cde8 <__b2d+0xa0>
   4cda0:	018002c4 	movi	r6,11
   4cda4:	308dc83a 	sub	r6,r6,r2
   4cda8:	9186d83a 	srl	r3,r18,r6
   4cdac:	18cffc34 	orhi	r3,r3,16368
   4cdb0:	8cc0212e 	bgeu	r17,r19,4ce38 <__b2d+0xf0>
   4cdb4:	813ffe17 	ldw	r4,-8(r16)
   4cdb8:	218cd83a 	srl	r6,r4,r6
   4cdbc:	10800544 	addi	r2,r2,21
   4cdc0:	9084983a 	sll	r2,r18,r2
   4cdc4:	1184b03a 	or	r2,r2,r6
   4cdc8:	dfc00517 	ldw	ra,20(sp)
   4cdcc:	dd000417 	ldw	r20,16(sp)
   4cdd0:	dcc00317 	ldw	r19,12(sp)
   4cdd4:	dc800217 	ldw	r18,8(sp)
   4cdd8:	dc400117 	ldw	r17,4(sp)
   4cddc:	dc000017 	ldw	r16,0(sp)
   4cde0:	dec00604 	addi	sp,sp,24
   4cde4:	f800283a 	ret
   4cde8:	8cc00f2e 	bgeu	r17,r19,4ce28 <__b2d+0xe0>
   4cdec:	117ffd44 	addi	r5,r2,-11
   4cdf0:	80bffe17 	ldw	r2,-8(r16)
   4cdf4:	28000e26 	beq	r5,zero,4ce30 <__b2d+0xe8>
   4cdf8:	1949c83a 	sub	r4,r3,r5
   4cdfc:	9164983a 	sll	r18,r18,r5
   4ce00:	1106d83a 	srl	r3,r2,r4
   4ce04:	81bffe04 	addi	r6,r16,-8
   4ce08:	948ffc34 	orhi	r18,r18,16368
   4ce0c:	90c6b03a 	or	r3,r18,r3
   4ce10:	89800e2e 	bgeu	r17,r6,4ce4c <__b2d+0x104>
   4ce14:	81bffd17 	ldw	r6,-12(r16)
   4ce18:	1144983a 	sll	r2,r2,r5
   4ce1c:	310ad83a 	srl	r5,r6,r4
   4ce20:	2884b03a 	or	r2,r5,r2
   4ce24:	003fe806 	br	4cdc8 <__alt_data_end+0xfffccdc8>
   4ce28:	10bffd44 	addi	r2,r2,-11
   4ce2c:	1000041e 	bne	r2,zero,4ce40 <__b2d+0xf8>
   4ce30:	90cffc34 	orhi	r3,r18,16368
   4ce34:	003fe406 	br	4cdc8 <__alt_data_end+0xfffccdc8>
   4ce38:	000d883a 	mov	r6,zero
   4ce3c:	003fdf06 	br	4cdbc <__alt_data_end+0xfffccdbc>
   4ce40:	90a4983a 	sll	r18,r18,r2
   4ce44:	0005883a 	mov	r2,zero
   4ce48:	003ff906 	br	4ce30 <__alt_data_end+0xfffcce30>
   4ce4c:	1144983a 	sll	r2,r2,r5
   4ce50:	003fdd06 	br	4cdc8 <__alt_data_end+0xfffccdc8>

0004ce54 <__d2b>:
   4ce54:	defff804 	addi	sp,sp,-32
   4ce58:	dc000215 	stw	r16,8(sp)
   4ce5c:	3021883a 	mov	r16,r6
   4ce60:	dc400315 	stw	r17,12(sp)
   4ce64:	8022907a 	slli	r17,r16,1
   4ce68:	dd000615 	stw	r20,24(sp)
   4ce6c:	2829883a 	mov	r20,r5
   4ce70:	01400044 	movi	r5,1
   4ce74:	dcc00515 	stw	r19,20(sp)
   4ce78:	dc800415 	stw	r18,16(sp)
   4ce7c:	dfc00715 	stw	ra,28(sp)
   4ce80:	3825883a 	mov	r18,r7
   4ce84:	8822d57a 	srli	r17,r17,21
   4ce88:	004c1c00 	call	4c1c0 <_Balloc>
   4ce8c:	1027883a 	mov	r19,r2
   4ce90:	00800434 	movhi	r2,16
   4ce94:	10bfffc4 	addi	r2,r2,-1
   4ce98:	808c703a 	and	r6,r16,r2
   4ce9c:	88000126 	beq	r17,zero,4cea4 <__d2b+0x50>
   4cea0:	31800434 	orhi	r6,r6,16
   4cea4:	d9800015 	stw	r6,0(sp)
   4cea8:	a0002426 	beq	r20,zero,4cf3c <__d2b+0xe8>
   4ceac:	d9000104 	addi	r4,sp,4
   4ceb0:	dd000115 	stw	r20,4(sp)
   4ceb4:	004c51c0 	call	4c51c <__lo0bits>
   4ceb8:	d8c00017 	ldw	r3,0(sp)
   4cebc:	10002f1e 	bne	r2,zero,4cf7c <__d2b+0x128>
   4cec0:	d9000117 	ldw	r4,4(sp)
   4cec4:	99000515 	stw	r4,20(r19)
   4cec8:	1821003a 	cmpeq	r16,r3,zero
   4cecc:	01000084 	movi	r4,2
   4ced0:	2421c83a 	sub	r16,r4,r16
   4ced4:	98c00615 	stw	r3,24(r19)
   4ced8:	9c000415 	stw	r16,16(r19)
   4cedc:	88001f1e 	bne	r17,zero,4cf5c <__d2b+0x108>
   4cee0:	10bef384 	addi	r2,r2,-1074
   4cee4:	90800015 	stw	r2,0(r18)
   4cee8:	00900034 	movhi	r2,16384
   4ceec:	10bfffc4 	addi	r2,r2,-1
   4cef0:	8085883a 	add	r2,r16,r2
   4cef4:	1085883a 	add	r2,r2,r2
   4cef8:	1085883a 	add	r2,r2,r2
   4cefc:	9885883a 	add	r2,r19,r2
   4cf00:	11000517 	ldw	r4,20(r2)
   4cf04:	8020917a 	slli	r16,r16,5
   4cf08:	004c4b40 	call	4c4b4 <__hi0bits>
   4cf0c:	d8c00817 	ldw	r3,32(sp)
   4cf10:	8085c83a 	sub	r2,r16,r2
   4cf14:	18800015 	stw	r2,0(r3)
   4cf18:	9805883a 	mov	r2,r19
   4cf1c:	dfc00717 	ldw	ra,28(sp)
   4cf20:	dd000617 	ldw	r20,24(sp)
   4cf24:	dcc00517 	ldw	r19,20(sp)
   4cf28:	dc800417 	ldw	r18,16(sp)
   4cf2c:	dc400317 	ldw	r17,12(sp)
   4cf30:	dc000217 	ldw	r16,8(sp)
   4cf34:	dec00804 	addi	sp,sp,32
   4cf38:	f800283a 	ret
   4cf3c:	d809883a 	mov	r4,sp
   4cf40:	004c51c0 	call	4c51c <__lo0bits>
   4cf44:	d8c00017 	ldw	r3,0(sp)
   4cf48:	04000044 	movi	r16,1
   4cf4c:	9c000415 	stw	r16,16(r19)
   4cf50:	98c00515 	stw	r3,20(r19)
   4cf54:	10800804 	addi	r2,r2,32
   4cf58:	883fe126 	beq	r17,zero,4cee0 <__alt_data_end+0xfffccee0>
   4cf5c:	00c00d44 	movi	r3,53
   4cf60:	8c7ef344 	addi	r17,r17,-1075
   4cf64:	88a3883a 	add	r17,r17,r2
   4cf68:	1885c83a 	sub	r2,r3,r2
   4cf6c:	d8c00817 	ldw	r3,32(sp)
   4cf70:	94400015 	stw	r17,0(r18)
   4cf74:	18800015 	stw	r2,0(r3)
   4cf78:	003fe706 	br	4cf18 <__alt_data_end+0xfffccf18>
   4cf7c:	01000804 	movi	r4,32
   4cf80:	2089c83a 	sub	r4,r4,r2
   4cf84:	1908983a 	sll	r4,r3,r4
   4cf88:	d9400117 	ldw	r5,4(sp)
   4cf8c:	1886d83a 	srl	r3,r3,r2
   4cf90:	2148b03a 	or	r4,r4,r5
   4cf94:	99000515 	stw	r4,20(r19)
   4cf98:	d8c00015 	stw	r3,0(sp)
   4cf9c:	003fca06 	br	4cec8 <__alt_data_end+0xfffccec8>

0004cfa0 <__ratio>:
   4cfa0:	defff904 	addi	sp,sp,-28
   4cfa4:	dc400315 	stw	r17,12(sp)
   4cfa8:	2823883a 	mov	r17,r5
   4cfac:	d9400104 	addi	r5,sp,4
   4cfb0:	dfc00615 	stw	ra,24(sp)
   4cfb4:	dcc00515 	stw	r19,20(sp)
   4cfb8:	dc800415 	stw	r18,16(sp)
   4cfbc:	2027883a 	mov	r19,r4
   4cfc0:	dc000215 	stw	r16,8(sp)
   4cfc4:	004cd480 	call	4cd48 <__b2d>
   4cfc8:	d80b883a 	mov	r5,sp
   4cfcc:	8809883a 	mov	r4,r17
   4cfd0:	1025883a 	mov	r18,r2
   4cfd4:	1821883a 	mov	r16,r3
   4cfd8:	004cd480 	call	4cd48 <__b2d>
   4cfdc:	8a000417 	ldw	r8,16(r17)
   4cfe0:	99000417 	ldw	r4,16(r19)
   4cfe4:	d9400117 	ldw	r5,4(sp)
   4cfe8:	2209c83a 	sub	r4,r4,r8
   4cfec:	2010917a 	slli	r8,r4,5
   4cff0:	d9000017 	ldw	r4,0(sp)
   4cff4:	2909c83a 	sub	r4,r5,r4
   4cff8:	4109883a 	add	r4,r8,r4
   4cffc:	01000e0e 	bge	zero,r4,4d038 <__ratio+0x98>
   4d000:	2008953a 	slli	r4,r4,20
   4d004:	2421883a 	add	r16,r4,r16
   4d008:	100d883a 	mov	r6,r2
   4d00c:	180f883a 	mov	r7,r3
   4d010:	9009883a 	mov	r4,r18
   4d014:	800b883a 	mov	r5,r16
   4d018:	005042c0 	call	5042c <__divdf3>
   4d01c:	dfc00617 	ldw	ra,24(sp)
   4d020:	dcc00517 	ldw	r19,20(sp)
   4d024:	dc800417 	ldw	r18,16(sp)
   4d028:	dc400317 	ldw	r17,12(sp)
   4d02c:	dc000217 	ldw	r16,8(sp)
   4d030:	dec00704 	addi	sp,sp,28
   4d034:	f800283a 	ret
   4d038:	2008953a 	slli	r4,r4,20
   4d03c:	1907c83a 	sub	r3,r3,r4
   4d040:	003ff106 	br	4d008 <__alt_data_end+0xfffcd008>

0004d044 <_mprec_log10>:
   4d044:	defffe04 	addi	sp,sp,-8
   4d048:	dc000015 	stw	r16,0(sp)
   4d04c:	dfc00115 	stw	ra,4(sp)
   4d050:	008005c4 	movi	r2,23
   4d054:	2021883a 	mov	r16,r4
   4d058:	11000d0e 	bge	r2,r4,4d090 <_mprec_log10+0x4c>
   4d05c:	0005883a 	mov	r2,zero
   4d060:	00cffc34 	movhi	r3,16368
   4d064:	843fffc4 	addi	r16,r16,-1
   4d068:	000d883a 	mov	r6,zero
   4d06c:	01d00934 	movhi	r7,16420
   4d070:	1009883a 	mov	r4,r2
   4d074:	180b883a 	mov	r5,r3
   4d078:	0044e9c0 	call	44e9c <__muldf3>
   4d07c:	803ff91e 	bne	r16,zero,4d064 <__alt_data_end+0xfffcd064>
   4d080:	dfc00117 	ldw	ra,4(sp)
   4d084:	dc000017 	ldw	r16,0(sp)
   4d088:	dec00204 	addi	sp,sp,8
   4d08c:	f800283a 	ret
   4d090:	202090fa 	slli	r16,r4,3
   4d094:	00800174 	movhi	r2,5
   4d098:	108f1304 	addi	r2,r2,15436
   4d09c:	1421883a 	add	r16,r2,r16
   4d0a0:	80800017 	ldw	r2,0(r16)
   4d0a4:	80c00117 	ldw	r3,4(r16)
   4d0a8:	dfc00117 	ldw	ra,4(sp)
   4d0ac:	dc000017 	ldw	r16,0(sp)
   4d0b0:	dec00204 	addi	sp,sp,8
   4d0b4:	f800283a 	ret

0004d0b8 <__copybits>:
   4d0b8:	297fffc4 	addi	r5,r5,-1
   4d0bc:	280fd17a 	srai	r7,r5,5
   4d0c0:	30c00417 	ldw	r3,16(r6)
   4d0c4:	30800504 	addi	r2,r6,20
   4d0c8:	39c00044 	addi	r7,r7,1
   4d0cc:	18c7883a 	add	r3,r3,r3
   4d0d0:	39cf883a 	add	r7,r7,r7
   4d0d4:	18c7883a 	add	r3,r3,r3
   4d0d8:	39cf883a 	add	r7,r7,r7
   4d0dc:	10c7883a 	add	r3,r2,r3
   4d0e0:	21cf883a 	add	r7,r4,r7
   4d0e4:	10c00d2e 	bgeu	r2,r3,4d11c <__copybits+0x64>
   4d0e8:	200b883a 	mov	r5,r4
   4d0ec:	12000017 	ldw	r8,0(r2)
   4d0f0:	29400104 	addi	r5,r5,4
   4d0f4:	10800104 	addi	r2,r2,4
   4d0f8:	2a3fff15 	stw	r8,-4(r5)
   4d0fc:	10fffb36 	bltu	r2,r3,4d0ec <__alt_data_end+0xfffcd0ec>
   4d100:	1985c83a 	sub	r2,r3,r6
   4d104:	10bffac4 	addi	r2,r2,-21
   4d108:	1004d0ba 	srli	r2,r2,2
   4d10c:	10800044 	addi	r2,r2,1
   4d110:	1085883a 	add	r2,r2,r2
   4d114:	1085883a 	add	r2,r2,r2
   4d118:	2089883a 	add	r4,r4,r2
   4d11c:	21c0032e 	bgeu	r4,r7,4d12c <__copybits+0x74>
   4d120:	20000015 	stw	zero,0(r4)
   4d124:	21000104 	addi	r4,r4,4
   4d128:	21fffd36 	bltu	r4,r7,4d120 <__alt_data_end+0xfffcd120>
   4d12c:	f800283a 	ret

0004d130 <__any_on>:
   4d130:	20c00417 	ldw	r3,16(r4)
   4d134:	2805d17a 	srai	r2,r5,5
   4d138:	21000504 	addi	r4,r4,20
   4d13c:	18800d0e 	bge	r3,r2,4d174 <__any_on+0x44>
   4d140:	18c7883a 	add	r3,r3,r3
   4d144:	18c7883a 	add	r3,r3,r3
   4d148:	20c7883a 	add	r3,r4,r3
   4d14c:	20c0192e 	bgeu	r4,r3,4d1b4 <__any_on+0x84>
   4d150:	18bfff17 	ldw	r2,-4(r3)
   4d154:	18ffff04 	addi	r3,r3,-4
   4d158:	1000041e 	bne	r2,zero,4d16c <__any_on+0x3c>
   4d15c:	20c0142e 	bgeu	r4,r3,4d1b0 <__any_on+0x80>
   4d160:	18ffff04 	addi	r3,r3,-4
   4d164:	19400017 	ldw	r5,0(r3)
   4d168:	283ffc26 	beq	r5,zero,4d15c <__alt_data_end+0xfffcd15c>
   4d16c:	00800044 	movi	r2,1
   4d170:	f800283a 	ret
   4d174:	10c00a0e 	bge	r2,r3,4d1a0 <__any_on+0x70>
   4d178:	1085883a 	add	r2,r2,r2
   4d17c:	1085883a 	add	r2,r2,r2
   4d180:	294007cc 	andi	r5,r5,31
   4d184:	2087883a 	add	r3,r4,r2
   4d188:	283ff026 	beq	r5,zero,4d14c <__alt_data_end+0xfffcd14c>
   4d18c:	19800017 	ldw	r6,0(r3)
   4d190:	3144d83a 	srl	r2,r6,r5
   4d194:	114a983a 	sll	r5,r2,r5
   4d198:	317ff41e 	bne	r6,r5,4d16c <__alt_data_end+0xfffcd16c>
   4d19c:	003feb06 	br	4d14c <__alt_data_end+0xfffcd14c>
   4d1a0:	1085883a 	add	r2,r2,r2
   4d1a4:	1085883a 	add	r2,r2,r2
   4d1a8:	2087883a 	add	r3,r4,r2
   4d1ac:	003fe706 	br	4d14c <__alt_data_end+0xfffcd14c>
   4d1b0:	f800283a 	ret
   4d1b4:	0005883a 	mov	r2,zero
   4d1b8:	f800283a 	ret

0004d1bc <_realloc_r>:
   4d1bc:	defff604 	addi	sp,sp,-40
   4d1c0:	dc800215 	stw	r18,8(sp)
   4d1c4:	dfc00915 	stw	ra,36(sp)
   4d1c8:	df000815 	stw	fp,32(sp)
   4d1cc:	ddc00715 	stw	r23,28(sp)
   4d1d0:	dd800615 	stw	r22,24(sp)
   4d1d4:	dd400515 	stw	r21,20(sp)
   4d1d8:	dd000415 	stw	r20,16(sp)
   4d1dc:	dcc00315 	stw	r19,12(sp)
   4d1e0:	dc400115 	stw	r17,4(sp)
   4d1e4:	dc000015 	stw	r16,0(sp)
   4d1e8:	3025883a 	mov	r18,r6
   4d1ec:	2800b726 	beq	r5,zero,4d4cc <_realloc_r+0x310>
   4d1f0:	282b883a 	mov	r21,r5
   4d1f4:	2029883a 	mov	r20,r4
   4d1f8:	005142c0 	call	5142c <__malloc_lock>
   4d1fc:	a8bfff17 	ldw	r2,-4(r21)
   4d200:	043fff04 	movi	r16,-4
   4d204:	90c002c4 	addi	r3,r18,11
   4d208:	01000584 	movi	r4,22
   4d20c:	acfffe04 	addi	r19,r21,-8
   4d210:	1420703a 	and	r16,r2,r16
   4d214:	20c0332e 	bgeu	r4,r3,4d2e4 <_realloc_r+0x128>
   4d218:	047ffe04 	movi	r17,-8
   4d21c:	1c62703a 	and	r17,r3,r17
   4d220:	8807883a 	mov	r3,r17
   4d224:	88005816 	blt	r17,zero,4d388 <_realloc_r+0x1cc>
   4d228:	8c805736 	bltu	r17,r18,4d388 <_realloc_r+0x1cc>
   4d22c:	80c0300e 	bge	r16,r3,4d2f0 <_realloc_r+0x134>
   4d230:	07000174 	movhi	fp,5
   4d234:	e7108104 	addi	fp,fp,16900
   4d238:	e1c00217 	ldw	r7,8(fp)
   4d23c:	9c09883a 	add	r4,r19,r16
   4d240:	22000117 	ldw	r8,4(r4)
   4d244:	21c06326 	beq	r4,r7,4d3d4 <_realloc_r+0x218>
   4d248:	017fff84 	movi	r5,-2
   4d24c:	414a703a 	and	r5,r8,r5
   4d250:	214b883a 	add	r5,r4,r5
   4d254:	29800117 	ldw	r6,4(r5)
   4d258:	3180004c 	andi	r6,r6,1
   4d25c:	30003f26 	beq	r6,zero,4d35c <_realloc_r+0x1a0>
   4d260:	1080004c 	andi	r2,r2,1
   4d264:	10008326 	beq	r2,zero,4d474 <_realloc_r+0x2b8>
   4d268:	900b883a 	mov	r5,r18
   4d26c:	a009883a 	mov	r4,r20
   4d270:	004b5040 	call	4b504 <_malloc_r>
   4d274:	1025883a 	mov	r18,r2
   4d278:	10011e26 	beq	r2,zero,4d6f4 <_realloc_r+0x538>
   4d27c:	a93fff17 	ldw	r4,-4(r21)
   4d280:	10fffe04 	addi	r3,r2,-8
   4d284:	00bfff84 	movi	r2,-2
   4d288:	2084703a 	and	r2,r4,r2
   4d28c:	9885883a 	add	r2,r19,r2
   4d290:	1880ee26 	beq	r3,r2,4d64c <_realloc_r+0x490>
   4d294:	81bfff04 	addi	r6,r16,-4
   4d298:	00800904 	movi	r2,36
   4d29c:	1180b836 	bltu	r2,r6,4d580 <_realloc_r+0x3c4>
   4d2a0:	00c004c4 	movi	r3,19
   4d2a4:	19809636 	bltu	r3,r6,4d500 <_realloc_r+0x344>
   4d2a8:	9005883a 	mov	r2,r18
   4d2ac:	a807883a 	mov	r3,r21
   4d2b0:	19000017 	ldw	r4,0(r3)
   4d2b4:	11000015 	stw	r4,0(r2)
   4d2b8:	19000117 	ldw	r4,4(r3)
   4d2bc:	11000115 	stw	r4,4(r2)
   4d2c0:	18c00217 	ldw	r3,8(r3)
   4d2c4:	10c00215 	stw	r3,8(r2)
   4d2c8:	a80b883a 	mov	r5,r21
   4d2cc:	a009883a 	mov	r4,r20
   4d2d0:	004a9180 	call	4a918 <_free_r>
   4d2d4:	a009883a 	mov	r4,r20
   4d2d8:	00514500 	call	51450 <__malloc_unlock>
   4d2dc:	9005883a 	mov	r2,r18
   4d2e0:	00001206 	br	4d32c <_realloc_r+0x170>
   4d2e4:	00c00404 	movi	r3,16
   4d2e8:	1823883a 	mov	r17,r3
   4d2ec:	003fce06 	br	4d228 <__alt_data_end+0xfffcd228>
   4d2f0:	a825883a 	mov	r18,r21
   4d2f4:	8445c83a 	sub	r2,r16,r17
   4d2f8:	00c003c4 	movi	r3,15
   4d2fc:	18802636 	bltu	r3,r2,4d398 <_realloc_r+0x1dc>
   4d300:	99800117 	ldw	r6,4(r19)
   4d304:	9c07883a 	add	r3,r19,r16
   4d308:	3180004c 	andi	r6,r6,1
   4d30c:	3420b03a 	or	r16,r6,r16
   4d310:	9c000115 	stw	r16,4(r19)
   4d314:	18800117 	ldw	r2,4(r3)
   4d318:	10800054 	ori	r2,r2,1
   4d31c:	18800115 	stw	r2,4(r3)
   4d320:	a009883a 	mov	r4,r20
   4d324:	00514500 	call	51450 <__malloc_unlock>
   4d328:	9005883a 	mov	r2,r18
   4d32c:	dfc00917 	ldw	ra,36(sp)
   4d330:	df000817 	ldw	fp,32(sp)
   4d334:	ddc00717 	ldw	r23,28(sp)
   4d338:	dd800617 	ldw	r22,24(sp)
   4d33c:	dd400517 	ldw	r21,20(sp)
   4d340:	dd000417 	ldw	r20,16(sp)
   4d344:	dcc00317 	ldw	r19,12(sp)
   4d348:	dc800217 	ldw	r18,8(sp)
   4d34c:	dc400117 	ldw	r17,4(sp)
   4d350:	dc000017 	ldw	r16,0(sp)
   4d354:	dec00a04 	addi	sp,sp,40
   4d358:	f800283a 	ret
   4d35c:	017fff04 	movi	r5,-4
   4d360:	414a703a 	and	r5,r8,r5
   4d364:	814d883a 	add	r6,r16,r5
   4d368:	30c01f16 	blt	r6,r3,4d3e8 <_realloc_r+0x22c>
   4d36c:	20800317 	ldw	r2,12(r4)
   4d370:	20c00217 	ldw	r3,8(r4)
   4d374:	a825883a 	mov	r18,r21
   4d378:	3021883a 	mov	r16,r6
   4d37c:	18800315 	stw	r2,12(r3)
   4d380:	10c00215 	stw	r3,8(r2)
   4d384:	003fdb06 	br	4d2f4 <__alt_data_end+0xfffcd2f4>
   4d388:	00800304 	movi	r2,12
   4d38c:	a0800015 	stw	r2,0(r20)
   4d390:	0005883a 	mov	r2,zero
   4d394:	003fe506 	br	4d32c <__alt_data_end+0xfffcd32c>
   4d398:	98c00117 	ldw	r3,4(r19)
   4d39c:	9c4b883a 	add	r5,r19,r17
   4d3a0:	11000054 	ori	r4,r2,1
   4d3a4:	18c0004c 	andi	r3,r3,1
   4d3a8:	1c62b03a 	or	r17,r3,r17
   4d3ac:	9c400115 	stw	r17,4(r19)
   4d3b0:	29000115 	stw	r4,4(r5)
   4d3b4:	2885883a 	add	r2,r5,r2
   4d3b8:	10c00117 	ldw	r3,4(r2)
   4d3bc:	29400204 	addi	r5,r5,8
   4d3c0:	a009883a 	mov	r4,r20
   4d3c4:	18c00054 	ori	r3,r3,1
   4d3c8:	10c00115 	stw	r3,4(r2)
   4d3cc:	004a9180 	call	4a918 <_free_r>
   4d3d0:	003fd306 	br	4d320 <__alt_data_end+0xfffcd320>
   4d3d4:	017fff04 	movi	r5,-4
   4d3d8:	414a703a 	and	r5,r8,r5
   4d3dc:	89800404 	addi	r6,r17,16
   4d3e0:	8151883a 	add	r8,r16,r5
   4d3e4:	4180590e 	bge	r8,r6,4d54c <_realloc_r+0x390>
   4d3e8:	1080004c 	andi	r2,r2,1
   4d3ec:	103f9e1e 	bne	r2,zero,4d268 <__alt_data_end+0xfffcd268>
   4d3f0:	adbffe17 	ldw	r22,-8(r21)
   4d3f4:	00bfff04 	movi	r2,-4
   4d3f8:	9dadc83a 	sub	r22,r19,r22
   4d3fc:	b1800117 	ldw	r6,4(r22)
   4d400:	3084703a 	and	r2,r6,r2
   4d404:	20002026 	beq	r4,zero,4d488 <_realloc_r+0x2cc>
   4d408:	80af883a 	add	r23,r16,r2
   4d40c:	b96f883a 	add	r23,r23,r5
   4d410:	21c05f26 	beq	r4,r7,4d590 <_realloc_r+0x3d4>
   4d414:	b8c01c16 	blt	r23,r3,4d488 <_realloc_r+0x2cc>
   4d418:	20800317 	ldw	r2,12(r4)
   4d41c:	20c00217 	ldw	r3,8(r4)
   4d420:	81bfff04 	addi	r6,r16,-4
   4d424:	01000904 	movi	r4,36
   4d428:	18800315 	stw	r2,12(r3)
   4d42c:	10c00215 	stw	r3,8(r2)
   4d430:	b0c00217 	ldw	r3,8(r22)
   4d434:	b0800317 	ldw	r2,12(r22)
   4d438:	b4800204 	addi	r18,r22,8
   4d43c:	18800315 	stw	r2,12(r3)
   4d440:	10c00215 	stw	r3,8(r2)
   4d444:	21801b36 	bltu	r4,r6,4d4b4 <_realloc_r+0x2f8>
   4d448:	008004c4 	movi	r2,19
   4d44c:	1180352e 	bgeu	r2,r6,4d524 <_realloc_r+0x368>
   4d450:	a8800017 	ldw	r2,0(r21)
   4d454:	b0800215 	stw	r2,8(r22)
   4d458:	a8800117 	ldw	r2,4(r21)
   4d45c:	b0800315 	stw	r2,12(r22)
   4d460:	008006c4 	movi	r2,27
   4d464:	11807f36 	bltu	r2,r6,4d664 <_realloc_r+0x4a8>
   4d468:	b0800404 	addi	r2,r22,16
   4d46c:	ad400204 	addi	r21,r21,8
   4d470:	00002d06 	br	4d528 <_realloc_r+0x36c>
   4d474:	adbffe17 	ldw	r22,-8(r21)
   4d478:	00bfff04 	movi	r2,-4
   4d47c:	9dadc83a 	sub	r22,r19,r22
   4d480:	b1000117 	ldw	r4,4(r22)
   4d484:	2084703a 	and	r2,r4,r2
   4d488:	b03f7726 	beq	r22,zero,4d268 <__alt_data_end+0xfffcd268>
   4d48c:	80af883a 	add	r23,r16,r2
   4d490:	b8ff7516 	blt	r23,r3,4d268 <__alt_data_end+0xfffcd268>
   4d494:	b0800317 	ldw	r2,12(r22)
   4d498:	b0c00217 	ldw	r3,8(r22)
   4d49c:	81bfff04 	addi	r6,r16,-4
   4d4a0:	01000904 	movi	r4,36
   4d4a4:	18800315 	stw	r2,12(r3)
   4d4a8:	10c00215 	stw	r3,8(r2)
   4d4ac:	b4800204 	addi	r18,r22,8
   4d4b0:	21bfe52e 	bgeu	r4,r6,4d448 <__alt_data_end+0xfffcd448>
   4d4b4:	a80b883a 	mov	r5,r21
   4d4b8:	9009883a 	mov	r4,r18
   4d4bc:	004bf3c0 	call	4bf3c <memmove>
   4d4c0:	b821883a 	mov	r16,r23
   4d4c4:	b027883a 	mov	r19,r22
   4d4c8:	003f8a06 	br	4d2f4 <__alt_data_end+0xfffcd2f4>
   4d4cc:	300b883a 	mov	r5,r6
   4d4d0:	dfc00917 	ldw	ra,36(sp)
   4d4d4:	df000817 	ldw	fp,32(sp)
   4d4d8:	ddc00717 	ldw	r23,28(sp)
   4d4dc:	dd800617 	ldw	r22,24(sp)
   4d4e0:	dd400517 	ldw	r21,20(sp)
   4d4e4:	dd000417 	ldw	r20,16(sp)
   4d4e8:	dcc00317 	ldw	r19,12(sp)
   4d4ec:	dc800217 	ldw	r18,8(sp)
   4d4f0:	dc400117 	ldw	r17,4(sp)
   4d4f4:	dc000017 	ldw	r16,0(sp)
   4d4f8:	dec00a04 	addi	sp,sp,40
   4d4fc:	004b5041 	jmpi	4b504 <_malloc_r>
   4d500:	a8c00017 	ldw	r3,0(r21)
   4d504:	90c00015 	stw	r3,0(r18)
   4d508:	a8c00117 	ldw	r3,4(r21)
   4d50c:	90c00115 	stw	r3,4(r18)
   4d510:	00c006c4 	movi	r3,27
   4d514:	19804536 	bltu	r3,r6,4d62c <_realloc_r+0x470>
   4d518:	90800204 	addi	r2,r18,8
   4d51c:	a8c00204 	addi	r3,r21,8
   4d520:	003f6306 	br	4d2b0 <__alt_data_end+0xfffcd2b0>
   4d524:	9005883a 	mov	r2,r18
   4d528:	a8c00017 	ldw	r3,0(r21)
   4d52c:	b821883a 	mov	r16,r23
   4d530:	b027883a 	mov	r19,r22
   4d534:	10c00015 	stw	r3,0(r2)
   4d538:	a8c00117 	ldw	r3,4(r21)
   4d53c:	10c00115 	stw	r3,4(r2)
   4d540:	a8c00217 	ldw	r3,8(r21)
   4d544:	10c00215 	stw	r3,8(r2)
   4d548:	003f6a06 	br	4d2f4 <__alt_data_end+0xfffcd2f4>
   4d54c:	9c67883a 	add	r19,r19,r17
   4d550:	4445c83a 	sub	r2,r8,r17
   4d554:	e4c00215 	stw	r19,8(fp)
   4d558:	10800054 	ori	r2,r2,1
   4d55c:	98800115 	stw	r2,4(r19)
   4d560:	a8bfff17 	ldw	r2,-4(r21)
   4d564:	a009883a 	mov	r4,r20
   4d568:	1080004c 	andi	r2,r2,1
   4d56c:	1462b03a 	or	r17,r2,r17
   4d570:	ac7fff15 	stw	r17,-4(r21)
   4d574:	00514500 	call	51450 <__malloc_unlock>
   4d578:	a805883a 	mov	r2,r21
   4d57c:	003f6b06 	br	4d32c <__alt_data_end+0xfffcd32c>
   4d580:	a80b883a 	mov	r5,r21
   4d584:	9009883a 	mov	r4,r18
   4d588:	004bf3c0 	call	4bf3c <memmove>
   4d58c:	003f4e06 	br	4d2c8 <__alt_data_end+0xfffcd2c8>
   4d590:	89000404 	addi	r4,r17,16
   4d594:	b93fbc16 	blt	r23,r4,4d488 <__alt_data_end+0xfffcd488>
   4d598:	b0800317 	ldw	r2,12(r22)
   4d59c:	b0c00217 	ldw	r3,8(r22)
   4d5a0:	81bfff04 	addi	r6,r16,-4
   4d5a4:	01000904 	movi	r4,36
   4d5a8:	18800315 	stw	r2,12(r3)
   4d5ac:	10c00215 	stw	r3,8(r2)
   4d5b0:	b4800204 	addi	r18,r22,8
   4d5b4:	21804336 	bltu	r4,r6,4d6c4 <_realloc_r+0x508>
   4d5b8:	008004c4 	movi	r2,19
   4d5bc:	11803f2e 	bgeu	r2,r6,4d6bc <_realloc_r+0x500>
   4d5c0:	a8800017 	ldw	r2,0(r21)
   4d5c4:	b0800215 	stw	r2,8(r22)
   4d5c8:	a8800117 	ldw	r2,4(r21)
   4d5cc:	b0800315 	stw	r2,12(r22)
   4d5d0:	008006c4 	movi	r2,27
   4d5d4:	11803f36 	bltu	r2,r6,4d6d4 <_realloc_r+0x518>
   4d5d8:	b0800404 	addi	r2,r22,16
   4d5dc:	ad400204 	addi	r21,r21,8
   4d5e0:	a8c00017 	ldw	r3,0(r21)
   4d5e4:	10c00015 	stw	r3,0(r2)
   4d5e8:	a8c00117 	ldw	r3,4(r21)
   4d5ec:	10c00115 	stw	r3,4(r2)
   4d5f0:	a8c00217 	ldw	r3,8(r21)
   4d5f4:	10c00215 	stw	r3,8(r2)
   4d5f8:	b447883a 	add	r3,r22,r17
   4d5fc:	bc45c83a 	sub	r2,r23,r17
   4d600:	e0c00215 	stw	r3,8(fp)
   4d604:	10800054 	ori	r2,r2,1
   4d608:	18800115 	stw	r2,4(r3)
   4d60c:	b0800117 	ldw	r2,4(r22)
   4d610:	a009883a 	mov	r4,r20
   4d614:	1080004c 	andi	r2,r2,1
   4d618:	1462b03a 	or	r17,r2,r17
   4d61c:	b4400115 	stw	r17,4(r22)
   4d620:	00514500 	call	51450 <__malloc_unlock>
   4d624:	9005883a 	mov	r2,r18
   4d628:	003f4006 	br	4d32c <__alt_data_end+0xfffcd32c>
   4d62c:	a8c00217 	ldw	r3,8(r21)
   4d630:	90c00215 	stw	r3,8(r18)
   4d634:	a8c00317 	ldw	r3,12(r21)
   4d638:	90c00315 	stw	r3,12(r18)
   4d63c:	30801126 	beq	r6,r2,4d684 <_realloc_r+0x4c8>
   4d640:	90800404 	addi	r2,r18,16
   4d644:	a8c00404 	addi	r3,r21,16
   4d648:	003f1906 	br	4d2b0 <__alt_data_end+0xfffcd2b0>
   4d64c:	90ffff17 	ldw	r3,-4(r18)
   4d650:	00bfff04 	movi	r2,-4
   4d654:	a825883a 	mov	r18,r21
   4d658:	1884703a 	and	r2,r3,r2
   4d65c:	80a1883a 	add	r16,r16,r2
   4d660:	003f2406 	br	4d2f4 <__alt_data_end+0xfffcd2f4>
   4d664:	a8800217 	ldw	r2,8(r21)
   4d668:	b0800415 	stw	r2,16(r22)
   4d66c:	a8800317 	ldw	r2,12(r21)
   4d670:	b0800515 	stw	r2,20(r22)
   4d674:	31000a26 	beq	r6,r4,4d6a0 <_realloc_r+0x4e4>
   4d678:	b0800604 	addi	r2,r22,24
   4d67c:	ad400404 	addi	r21,r21,16
   4d680:	003fa906 	br	4d528 <__alt_data_end+0xfffcd528>
   4d684:	a9000417 	ldw	r4,16(r21)
   4d688:	90800604 	addi	r2,r18,24
   4d68c:	a8c00604 	addi	r3,r21,24
   4d690:	91000415 	stw	r4,16(r18)
   4d694:	a9000517 	ldw	r4,20(r21)
   4d698:	91000515 	stw	r4,20(r18)
   4d69c:	003f0406 	br	4d2b0 <__alt_data_end+0xfffcd2b0>
   4d6a0:	a8c00417 	ldw	r3,16(r21)
   4d6a4:	ad400604 	addi	r21,r21,24
   4d6a8:	b0800804 	addi	r2,r22,32
   4d6ac:	b0c00615 	stw	r3,24(r22)
   4d6b0:	a8ffff17 	ldw	r3,-4(r21)
   4d6b4:	b0c00715 	stw	r3,28(r22)
   4d6b8:	003f9b06 	br	4d528 <__alt_data_end+0xfffcd528>
   4d6bc:	9005883a 	mov	r2,r18
   4d6c0:	003fc706 	br	4d5e0 <__alt_data_end+0xfffcd5e0>
   4d6c4:	a80b883a 	mov	r5,r21
   4d6c8:	9009883a 	mov	r4,r18
   4d6cc:	004bf3c0 	call	4bf3c <memmove>
   4d6d0:	003fc906 	br	4d5f8 <__alt_data_end+0xfffcd5f8>
   4d6d4:	a8800217 	ldw	r2,8(r21)
   4d6d8:	b0800415 	stw	r2,16(r22)
   4d6dc:	a8800317 	ldw	r2,12(r21)
   4d6e0:	b0800515 	stw	r2,20(r22)
   4d6e4:	31000726 	beq	r6,r4,4d704 <_realloc_r+0x548>
   4d6e8:	b0800604 	addi	r2,r22,24
   4d6ec:	ad400404 	addi	r21,r21,16
   4d6f0:	003fbb06 	br	4d5e0 <__alt_data_end+0xfffcd5e0>
   4d6f4:	a009883a 	mov	r4,r20
   4d6f8:	00514500 	call	51450 <__malloc_unlock>
   4d6fc:	0005883a 	mov	r2,zero
   4d700:	003f0a06 	br	4d32c <__alt_data_end+0xfffcd32c>
   4d704:	a8c00417 	ldw	r3,16(r21)
   4d708:	ad400604 	addi	r21,r21,24
   4d70c:	b0800804 	addi	r2,r22,32
   4d710:	b0c00615 	stw	r3,24(r22)
   4d714:	a8ffff17 	ldw	r3,-4(r21)
   4d718:	b0c00715 	stw	r3,28(r22)
   4d71c:	003fb006 	br	4d5e0 <__alt_data_end+0xfffcd5e0>

0004d720 <__fpclassifyd>:
   4d720:	00a00034 	movhi	r2,32768
   4d724:	10bfffc4 	addi	r2,r2,-1
   4d728:	2884703a 	and	r2,r5,r2
   4d72c:	10000726 	beq	r2,zero,4d74c <__fpclassifyd+0x2c>
   4d730:	00fffc34 	movhi	r3,65520
   4d734:	019ff834 	movhi	r6,32736
   4d738:	28c7883a 	add	r3,r5,r3
   4d73c:	31bfffc4 	addi	r6,r6,-1
   4d740:	30c00536 	bltu	r6,r3,4d758 <__fpclassifyd+0x38>
   4d744:	00800104 	movi	r2,4
   4d748:	f800283a 	ret
   4d74c:	2000021e 	bne	r4,zero,4d758 <__fpclassifyd+0x38>
   4d750:	00800084 	movi	r2,2
   4d754:	f800283a 	ret
   4d758:	00dffc34 	movhi	r3,32752
   4d75c:	019ff834 	movhi	r6,32736
   4d760:	28cb883a 	add	r5,r5,r3
   4d764:	31bfffc4 	addi	r6,r6,-1
   4d768:	317ff62e 	bgeu	r6,r5,4d744 <__alt_data_end+0xfffcd744>
   4d76c:	01400434 	movhi	r5,16
   4d770:	297fffc4 	addi	r5,r5,-1
   4d774:	28800236 	bltu	r5,r2,4d780 <__fpclassifyd+0x60>
   4d778:	008000c4 	movi	r2,3
   4d77c:	f800283a 	ret
   4d780:	10c00226 	beq	r2,r3,4d78c <__fpclassifyd+0x6c>
   4d784:	0005883a 	mov	r2,zero
   4d788:	f800283a 	ret
   4d78c:	2005003a 	cmpeq	r2,r4,zero
   4d790:	f800283a 	ret

0004d794 <_sbrk_r>:
   4d794:	defffd04 	addi	sp,sp,-12
   4d798:	dc000015 	stw	r16,0(sp)
   4d79c:	04000174 	movhi	r16,5
   4d7a0:	dc400115 	stw	r17,4(sp)
   4d7a4:	841cdc04 	addi	r16,r16,29552
   4d7a8:	2023883a 	mov	r17,r4
   4d7ac:	2809883a 	mov	r4,r5
   4d7b0:	dfc00215 	stw	ra,8(sp)
   4d7b4:	80000015 	stw	zero,0(r16)
   4d7b8:	00516100 	call	51610 <sbrk>
   4d7bc:	00ffffc4 	movi	r3,-1
   4d7c0:	10c00526 	beq	r2,r3,4d7d8 <_sbrk_r+0x44>
   4d7c4:	dfc00217 	ldw	ra,8(sp)
   4d7c8:	dc400117 	ldw	r17,4(sp)
   4d7cc:	dc000017 	ldw	r16,0(sp)
   4d7d0:	dec00304 	addi	sp,sp,12
   4d7d4:	f800283a 	ret
   4d7d8:	80c00017 	ldw	r3,0(r16)
   4d7dc:	183ff926 	beq	r3,zero,4d7c4 <__alt_data_end+0xfffcd7c4>
   4d7e0:	88c00015 	stw	r3,0(r17)
   4d7e4:	003ff706 	br	4d7c4 <__alt_data_end+0xfffcd7c4>

0004d7e8 <__sread>:
   4d7e8:	defffe04 	addi	sp,sp,-8
   4d7ec:	dc000015 	stw	r16,0(sp)
   4d7f0:	2821883a 	mov	r16,r5
   4d7f4:	2940038f 	ldh	r5,14(r5)
   4d7f8:	dfc00115 	stw	ra,4(sp)
   4d7fc:	004f5dc0 	call	4f5dc <_read_r>
   4d800:	10000716 	blt	r2,zero,4d820 <__sread+0x38>
   4d804:	80c01417 	ldw	r3,80(r16)
   4d808:	1887883a 	add	r3,r3,r2
   4d80c:	80c01415 	stw	r3,80(r16)
   4d810:	dfc00117 	ldw	ra,4(sp)
   4d814:	dc000017 	ldw	r16,0(sp)
   4d818:	dec00204 	addi	sp,sp,8
   4d81c:	f800283a 	ret
   4d820:	80c0030b 	ldhu	r3,12(r16)
   4d824:	18fbffcc 	andi	r3,r3,61439
   4d828:	80c0030d 	sth	r3,12(r16)
   4d82c:	dfc00117 	ldw	ra,4(sp)
   4d830:	dc000017 	ldw	r16,0(sp)
   4d834:	dec00204 	addi	sp,sp,8
   4d838:	f800283a 	ret

0004d83c <__seofread>:
   4d83c:	0005883a 	mov	r2,zero
   4d840:	f800283a 	ret

0004d844 <__swrite>:
   4d844:	2880030b 	ldhu	r2,12(r5)
   4d848:	defffb04 	addi	sp,sp,-20
   4d84c:	dcc00315 	stw	r19,12(sp)
   4d850:	dc800215 	stw	r18,8(sp)
   4d854:	dc400115 	stw	r17,4(sp)
   4d858:	dc000015 	stw	r16,0(sp)
   4d85c:	dfc00415 	stw	ra,16(sp)
   4d860:	10c0400c 	andi	r3,r2,256
   4d864:	2821883a 	mov	r16,r5
   4d868:	2023883a 	mov	r17,r4
   4d86c:	3025883a 	mov	r18,r6
   4d870:	3827883a 	mov	r19,r7
   4d874:	18000526 	beq	r3,zero,4d88c <__swrite+0x48>
   4d878:	2940038f 	ldh	r5,14(r5)
   4d87c:	01c00084 	movi	r7,2
   4d880:	000d883a 	mov	r6,zero
   4d884:	004f57c0 	call	4f57c <_lseek_r>
   4d888:	8080030b 	ldhu	r2,12(r16)
   4d88c:	8140038f 	ldh	r5,14(r16)
   4d890:	10bbffcc 	andi	r2,r2,61439
   4d894:	980f883a 	mov	r7,r19
   4d898:	900d883a 	mov	r6,r18
   4d89c:	8809883a 	mov	r4,r17
   4d8a0:	8080030d 	sth	r2,12(r16)
   4d8a4:	dfc00417 	ldw	ra,16(sp)
   4d8a8:	dcc00317 	ldw	r19,12(sp)
   4d8ac:	dc800217 	ldw	r18,8(sp)
   4d8b0:	dc400117 	ldw	r17,4(sp)
   4d8b4:	dc000017 	ldw	r16,0(sp)
   4d8b8:	dec00504 	addi	sp,sp,20
   4d8bc:	004f0481 	jmpi	4f048 <_write_r>

0004d8c0 <__sseek>:
   4d8c0:	defffe04 	addi	sp,sp,-8
   4d8c4:	dc000015 	stw	r16,0(sp)
   4d8c8:	2821883a 	mov	r16,r5
   4d8cc:	2940038f 	ldh	r5,14(r5)
   4d8d0:	dfc00115 	stw	ra,4(sp)
   4d8d4:	004f57c0 	call	4f57c <_lseek_r>
   4d8d8:	00ffffc4 	movi	r3,-1
   4d8dc:	10c00826 	beq	r2,r3,4d900 <__sseek+0x40>
   4d8e0:	80c0030b 	ldhu	r3,12(r16)
   4d8e4:	80801415 	stw	r2,80(r16)
   4d8e8:	18c40014 	ori	r3,r3,4096
   4d8ec:	80c0030d 	sth	r3,12(r16)
   4d8f0:	dfc00117 	ldw	ra,4(sp)
   4d8f4:	dc000017 	ldw	r16,0(sp)
   4d8f8:	dec00204 	addi	sp,sp,8
   4d8fc:	f800283a 	ret
   4d900:	80c0030b 	ldhu	r3,12(r16)
   4d904:	18fbffcc 	andi	r3,r3,61439
   4d908:	80c0030d 	sth	r3,12(r16)
   4d90c:	dfc00117 	ldw	ra,4(sp)
   4d910:	dc000017 	ldw	r16,0(sp)
   4d914:	dec00204 	addi	sp,sp,8
   4d918:	f800283a 	ret

0004d91c <__sclose>:
   4d91c:	2940038f 	ldh	r5,14(r5)
   4d920:	004f0a81 	jmpi	4f0a8 <_close_r>

0004d924 <strcmp>:
   4d924:	2144b03a 	or	r2,r4,r5
   4d928:	108000cc 	andi	r2,r2,3
   4d92c:	1000171e 	bne	r2,zero,4d98c <strcmp+0x68>
   4d930:	20800017 	ldw	r2,0(r4)
   4d934:	28c00017 	ldw	r3,0(r5)
   4d938:	10c0141e 	bne	r2,r3,4d98c <strcmp+0x68>
   4d93c:	027fbff4 	movhi	r9,65279
   4d940:	4a7fbfc4 	addi	r9,r9,-257
   4d944:	0086303a 	nor	r3,zero,r2
   4d948:	02202074 	movhi	r8,32897
   4d94c:	1245883a 	add	r2,r2,r9
   4d950:	42202004 	addi	r8,r8,-32640
   4d954:	10c4703a 	and	r2,r2,r3
   4d958:	1204703a 	and	r2,r2,r8
   4d95c:	10000226 	beq	r2,zero,4d968 <strcmp+0x44>
   4d960:	00002306 	br	4d9f0 <strcmp+0xcc>
   4d964:	1000221e 	bne	r2,zero,4d9f0 <strcmp+0xcc>
   4d968:	21000104 	addi	r4,r4,4
   4d96c:	20c00017 	ldw	r3,0(r4)
   4d970:	29400104 	addi	r5,r5,4
   4d974:	29800017 	ldw	r6,0(r5)
   4d978:	1a4f883a 	add	r7,r3,r9
   4d97c:	00c4303a 	nor	r2,zero,r3
   4d980:	3884703a 	and	r2,r7,r2
   4d984:	1204703a 	and	r2,r2,r8
   4d988:	19bff626 	beq	r3,r6,4d964 <__alt_data_end+0xfffcd964>
   4d98c:	20800003 	ldbu	r2,0(r4)
   4d990:	10c03fcc 	andi	r3,r2,255
   4d994:	18c0201c 	xori	r3,r3,128
   4d998:	18ffe004 	addi	r3,r3,-128
   4d99c:	18000c26 	beq	r3,zero,4d9d0 <strcmp+0xac>
   4d9a0:	29800007 	ldb	r6,0(r5)
   4d9a4:	19800326 	beq	r3,r6,4d9b4 <strcmp+0x90>
   4d9a8:	00001306 	br	4d9f8 <strcmp+0xd4>
   4d9ac:	29800007 	ldb	r6,0(r5)
   4d9b0:	11800b1e 	bne	r2,r6,4d9e0 <strcmp+0xbc>
   4d9b4:	21000044 	addi	r4,r4,1
   4d9b8:	20c00003 	ldbu	r3,0(r4)
   4d9bc:	29400044 	addi	r5,r5,1
   4d9c0:	18803fcc 	andi	r2,r3,255
   4d9c4:	1080201c 	xori	r2,r2,128
   4d9c8:	10bfe004 	addi	r2,r2,-128
   4d9cc:	103ff71e 	bne	r2,zero,4d9ac <__alt_data_end+0xfffcd9ac>
   4d9d0:	0007883a 	mov	r3,zero
   4d9d4:	28800003 	ldbu	r2,0(r5)
   4d9d8:	1885c83a 	sub	r2,r3,r2
   4d9dc:	f800283a 	ret
   4d9e0:	28800003 	ldbu	r2,0(r5)
   4d9e4:	18c03fcc 	andi	r3,r3,255
   4d9e8:	1885c83a 	sub	r2,r3,r2
   4d9ec:	f800283a 	ret
   4d9f0:	0005883a 	mov	r2,zero
   4d9f4:	f800283a 	ret
   4d9f8:	10c03fcc 	andi	r3,r2,255
   4d9fc:	003ff506 	br	4d9d4 <__alt_data_end+0xfffcd9d4>

0004da00 <__sprint_r.part.0>:
   4da00:	28801917 	ldw	r2,100(r5)
   4da04:	defff604 	addi	sp,sp,-40
   4da08:	dd400515 	stw	r21,20(sp)
   4da0c:	dfc00915 	stw	ra,36(sp)
   4da10:	df000815 	stw	fp,32(sp)
   4da14:	ddc00715 	stw	r23,28(sp)
   4da18:	dd800615 	stw	r22,24(sp)
   4da1c:	dd000415 	stw	r20,16(sp)
   4da20:	dcc00315 	stw	r19,12(sp)
   4da24:	dc800215 	stw	r18,8(sp)
   4da28:	dc400115 	stw	r17,4(sp)
   4da2c:	dc000015 	stw	r16,0(sp)
   4da30:	1088000c 	andi	r2,r2,8192
   4da34:	302b883a 	mov	r21,r6
   4da38:	10002e26 	beq	r2,zero,4daf4 <__sprint_r.part.0+0xf4>
   4da3c:	30800217 	ldw	r2,8(r6)
   4da40:	35800017 	ldw	r22,0(r6)
   4da44:	10002926 	beq	r2,zero,4daec <__sprint_r.part.0+0xec>
   4da48:	2827883a 	mov	r19,r5
   4da4c:	2029883a 	mov	r20,r4
   4da50:	b5c00104 	addi	r23,r22,4
   4da54:	04bfffc4 	movi	r18,-1
   4da58:	bc400017 	ldw	r17,0(r23)
   4da5c:	b4000017 	ldw	r16,0(r22)
   4da60:	0039883a 	mov	fp,zero
   4da64:	8822d0ba 	srli	r17,r17,2
   4da68:	8800031e 	bne	r17,zero,4da78 <__sprint_r.part.0+0x78>
   4da6c:	00001806 	br	4dad0 <__sprint_r.part.0+0xd0>
   4da70:	84000104 	addi	r16,r16,4
   4da74:	8f001526 	beq	r17,fp,4dacc <__sprint_r.part.0+0xcc>
   4da78:	81400017 	ldw	r5,0(r16)
   4da7c:	980d883a 	mov	r6,r19
   4da80:	a009883a 	mov	r4,r20
   4da84:	004f4280 	call	4f428 <_fputwc_r>
   4da88:	e7000044 	addi	fp,fp,1
   4da8c:	14bff81e 	bne	r2,r18,4da70 <__alt_data_end+0xfffcda70>
   4da90:	9005883a 	mov	r2,r18
   4da94:	a8000215 	stw	zero,8(r21)
   4da98:	a8000115 	stw	zero,4(r21)
   4da9c:	dfc00917 	ldw	ra,36(sp)
   4daa0:	df000817 	ldw	fp,32(sp)
   4daa4:	ddc00717 	ldw	r23,28(sp)
   4daa8:	dd800617 	ldw	r22,24(sp)
   4daac:	dd400517 	ldw	r21,20(sp)
   4dab0:	dd000417 	ldw	r20,16(sp)
   4dab4:	dcc00317 	ldw	r19,12(sp)
   4dab8:	dc800217 	ldw	r18,8(sp)
   4dabc:	dc400117 	ldw	r17,4(sp)
   4dac0:	dc000017 	ldw	r16,0(sp)
   4dac4:	dec00a04 	addi	sp,sp,40
   4dac8:	f800283a 	ret
   4dacc:	a8800217 	ldw	r2,8(r21)
   4dad0:	8c63883a 	add	r17,r17,r17
   4dad4:	8c63883a 	add	r17,r17,r17
   4dad8:	1445c83a 	sub	r2,r2,r17
   4dadc:	a8800215 	stw	r2,8(r21)
   4dae0:	b5800204 	addi	r22,r22,8
   4dae4:	bdc00204 	addi	r23,r23,8
   4dae8:	103fdb1e 	bne	r2,zero,4da58 <__alt_data_end+0xfffcda58>
   4daec:	0005883a 	mov	r2,zero
   4daf0:	003fe806 	br	4da94 <__alt_data_end+0xfffcda94>
   4daf4:	004ac280 	call	4ac28 <__sfvwrite_r>
   4daf8:	003fe606 	br	4da94 <__alt_data_end+0xfffcda94>

0004dafc <__sprint_r>:
   4dafc:	30c00217 	ldw	r3,8(r6)
   4db00:	18000126 	beq	r3,zero,4db08 <__sprint_r+0xc>
   4db04:	004da001 	jmpi	4da00 <__sprint_r.part.0>
   4db08:	30000115 	stw	zero,4(r6)
   4db0c:	0005883a 	mov	r2,zero
   4db10:	f800283a 	ret

0004db14 <___vfiprintf_internal_r>:
   4db14:	deffc904 	addi	sp,sp,-220
   4db18:	df003515 	stw	fp,212(sp)
   4db1c:	dd003115 	stw	r20,196(sp)
   4db20:	dfc03615 	stw	ra,216(sp)
   4db24:	ddc03415 	stw	r23,208(sp)
   4db28:	dd803315 	stw	r22,204(sp)
   4db2c:	dd403215 	stw	r21,200(sp)
   4db30:	dcc03015 	stw	r19,192(sp)
   4db34:	dc802f15 	stw	r18,188(sp)
   4db38:	dc402e15 	stw	r17,184(sp)
   4db3c:	dc002d15 	stw	r16,180(sp)
   4db40:	d9002015 	stw	r4,128(sp)
   4db44:	d9c02215 	stw	r7,136(sp)
   4db48:	2829883a 	mov	r20,r5
   4db4c:	3039883a 	mov	fp,r6
   4db50:	20000226 	beq	r4,zero,4db5c <___vfiprintf_internal_r+0x48>
   4db54:	20800e17 	ldw	r2,56(r4)
   4db58:	1000cf26 	beq	r2,zero,4de98 <___vfiprintf_internal_r+0x384>
   4db5c:	a080030b 	ldhu	r2,12(r20)
   4db60:	10c8000c 	andi	r3,r2,8192
   4db64:	1800061e 	bne	r3,zero,4db80 <___vfiprintf_internal_r+0x6c>
   4db68:	a1001917 	ldw	r4,100(r20)
   4db6c:	00f7ffc4 	movi	r3,-8193
   4db70:	10880014 	ori	r2,r2,8192
   4db74:	20c6703a 	and	r3,r4,r3
   4db78:	a080030d 	sth	r2,12(r20)
   4db7c:	a0c01915 	stw	r3,100(r20)
   4db80:	10c0020c 	andi	r3,r2,8
   4db84:	1800a926 	beq	r3,zero,4de2c <___vfiprintf_internal_r+0x318>
   4db88:	a0c00417 	ldw	r3,16(r20)
   4db8c:	1800a726 	beq	r3,zero,4de2c <___vfiprintf_internal_r+0x318>
   4db90:	1080068c 	andi	r2,r2,26
   4db94:	00c00284 	movi	r3,10
   4db98:	10c0ac26 	beq	r2,r3,4de4c <___vfiprintf_internal_r+0x338>
   4db9c:	da801a04 	addi	r10,sp,104
   4dba0:	da801e15 	stw	r10,120(sp)
   4dba4:	d8801e17 	ldw	r2,120(sp)
   4dba8:	da8019c4 	addi	r10,sp,103
   4dbac:	05800174 	movhi	r22,5
   4dbb0:	05c00174 	movhi	r23,5
   4dbb4:	da801f15 	stw	r10,124(sp)
   4dbb8:	1295c83a 	sub	r10,r2,r10
   4dbbc:	b58f4904 	addi	r22,r22,15652
   4dbc0:	bdcf4504 	addi	r23,r23,15636
   4dbc4:	dec01a15 	stw	sp,104(sp)
   4dbc8:	d8001c15 	stw	zero,112(sp)
   4dbcc:	d8001b15 	stw	zero,108(sp)
   4dbd0:	d8002615 	stw	zero,152(sp)
   4dbd4:	d8002315 	stw	zero,140(sp)
   4dbd8:	da802715 	stw	r10,156(sp)
   4dbdc:	d811883a 	mov	r8,sp
   4dbe0:	dd002115 	stw	r20,132(sp)
   4dbe4:	e021883a 	mov	r16,fp
   4dbe8:	80800007 	ldb	r2,0(r16)
   4dbec:	1003ea26 	beq	r2,zero,4eb98 <___vfiprintf_internal_r+0x1084>
   4dbf0:	00c00944 	movi	r3,37
   4dbf4:	8025883a 	mov	r18,r16
   4dbf8:	10c0021e 	bne	r2,r3,4dc04 <___vfiprintf_internal_r+0xf0>
   4dbfc:	00001606 	br	4dc58 <___vfiprintf_internal_r+0x144>
   4dc00:	10c00326 	beq	r2,r3,4dc10 <___vfiprintf_internal_r+0xfc>
   4dc04:	94800044 	addi	r18,r18,1
   4dc08:	90800007 	ldb	r2,0(r18)
   4dc0c:	103ffc1e 	bne	r2,zero,4dc00 <__alt_data_end+0xfffcdc00>
   4dc10:	9423c83a 	sub	r17,r18,r16
   4dc14:	88001026 	beq	r17,zero,4dc58 <___vfiprintf_internal_r+0x144>
   4dc18:	d8c01c17 	ldw	r3,112(sp)
   4dc1c:	d8801b17 	ldw	r2,108(sp)
   4dc20:	44000015 	stw	r16,0(r8)
   4dc24:	88c7883a 	add	r3,r17,r3
   4dc28:	10800044 	addi	r2,r2,1
   4dc2c:	44400115 	stw	r17,4(r8)
   4dc30:	d8c01c15 	stw	r3,112(sp)
   4dc34:	d8801b15 	stw	r2,108(sp)
   4dc38:	010001c4 	movi	r4,7
   4dc3c:	2080760e 	bge	r4,r2,4de18 <___vfiprintf_internal_r+0x304>
   4dc40:	1803821e 	bne	r3,zero,4ea4c <___vfiprintf_internal_r+0xf38>
   4dc44:	da802317 	ldw	r10,140(sp)
   4dc48:	d8001b15 	stw	zero,108(sp)
   4dc4c:	d811883a 	mov	r8,sp
   4dc50:	5455883a 	add	r10,r10,r17
   4dc54:	da802315 	stw	r10,140(sp)
   4dc58:	90800007 	ldb	r2,0(r18)
   4dc5c:	10044626 	beq	r2,zero,4ed78 <___vfiprintf_internal_r+0x1264>
   4dc60:	90c00047 	ldb	r3,1(r18)
   4dc64:	94000044 	addi	r16,r18,1
   4dc68:	d8001d85 	stb	zero,118(sp)
   4dc6c:	0009883a 	mov	r4,zero
   4dc70:	000f883a 	mov	r7,zero
   4dc74:	027fffc4 	movi	r9,-1
   4dc78:	0023883a 	mov	r17,zero
   4dc7c:	0029883a 	mov	r20,zero
   4dc80:	01401604 	movi	r5,88
   4dc84:	01800244 	movi	r6,9
   4dc88:	03400a84 	movi	r13,42
   4dc8c:	03001b04 	movi	r12,108
   4dc90:	84000044 	addi	r16,r16,1
   4dc94:	18bff804 	addi	r2,r3,-32
   4dc98:	28827336 	bltu	r5,r2,4e668 <___vfiprintf_internal_r+0xb54>
   4dc9c:	100490ba 	slli	r2,r2,2
   4dca0:	02800174 	movhi	r10,5
   4dca4:	52b72d04 	addi	r10,r10,-9036
   4dca8:	1285883a 	add	r2,r2,r10
   4dcac:	10800017 	ldw	r2,0(r2)
   4dcb0:	1000683a 	jmp	r2
   4dcb4:	0004e39c 	xori	zero,zero,5006
   4dcb8:	0004e668 	cmpgeui	zero,zero,5017
   4dcbc:	0004e668 	cmpgeui	zero,zero,5017
   4dcc0:	0004e3bc 	xorhi	zero,zero,5006
   4dcc4:	0004e668 	cmpgeui	zero,zero,5017
   4dcc8:	0004e668 	cmpgeui	zero,zero,5017
   4dccc:	0004e668 	cmpgeui	zero,zero,5017
   4dcd0:	0004e668 	cmpgeui	zero,zero,5017
   4dcd4:	0004e668 	cmpgeui	zero,zero,5017
   4dcd8:	0004e668 	cmpgeui	zero,zero,5017
   4dcdc:	0004e5a4 	muli	zero,zero,5014
   4dce0:	0004e5c0 	call	4e5c <__alt_mem_onchip_memory2_0-0x3b1a4>
   4dce4:	0004e668 	cmpgeui	zero,zero,5017
   4dce8:	0004dea8 	cmpgeui	zero,zero,4986
   4dcec:	0004e5d0 	cmplti	zero,zero,5015
   4dcf0:	0004e668 	cmpgeui	zero,zero,5017
   4dcf4:	0004e3c8 	cmpgei	zero,zero,5007
   4dcf8:	0004e3d4 	movui	zero,5007
   4dcfc:	0004e3d4 	movui	zero,5007
   4dd00:	0004e3d4 	movui	zero,5007
   4dd04:	0004e3d4 	movui	zero,5007
   4dd08:	0004e3d4 	movui	zero,5007
   4dd0c:	0004e3d4 	movui	zero,5007
   4dd10:	0004e3d4 	movui	zero,5007
   4dd14:	0004e3d4 	movui	zero,5007
   4dd18:	0004e3d4 	movui	zero,5007
   4dd1c:	0004e668 	cmpgeui	zero,zero,5017
   4dd20:	0004e668 	cmpgeui	zero,zero,5017
   4dd24:	0004e668 	cmpgeui	zero,zero,5017
   4dd28:	0004e668 	cmpgeui	zero,zero,5017
   4dd2c:	0004e668 	cmpgeui	zero,zero,5017
   4dd30:	0004e668 	cmpgeui	zero,zero,5017
   4dd34:	0004e668 	cmpgeui	zero,zero,5017
   4dd38:	0004e668 	cmpgeui	zero,zero,5017
   4dd3c:	0004e668 	cmpgeui	zero,zero,5017
   4dd40:	0004e668 	cmpgeui	zero,zero,5017
   4dd44:	0004e400 	call	4e40 <__alt_mem_onchip_memory2_0-0x3b1c0>
   4dd48:	0004e668 	cmpgeui	zero,zero,5017
   4dd4c:	0004e668 	cmpgeui	zero,zero,5017
   4dd50:	0004e668 	cmpgeui	zero,zero,5017
   4dd54:	0004e668 	cmpgeui	zero,zero,5017
   4dd58:	0004e668 	cmpgeui	zero,zero,5017
   4dd5c:	0004e668 	cmpgeui	zero,zero,5017
   4dd60:	0004e668 	cmpgeui	zero,zero,5017
   4dd64:	0004e668 	cmpgeui	zero,zero,5017
   4dd68:	0004e668 	cmpgeui	zero,zero,5017
   4dd6c:	0004e668 	cmpgeui	zero,zero,5017
   4dd70:	0004e438 	rdprs	zero,zero,5008
   4dd74:	0004e668 	cmpgeui	zero,zero,5017
   4dd78:	0004e668 	cmpgeui	zero,zero,5017
   4dd7c:	0004e668 	cmpgeui	zero,zero,5017
   4dd80:	0004e668 	cmpgeui	zero,zero,5017
   4dd84:	0004e668 	cmpgeui	zero,zero,5017
   4dd88:	0004e490 	cmplti	zero,zero,5010
   4dd8c:	0004e668 	cmpgeui	zero,zero,5017
   4dd90:	0004e668 	cmpgeui	zero,zero,5017
   4dd94:	0004e500 	call	4e50 <__alt_mem_onchip_memory2_0-0x3b1b0>
   4dd98:	0004e668 	cmpgeui	zero,zero,5017
   4dd9c:	0004e668 	cmpgeui	zero,zero,5017
   4dda0:	0004e668 	cmpgeui	zero,zero,5017
   4dda4:	0004e668 	cmpgeui	zero,zero,5017
   4dda8:	0004e668 	cmpgeui	zero,zero,5017
   4ddac:	0004e668 	cmpgeui	zero,zero,5017
   4ddb0:	0004e668 	cmpgeui	zero,zero,5017
   4ddb4:	0004e668 	cmpgeui	zero,zero,5017
   4ddb8:	0004e668 	cmpgeui	zero,zero,5017
   4ddbc:	0004e668 	cmpgeui	zero,zero,5017
   4ddc0:	0004e2ac 	andhi	zero,zero,5002
   4ddc4:	0004e2d8 	cmpnei	zero,zero,5003
   4ddc8:	0004e668 	cmpgeui	zero,zero,5017
   4ddcc:	0004e668 	cmpgeui	zero,zero,5017
   4ddd0:	0004e668 	cmpgeui	zero,zero,5017
   4ddd4:	0004e610 	cmplti	zero,zero,5016
   4ddd8:	0004e2d8 	cmpnei	zero,zero,5003
   4dddc:	0004e668 	cmpgeui	zero,zero,5017
   4dde0:	0004e668 	cmpgeui	zero,zero,5017
   4dde4:	0004e16c 	andhi	zero,zero,4997
   4dde8:	0004e668 	cmpgeui	zero,zero,5017
   4ddec:	0004e17c 	xorhi	zero,zero,4997
   4ddf0:	0004e1b8 	rdprs	zero,zero,4998
   4ddf4:	0004deb4 	movhi	zero,4986
   4ddf8:	0004e160 	cmpeqi	zero,zero,4997
   4ddfc:	0004e668 	cmpgeui	zero,zero,5017
   4de00:	0004e53c 	xorhi	zero,zero,5012
   4de04:	0004e668 	cmpgeui	zero,zero,5017
   4de08:	0004e594 	movui	zero,5014
   4de0c:	0004e668 	cmpgeui	zero,zero,5017
   4de10:	0004e668 	cmpgeui	zero,zero,5017
   4de14:	0004e258 	cmpnei	zero,zero,5001
   4de18:	42000204 	addi	r8,r8,8
   4de1c:	da802317 	ldw	r10,140(sp)
   4de20:	5455883a 	add	r10,r10,r17
   4de24:	da802315 	stw	r10,140(sp)
   4de28:	003f8b06 	br	4dc58 <__alt_data_end+0xfffcdc58>
   4de2c:	d9002017 	ldw	r4,128(sp)
   4de30:	a00b883a 	mov	r5,r20
   4de34:	00487d00 	call	487d0 <__swsetup_r>
   4de38:	1003b11e 	bne	r2,zero,4ed00 <___vfiprintf_internal_r+0x11ec>
   4de3c:	a080030b 	ldhu	r2,12(r20)
   4de40:	00c00284 	movi	r3,10
   4de44:	1080068c 	andi	r2,r2,26
   4de48:	10ff541e 	bne	r2,r3,4db9c <__alt_data_end+0xfffcdb9c>
   4de4c:	a080038f 	ldh	r2,14(r20)
   4de50:	103f5216 	blt	r2,zero,4db9c <__alt_data_end+0xfffcdb9c>
   4de54:	d9c02217 	ldw	r7,136(sp)
   4de58:	d9002017 	ldw	r4,128(sp)
   4de5c:	e00d883a 	mov	r6,fp
   4de60:	a00b883a 	mov	r5,r20
   4de64:	004ef8c0 	call	4ef8c <__sbprintf>
   4de68:	dfc03617 	ldw	ra,216(sp)
   4de6c:	df003517 	ldw	fp,212(sp)
   4de70:	ddc03417 	ldw	r23,208(sp)
   4de74:	dd803317 	ldw	r22,204(sp)
   4de78:	dd403217 	ldw	r21,200(sp)
   4de7c:	dd003117 	ldw	r20,196(sp)
   4de80:	dcc03017 	ldw	r19,192(sp)
   4de84:	dc802f17 	ldw	r18,188(sp)
   4de88:	dc402e17 	ldw	r17,184(sp)
   4de8c:	dc002d17 	ldw	r16,180(sp)
   4de90:	dec03704 	addi	sp,sp,220
   4de94:	f800283a 	ret
   4de98:	004a7a40 	call	4a7a4 <__sinit>
   4de9c:	003f2f06 	br	4db5c <__alt_data_end+0xfffcdb5c>
   4dea0:	0463c83a 	sub	r17,zero,r17
   4dea4:	d8802215 	stw	r2,136(sp)
   4dea8:	a5000114 	ori	r20,r20,4
   4deac:	80c00007 	ldb	r3,0(r16)
   4deb0:	003f7706 	br	4dc90 <__alt_data_end+0xfffcdc90>
   4deb4:	00800c04 	movi	r2,48
   4deb8:	da802217 	ldw	r10,136(sp)
   4debc:	d8801d05 	stb	r2,116(sp)
   4dec0:	00801e04 	movi	r2,120
   4dec4:	d8801d45 	stb	r2,117(sp)
   4dec8:	d8001d85 	stb	zero,118(sp)
   4decc:	50c00104 	addi	r3,r10,4
   4ded0:	54800017 	ldw	r18,0(r10)
   4ded4:	0027883a 	mov	r19,zero
   4ded8:	a0800094 	ori	r2,r20,2
   4dedc:	48030b16 	blt	r9,zero,4eb0c <___vfiprintf_internal_r+0xff8>
   4dee0:	00bfdfc4 	movi	r2,-129
   4dee4:	a096703a 	and	r11,r20,r2
   4dee8:	d8c02215 	stw	r3,136(sp)
   4deec:	5d000094 	ori	r20,r11,2
   4def0:	90032b1e 	bne	r18,zero,4eba0 <___vfiprintf_internal_r+0x108c>
   4def4:	00800174 	movhi	r2,5
   4def8:	108ee404 	addi	r2,r2,15248
   4defc:	d8802615 	stw	r2,152(sp)
   4df00:	0039883a 	mov	fp,zero
   4df04:	48017b1e 	bne	r9,zero,4e4f4 <___vfiprintf_internal_r+0x9e0>
   4df08:	0013883a 	mov	r9,zero
   4df0c:	0027883a 	mov	r19,zero
   4df10:	dd401a04 	addi	r21,sp,104
   4df14:	4825883a 	mov	r18,r9
   4df18:	4cc0010e 	bge	r9,r19,4df20 <___vfiprintf_internal_r+0x40c>
   4df1c:	9825883a 	mov	r18,r19
   4df20:	e7003fcc 	andi	fp,fp,255
   4df24:	e700201c 	xori	fp,fp,128
   4df28:	e73fe004 	addi	fp,fp,-128
   4df2c:	e0000126 	beq	fp,zero,4df34 <___vfiprintf_internal_r+0x420>
   4df30:	94800044 	addi	r18,r18,1
   4df34:	a380008c 	andi	r14,r20,2
   4df38:	70000126 	beq	r14,zero,4df40 <___vfiprintf_internal_r+0x42c>
   4df3c:	94800084 	addi	r18,r18,2
   4df40:	a700210c 	andi	fp,r20,132
   4df44:	e001df1e 	bne	fp,zero,4e6c4 <___vfiprintf_internal_r+0xbb0>
   4df48:	8c87c83a 	sub	r3,r17,r18
   4df4c:	00c1dd0e 	bge	zero,r3,4e6c4 <___vfiprintf_internal_r+0xbb0>
   4df50:	01c00404 	movi	r7,16
   4df54:	d8801c17 	ldw	r2,112(sp)
   4df58:	38c3ad0e 	bge	r7,r3,4ee10 <___vfiprintf_internal_r+0x12fc>
   4df5c:	02800174 	movhi	r10,5
   4df60:	528f4904 	addi	r10,r10,15652
   4df64:	dc002915 	stw	r16,164(sp)
   4df68:	d9801b17 	ldw	r6,108(sp)
   4df6c:	da802415 	stw	r10,144(sp)
   4df70:	03c001c4 	movi	r15,7
   4df74:	da402515 	stw	r9,148(sp)
   4df78:	db802815 	stw	r14,160(sp)
   4df7c:	1821883a 	mov	r16,r3
   4df80:	00000506 	br	4df98 <___vfiprintf_internal_r+0x484>
   4df84:	31400084 	addi	r5,r6,2
   4df88:	42000204 	addi	r8,r8,8
   4df8c:	200d883a 	mov	r6,r4
   4df90:	843ffc04 	addi	r16,r16,-16
   4df94:	3c000d0e 	bge	r7,r16,4dfcc <___vfiprintf_internal_r+0x4b8>
   4df98:	10800404 	addi	r2,r2,16
   4df9c:	31000044 	addi	r4,r6,1
   4dfa0:	45800015 	stw	r22,0(r8)
   4dfa4:	41c00115 	stw	r7,4(r8)
   4dfa8:	d8801c15 	stw	r2,112(sp)
   4dfac:	d9001b15 	stw	r4,108(sp)
   4dfb0:	793ff40e 	bge	r15,r4,4df84 <__alt_data_end+0xfffcdf84>
   4dfb4:	1001b51e 	bne	r2,zero,4e68c <___vfiprintf_internal_r+0xb78>
   4dfb8:	843ffc04 	addi	r16,r16,-16
   4dfbc:	000d883a 	mov	r6,zero
   4dfc0:	01400044 	movi	r5,1
   4dfc4:	d811883a 	mov	r8,sp
   4dfc8:	3c3ff316 	blt	r7,r16,4df98 <__alt_data_end+0xfffcdf98>
   4dfcc:	8007883a 	mov	r3,r16
   4dfd0:	da402517 	ldw	r9,148(sp)
   4dfd4:	db802817 	ldw	r14,160(sp)
   4dfd8:	dc002917 	ldw	r16,164(sp)
   4dfdc:	da802417 	ldw	r10,144(sp)
   4dfe0:	1885883a 	add	r2,r3,r2
   4dfe4:	40c00115 	stw	r3,4(r8)
   4dfe8:	42800015 	stw	r10,0(r8)
   4dfec:	d8801c15 	stw	r2,112(sp)
   4dff0:	d9401b15 	stw	r5,108(sp)
   4dff4:	00c001c4 	movi	r3,7
   4dff8:	19426016 	blt	r3,r5,4e97c <___vfiprintf_internal_r+0xe68>
   4dffc:	d8c01d87 	ldb	r3,118(sp)
   4e000:	42000204 	addi	r8,r8,8
   4e004:	29000044 	addi	r4,r5,1
   4e008:	1801b31e 	bne	r3,zero,4e6d8 <___vfiprintf_internal_r+0xbc4>
   4e00c:	7001c026 	beq	r14,zero,4e710 <___vfiprintf_internal_r+0xbfc>
   4e010:	d8c01d04 	addi	r3,sp,116
   4e014:	10800084 	addi	r2,r2,2
   4e018:	40c00015 	stw	r3,0(r8)
   4e01c:	00c00084 	movi	r3,2
   4e020:	40c00115 	stw	r3,4(r8)
   4e024:	d8801c15 	stw	r2,112(sp)
   4e028:	d9001b15 	stw	r4,108(sp)
   4e02c:	00c001c4 	movi	r3,7
   4e030:	1902650e 	bge	r3,r4,4e9c8 <___vfiprintf_internal_r+0xeb4>
   4e034:	10029a1e 	bne	r2,zero,4eaa0 <___vfiprintf_internal_r+0xf8c>
   4e038:	00c02004 	movi	r3,128
   4e03c:	01000044 	movi	r4,1
   4e040:	000b883a 	mov	r5,zero
   4e044:	d811883a 	mov	r8,sp
   4e048:	e0c1b31e 	bne	fp,r3,4e718 <___vfiprintf_internal_r+0xc04>
   4e04c:	8cb9c83a 	sub	fp,r17,r18
   4e050:	0701b10e 	bge	zero,fp,4e718 <___vfiprintf_internal_r+0xc04>
   4e054:	01c00404 	movi	r7,16
   4e058:	3f03890e 	bge	r7,fp,4ee80 <___vfiprintf_internal_r+0x136c>
   4e05c:	00c00174 	movhi	r3,5
   4e060:	18cf4504 	addi	r3,r3,15636
   4e064:	d8c02415 	stw	r3,144(sp)
   4e068:	8007883a 	mov	r3,r16
   4e06c:	034001c4 	movi	r13,7
   4e070:	e021883a 	mov	r16,fp
   4e074:	da402515 	stw	r9,148(sp)
   4e078:	1839883a 	mov	fp,r3
   4e07c:	00000506 	br	4e094 <___vfiprintf_internal_r+0x580>
   4e080:	29800084 	addi	r6,r5,2
   4e084:	42000204 	addi	r8,r8,8
   4e088:	180b883a 	mov	r5,r3
   4e08c:	843ffc04 	addi	r16,r16,-16
   4e090:	3c000d0e 	bge	r7,r16,4e0c8 <___vfiprintf_internal_r+0x5b4>
   4e094:	10800404 	addi	r2,r2,16
   4e098:	28c00044 	addi	r3,r5,1
   4e09c:	45c00015 	stw	r23,0(r8)
   4e0a0:	41c00115 	stw	r7,4(r8)
   4e0a4:	d8801c15 	stw	r2,112(sp)
   4e0a8:	d8c01b15 	stw	r3,108(sp)
   4e0ac:	68fff40e 	bge	r13,r3,4e080 <__alt_data_end+0xfffce080>
   4e0b0:	1002241e 	bne	r2,zero,4e944 <___vfiprintf_internal_r+0xe30>
   4e0b4:	843ffc04 	addi	r16,r16,-16
   4e0b8:	01800044 	movi	r6,1
   4e0bc:	000b883a 	mov	r5,zero
   4e0c0:	d811883a 	mov	r8,sp
   4e0c4:	3c3ff316 	blt	r7,r16,4e094 <__alt_data_end+0xfffce094>
   4e0c8:	da402517 	ldw	r9,148(sp)
   4e0cc:	e007883a 	mov	r3,fp
   4e0d0:	8039883a 	mov	fp,r16
   4e0d4:	1821883a 	mov	r16,r3
   4e0d8:	d8c02417 	ldw	r3,144(sp)
   4e0dc:	1705883a 	add	r2,r2,fp
   4e0e0:	47000115 	stw	fp,4(r8)
   4e0e4:	40c00015 	stw	r3,0(r8)
   4e0e8:	d8801c15 	stw	r2,112(sp)
   4e0ec:	d9801b15 	stw	r6,108(sp)
   4e0f0:	00c001c4 	movi	r3,7
   4e0f4:	19827616 	blt	r3,r6,4ead0 <___vfiprintf_internal_r+0xfbc>
   4e0f8:	4cf9c83a 	sub	fp,r9,r19
   4e0fc:	42000204 	addi	r8,r8,8
   4e100:	31000044 	addi	r4,r6,1
   4e104:	300b883a 	mov	r5,r6
   4e108:	07018516 	blt	zero,fp,4e720 <___vfiprintf_internal_r+0xc0c>
   4e10c:	9885883a 	add	r2,r19,r2
   4e110:	45400015 	stw	r21,0(r8)
   4e114:	44c00115 	stw	r19,4(r8)
   4e118:	d8801c15 	stw	r2,112(sp)
   4e11c:	d9001b15 	stw	r4,108(sp)
   4e120:	00c001c4 	movi	r3,7
   4e124:	1901dd0e 	bge	r3,r4,4e89c <___vfiprintf_internal_r+0xd88>
   4e128:	1002401e 	bne	r2,zero,4ea2c <___vfiprintf_internal_r+0xf18>
   4e12c:	d8001b15 	stw	zero,108(sp)
   4e130:	a2c0010c 	andi	r11,r20,4
   4e134:	58000226 	beq	r11,zero,4e140 <___vfiprintf_internal_r+0x62c>
   4e138:	8ca7c83a 	sub	r19,r17,r18
   4e13c:	04c2f216 	blt	zero,r19,4ed08 <___vfiprintf_internal_r+0x11f4>
   4e140:	8c80010e 	bge	r17,r18,4e148 <___vfiprintf_internal_r+0x634>
   4e144:	9023883a 	mov	r17,r18
   4e148:	da802317 	ldw	r10,140(sp)
   4e14c:	5455883a 	add	r10,r10,r17
   4e150:	da802315 	stw	r10,140(sp)
   4e154:	d8001b15 	stw	zero,108(sp)
   4e158:	d811883a 	mov	r8,sp
   4e15c:	003ea206 	br	4dbe8 <__alt_data_end+0xfffcdbe8>
   4e160:	a5000814 	ori	r20,r20,32
   4e164:	80c00007 	ldb	r3,0(r16)
   4e168:	003ec906 	br	4dc90 <__alt_data_end+0xfffcdc90>
   4e16c:	80c00007 	ldb	r3,0(r16)
   4e170:	1b030926 	beq	r3,r12,4ed98 <___vfiprintf_internal_r+0x1284>
   4e174:	a5000414 	ori	r20,r20,16
   4e178:	003ec506 	br	4dc90 <__alt_data_end+0xfffcdc90>
   4e17c:	21003fcc 	andi	r4,r4,255
   4e180:	20035e1e 	bne	r4,zero,4eefc <___vfiprintf_internal_r+0x13e8>
   4e184:	a080080c 	andi	r2,r20,32
   4e188:	1002a526 	beq	r2,zero,4ec20 <___vfiprintf_internal_r+0x110c>
   4e18c:	da802217 	ldw	r10,136(sp)
   4e190:	50800017 	ldw	r2,0(r10)
   4e194:	da802317 	ldw	r10,140(sp)
   4e198:	5007d7fa 	srai	r3,r10,31
   4e19c:	da802217 	ldw	r10,136(sp)
   4e1a0:	10c00115 	stw	r3,4(r2)
   4e1a4:	52800104 	addi	r10,r10,4
   4e1a8:	da802215 	stw	r10,136(sp)
   4e1ac:	da802317 	ldw	r10,140(sp)
   4e1b0:	12800015 	stw	r10,0(r2)
   4e1b4:	003e8c06 	br	4dbe8 <__alt_data_end+0xfffcdbe8>
   4e1b8:	21003fcc 	andi	r4,r4,255
   4e1bc:	2003511e 	bne	r4,zero,4ef04 <___vfiprintf_internal_r+0x13f0>
   4e1c0:	a080080c 	andi	r2,r20,32
   4e1c4:	1000a126 	beq	r2,zero,4e44c <___vfiprintf_internal_r+0x938>
   4e1c8:	da802217 	ldw	r10,136(sp)
   4e1cc:	d8001d85 	stb	zero,118(sp)
   4e1d0:	50800204 	addi	r2,r10,8
   4e1d4:	54800017 	ldw	r18,0(r10)
   4e1d8:	54c00117 	ldw	r19,4(r10)
   4e1dc:	4802b416 	blt	r9,zero,4ecb0 <___vfiprintf_internal_r+0x119c>
   4e1e0:	013fdfc4 	movi	r4,-129
   4e1e4:	94c6b03a 	or	r3,r18,r19
   4e1e8:	d8802215 	stw	r2,136(sp)
   4e1ec:	a128703a 	and	r20,r20,r4
   4e1f0:	1800a226 	beq	r3,zero,4e47c <___vfiprintf_internal_r+0x968>
   4e1f4:	0039883a 	mov	fp,zero
   4e1f8:	dd401a04 	addi	r21,sp,104
   4e1fc:	9006d0fa 	srli	r3,r18,3
   4e200:	9808977a 	slli	r4,r19,29
   4e204:	9826d0fa 	srli	r19,r19,3
   4e208:	948001cc 	andi	r18,r18,7
   4e20c:	90800c04 	addi	r2,r18,48
   4e210:	ad7fffc4 	addi	r21,r21,-1
   4e214:	20e4b03a 	or	r18,r4,r3
   4e218:	a8800005 	stb	r2,0(r21)
   4e21c:	94c6b03a 	or	r3,r18,r19
   4e220:	183ff61e 	bne	r3,zero,4e1fc <__alt_data_end+0xfffce1fc>
   4e224:	a0c0004c 	andi	r3,r20,1
   4e228:	18005926 	beq	r3,zero,4e390 <___vfiprintf_internal_r+0x87c>
   4e22c:	10803fcc 	andi	r2,r2,255
   4e230:	1080201c 	xori	r2,r2,128
   4e234:	10bfe004 	addi	r2,r2,-128
   4e238:	00c00c04 	movi	r3,48
   4e23c:	10c05426 	beq	r2,r3,4e390 <___vfiprintf_internal_r+0x87c>
   4e240:	da801e17 	ldw	r10,120(sp)
   4e244:	a8bfffc4 	addi	r2,r21,-1
   4e248:	a8ffffc5 	stb	r3,-1(r21)
   4e24c:	50a7c83a 	sub	r19,r10,r2
   4e250:	102b883a 	mov	r21,r2
   4e254:	003f2f06 	br	4df14 <__alt_data_end+0xfffcdf14>
   4e258:	21003fcc 	andi	r4,r4,255
   4e25c:	2003421e 	bne	r4,zero,4ef68 <___vfiprintf_internal_r+0x1454>
   4e260:	00800174 	movhi	r2,5
   4e264:	108ee404 	addi	r2,r2,15248
   4e268:	d8802615 	stw	r2,152(sp)
   4e26c:	a080080c 	andi	r2,r20,32
   4e270:	1000aa26 	beq	r2,zero,4e51c <___vfiprintf_internal_r+0xa08>
   4e274:	da802217 	ldw	r10,136(sp)
   4e278:	54800017 	ldw	r18,0(r10)
   4e27c:	54c00117 	ldw	r19,4(r10)
   4e280:	52800204 	addi	r10,r10,8
   4e284:	da802215 	stw	r10,136(sp)
   4e288:	a080004c 	andi	r2,r20,1
   4e28c:	1001d226 	beq	r2,zero,4e9d8 <___vfiprintf_internal_r+0xec4>
   4e290:	94c4b03a 	or	r2,r18,r19
   4e294:	1002351e 	bne	r2,zero,4eb6c <___vfiprintf_internal_r+0x1058>
   4e298:	d8001d85 	stb	zero,118(sp)
   4e29c:	48022216 	blt	r9,zero,4eb28 <___vfiprintf_internal_r+0x1014>
   4e2a0:	00bfdfc4 	movi	r2,-129
   4e2a4:	a0a8703a 	and	r20,r20,r2
   4e2a8:	003f1506 	br	4df00 <__alt_data_end+0xfffcdf00>
   4e2ac:	da802217 	ldw	r10,136(sp)
   4e2b0:	04800044 	movi	r18,1
   4e2b4:	d8001d85 	stb	zero,118(sp)
   4e2b8:	50800017 	ldw	r2,0(r10)
   4e2bc:	52800104 	addi	r10,r10,4
   4e2c0:	da802215 	stw	r10,136(sp)
   4e2c4:	d8801005 	stb	r2,64(sp)
   4e2c8:	9027883a 	mov	r19,r18
   4e2cc:	dd401004 	addi	r21,sp,64
   4e2d0:	0013883a 	mov	r9,zero
   4e2d4:	003f1706 	br	4df34 <__alt_data_end+0xfffcdf34>
   4e2d8:	21003fcc 	andi	r4,r4,255
   4e2dc:	2003201e 	bne	r4,zero,4ef60 <___vfiprintf_internal_r+0x144c>
   4e2e0:	a080080c 	andi	r2,r20,32
   4e2e4:	10004b26 	beq	r2,zero,4e414 <___vfiprintf_internal_r+0x900>
   4e2e8:	da802217 	ldw	r10,136(sp)
   4e2ec:	50800117 	ldw	r2,4(r10)
   4e2f0:	54800017 	ldw	r18,0(r10)
   4e2f4:	52800204 	addi	r10,r10,8
   4e2f8:	da802215 	stw	r10,136(sp)
   4e2fc:	1027883a 	mov	r19,r2
   4e300:	10022c16 	blt	r2,zero,4ebb4 <___vfiprintf_internal_r+0x10a0>
   4e304:	df001d83 	ldbu	fp,118(sp)
   4e308:	48007216 	blt	r9,zero,4e4d4 <___vfiprintf_internal_r+0x9c0>
   4e30c:	00ffdfc4 	movi	r3,-129
   4e310:	94c4b03a 	or	r2,r18,r19
   4e314:	a0e8703a 	and	r20,r20,r3
   4e318:	1000cc26 	beq	r2,zero,4e64c <___vfiprintf_internal_r+0xb38>
   4e31c:	98021026 	beq	r19,zero,4eb60 <___vfiprintf_internal_r+0x104c>
   4e320:	dc402415 	stw	r17,144(sp)
   4e324:	dc002515 	stw	r16,148(sp)
   4e328:	9823883a 	mov	r17,r19
   4e32c:	9021883a 	mov	r16,r18
   4e330:	dd401a04 	addi	r21,sp,104
   4e334:	4825883a 	mov	r18,r9
   4e338:	4027883a 	mov	r19,r8
   4e33c:	8009883a 	mov	r4,r16
   4e340:	880b883a 	mov	r5,r17
   4e344:	01800284 	movi	r6,10
   4e348:	000f883a 	mov	r7,zero
   4e34c:	004fef40 	call	4fef4 <__umoddi3>
   4e350:	10800c04 	addi	r2,r2,48
   4e354:	ad7fffc4 	addi	r21,r21,-1
   4e358:	8009883a 	mov	r4,r16
   4e35c:	880b883a 	mov	r5,r17
   4e360:	a8800005 	stb	r2,0(r21)
   4e364:	01800284 	movi	r6,10
   4e368:	000f883a 	mov	r7,zero
   4e36c:	004f97c0 	call	4f97c <__udivdi3>
   4e370:	1021883a 	mov	r16,r2
   4e374:	10c4b03a 	or	r2,r2,r3
   4e378:	1823883a 	mov	r17,r3
   4e37c:	103fef1e 	bne	r2,zero,4e33c <__alt_data_end+0xfffce33c>
   4e380:	dc402417 	ldw	r17,144(sp)
   4e384:	dc002517 	ldw	r16,148(sp)
   4e388:	9013883a 	mov	r9,r18
   4e38c:	9811883a 	mov	r8,r19
   4e390:	da801e17 	ldw	r10,120(sp)
   4e394:	5567c83a 	sub	r19,r10,r21
   4e398:	003ede06 	br	4df14 <__alt_data_end+0xfffcdf14>
   4e39c:	38803fcc 	andi	r2,r7,255
   4e3a0:	1080201c 	xori	r2,r2,128
   4e3a4:	10bfe004 	addi	r2,r2,-128
   4e3a8:	1002371e 	bne	r2,zero,4ec88 <___vfiprintf_internal_r+0x1174>
   4e3ac:	01000044 	movi	r4,1
   4e3b0:	01c00804 	movi	r7,32
   4e3b4:	80c00007 	ldb	r3,0(r16)
   4e3b8:	003e3506 	br	4dc90 <__alt_data_end+0xfffcdc90>
   4e3bc:	a5000054 	ori	r20,r20,1
   4e3c0:	80c00007 	ldb	r3,0(r16)
   4e3c4:	003e3206 	br	4dc90 <__alt_data_end+0xfffcdc90>
   4e3c8:	a5002014 	ori	r20,r20,128
   4e3cc:	80c00007 	ldb	r3,0(r16)
   4e3d0:	003e2f06 	br	4dc90 <__alt_data_end+0xfffcdc90>
   4e3d4:	8015883a 	mov	r10,r16
   4e3d8:	0023883a 	mov	r17,zero
   4e3dc:	18bff404 	addi	r2,r3,-48
   4e3e0:	50c00007 	ldb	r3,0(r10)
   4e3e4:	8c4002a4 	muli	r17,r17,10
   4e3e8:	84000044 	addi	r16,r16,1
   4e3ec:	8015883a 	mov	r10,r16
   4e3f0:	1463883a 	add	r17,r2,r17
   4e3f4:	18bff404 	addi	r2,r3,-48
   4e3f8:	30bff92e 	bgeu	r6,r2,4e3e0 <__alt_data_end+0xfffce3e0>
   4e3fc:	003e2506 	br	4dc94 <__alt_data_end+0xfffcdc94>
   4e400:	21003fcc 	andi	r4,r4,255
   4e404:	2002d41e 	bne	r4,zero,4ef58 <___vfiprintf_internal_r+0x1444>
   4e408:	a5000414 	ori	r20,r20,16
   4e40c:	a080080c 	andi	r2,r20,32
   4e410:	103fb51e 	bne	r2,zero,4e2e8 <__alt_data_end+0xfffce2e8>
   4e414:	a080040c 	andi	r2,r20,16
   4e418:	1001f826 	beq	r2,zero,4ebfc <___vfiprintf_internal_r+0x10e8>
   4e41c:	da802217 	ldw	r10,136(sp)
   4e420:	54800017 	ldw	r18,0(r10)
   4e424:	52800104 	addi	r10,r10,4
   4e428:	da802215 	stw	r10,136(sp)
   4e42c:	9027d7fa 	srai	r19,r18,31
   4e430:	9805883a 	mov	r2,r19
   4e434:	003fb206 	br	4e300 <__alt_data_end+0xfffce300>
   4e438:	21003fcc 	andi	r4,r4,255
   4e43c:	2002c41e 	bne	r4,zero,4ef50 <___vfiprintf_internal_r+0x143c>
   4e440:	a5000414 	ori	r20,r20,16
   4e444:	a080080c 	andi	r2,r20,32
   4e448:	103f5f1e 	bne	r2,zero,4e1c8 <__alt_data_end+0xfffce1c8>
   4e44c:	a080040c 	andi	r2,r20,16
   4e450:	10020f26 	beq	r2,zero,4ec90 <___vfiprintf_internal_r+0x117c>
   4e454:	da802217 	ldw	r10,136(sp)
   4e458:	d8001d85 	stb	zero,118(sp)
   4e45c:	0027883a 	mov	r19,zero
   4e460:	50800104 	addi	r2,r10,4
   4e464:	54800017 	ldw	r18,0(r10)
   4e468:	48021116 	blt	r9,zero,4ecb0 <___vfiprintf_internal_r+0x119c>
   4e46c:	00ffdfc4 	movi	r3,-129
   4e470:	d8802215 	stw	r2,136(sp)
   4e474:	a0e8703a 	and	r20,r20,r3
   4e478:	903f5e1e 	bne	r18,zero,4e1f4 <__alt_data_end+0xfffce1f4>
   4e47c:	0039883a 	mov	fp,zero
   4e480:	4802a626 	beq	r9,zero,4ef1c <___vfiprintf_internal_r+0x1408>
   4e484:	0025883a 	mov	r18,zero
   4e488:	0027883a 	mov	r19,zero
   4e48c:	003f5a06 	br	4e1f8 <__alt_data_end+0xfffce1f8>
   4e490:	21003fcc 	andi	r4,r4,255
   4e494:	20029f1e 	bne	r4,zero,4ef14 <___vfiprintf_internal_r+0x1400>
   4e498:	a5000414 	ori	r20,r20,16
   4e49c:	a080080c 	andi	r2,r20,32
   4e4a0:	10005e1e 	bne	r2,zero,4e61c <___vfiprintf_internal_r+0xb08>
   4e4a4:	a080040c 	andi	r2,r20,16
   4e4a8:	1001a21e 	bne	r2,zero,4eb34 <___vfiprintf_internal_r+0x1020>
   4e4ac:	a080100c 	andi	r2,r20,64
   4e4b0:	d8001d85 	stb	zero,118(sp)
   4e4b4:	da802217 	ldw	r10,136(sp)
   4e4b8:	1002231e 	bne	r2,zero,4ed48 <___vfiprintf_internal_r+0x1234>
   4e4bc:	50800104 	addi	r2,r10,4
   4e4c0:	54800017 	ldw	r18,0(r10)
   4e4c4:	0027883a 	mov	r19,zero
   4e4c8:	4801a00e 	bge	r9,zero,4eb4c <___vfiprintf_internal_r+0x1038>
   4e4cc:	d8802215 	stw	r2,136(sp)
   4e4d0:	0039883a 	mov	fp,zero
   4e4d4:	94c4b03a 	or	r2,r18,r19
   4e4d8:	103f901e 	bne	r2,zero,4e31c <__alt_data_end+0xfffce31c>
   4e4dc:	00800044 	movi	r2,1
   4e4e0:	10803fcc 	andi	r2,r2,255
   4e4e4:	00c00044 	movi	r3,1
   4e4e8:	10c05926 	beq	r2,r3,4e650 <___vfiprintf_internal_r+0xb3c>
   4e4ec:	00c00084 	movi	r3,2
   4e4f0:	10ffe41e 	bne	r2,r3,4e484 <__alt_data_end+0xfffce484>
   4e4f4:	0025883a 	mov	r18,zero
   4e4f8:	0027883a 	mov	r19,zero
   4e4fc:	00013d06 	br	4e9f4 <___vfiprintf_internal_r+0xee0>
   4e500:	21003fcc 	andi	r4,r4,255
   4e504:	2002811e 	bne	r4,zero,4ef0c <___vfiprintf_internal_r+0x13f8>
   4e508:	00800174 	movhi	r2,5
   4e50c:	108edf04 	addi	r2,r2,15228
   4e510:	d8802615 	stw	r2,152(sp)
   4e514:	a080080c 	andi	r2,r20,32
   4e518:	103f561e 	bne	r2,zero,4e274 <__alt_data_end+0xfffce274>
   4e51c:	a080040c 	andi	r2,r20,16
   4e520:	1001d126 	beq	r2,zero,4ec68 <___vfiprintf_internal_r+0x1154>
   4e524:	da802217 	ldw	r10,136(sp)
   4e528:	0027883a 	mov	r19,zero
   4e52c:	54800017 	ldw	r18,0(r10)
   4e530:	52800104 	addi	r10,r10,4
   4e534:	da802215 	stw	r10,136(sp)
   4e538:	003f5306 	br	4e288 <__alt_data_end+0xfffce288>
   4e53c:	da802217 	ldw	r10,136(sp)
   4e540:	d8001d85 	stb	zero,118(sp)
   4e544:	55400017 	ldw	r21,0(r10)
   4e548:	50c00104 	addi	r3,r10,4
   4e54c:	a8024226 	beq	r21,zero,4ee58 <___vfiprintf_internal_r+0x1344>
   4e550:	48021816 	blt	r9,zero,4edb4 <___vfiprintf_internal_r+0x12a0>
   4e554:	480d883a 	mov	r6,r9
   4e558:	000b883a 	mov	r5,zero
   4e55c:	a809883a 	mov	r4,r21
   4e560:	d8c02a15 	stw	r3,168(sp)
   4e564:	da002b15 	stw	r8,172(sp)
   4e568:	da402c15 	stw	r9,176(sp)
   4e56c:	004bd100 	call	4bd10 <memchr>
   4e570:	d8c02a17 	ldw	r3,168(sp)
   4e574:	da002b17 	ldw	r8,172(sp)
   4e578:	da402c17 	ldw	r9,176(sp)
   4e57c:	10024826 	beq	r2,zero,4eea0 <___vfiprintf_internal_r+0x138c>
   4e580:	1567c83a 	sub	r19,r2,r21
   4e584:	df001d83 	ldbu	fp,118(sp)
   4e588:	d8c02215 	stw	r3,136(sp)
   4e58c:	0013883a 	mov	r9,zero
   4e590:	003e6006 	br	4df14 <__alt_data_end+0xfffcdf14>
   4e594:	21003fcc 	andi	r4,r4,255
   4e598:	203fc026 	beq	r4,zero,4e49c <__alt_data_end+0xfffce49c>
   4e59c:	d9c01d85 	stb	r7,118(sp)
   4e5a0:	003fbe06 	br	4e49c <__alt_data_end+0xfffce49c>
   4e5a4:	da802217 	ldw	r10,136(sp)
   4e5a8:	54400017 	ldw	r17,0(r10)
   4e5ac:	50800104 	addi	r2,r10,4
   4e5b0:	883e3b16 	blt	r17,zero,4dea0 <__alt_data_end+0xfffcdea0>
   4e5b4:	d8802215 	stw	r2,136(sp)
   4e5b8:	80c00007 	ldb	r3,0(r16)
   4e5bc:	003db406 	br	4dc90 <__alt_data_end+0xfffcdc90>
   4e5c0:	01000044 	movi	r4,1
   4e5c4:	01c00ac4 	movi	r7,43
   4e5c8:	80c00007 	ldb	r3,0(r16)
   4e5cc:	003db006 	br	4dc90 <__alt_data_end+0xfffcdc90>
   4e5d0:	80c00007 	ldb	r3,0(r16)
   4e5d4:	82800044 	addi	r10,r16,1
   4e5d8:	1b423c26 	beq	r3,r13,4eecc <___vfiprintf_internal_r+0x13b8>
   4e5dc:	18bff404 	addi	r2,r3,-48
   4e5e0:	0013883a 	mov	r9,zero
   4e5e4:	30822b36 	bltu	r6,r2,4ee94 <___vfiprintf_internal_r+0x1380>
   4e5e8:	50c00007 	ldb	r3,0(r10)
   4e5ec:	4a4002a4 	muli	r9,r9,10
   4e5f0:	54000044 	addi	r16,r10,1
   4e5f4:	8015883a 	mov	r10,r16
   4e5f8:	4893883a 	add	r9,r9,r2
   4e5fc:	18bff404 	addi	r2,r3,-48
   4e600:	30bff92e 	bgeu	r6,r2,4e5e8 <__alt_data_end+0xfffce5e8>
   4e604:	483da30e 	bge	r9,zero,4dc94 <__alt_data_end+0xfffcdc94>
   4e608:	027fffc4 	movi	r9,-1
   4e60c:	003da106 	br	4dc94 <__alt_data_end+0xfffcdc94>
   4e610:	a5001014 	ori	r20,r20,64
   4e614:	80c00007 	ldb	r3,0(r16)
   4e618:	003d9d06 	br	4dc90 <__alt_data_end+0xfffcdc90>
   4e61c:	da802217 	ldw	r10,136(sp)
   4e620:	d8001d85 	stb	zero,118(sp)
   4e624:	50c00204 	addi	r3,r10,8
   4e628:	54800017 	ldw	r18,0(r10)
   4e62c:	54c00117 	ldw	r19,4(r10)
   4e630:	4801ca16 	blt	r9,zero,4ed5c <___vfiprintf_internal_r+0x1248>
   4e634:	013fdfc4 	movi	r4,-129
   4e638:	94c4b03a 	or	r2,r18,r19
   4e63c:	d8c02215 	stw	r3,136(sp)
   4e640:	a128703a 	and	r20,r20,r4
   4e644:	0039883a 	mov	fp,zero
   4e648:	103f341e 	bne	r2,zero,4e31c <__alt_data_end+0xfffce31c>
   4e64c:	483e2e26 	beq	r9,zero,4df08 <__alt_data_end+0xfffcdf08>
   4e650:	0025883a 	mov	r18,zero
   4e654:	94800c04 	addi	r18,r18,48
   4e658:	dc8019c5 	stb	r18,103(sp)
   4e65c:	dcc02717 	ldw	r19,156(sp)
   4e660:	dd4019c4 	addi	r21,sp,103
   4e664:	003e2b06 	br	4df14 <__alt_data_end+0xfffcdf14>
   4e668:	21003fcc 	andi	r4,r4,255
   4e66c:	2002361e 	bne	r4,zero,4ef48 <___vfiprintf_internal_r+0x1434>
   4e670:	1801c126 	beq	r3,zero,4ed78 <___vfiprintf_internal_r+0x1264>
   4e674:	04800044 	movi	r18,1
   4e678:	d8c01005 	stb	r3,64(sp)
   4e67c:	d8001d85 	stb	zero,118(sp)
   4e680:	9027883a 	mov	r19,r18
   4e684:	dd401004 	addi	r21,sp,64
   4e688:	003f1106 	br	4e2d0 <__alt_data_end+0xfffce2d0>
   4e68c:	d9402117 	ldw	r5,132(sp)
   4e690:	d9002017 	ldw	r4,128(sp)
   4e694:	d9801a04 	addi	r6,sp,104
   4e698:	d9c02b15 	stw	r7,172(sp)
   4e69c:	dbc02a15 	stw	r15,168(sp)
   4e6a0:	004da000 	call	4da00 <__sprint_r.part.0>
   4e6a4:	d9c02b17 	ldw	r7,172(sp)
   4e6a8:	dbc02a17 	ldw	r15,168(sp)
   4e6ac:	10006d1e 	bne	r2,zero,4e864 <___vfiprintf_internal_r+0xd50>
   4e6b0:	d9801b17 	ldw	r6,108(sp)
   4e6b4:	d8801c17 	ldw	r2,112(sp)
   4e6b8:	d811883a 	mov	r8,sp
   4e6bc:	31400044 	addi	r5,r6,1
   4e6c0:	003e3306 	br	4df90 <__alt_data_end+0xfffcdf90>
   4e6c4:	d9401b17 	ldw	r5,108(sp)
   4e6c8:	d8801c17 	ldw	r2,112(sp)
   4e6cc:	29000044 	addi	r4,r5,1
   4e6d0:	d8c01d87 	ldb	r3,118(sp)
   4e6d4:	183e4d26 	beq	r3,zero,4e00c <__alt_data_end+0xfffce00c>
   4e6d8:	00c00044 	movi	r3,1
   4e6dc:	d9401d84 	addi	r5,sp,118
   4e6e0:	10c5883a 	add	r2,r2,r3
   4e6e4:	41400015 	stw	r5,0(r8)
   4e6e8:	40c00115 	stw	r3,4(r8)
   4e6ec:	d8801c15 	stw	r2,112(sp)
   4e6f0:	d9001b15 	stw	r4,108(sp)
   4e6f4:	014001c4 	movi	r5,7
   4e6f8:	2900a90e 	bge	r5,r4,4e9a0 <___vfiprintf_internal_r+0xe8c>
   4e6fc:	1000da1e 	bne	r2,zero,4ea68 <___vfiprintf_internal_r+0xf54>
   4e700:	7000ab1e 	bne	r14,zero,4e9b0 <___vfiprintf_internal_r+0xe9c>
   4e704:	000b883a 	mov	r5,zero
   4e708:	1809883a 	mov	r4,r3
   4e70c:	d811883a 	mov	r8,sp
   4e710:	00c02004 	movi	r3,128
   4e714:	e0fe4d26 	beq	fp,r3,4e04c <__alt_data_end+0xfffce04c>
   4e718:	4cf9c83a 	sub	fp,r9,r19
   4e71c:	073e7b0e 	bge	zero,fp,4e10c <__alt_data_end+0xfffce10c>
   4e720:	01c00404 	movi	r7,16
   4e724:	3f01900e 	bge	r7,fp,4ed68 <___vfiprintf_internal_r+0x1254>
   4e728:	00c00174 	movhi	r3,5
   4e72c:	18cf4504 	addi	r3,r3,15636
   4e730:	d8c02415 	stw	r3,144(sp)
   4e734:	034001c4 	movi	r13,7
   4e738:	00000506 	br	4e750 <___vfiprintf_internal_r+0xc3c>
   4e73c:	29000084 	addi	r4,r5,2
   4e740:	42000204 	addi	r8,r8,8
   4e744:	180b883a 	mov	r5,r3
   4e748:	e73ffc04 	addi	fp,fp,-16
   4e74c:	3f000d0e 	bge	r7,fp,4e784 <___vfiprintf_internal_r+0xc70>
   4e750:	10800404 	addi	r2,r2,16
   4e754:	28c00044 	addi	r3,r5,1
   4e758:	45c00015 	stw	r23,0(r8)
   4e75c:	41c00115 	stw	r7,4(r8)
   4e760:	d8801c15 	stw	r2,112(sp)
   4e764:	d8c01b15 	stw	r3,108(sp)
   4e768:	68fff40e 	bge	r13,r3,4e73c <__alt_data_end+0xfffce73c>
   4e76c:	1000101e 	bne	r2,zero,4e7b0 <___vfiprintf_internal_r+0xc9c>
   4e770:	e73ffc04 	addi	fp,fp,-16
   4e774:	01000044 	movi	r4,1
   4e778:	000b883a 	mov	r5,zero
   4e77c:	d811883a 	mov	r8,sp
   4e780:	3f3ff316 	blt	r7,fp,4e750 <__alt_data_end+0xfffce750>
   4e784:	da802417 	ldw	r10,144(sp)
   4e788:	1705883a 	add	r2,r2,fp
   4e78c:	47000115 	stw	fp,4(r8)
   4e790:	42800015 	stw	r10,0(r8)
   4e794:	d8801c15 	stw	r2,112(sp)
   4e798:	d9001b15 	stw	r4,108(sp)
   4e79c:	00c001c4 	movi	r3,7
   4e7a0:	19003616 	blt	r3,r4,4e87c <___vfiprintf_internal_r+0xd68>
   4e7a4:	42000204 	addi	r8,r8,8
   4e7a8:	21000044 	addi	r4,r4,1
   4e7ac:	003e5706 	br	4e10c <__alt_data_end+0xfffce10c>
   4e7b0:	d9402117 	ldw	r5,132(sp)
   4e7b4:	d9002017 	ldw	r4,128(sp)
   4e7b8:	d9801a04 	addi	r6,sp,104
   4e7bc:	d9c02b15 	stw	r7,172(sp)
   4e7c0:	db402a15 	stw	r13,168(sp)
   4e7c4:	004da000 	call	4da00 <__sprint_r.part.0>
   4e7c8:	d9c02b17 	ldw	r7,172(sp)
   4e7cc:	db402a17 	ldw	r13,168(sp)
   4e7d0:	1000241e 	bne	r2,zero,4e864 <___vfiprintf_internal_r+0xd50>
   4e7d4:	d9401b17 	ldw	r5,108(sp)
   4e7d8:	d8801c17 	ldw	r2,112(sp)
   4e7dc:	d811883a 	mov	r8,sp
   4e7e0:	29000044 	addi	r4,r5,1
   4e7e4:	003fd806 	br	4e748 <__alt_data_end+0xfffce748>
   4e7e8:	d9401b17 	ldw	r5,108(sp)
   4e7ec:	00c00174 	movhi	r3,5
   4e7f0:	18cf4904 	addi	r3,r3,15652
   4e7f4:	d8c02415 	stw	r3,144(sp)
   4e7f8:	29400044 	addi	r5,r5,1
   4e7fc:	d8c02417 	ldw	r3,144(sp)
   4e800:	14c5883a 	add	r2,r2,r19
   4e804:	44c00115 	stw	r19,4(r8)
   4e808:	40c00015 	stw	r3,0(r8)
   4e80c:	d8801c15 	stw	r2,112(sp)
   4e810:	d9401b15 	stw	r5,108(sp)
   4e814:	00c001c4 	movi	r3,7
   4e818:	1940070e 	bge	r3,r5,4e838 <___vfiprintf_internal_r+0xd24>
   4e81c:	103e4826 	beq	r2,zero,4e140 <__alt_data_end+0xfffce140>
   4e820:	d9402117 	ldw	r5,132(sp)
   4e824:	d9002017 	ldw	r4,128(sp)
   4e828:	d9801a04 	addi	r6,sp,104
   4e82c:	004da000 	call	4da00 <__sprint_r.part.0>
   4e830:	10000c1e 	bne	r2,zero,4e864 <___vfiprintf_internal_r+0xd50>
   4e834:	d8801c17 	ldw	r2,112(sp)
   4e838:	8c80010e 	bge	r17,r18,4e840 <___vfiprintf_internal_r+0xd2c>
   4e83c:	9023883a 	mov	r17,r18
   4e840:	da802317 	ldw	r10,140(sp)
   4e844:	5455883a 	add	r10,r10,r17
   4e848:	da802315 	stw	r10,140(sp)
   4e84c:	103e4126 	beq	r2,zero,4e154 <__alt_data_end+0xfffce154>
   4e850:	d9402117 	ldw	r5,132(sp)
   4e854:	d9002017 	ldw	r4,128(sp)
   4e858:	d9801a04 	addi	r6,sp,104
   4e85c:	004da000 	call	4da00 <__sprint_r.part.0>
   4e860:	103e3c26 	beq	r2,zero,4e154 <__alt_data_end+0xfffce154>
   4e864:	dd002117 	ldw	r20,132(sp)
   4e868:	a080030b 	ldhu	r2,12(r20)
   4e86c:	1080100c 	andi	r2,r2,64
   4e870:	1001231e 	bne	r2,zero,4ed00 <___vfiprintf_internal_r+0x11ec>
   4e874:	d8802317 	ldw	r2,140(sp)
   4e878:	003d7b06 	br	4de68 <__alt_data_end+0xfffcde68>
   4e87c:	1000991e 	bne	r2,zero,4eae4 <___vfiprintf_internal_r+0xfd0>
   4e880:	00c00044 	movi	r3,1
   4e884:	9805883a 	mov	r2,r19
   4e888:	dd400015 	stw	r21,0(sp)
   4e88c:	dcc00115 	stw	r19,4(sp)
   4e890:	dcc01c15 	stw	r19,112(sp)
   4e894:	d8c01b15 	stw	r3,108(sp)
   4e898:	d811883a 	mov	r8,sp
   4e89c:	42000204 	addi	r8,r8,8
   4e8a0:	a2c0010c 	andi	r11,r20,4
   4e8a4:	583fe426 	beq	r11,zero,4e838 <__alt_data_end+0xfffce838>
   4e8a8:	8ca7c83a 	sub	r19,r17,r18
   4e8ac:	04ffe20e 	bge	zero,r19,4e838 <__alt_data_end+0xfffce838>
   4e8b0:	01c00404 	movi	r7,16
   4e8b4:	3cffcc0e 	bge	r7,r19,4e7e8 <__alt_data_end+0xfffce7e8>
   4e8b8:	02800174 	movhi	r10,5
   4e8bc:	528f4904 	addi	r10,r10,15652
   4e8c0:	d9001b17 	ldw	r4,108(sp)
   4e8c4:	da802415 	stw	r10,144(sp)
   4e8c8:	382b883a 	mov	r21,r7
   4e8cc:	050001c4 	movi	r20,7
   4e8d0:	df002017 	ldw	fp,128(sp)
   4e8d4:	00000506 	br	4e8ec <___vfiprintf_internal_r+0xdd8>
   4e8d8:	21400084 	addi	r5,r4,2
   4e8dc:	42000204 	addi	r8,r8,8
   4e8e0:	1809883a 	mov	r4,r3
   4e8e4:	9cfffc04 	addi	r19,r19,-16
   4e8e8:	acffc40e 	bge	r21,r19,4e7fc <__alt_data_end+0xfffce7fc>
   4e8ec:	10800404 	addi	r2,r2,16
   4e8f0:	20c00044 	addi	r3,r4,1
   4e8f4:	45800015 	stw	r22,0(r8)
   4e8f8:	45400115 	stw	r21,4(r8)
   4e8fc:	d8801c15 	stw	r2,112(sp)
   4e900:	d8c01b15 	stw	r3,108(sp)
   4e904:	a0fff40e 	bge	r20,r3,4e8d8 <__alt_data_end+0xfffce8d8>
   4e908:	1000041e 	bne	r2,zero,4e91c <___vfiprintf_internal_r+0xe08>
   4e90c:	01400044 	movi	r5,1
   4e910:	0009883a 	mov	r4,zero
   4e914:	d811883a 	mov	r8,sp
   4e918:	003ff206 	br	4e8e4 <__alt_data_end+0xfffce8e4>
   4e91c:	d9402117 	ldw	r5,132(sp)
   4e920:	d9801a04 	addi	r6,sp,104
   4e924:	e009883a 	mov	r4,fp
   4e928:	004da000 	call	4da00 <__sprint_r.part.0>
   4e92c:	103fcd1e 	bne	r2,zero,4e864 <__alt_data_end+0xfffce864>
   4e930:	d9001b17 	ldw	r4,108(sp)
   4e934:	d8801c17 	ldw	r2,112(sp)
   4e938:	d811883a 	mov	r8,sp
   4e93c:	21400044 	addi	r5,r4,1
   4e940:	003fe806 	br	4e8e4 <__alt_data_end+0xfffce8e4>
   4e944:	d9402117 	ldw	r5,132(sp)
   4e948:	d9002017 	ldw	r4,128(sp)
   4e94c:	d9801a04 	addi	r6,sp,104
   4e950:	d9c02b15 	stw	r7,172(sp)
   4e954:	db402a15 	stw	r13,168(sp)
   4e958:	004da000 	call	4da00 <__sprint_r.part.0>
   4e95c:	d9c02b17 	ldw	r7,172(sp)
   4e960:	db402a17 	ldw	r13,168(sp)
   4e964:	103fbf1e 	bne	r2,zero,4e864 <__alt_data_end+0xfffce864>
   4e968:	d9401b17 	ldw	r5,108(sp)
   4e96c:	d8801c17 	ldw	r2,112(sp)
   4e970:	d811883a 	mov	r8,sp
   4e974:	29800044 	addi	r6,r5,1
   4e978:	003dc406 	br	4e08c <__alt_data_end+0xfffce08c>
   4e97c:	1000d21e 	bne	r2,zero,4ecc8 <___vfiprintf_internal_r+0x11b4>
   4e980:	d8c01d87 	ldb	r3,118(sp)
   4e984:	18009526 	beq	r3,zero,4ebdc <___vfiprintf_internal_r+0x10c8>
   4e988:	00800044 	movi	r2,1
   4e98c:	d8c01d84 	addi	r3,sp,118
   4e990:	1009883a 	mov	r4,r2
   4e994:	d8c00015 	stw	r3,0(sp)
   4e998:	d8800115 	stw	r2,4(sp)
   4e99c:	d811883a 	mov	r8,sp
   4e9a0:	200b883a 	mov	r5,r4
   4e9a4:	42000204 	addi	r8,r8,8
   4e9a8:	21000044 	addi	r4,r4,1
   4e9ac:	003d9706 	br	4e00c <__alt_data_end+0xfffce00c>
   4e9b0:	d9001d04 	addi	r4,sp,116
   4e9b4:	00800084 	movi	r2,2
   4e9b8:	d9000015 	stw	r4,0(sp)
   4e9bc:	d8800115 	stw	r2,4(sp)
   4e9c0:	1809883a 	mov	r4,r3
   4e9c4:	d811883a 	mov	r8,sp
   4e9c8:	200b883a 	mov	r5,r4
   4e9cc:	42000204 	addi	r8,r8,8
   4e9d0:	21000044 	addi	r4,r4,1
   4e9d4:	003f4e06 	br	4e710 <__alt_data_end+0xfffce710>
   4e9d8:	d8001d85 	stb	zero,118(sp)
   4e9dc:	48005016 	blt	r9,zero,4eb20 <___vfiprintf_internal_r+0x100c>
   4e9e0:	00ffdfc4 	movi	r3,-129
   4e9e4:	94c4b03a 	or	r2,r18,r19
   4e9e8:	a0e8703a 	and	r20,r20,r3
   4e9ec:	103d4426 	beq	r2,zero,4df00 <__alt_data_end+0xfffcdf00>
   4e9f0:	0039883a 	mov	fp,zero
   4e9f4:	d9002617 	ldw	r4,152(sp)
   4e9f8:	dd401a04 	addi	r21,sp,104
   4e9fc:	908003cc 	andi	r2,r18,15
   4ea00:	9806973a 	slli	r3,r19,28
   4ea04:	2085883a 	add	r2,r4,r2
   4ea08:	9024d13a 	srli	r18,r18,4
   4ea0c:	10800003 	ldbu	r2,0(r2)
   4ea10:	9826d13a 	srli	r19,r19,4
   4ea14:	ad7fffc4 	addi	r21,r21,-1
   4ea18:	1ca4b03a 	or	r18,r3,r18
   4ea1c:	a8800005 	stb	r2,0(r21)
   4ea20:	94c4b03a 	or	r2,r18,r19
   4ea24:	103ff51e 	bne	r2,zero,4e9fc <__alt_data_end+0xfffce9fc>
   4ea28:	003e5906 	br	4e390 <__alt_data_end+0xfffce390>
   4ea2c:	d9402117 	ldw	r5,132(sp)
   4ea30:	d9002017 	ldw	r4,128(sp)
   4ea34:	d9801a04 	addi	r6,sp,104
   4ea38:	004da000 	call	4da00 <__sprint_r.part.0>
   4ea3c:	103f891e 	bne	r2,zero,4e864 <__alt_data_end+0xfffce864>
   4ea40:	d8801c17 	ldw	r2,112(sp)
   4ea44:	d811883a 	mov	r8,sp
   4ea48:	003f9506 	br	4e8a0 <__alt_data_end+0xfffce8a0>
   4ea4c:	d9402117 	ldw	r5,132(sp)
   4ea50:	d9002017 	ldw	r4,128(sp)
   4ea54:	d9801a04 	addi	r6,sp,104
   4ea58:	004da000 	call	4da00 <__sprint_r.part.0>
   4ea5c:	103f811e 	bne	r2,zero,4e864 <__alt_data_end+0xfffce864>
   4ea60:	d811883a 	mov	r8,sp
   4ea64:	003ced06 	br	4de1c <__alt_data_end+0xfffcde1c>
   4ea68:	d9402117 	ldw	r5,132(sp)
   4ea6c:	d9002017 	ldw	r4,128(sp)
   4ea70:	d9801a04 	addi	r6,sp,104
   4ea74:	da402c15 	stw	r9,176(sp)
   4ea78:	db802a15 	stw	r14,168(sp)
   4ea7c:	004da000 	call	4da00 <__sprint_r.part.0>
   4ea80:	da402c17 	ldw	r9,176(sp)
   4ea84:	db802a17 	ldw	r14,168(sp)
   4ea88:	103f761e 	bne	r2,zero,4e864 <__alt_data_end+0xfffce864>
   4ea8c:	d9401b17 	ldw	r5,108(sp)
   4ea90:	d8801c17 	ldw	r2,112(sp)
   4ea94:	d811883a 	mov	r8,sp
   4ea98:	29000044 	addi	r4,r5,1
   4ea9c:	003d5b06 	br	4e00c <__alt_data_end+0xfffce00c>
   4eaa0:	d9402117 	ldw	r5,132(sp)
   4eaa4:	d9002017 	ldw	r4,128(sp)
   4eaa8:	d9801a04 	addi	r6,sp,104
   4eaac:	da402c15 	stw	r9,176(sp)
   4eab0:	004da000 	call	4da00 <__sprint_r.part.0>
   4eab4:	da402c17 	ldw	r9,176(sp)
   4eab8:	103f6a1e 	bne	r2,zero,4e864 <__alt_data_end+0xfffce864>
   4eabc:	d9401b17 	ldw	r5,108(sp)
   4eac0:	d8801c17 	ldw	r2,112(sp)
   4eac4:	d811883a 	mov	r8,sp
   4eac8:	29000044 	addi	r4,r5,1
   4eacc:	003f1006 	br	4e710 <__alt_data_end+0xfffce710>
   4ead0:	1000c31e 	bne	r2,zero,4ede0 <___vfiprintf_internal_r+0x12cc>
   4ead4:	01000044 	movi	r4,1
   4ead8:	000b883a 	mov	r5,zero
   4eadc:	d811883a 	mov	r8,sp
   4eae0:	003f0d06 	br	4e718 <__alt_data_end+0xfffce718>
   4eae4:	d9402117 	ldw	r5,132(sp)
   4eae8:	d9002017 	ldw	r4,128(sp)
   4eaec:	d9801a04 	addi	r6,sp,104
   4eaf0:	004da000 	call	4da00 <__sprint_r.part.0>
   4eaf4:	103f5b1e 	bne	r2,zero,4e864 <__alt_data_end+0xfffce864>
   4eaf8:	d9001b17 	ldw	r4,108(sp)
   4eafc:	d8801c17 	ldw	r2,112(sp)
   4eb00:	d811883a 	mov	r8,sp
   4eb04:	21000044 	addi	r4,r4,1
   4eb08:	003d8006 	br	4e10c <__alt_data_end+0xfffce10c>
   4eb0c:	01000174 	movhi	r4,5
   4eb10:	210ee404 	addi	r4,r4,15248
   4eb14:	d9002615 	stw	r4,152(sp)
   4eb18:	d8c02215 	stw	r3,136(sp)
   4eb1c:	1029883a 	mov	r20,r2
   4eb20:	94c4b03a 	or	r2,r18,r19
   4eb24:	103fb21e 	bne	r2,zero,4e9f0 <__alt_data_end+0xfffce9f0>
   4eb28:	0039883a 	mov	fp,zero
   4eb2c:	00800084 	movi	r2,2
   4eb30:	003e6b06 	br	4e4e0 <__alt_data_end+0xfffce4e0>
   4eb34:	da802217 	ldw	r10,136(sp)
   4eb38:	d8001d85 	stb	zero,118(sp)
   4eb3c:	0027883a 	mov	r19,zero
   4eb40:	50800104 	addi	r2,r10,4
   4eb44:	54800017 	ldw	r18,0(r10)
   4eb48:	483e6016 	blt	r9,zero,4e4cc <__alt_data_end+0xfffce4cc>
   4eb4c:	00ffdfc4 	movi	r3,-129
   4eb50:	d8802215 	stw	r2,136(sp)
   4eb54:	a0e8703a 	and	r20,r20,r3
   4eb58:	0039883a 	mov	fp,zero
   4eb5c:	903ebb26 	beq	r18,zero,4e64c <__alt_data_end+0xfffce64c>
   4eb60:	00800244 	movi	r2,9
   4eb64:	14bdee36 	bltu	r2,r18,4e320 <__alt_data_end+0xfffce320>
   4eb68:	003eba06 	br	4e654 <__alt_data_end+0xfffce654>
   4eb6c:	00800c04 	movi	r2,48
   4eb70:	d8c01d45 	stb	r3,117(sp)
   4eb74:	d8801d05 	stb	r2,116(sp)
   4eb78:	d8001d85 	stb	zero,118(sp)
   4eb7c:	a0c00094 	ori	r3,r20,2
   4eb80:	4800a916 	blt	r9,zero,4ee28 <___vfiprintf_internal_r+0x1314>
   4eb84:	00bfdfc4 	movi	r2,-129
   4eb88:	a096703a 	and	r11,r20,r2
   4eb8c:	5d000094 	ori	r20,r11,2
   4eb90:	0039883a 	mov	fp,zero
   4eb94:	003f9706 	br	4e9f4 <__alt_data_end+0xfffce9f4>
   4eb98:	8025883a 	mov	r18,r16
   4eb9c:	003c2e06 	br	4dc58 <__alt_data_end+0xfffcdc58>
   4eba0:	00800174 	movhi	r2,5
   4eba4:	108ee404 	addi	r2,r2,15248
   4eba8:	0039883a 	mov	fp,zero
   4ebac:	d8802615 	stw	r2,152(sp)
   4ebb0:	003f9006 	br	4e9f4 <__alt_data_end+0xfffce9f4>
   4ebb4:	04a5c83a 	sub	r18,zero,r18
   4ebb8:	07000b44 	movi	fp,45
   4ebbc:	9004c03a 	cmpne	r2,r18,zero
   4ebc0:	04e7c83a 	sub	r19,zero,r19
   4ebc4:	df001d85 	stb	fp,118(sp)
   4ebc8:	98a7c83a 	sub	r19,r19,r2
   4ebcc:	48009f16 	blt	r9,zero,4ee4c <___vfiprintf_internal_r+0x1338>
   4ebd0:	00bfdfc4 	movi	r2,-129
   4ebd4:	a0a8703a 	and	r20,r20,r2
   4ebd8:	003dd006 	br	4e31c <__alt_data_end+0xfffce31c>
   4ebdc:	70004c26 	beq	r14,zero,4ed10 <___vfiprintf_internal_r+0x11fc>
   4ebe0:	00800084 	movi	r2,2
   4ebe4:	d8c01d04 	addi	r3,sp,116
   4ebe8:	d8c00015 	stw	r3,0(sp)
   4ebec:	d8800115 	stw	r2,4(sp)
   4ebf0:	01000044 	movi	r4,1
   4ebf4:	d811883a 	mov	r8,sp
   4ebf8:	003f7306 	br	4e9c8 <__alt_data_end+0xfffce9c8>
   4ebfc:	a080100c 	andi	r2,r20,64
   4ec00:	da802217 	ldw	r10,136(sp)
   4ec04:	103e0626 	beq	r2,zero,4e420 <__alt_data_end+0xfffce420>
   4ec08:	5480000f 	ldh	r18,0(r10)
   4ec0c:	52800104 	addi	r10,r10,4
   4ec10:	da802215 	stw	r10,136(sp)
   4ec14:	9027d7fa 	srai	r19,r18,31
   4ec18:	9805883a 	mov	r2,r19
   4ec1c:	003db806 	br	4e300 <__alt_data_end+0xfffce300>
   4ec20:	a080040c 	andi	r2,r20,16
   4ec24:	1000091e 	bne	r2,zero,4ec4c <___vfiprintf_internal_r+0x1138>
   4ec28:	a2c0100c 	andi	r11,r20,64
   4ec2c:	58000726 	beq	r11,zero,4ec4c <___vfiprintf_internal_r+0x1138>
   4ec30:	da802217 	ldw	r10,136(sp)
   4ec34:	50800017 	ldw	r2,0(r10)
   4ec38:	52800104 	addi	r10,r10,4
   4ec3c:	da802215 	stw	r10,136(sp)
   4ec40:	da802317 	ldw	r10,140(sp)
   4ec44:	1280000d 	sth	r10,0(r2)
   4ec48:	003be706 	br	4dbe8 <__alt_data_end+0xfffcdbe8>
   4ec4c:	da802217 	ldw	r10,136(sp)
   4ec50:	50800017 	ldw	r2,0(r10)
   4ec54:	52800104 	addi	r10,r10,4
   4ec58:	da802215 	stw	r10,136(sp)
   4ec5c:	da802317 	ldw	r10,140(sp)
   4ec60:	12800015 	stw	r10,0(r2)
   4ec64:	003be006 	br	4dbe8 <__alt_data_end+0xfffcdbe8>
   4ec68:	a080100c 	andi	r2,r20,64
   4ec6c:	da802217 	ldw	r10,136(sp)
   4ec70:	10003026 	beq	r2,zero,4ed34 <___vfiprintf_internal_r+0x1220>
   4ec74:	5480000b 	ldhu	r18,0(r10)
   4ec78:	52800104 	addi	r10,r10,4
   4ec7c:	0027883a 	mov	r19,zero
   4ec80:	da802215 	stw	r10,136(sp)
   4ec84:	003d8006 	br	4e288 <__alt_data_end+0xfffce288>
   4ec88:	80c00007 	ldb	r3,0(r16)
   4ec8c:	003c0006 	br	4dc90 <__alt_data_end+0xfffcdc90>
   4ec90:	a080100c 	andi	r2,r20,64
   4ec94:	d8001d85 	stb	zero,118(sp)
   4ec98:	da802217 	ldw	r10,136(sp)
   4ec9c:	1000201e 	bne	r2,zero,4ed20 <___vfiprintf_internal_r+0x120c>
   4eca0:	50800104 	addi	r2,r10,4
   4eca4:	54800017 	ldw	r18,0(r10)
   4eca8:	0027883a 	mov	r19,zero
   4ecac:	483def0e 	bge	r9,zero,4e46c <__alt_data_end+0xfffce46c>
   4ecb0:	94c6b03a 	or	r3,r18,r19
   4ecb4:	d8802215 	stw	r2,136(sp)
   4ecb8:	183d4e1e 	bne	r3,zero,4e1f4 <__alt_data_end+0xfffce1f4>
   4ecbc:	0039883a 	mov	fp,zero
   4ecc0:	0005883a 	mov	r2,zero
   4ecc4:	003e0606 	br	4e4e0 <__alt_data_end+0xfffce4e0>
   4ecc8:	d9402117 	ldw	r5,132(sp)
   4eccc:	d9002017 	ldw	r4,128(sp)
   4ecd0:	d9801a04 	addi	r6,sp,104
   4ecd4:	da402c15 	stw	r9,176(sp)
   4ecd8:	db802a15 	stw	r14,168(sp)
   4ecdc:	004da000 	call	4da00 <__sprint_r.part.0>
   4ece0:	da402c17 	ldw	r9,176(sp)
   4ece4:	db802a17 	ldw	r14,168(sp)
   4ece8:	103ede1e 	bne	r2,zero,4e864 <__alt_data_end+0xfffce864>
   4ecec:	d9401b17 	ldw	r5,108(sp)
   4ecf0:	d8801c17 	ldw	r2,112(sp)
   4ecf4:	d811883a 	mov	r8,sp
   4ecf8:	29000044 	addi	r4,r5,1
   4ecfc:	003e7406 	br	4e6d0 <__alt_data_end+0xfffce6d0>
   4ed00:	00bfffc4 	movi	r2,-1
   4ed04:	003c5806 	br	4de68 <__alt_data_end+0xfffcde68>
   4ed08:	d811883a 	mov	r8,sp
   4ed0c:	003ee806 	br	4e8b0 <__alt_data_end+0xfffce8b0>
   4ed10:	000b883a 	mov	r5,zero
   4ed14:	01000044 	movi	r4,1
   4ed18:	d811883a 	mov	r8,sp
   4ed1c:	003e7c06 	br	4e710 <__alt_data_end+0xfffce710>
   4ed20:	50800104 	addi	r2,r10,4
   4ed24:	5480000b 	ldhu	r18,0(r10)
   4ed28:	0027883a 	mov	r19,zero
   4ed2c:	483dcf0e 	bge	r9,zero,4e46c <__alt_data_end+0xfffce46c>
   4ed30:	003fdf06 	br	4ecb0 <__alt_data_end+0xfffcecb0>
   4ed34:	54800017 	ldw	r18,0(r10)
   4ed38:	52800104 	addi	r10,r10,4
   4ed3c:	0027883a 	mov	r19,zero
   4ed40:	da802215 	stw	r10,136(sp)
   4ed44:	003d5006 	br	4e288 <__alt_data_end+0xfffce288>
   4ed48:	50800104 	addi	r2,r10,4
   4ed4c:	5480000b 	ldhu	r18,0(r10)
   4ed50:	0027883a 	mov	r19,zero
   4ed54:	483f7d0e 	bge	r9,zero,4eb4c <__alt_data_end+0xfffceb4c>
   4ed58:	003ddc06 	br	4e4cc <__alt_data_end+0xfffce4cc>
   4ed5c:	d8c02215 	stw	r3,136(sp)
   4ed60:	0039883a 	mov	fp,zero
   4ed64:	003ddb06 	br	4e4d4 <__alt_data_end+0xfffce4d4>
   4ed68:	02800174 	movhi	r10,5
   4ed6c:	528f4504 	addi	r10,r10,15636
   4ed70:	da802415 	stw	r10,144(sp)
   4ed74:	003e8306 	br	4e784 <__alt_data_end+0xfffce784>
   4ed78:	d8801c17 	ldw	r2,112(sp)
   4ed7c:	dd002117 	ldw	r20,132(sp)
   4ed80:	103eb926 	beq	r2,zero,4e868 <__alt_data_end+0xfffce868>
   4ed84:	d9002017 	ldw	r4,128(sp)
   4ed88:	d9801a04 	addi	r6,sp,104
   4ed8c:	a00b883a 	mov	r5,r20
   4ed90:	004da000 	call	4da00 <__sprint_r.part.0>
   4ed94:	003eb406 	br	4e868 <__alt_data_end+0xfffce868>
   4ed98:	80c00043 	ldbu	r3,1(r16)
   4ed9c:	a5000814 	ori	r20,r20,32
   4eda0:	84000044 	addi	r16,r16,1
   4eda4:	18c03fcc 	andi	r3,r3,255
   4eda8:	18c0201c 	xori	r3,r3,128
   4edac:	18ffe004 	addi	r3,r3,-128
   4edb0:	003bb706 	br	4dc90 <__alt_data_end+0xfffcdc90>
   4edb4:	a809883a 	mov	r4,r21
   4edb8:	d8c02a15 	stw	r3,168(sp)
   4edbc:	da002b15 	stw	r8,172(sp)
   4edc0:	00464680 	call	46468 <strlen>
   4edc4:	d8c02a17 	ldw	r3,168(sp)
   4edc8:	1027883a 	mov	r19,r2
   4edcc:	df001d83 	ldbu	fp,118(sp)
   4edd0:	d8c02215 	stw	r3,136(sp)
   4edd4:	0013883a 	mov	r9,zero
   4edd8:	da002b17 	ldw	r8,172(sp)
   4eddc:	003c4d06 	br	4df14 <__alt_data_end+0xfffcdf14>
   4ede0:	d9402117 	ldw	r5,132(sp)
   4ede4:	d9002017 	ldw	r4,128(sp)
   4ede8:	d9801a04 	addi	r6,sp,104
   4edec:	da402c15 	stw	r9,176(sp)
   4edf0:	004da000 	call	4da00 <__sprint_r.part.0>
   4edf4:	da402c17 	ldw	r9,176(sp)
   4edf8:	103e9a1e 	bne	r2,zero,4e864 <__alt_data_end+0xfffce864>
   4edfc:	d9401b17 	ldw	r5,108(sp)
   4ee00:	d8801c17 	ldw	r2,112(sp)
   4ee04:	d811883a 	mov	r8,sp
   4ee08:	29000044 	addi	r4,r5,1
   4ee0c:	003e4206 	br	4e718 <__alt_data_end+0xfffce718>
   4ee10:	d9401b17 	ldw	r5,108(sp)
   4ee14:	01000174 	movhi	r4,5
   4ee18:	210f4904 	addi	r4,r4,15652
   4ee1c:	d9002415 	stw	r4,144(sp)
   4ee20:	29400044 	addi	r5,r5,1
   4ee24:	003c6d06 	br	4dfdc <__alt_data_end+0xfffcdfdc>
   4ee28:	0039883a 	mov	fp,zero
   4ee2c:	00800084 	movi	r2,2
   4ee30:	10803fcc 	andi	r2,r2,255
   4ee34:	01000044 	movi	r4,1
   4ee38:	11001e26 	beq	r2,r4,4eeb4 <___vfiprintf_internal_r+0x13a0>
   4ee3c:	01000084 	movi	r4,2
   4ee40:	11001e1e 	bne	r2,r4,4eebc <___vfiprintf_internal_r+0x13a8>
   4ee44:	1829883a 	mov	r20,r3
   4ee48:	003eea06 	br	4e9f4 <__alt_data_end+0xfffce9f4>
   4ee4c:	a007883a 	mov	r3,r20
   4ee50:	00800044 	movi	r2,1
   4ee54:	003ff606 	br	4ee30 <__alt_data_end+0xfffcee30>
   4ee58:	00800184 	movi	r2,6
   4ee5c:	1240012e 	bgeu	r2,r9,4ee64 <___vfiprintf_internal_r+0x1350>
   4ee60:	1013883a 	mov	r9,r2
   4ee64:	4827883a 	mov	r19,r9
   4ee68:	4825883a 	mov	r18,r9
   4ee6c:	48001516 	blt	r9,zero,4eec4 <___vfiprintf_internal_r+0x13b0>
   4ee70:	05400174 	movhi	r21,5
   4ee74:	d8c02215 	stw	r3,136(sp)
   4ee78:	ad4ee904 	addi	r21,r21,15268
   4ee7c:	003d1406 	br	4e2d0 <__alt_data_end+0xfffce2d0>
   4ee80:	02800174 	movhi	r10,5
   4ee84:	528f4504 	addi	r10,r10,15636
   4ee88:	da802415 	stw	r10,144(sp)
   4ee8c:	200d883a 	mov	r6,r4
   4ee90:	003c9106 	br	4e0d8 <__alt_data_end+0xfffce0d8>
   4ee94:	5021883a 	mov	r16,r10
   4ee98:	0013883a 	mov	r9,zero
   4ee9c:	003b7d06 	br	4dc94 <__alt_data_end+0xfffcdc94>
   4eea0:	4827883a 	mov	r19,r9
   4eea4:	df001d83 	ldbu	fp,118(sp)
   4eea8:	d8c02215 	stw	r3,136(sp)
   4eeac:	0013883a 	mov	r9,zero
   4eeb0:	003c1806 	br	4df14 <__alt_data_end+0xfffcdf14>
   4eeb4:	1829883a 	mov	r20,r3
   4eeb8:	003d1806 	br	4e31c <__alt_data_end+0xfffce31c>
   4eebc:	1829883a 	mov	r20,r3
   4eec0:	003ccd06 	br	4e1f8 <__alt_data_end+0xfffce1f8>
   4eec4:	0025883a 	mov	r18,zero
   4eec8:	003fe906 	br	4ee70 <__alt_data_end+0xfffcee70>
   4eecc:	d8802217 	ldw	r2,136(sp)
   4eed0:	80c00043 	ldbu	r3,1(r16)
   4eed4:	5021883a 	mov	r16,r10
   4eed8:	12400017 	ldw	r9,0(r2)
   4eedc:	10800104 	addi	r2,r2,4
   4eee0:	d8802215 	stw	r2,136(sp)
   4eee4:	483faf0e 	bge	r9,zero,4eda4 <__alt_data_end+0xfffceda4>
   4eee8:	18c03fcc 	andi	r3,r3,255
   4eeec:	18c0201c 	xori	r3,r3,128
   4eef0:	027fffc4 	movi	r9,-1
   4eef4:	18ffe004 	addi	r3,r3,-128
   4eef8:	003b6506 	br	4dc90 <__alt_data_end+0xfffcdc90>
   4eefc:	d9c01d85 	stb	r7,118(sp)
   4ef00:	003ca006 	br	4e184 <__alt_data_end+0xfffce184>
   4ef04:	d9c01d85 	stb	r7,118(sp)
   4ef08:	003cad06 	br	4e1c0 <__alt_data_end+0xfffce1c0>
   4ef0c:	d9c01d85 	stb	r7,118(sp)
   4ef10:	003d7d06 	br	4e508 <__alt_data_end+0xfffce508>
   4ef14:	d9c01d85 	stb	r7,118(sp)
   4ef18:	003d5f06 	br	4e498 <__alt_data_end+0xfffce498>
   4ef1c:	a080004c 	andi	r2,r20,1
   4ef20:	0039883a 	mov	fp,zero
   4ef24:	10000526 	beq	r2,zero,4ef3c <___vfiprintf_internal_r+0x1428>
   4ef28:	00800c04 	movi	r2,48
   4ef2c:	d88019c5 	stb	r2,103(sp)
   4ef30:	dcc02717 	ldw	r19,156(sp)
   4ef34:	dd4019c4 	addi	r21,sp,103
   4ef38:	003bf606 	br	4df14 <__alt_data_end+0xfffcdf14>
   4ef3c:	0027883a 	mov	r19,zero
   4ef40:	dd401a04 	addi	r21,sp,104
   4ef44:	003bf306 	br	4df14 <__alt_data_end+0xfffcdf14>
   4ef48:	d9c01d85 	stb	r7,118(sp)
   4ef4c:	003dc806 	br	4e670 <__alt_data_end+0xfffce670>
   4ef50:	d9c01d85 	stb	r7,118(sp)
   4ef54:	003d3a06 	br	4e440 <__alt_data_end+0xfffce440>
   4ef58:	d9c01d85 	stb	r7,118(sp)
   4ef5c:	003d2a06 	br	4e408 <__alt_data_end+0xfffce408>
   4ef60:	d9c01d85 	stb	r7,118(sp)
   4ef64:	003cde06 	br	4e2e0 <__alt_data_end+0xfffce2e0>
   4ef68:	d9c01d85 	stb	r7,118(sp)
   4ef6c:	003cbc06 	br	4e260 <__alt_data_end+0xfffce260>

0004ef70 <__vfiprintf_internal>:
   4ef70:	00800174 	movhi	r2,5
   4ef74:	10960604 	addi	r2,r2,22552
   4ef78:	300f883a 	mov	r7,r6
   4ef7c:	280d883a 	mov	r6,r5
   4ef80:	200b883a 	mov	r5,r4
   4ef84:	11000017 	ldw	r4,0(r2)
   4ef88:	004db141 	jmpi	4db14 <___vfiprintf_internal_r>

0004ef8c <__sbprintf>:
   4ef8c:	2880030b 	ldhu	r2,12(r5)
   4ef90:	2ac01917 	ldw	r11,100(r5)
   4ef94:	2a80038b 	ldhu	r10,14(r5)
   4ef98:	2a400717 	ldw	r9,28(r5)
   4ef9c:	2a000917 	ldw	r8,36(r5)
   4efa0:	defee204 	addi	sp,sp,-1144
   4efa4:	00c10004 	movi	r3,1024
   4efa8:	dc011a15 	stw	r16,1128(sp)
   4efac:	10bfff4c 	andi	r2,r2,65533
   4efb0:	2821883a 	mov	r16,r5
   4efb4:	d8cb883a 	add	r5,sp,r3
   4efb8:	dc811c15 	stw	r18,1136(sp)
   4efbc:	dc411b15 	stw	r17,1132(sp)
   4efc0:	dfc11d15 	stw	ra,1140(sp)
   4efc4:	2025883a 	mov	r18,r4
   4efc8:	d881030d 	sth	r2,1036(sp)
   4efcc:	dac11915 	stw	r11,1124(sp)
   4efd0:	da81038d 	sth	r10,1038(sp)
   4efd4:	da410715 	stw	r9,1052(sp)
   4efd8:	da010915 	stw	r8,1060(sp)
   4efdc:	dec10015 	stw	sp,1024(sp)
   4efe0:	dec10415 	stw	sp,1040(sp)
   4efe4:	d8c10215 	stw	r3,1032(sp)
   4efe8:	d8c10515 	stw	r3,1044(sp)
   4efec:	d8010615 	stw	zero,1048(sp)
   4eff0:	004db140 	call	4db14 <___vfiprintf_internal_r>
   4eff4:	1023883a 	mov	r17,r2
   4eff8:	10000416 	blt	r2,zero,4f00c <__sbprintf+0x80>
   4effc:	d9410004 	addi	r5,sp,1024
   4f000:	9009883a 	mov	r4,r18
   4f004:	004a3c80 	call	4a3c8 <_fflush_r>
   4f008:	10000d1e 	bne	r2,zero,4f040 <__sbprintf+0xb4>
   4f00c:	d881030b 	ldhu	r2,1036(sp)
   4f010:	1080100c 	andi	r2,r2,64
   4f014:	10000326 	beq	r2,zero,4f024 <__sbprintf+0x98>
   4f018:	8080030b 	ldhu	r2,12(r16)
   4f01c:	10801014 	ori	r2,r2,64
   4f020:	8080030d 	sth	r2,12(r16)
   4f024:	8805883a 	mov	r2,r17
   4f028:	dfc11d17 	ldw	ra,1140(sp)
   4f02c:	dc811c17 	ldw	r18,1136(sp)
   4f030:	dc411b17 	ldw	r17,1132(sp)
   4f034:	dc011a17 	ldw	r16,1128(sp)
   4f038:	dec11e04 	addi	sp,sp,1144
   4f03c:	f800283a 	ret
   4f040:	047fffc4 	movi	r17,-1
   4f044:	003ff106 	br	4f00c <__alt_data_end+0xfffcf00c>

0004f048 <_write_r>:
   4f048:	defffd04 	addi	sp,sp,-12
   4f04c:	2805883a 	mov	r2,r5
   4f050:	dc000015 	stw	r16,0(sp)
   4f054:	04000174 	movhi	r16,5
   4f058:	dc400115 	stw	r17,4(sp)
   4f05c:	300b883a 	mov	r5,r6
   4f060:	841cdc04 	addi	r16,r16,29552
   4f064:	2023883a 	mov	r17,r4
   4f068:	380d883a 	mov	r6,r7
   4f06c:	1009883a 	mov	r4,r2
   4f070:	dfc00215 	stw	ra,8(sp)
   4f074:	80000015 	stw	zero,0(r16)
   4f078:	00516fc0 	call	516fc <write>
   4f07c:	00ffffc4 	movi	r3,-1
   4f080:	10c00526 	beq	r2,r3,4f098 <_write_r+0x50>
   4f084:	dfc00217 	ldw	ra,8(sp)
   4f088:	dc400117 	ldw	r17,4(sp)
   4f08c:	dc000017 	ldw	r16,0(sp)
   4f090:	dec00304 	addi	sp,sp,12
   4f094:	f800283a 	ret
   4f098:	80c00017 	ldw	r3,0(r16)
   4f09c:	183ff926 	beq	r3,zero,4f084 <__alt_data_end+0xfffcf084>
   4f0a0:	88c00015 	stw	r3,0(r17)
   4f0a4:	003ff706 	br	4f084 <__alt_data_end+0xfffcf084>

0004f0a8 <_close_r>:
   4f0a8:	defffd04 	addi	sp,sp,-12
   4f0ac:	dc000015 	stw	r16,0(sp)
   4f0b0:	04000174 	movhi	r16,5
   4f0b4:	dc400115 	stw	r17,4(sp)
   4f0b8:	841cdc04 	addi	r16,r16,29552
   4f0bc:	2023883a 	mov	r17,r4
   4f0c0:	2809883a 	mov	r4,r5
   4f0c4:	dfc00215 	stw	ra,8(sp)
   4f0c8:	80000015 	stw	zero,0(r16)
   4f0cc:	0050eec0 	call	50eec <close>
   4f0d0:	00ffffc4 	movi	r3,-1
   4f0d4:	10c00526 	beq	r2,r3,4f0ec <_close_r+0x44>
   4f0d8:	dfc00217 	ldw	ra,8(sp)
   4f0dc:	dc400117 	ldw	r17,4(sp)
   4f0e0:	dc000017 	ldw	r16,0(sp)
   4f0e4:	dec00304 	addi	sp,sp,12
   4f0e8:	f800283a 	ret
   4f0ec:	80c00017 	ldw	r3,0(r16)
   4f0f0:	183ff926 	beq	r3,zero,4f0d8 <__alt_data_end+0xfffcf0d8>
   4f0f4:	88c00015 	stw	r3,0(r17)
   4f0f8:	003ff706 	br	4f0d8 <__alt_data_end+0xfffcf0d8>

0004f0fc <_calloc_r>:
   4f0fc:	298b383a 	mul	r5,r5,r6
   4f100:	defffe04 	addi	sp,sp,-8
   4f104:	dfc00115 	stw	ra,4(sp)
   4f108:	dc000015 	stw	r16,0(sp)
   4f10c:	004b5040 	call	4b504 <_malloc_r>
   4f110:	10002926 	beq	r2,zero,4f1b8 <_calloc_r+0xbc>
   4f114:	11bfff17 	ldw	r6,-4(r2)
   4f118:	1021883a 	mov	r16,r2
   4f11c:	00bfff04 	movi	r2,-4
   4f120:	308c703a 	and	r6,r6,r2
   4f124:	00c00904 	movi	r3,36
   4f128:	308d883a 	add	r6,r6,r2
   4f12c:	19801636 	bltu	r3,r6,4f188 <_calloc_r+0x8c>
   4f130:	008004c4 	movi	r2,19
   4f134:	11800b2e 	bgeu	r2,r6,4f164 <_calloc_r+0x68>
   4f138:	80000015 	stw	zero,0(r16)
   4f13c:	80000115 	stw	zero,4(r16)
   4f140:	008006c4 	movi	r2,27
   4f144:	11801a2e 	bgeu	r2,r6,4f1b0 <_calloc_r+0xb4>
   4f148:	80000215 	stw	zero,8(r16)
   4f14c:	80000315 	stw	zero,12(r16)
   4f150:	30c0151e 	bne	r6,r3,4f1a8 <_calloc_r+0xac>
   4f154:	80000415 	stw	zero,16(r16)
   4f158:	80800604 	addi	r2,r16,24
   4f15c:	80000515 	stw	zero,20(r16)
   4f160:	00000106 	br	4f168 <_calloc_r+0x6c>
   4f164:	8005883a 	mov	r2,r16
   4f168:	10000015 	stw	zero,0(r2)
   4f16c:	10000115 	stw	zero,4(r2)
   4f170:	10000215 	stw	zero,8(r2)
   4f174:	8005883a 	mov	r2,r16
   4f178:	dfc00117 	ldw	ra,4(sp)
   4f17c:	dc000017 	ldw	r16,0(sp)
   4f180:	dec00204 	addi	sp,sp,8
   4f184:	f800283a 	ret
   4f188:	000b883a 	mov	r5,zero
   4f18c:	8009883a 	mov	r4,r16
   4f190:	004c0980 	call	4c098 <memset>
   4f194:	8005883a 	mov	r2,r16
   4f198:	dfc00117 	ldw	ra,4(sp)
   4f19c:	dc000017 	ldw	r16,0(sp)
   4f1a0:	dec00204 	addi	sp,sp,8
   4f1a4:	f800283a 	ret
   4f1a8:	80800404 	addi	r2,r16,16
   4f1ac:	003fee06 	br	4f168 <__alt_data_end+0xfffcf168>
   4f1b0:	80800204 	addi	r2,r16,8
   4f1b4:	003fec06 	br	4f168 <__alt_data_end+0xfffcf168>
   4f1b8:	0005883a 	mov	r2,zero
   4f1bc:	003fee06 	br	4f178 <__alt_data_end+0xfffcf178>

0004f1c0 <_fclose_r>:
   4f1c0:	28003926 	beq	r5,zero,4f2a8 <_fclose_r+0xe8>
   4f1c4:	defffc04 	addi	sp,sp,-16
   4f1c8:	dc400115 	stw	r17,4(sp)
   4f1cc:	dc000015 	stw	r16,0(sp)
   4f1d0:	dfc00315 	stw	ra,12(sp)
   4f1d4:	dc800215 	stw	r18,8(sp)
   4f1d8:	2023883a 	mov	r17,r4
   4f1dc:	2821883a 	mov	r16,r5
   4f1e0:	20000226 	beq	r4,zero,4f1ec <_fclose_r+0x2c>
   4f1e4:	20800e17 	ldw	r2,56(r4)
   4f1e8:	10002726 	beq	r2,zero,4f288 <_fclose_r+0xc8>
   4f1ec:	8080030f 	ldh	r2,12(r16)
   4f1f0:	1000071e 	bne	r2,zero,4f210 <_fclose_r+0x50>
   4f1f4:	0005883a 	mov	r2,zero
   4f1f8:	dfc00317 	ldw	ra,12(sp)
   4f1fc:	dc800217 	ldw	r18,8(sp)
   4f200:	dc400117 	ldw	r17,4(sp)
   4f204:	dc000017 	ldw	r16,0(sp)
   4f208:	dec00404 	addi	sp,sp,16
   4f20c:	f800283a 	ret
   4f210:	800b883a 	mov	r5,r16
   4f214:	8809883a 	mov	r4,r17
   4f218:	004a1ac0 	call	4a1ac <__sflush_r>
   4f21c:	1025883a 	mov	r18,r2
   4f220:	80800b17 	ldw	r2,44(r16)
   4f224:	10000426 	beq	r2,zero,4f238 <_fclose_r+0x78>
   4f228:	81400717 	ldw	r5,28(r16)
   4f22c:	8809883a 	mov	r4,r17
   4f230:	103ee83a 	callr	r2
   4f234:	10001616 	blt	r2,zero,4f290 <_fclose_r+0xd0>
   4f238:	8080030b 	ldhu	r2,12(r16)
   4f23c:	1080200c 	andi	r2,r2,128
   4f240:	1000151e 	bne	r2,zero,4f298 <_fclose_r+0xd8>
   4f244:	81400c17 	ldw	r5,48(r16)
   4f248:	28000526 	beq	r5,zero,4f260 <_fclose_r+0xa0>
   4f24c:	80801004 	addi	r2,r16,64
   4f250:	28800226 	beq	r5,r2,4f25c <_fclose_r+0x9c>
   4f254:	8809883a 	mov	r4,r17
   4f258:	004a9180 	call	4a918 <_free_r>
   4f25c:	80000c15 	stw	zero,48(r16)
   4f260:	81401117 	ldw	r5,68(r16)
   4f264:	28000326 	beq	r5,zero,4f274 <_fclose_r+0xb4>
   4f268:	8809883a 	mov	r4,r17
   4f26c:	004a9180 	call	4a918 <_free_r>
   4f270:	80001115 	stw	zero,68(r16)
   4f274:	004a7b40 	call	4a7b4 <__sfp_lock_acquire>
   4f278:	8000030d 	sth	zero,12(r16)
   4f27c:	004a7b80 	call	4a7b8 <__sfp_lock_release>
   4f280:	9005883a 	mov	r2,r18
   4f284:	003fdc06 	br	4f1f8 <__alt_data_end+0xfffcf1f8>
   4f288:	004a7a40 	call	4a7a4 <__sinit>
   4f28c:	003fd706 	br	4f1ec <__alt_data_end+0xfffcf1ec>
   4f290:	04bfffc4 	movi	r18,-1
   4f294:	003fe806 	br	4f238 <__alt_data_end+0xfffcf238>
   4f298:	81400417 	ldw	r5,16(r16)
   4f29c:	8809883a 	mov	r4,r17
   4f2a0:	004a9180 	call	4a918 <_free_r>
   4f2a4:	003fe706 	br	4f244 <__alt_data_end+0xfffcf244>
   4f2a8:	0005883a 	mov	r2,zero
   4f2ac:	f800283a 	ret

0004f2b0 <fclose>:
   4f2b0:	00800174 	movhi	r2,5
   4f2b4:	10960604 	addi	r2,r2,22552
   4f2b8:	200b883a 	mov	r5,r4
   4f2bc:	11000017 	ldw	r4,0(r2)
   4f2c0:	004f1c01 	jmpi	4f1c0 <_fclose_r>

0004f2c4 <__fputwc>:
   4f2c4:	defff804 	addi	sp,sp,-32
   4f2c8:	dcc00415 	stw	r19,16(sp)
   4f2cc:	dc800315 	stw	r18,12(sp)
   4f2d0:	dc000115 	stw	r16,4(sp)
   4f2d4:	dfc00715 	stw	ra,28(sp)
   4f2d8:	dd400615 	stw	r21,24(sp)
   4f2dc:	dd000515 	stw	r20,20(sp)
   4f2e0:	dc400215 	stw	r17,8(sp)
   4f2e4:	2027883a 	mov	r19,r4
   4f2e8:	2825883a 	mov	r18,r5
   4f2ec:	3021883a 	mov	r16,r6
   4f2f0:	004b2f40 	call	4b2f4 <__locale_mb_cur_max>
   4f2f4:	00c00044 	movi	r3,1
   4f2f8:	10c03e26 	beq	r2,r3,4f3f4 <__fputwc+0x130>
   4f2fc:	81c01704 	addi	r7,r16,92
   4f300:	900d883a 	mov	r6,r18
   4f304:	d80b883a 	mov	r5,sp
   4f308:	9809883a 	mov	r4,r19
   4f30c:	004f7940 	call	4f794 <_wcrtomb_r>
   4f310:	1029883a 	mov	r20,r2
   4f314:	00bfffc4 	movi	r2,-1
   4f318:	a0802026 	beq	r20,r2,4f39c <__fputwc+0xd8>
   4f31c:	d9400003 	ldbu	r5,0(sp)
   4f320:	a0001c26 	beq	r20,zero,4f394 <__fputwc+0xd0>
   4f324:	0023883a 	mov	r17,zero
   4f328:	05400284 	movi	r21,10
   4f32c:	00000906 	br	4f354 <__fputwc+0x90>
   4f330:	80800017 	ldw	r2,0(r16)
   4f334:	11400005 	stb	r5,0(r2)
   4f338:	80c00017 	ldw	r3,0(r16)
   4f33c:	18c00044 	addi	r3,r3,1
   4f340:	80c00015 	stw	r3,0(r16)
   4f344:	8c400044 	addi	r17,r17,1
   4f348:	dc45883a 	add	r2,sp,r17
   4f34c:	8d00112e 	bgeu	r17,r20,4f394 <__fputwc+0xd0>
   4f350:	11400003 	ldbu	r5,0(r2)
   4f354:	80c00217 	ldw	r3,8(r16)
   4f358:	18ffffc4 	addi	r3,r3,-1
   4f35c:	80c00215 	stw	r3,8(r16)
   4f360:	183ff30e 	bge	r3,zero,4f330 <__alt_data_end+0xfffcf330>
   4f364:	80800617 	ldw	r2,24(r16)
   4f368:	18801916 	blt	r3,r2,4f3d0 <__fputwc+0x10c>
   4f36c:	80800017 	ldw	r2,0(r16)
   4f370:	11400005 	stb	r5,0(r2)
   4f374:	80800017 	ldw	r2,0(r16)
   4f378:	10c00003 	ldbu	r3,0(r2)
   4f37c:	10800044 	addi	r2,r2,1
   4f380:	1d402326 	beq	r3,r21,4f410 <__fputwc+0x14c>
   4f384:	80800015 	stw	r2,0(r16)
   4f388:	8c400044 	addi	r17,r17,1
   4f38c:	dc45883a 	add	r2,sp,r17
   4f390:	8d3fef36 	bltu	r17,r20,4f350 <__alt_data_end+0xfffcf350>
   4f394:	9005883a 	mov	r2,r18
   4f398:	00000406 	br	4f3ac <__fputwc+0xe8>
   4f39c:	80c0030b 	ldhu	r3,12(r16)
   4f3a0:	a005883a 	mov	r2,r20
   4f3a4:	18c01014 	ori	r3,r3,64
   4f3a8:	80c0030d 	sth	r3,12(r16)
   4f3ac:	dfc00717 	ldw	ra,28(sp)
   4f3b0:	dd400617 	ldw	r21,24(sp)
   4f3b4:	dd000517 	ldw	r20,20(sp)
   4f3b8:	dcc00417 	ldw	r19,16(sp)
   4f3bc:	dc800317 	ldw	r18,12(sp)
   4f3c0:	dc400217 	ldw	r17,8(sp)
   4f3c4:	dc000117 	ldw	r16,4(sp)
   4f3c8:	dec00804 	addi	sp,sp,32
   4f3cc:	f800283a 	ret
   4f3d0:	800d883a 	mov	r6,r16
   4f3d4:	29403fcc 	andi	r5,r5,255
   4f3d8:	9809883a 	mov	r4,r19
   4f3dc:	004f63c0 	call	4f63c <__swbuf_r>
   4f3e0:	10bfffe0 	cmpeqi	r2,r2,-1
   4f3e4:	10803fcc 	andi	r2,r2,255
   4f3e8:	103fd626 	beq	r2,zero,4f344 <__alt_data_end+0xfffcf344>
   4f3ec:	00bfffc4 	movi	r2,-1
   4f3f0:	003fee06 	br	4f3ac <__alt_data_end+0xfffcf3ac>
   4f3f4:	90ffffc4 	addi	r3,r18,-1
   4f3f8:	01003f84 	movi	r4,254
   4f3fc:	20ffbf36 	bltu	r4,r3,4f2fc <__alt_data_end+0xfffcf2fc>
   4f400:	900b883a 	mov	r5,r18
   4f404:	dc800005 	stb	r18,0(sp)
   4f408:	1029883a 	mov	r20,r2
   4f40c:	003fc506 	br	4f324 <__alt_data_end+0xfffcf324>
   4f410:	800d883a 	mov	r6,r16
   4f414:	a80b883a 	mov	r5,r21
   4f418:	9809883a 	mov	r4,r19
   4f41c:	004f63c0 	call	4f63c <__swbuf_r>
   4f420:	10bfffe0 	cmpeqi	r2,r2,-1
   4f424:	003fef06 	br	4f3e4 <__alt_data_end+0xfffcf3e4>

0004f428 <_fputwc_r>:
   4f428:	3080030b 	ldhu	r2,12(r6)
   4f42c:	10c8000c 	andi	r3,r2,8192
   4f430:	1800051e 	bne	r3,zero,4f448 <_fputwc_r+0x20>
   4f434:	30c01917 	ldw	r3,100(r6)
   4f438:	10880014 	ori	r2,r2,8192
   4f43c:	3080030d 	sth	r2,12(r6)
   4f440:	18880014 	ori	r2,r3,8192
   4f444:	30801915 	stw	r2,100(r6)
   4f448:	004f2c41 	jmpi	4f2c4 <__fputwc>

0004f44c <fputwc>:
   4f44c:	00800174 	movhi	r2,5
   4f450:	defffc04 	addi	sp,sp,-16
   4f454:	10960604 	addi	r2,r2,22552
   4f458:	dc000115 	stw	r16,4(sp)
   4f45c:	14000017 	ldw	r16,0(r2)
   4f460:	dc400215 	stw	r17,8(sp)
   4f464:	dfc00315 	stw	ra,12(sp)
   4f468:	2023883a 	mov	r17,r4
   4f46c:	80000226 	beq	r16,zero,4f478 <fputwc+0x2c>
   4f470:	80800e17 	ldw	r2,56(r16)
   4f474:	10001026 	beq	r2,zero,4f4b8 <fputwc+0x6c>
   4f478:	2880030b 	ldhu	r2,12(r5)
   4f47c:	10c8000c 	andi	r3,r2,8192
   4f480:	1800051e 	bne	r3,zero,4f498 <fputwc+0x4c>
   4f484:	28c01917 	ldw	r3,100(r5)
   4f488:	10880014 	ori	r2,r2,8192
   4f48c:	2880030d 	sth	r2,12(r5)
   4f490:	18880014 	ori	r2,r3,8192
   4f494:	28801915 	stw	r2,100(r5)
   4f498:	280d883a 	mov	r6,r5
   4f49c:	8009883a 	mov	r4,r16
   4f4a0:	880b883a 	mov	r5,r17
   4f4a4:	dfc00317 	ldw	ra,12(sp)
   4f4a8:	dc400217 	ldw	r17,8(sp)
   4f4ac:	dc000117 	ldw	r16,4(sp)
   4f4b0:	dec00404 	addi	sp,sp,16
   4f4b4:	004f2c41 	jmpi	4f2c4 <__fputwc>
   4f4b8:	8009883a 	mov	r4,r16
   4f4bc:	d9400015 	stw	r5,0(sp)
   4f4c0:	004a7a40 	call	4a7a4 <__sinit>
   4f4c4:	d9400017 	ldw	r5,0(sp)
   4f4c8:	003feb06 	br	4f478 <__alt_data_end+0xfffcf478>

0004f4cc <_fstat_r>:
   4f4cc:	defffd04 	addi	sp,sp,-12
   4f4d0:	2805883a 	mov	r2,r5
   4f4d4:	dc000015 	stw	r16,0(sp)
   4f4d8:	04000174 	movhi	r16,5
   4f4dc:	dc400115 	stw	r17,4(sp)
   4f4e0:	841cdc04 	addi	r16,r16,29552
   4f4e4:	2023883a 	mov	r17,r4
   4f4e8:	300b883a 	mov	r5,r6
   4f4ec:	1009883a 	mov	r4,r2
   4f4f0:	dfc00215 	stw	ra,8(sp)
   4f4f4:	80000015 	stw	zero,0(r16)
   4f4f8:	00510240 	call	51024 <fstat>
   4f4fc:	00ffffc4 	movi	r3,-1
   4f500:	10c00526 	beq	r2,r3,4f518 <_fstat_r+0x4c>
   4f504:	dfc00217 	ldw	ra,8(sp)
   4f508:	dc400117 	ldw	r17,4(sp)
   4f50c:	dc000017 	ldw	r16,0(sp)
   4f510:	dec00304 	addi	sp,sp,12
   4f514:	f800283a 	ret
   4f518:	80c00017 	ldw	r3,0(r16)
   4f51c:	183ff926 	beq	r3,zero,4f504 <__alt_data_end+0xfffcf504>
   4f520:	88c00015 	stw	r3,0(r17)
   4f524:	003ff706 	br	4f504 <__alt_data_end+0xfffcf504>

0004f528 <_isatty_r>:
   4f528:	defffd04 	addi	sp,sp,-12
   4f52c:	dc000015 	stw	r16,0(sp)
   4f530:	04000174 	movhi	r16,5
   4f534:	dc400115 	stw	r17,4(sp)
   4f538:	841cdc04 	addi	r16,r16,29552
   4f53c:	2023883a 	mov	r17,r4
   4f540:	2809883a 	mov	r4,r5
   4f544:	dfc00215 	stw	ra,8(sp)
   4f548:	80000015 	stw	zero,0(r16)
   4f54c:	00511100 	call	51110 <isatty>
   4f550:	00ffffc4 	movi	r3,-1
   4f554:	10c00526 	beq	r2,r3,4f56c <_isatty_r+0x44>
   4f558:	dfc00217 	ldw	ra,8(sp)
   4f55c:	dc400117 	ldw	r17,4(sp)
   4f560:	dc000017 	ldw	r16,0(sp)
   4f564:	dec00304 	addi	sp,sp,12
   4f568:	f800283a 	ret
   4f56c:	80c00017 	ldw	r3,0(r16)
   4f570:	183ff926 	beq	r3,zero,4f558 <__alt_data_end+0xfffcf558>
   4f574:	88c00015 	stw	r3,0(r17)
   4f578:	003ff706 	br	4f558 <__alt_data_end+0xfffcf558>

0004f57c <_lseek_r>:
   4f57c:	defffd04 	addi	sp,sp,-12
   4f580:	2805883a 	mov	r2,r5
   4f584:	dc000015 	stw	r16,0(sp)
   4f588:	04000174 	movhi	r16,5
   4f58c:	dc400115 	stw	r17,4(sp)
   4f590:	300b883a 	mov	r5,r6
   4f594:	841cdc04 	addi	r16,r16,29552
   4f598:	2023883a 	mov	r17,r4
   4f59c:	380d883a 	mov	r6,r7
   4f5a0:	1009883a 	mov	r4,r2
   4f5a4:	dfc00215 	stw	ra,8(sp)
   4f5a8:	80000015 	stw	zero,0(r16)
   4f5ac:	00512dc0 	call	512dc <lseek>
   4f5b0:	00ffffc4 	movi	r3,-1
   4f5b4:	10c00526 	beq	r2,r3,4f5cc <_lseek_r+0x50>
   4f5b8:	dfc00217 	ldw	ra,8(sp)
   4f5bc:	dc400117 	ldw	r17,4(sp)
   4f5c0:	dc000017 	ldw	r16,0(sp)
   4f5c4:	dec00304 	addi	sp,sp,12
   4f5c8:	f800283a 	ret
   4f5cc:	80c00017 	ldw	r3,0(r16)
   4f5d0:	183ff926 	beq	r3,zero,4f5b8 <__alt_data_end+0xfffcf5b8>
   4f5d4:	88c00015 	stw	r3,0(r17)
   4f5d8:	003ff706 	br	4f5b8 <__alt_data_end+0xfffcf5b8>

0004f5dc <_read_r>:
   4f5dc:	defffd04 	addi	sp,sp,-12
   4f5e0:	2805883a 	mov	r2,r5
   4f5e4:	dc000015 	stw	r16,0(sp)
   4f5e8:	04000174 	movhi	r16,5
   4f5ec:	dc400115 	stw	r17,4(sp)
   4f5f0:	300b883a 	mov	r5,r6
   4f5f4:	841cdc04 	addi	r16,r16,29552
   4f5f8:	2023883a 	mov	r17,r4
   4f5fc:	380d883a 	mov	r6,r7
   4f600:	1009883a 	mov	r4,r2
   4f604:	dfc00215 	stw	ra,8(sp)
   4f608:	80000015 	stw	zero,0(r16)
   4f60c:	00514b00 	call	514b0 <read>
   4f610:	00ffffc4 	movi	r3,-1
   4f614:	10c00526 	beq	r2,r3,4f62c <_read_r+0x50>
   4f618:	dfc00217 	ldw	ra,8(sp)
   4f61c:	dc400117 	ldw	r17,4(sp)
   4f620:	dc000017 	ldw	r16,0(sp)
   4f624:	dec00304 	addi	sp,sp,12
   4f628:	f800283a 	ret
   4f62c:	80c00017 	ldw	r3,0(r16)
   4f630:	183ff926 	beq	r3,zero,4f618 <__alt_data_end+0xfffcf618>
   4f634:	88c00015 	stw	r3,0(r17)
   4f638:	003ff706 	br	4f618 <__alt_data_end+0xfffcf618>

0004f63c <__swbuf_r>:
   4f63c:	defffb04 	addi	sp,sp,-20
   4f640:	dcc00315 	stw	r19,12(sp)
   4f644:	dc800215 	stw	r18,8(sp)
   4f648:	dc000015 	stw	r16,0(sp)
   4f64c:	dfc00415 	stw	ra,16(sp)
   4f650:	dc400115 	stw	r17,4(sp)
   4f654:	2025883a 	mov	r18,r4
   4f658:	2827883a 	mov	r19,r5
   4f65c:	3021883a 	mov	r16,r6
   4f660:	20000226 	beq	r4,zero,4f66c <__swbuf_r+0x30>
   4f664:	20800e17 	ldw	r2,56(r4)
   4f668:	10004226 	beq	r2,zero,4f774 <__swbuf_r+0x138>
   4f66c:	80800617 	ldw	r2,24(r16)
   4f670:	8100030b 	ldhu	r4,12(r16)
   4f674:	80800215 	stw	r2,8(r16)
   4f678:	2080020c 	andi	r2,r4,8
   4f67c:	10003626 	beq	r2,zero,4f758 <__swbuf_r+0x11c>
   4f680:	80c00417 	ldw	r3,16(r16)
   4f684:	18003426 	beq	r3,zero,4f758 <__swbuf_r+0x11c>
   4f688:	2088000c 	andi	r2,r4,8192
   4f68c:	9c403fcc 	andi	r17,r19,255
   4f690:	10001a26 	beq	r2,zero,4f6fc <__swbuf_r+0xc0>
   4f694:	80800017 	ldw	r2,0(r16)
   4f698:	81000517 	ldw	r4,20(r16)
   4f69c:	10c7c83a 	sub	r3,r2,r3
   4f6a0:	1900200e 	bge	r3,r4,4f724 <__swbuf_r+0xe8>
   4f6a4:	18c00044 	addi	r3,r3,1
   4f6a8:	81000217 	ldw	r4,8(r16)
   4f6ac:	11400044 	addi	r5,r2,1
   4f6b0:	81400015 	stw	r5,0(r16)
   4f6b4:	213fffc4 	addi	r4,r4,-1
   4f6b8:	81000215 	stw	r4,8(r16)
   4f6bc:	14c00005 	stb	r19,0(r2)
   4f6c0:	80800517 	ldw	r2,20(r16)
   4f6c4:	10c01e26 	beq	r2,r3,4f740 <__swbuf_r+0x104>
   4f6c8:	8080030b 	ldhu	r2,12(r16)
   4f6cc:	1080004c 	andi	r2,r2,1
   4f6d0:	10000226 	beq	r2,zero,4f6dc <__swbuf_r+0xa0>
   4f6d4:	00800284 	movi	r2,10
   4f6d8:	88801926 	beq	r17,r2,4f740 <__swbuf_r+0x104>
   4f6dc:	8805883a 	mov	r2,r17
   4f6e0:	dfc00417 	ldw	ra,16(sp)
   4f6e4:	dcc00317 	ldw	r19,12(sp)
   4f6e8:	dc800217 	ldw	r18,8(sp)
   4f6ec:	dc400117 	ldw	r17,4(sp)
   4f6f0:	dc000017 	ldw	r16,0(sp)
   4f6f4:	dec00504 	addi	sp,sp,20
   4f6f8:	f800283a 	ret
   4f6fc:	81401917 	ldw	r5,100(r16)
   4f700:	00b7ffc4 	movi	r2,-8193
   4f704:	21080014 	ori	r4,r4,8192
   4f708:	2884703a 	and	r2,r5,r2
   4f70c:	80801915 	stw	r2,100(r16)
   4f710:	80800017 	ldw	r2,0(r16)
   4f714:	8100030d 	sth	r4,12(r16)
   4f718:	81000517 	ldw	r4,20(r16)
   4f71c:	10c7c83a 	sub	r3,r2,r3
   4f720:	193fe016 	blt	r3,r4,4f6a4 <__alt_data_end+0xfffcf6a4>
   4f724:	800b883a 	mov	r5,r16
   4f728:	9009883a 	mov	r4,r18
   4f72c:	004a3c80 	call	4a3c8 <_fflush_r>
   4f730:	1000071e 	bne	r2,zero,4f750 <__swbuf_r+0x114>
   4f734:	80800017 	ldw	r2,0(r16)
   4f738:	00c00044 	movi	r3,1
   4f73c:	003fda06 	br	4f6a8 <__alt_data_end+0xfffcf6a8>
   4f740:	800b883a 	mov	r5,r16
   4f744:	9009883a 	mov	r4,r18
   4f748:	004a3c80 	call	4a3c8 <_fflush_r>
   4f74c:	103fe326 	beq	r2,zero,4f6dc <__alt_data_end+0xfffcf6dc>
   4f750:	00bfffc4 	movi	r2,-1
   4f754:	003fe206 	br	4f6e0 <__alt_data_end+0xfffcf6e0>
   4f758:	800b883a 	mov	r5,r16
   4f75c:	9009883a 	mov	r4,r18
   4f760:	00487d00 	call	487d0 <__swsetup_r>
   4f764:	103ffa1e 	bne	r2,zero,4f750 <__alt_data_end+0xfffcf750>
   4f768:	8100030b 	ldhu	r4,12(r16)
   4f76c:	80c00417 	ldw	r3,16(r16)
   4f770:	003fc506 	br	4f688 <__alt_data_end+0xfffcf688>
   4f774:	004a7a40 	call	4a7a4 <__sinit>
   4f778:	003fbc06 	br	4f66c <__alt_data_end+0xfffcf66c>

0004f77c <__swbuf>:
   4f77c:	00800174 	movhi	r2,5
   4f780:	10960604 	addi	r2,r2,22552
   4f784:	280d883a 	mov	r6,r5
   4f788:	200b883a 	mov	r5,r4
   4f78c:	11000017 	ldw	r4,0(r2)
   4f790:	004f63c1 	jmpi	4f63c <__swbuf_r>

0004f794 <_wcrtomb_r>:
   4f794:	defff604 	addi	sp,sp,-40
   4f798:	00800174 	movhi	r2,5
   4f79c:	dc800815 	stw	r18,32(sp)
   4f7a0:	dc400715 	stw	r17,28(sp)
   4f7a4:	dc000615 	stw	r16,24(sp)
   4f7a8:	10960a04 	addi	r2,r2,22568
   4f7ac:	dfc00915 	stw	ra,36(sp)
   4f7b0:	2021883a 	mov	r16,r4
   4f7b4:	3823883a 	mov	r17,r7
   4f7b8:	14800017 	ldw	r18,0(r2)
   4f7bc:	28001426 	beq	r5,zero,4f810 <_wcrtomb_r+0x7c>
   4f7c0:	d9400415 	stw	r5,16(sp)
   4f7c4:	d9800515 	stw	r6,20(sp)
   4f7c8:	004b2e80 	call	4b2e8 <__locale_charset>
   4f7cc:	d9800517 	ldw	r6,20(sp)
   4f7d0:	d9400417 	ldw	r5,16(sp)
   4f7d4:	100f883a 	mov	r7,r2
   4f7d8:	dc400015 	stw	r17,0(sp)
   4f7dc:	8009883a 	mov	r4,r16
   4f7e0:	903ee83a 	callr	r18
   4f7e4:	00ffffc4 	movi	r3,-1
   4f7e8:	10c0031e 	bne	r2,r3,4f7f8 <_wcrtomb_r+0x64>
   4f7ec:	88000015 	stw	zero,0(r17)
   4f7f0:	00c02284 	movi	r3,138
   4f7f4:	80c00015 	stw	r3,0(r16)
   4f7f8:	dfc00917 	ldw	ra,36(sp)
   4f7fc:	dc800817 	ldw	r18,32(sp)
   4f800:	dc400717 	ldw	r17,28(sp)
   4f804:	dc000617 	ldw	r16,24(sp)
   4f808:	dec00a04 	addi	sp,sp,40
   4f80c:	f800283a 	ret
   4f810:	004b2e80 	call	4b2e8 <__locale_charset>
   4f814:	100f883a 	mov	r7,r2
   4f818:	dc400015 	stw	r17,0(sp)
   4f81c:	000d883a 	mov	r6,zero
   4f820:	d9400104 	addi	r5,sp,4
   4f824:	8009883a 	mov	r4,r16
   4f828:	903ee83a 	callr	r18
   4f82c:	003fed06 	br	4f7e4 <__alt_data_end+0xfffcf7e4>

0004f830 <wcrtomb>:
   4f830:	defff604 	addi	sp,sp,-40
   4f834:	00800174 	movhi	r2,5
   4f838:	dc800615 	stw	r18,24(sp)
   4f83c:	dc400515 	stw	r17,20(sp)
   4f840:	10960604 	addi	r2,r2,22552
   4f844:	dfc00915 	stw	ra,36(sp)
   4f848:	dd000815 	stw	r20,32(sp)
   4f84c:	dcc00715 	stw	r19,28(sp)
   4f850:	dc000415 	stw	r16,16(sp)
   4f854:	3025883a 	mov	r18,r6
   4f858:	14400017 	ldw	r17,0(r2)
   4f85c:	20001926 	beq	r4,zero,4f8c4 <wcrtomb+0x94>
   4f860:	00800174 	movhi	r2,5
   4f864:	10960a04 	addi	r2,r2,22568
   4f868:	15000017 	ldw	r20,0(r2)
   4f86c:	2021883a 	mov	r16,r4
   4f870:	2827883a 	mov	r19,r5
   4f874:	004b2e80 	call	4b2e8 <__locale_charset>
   4f878:	100f883a 	mov	r7,r2
   4f87c:	dc800015 	stw	r18,0(sp)
   4f880:	980d883a 	mov	r6,r19
   4f884:	800b883a 	mov	r5,r16
   4f888:	8809883a 	mov	r4,r17
   4f88c:	a03ee83a 	callr	r20
   4f890:	00ffffc4 	movi	r3,-1
   4f894:	10c0031e 	bne	r2,r3,4f8a4 <wcrtomb+0x74>
   4f898:	90000015 	stw	zero,0(r18)
   4f89c:	00c02284 	movi	r3,138
   4f8a0:	88c00015 	stw	r3,0(r17)
   4f8a4:	dfc00917 	ldw	ra,36(sp)
   4f8a8:	dd000817 	ldw	r20,32(sp)
   4f8ac:	dcc00717 	ldw	r19,28(sp)
   4f8b0:	dc800617 	ldw	r18,24(sp)
   4f8b4:	dc400517 	ldw	r17,20(sp)
   4f8b8:	dc000417 	ldw	r16,16(sp)
   4f8bc:	dec00a04 	addi	sp,sp,40
   4f8c0:	f800283a 	ret
   4f8c4:	00800174 	movhi	r2,5
   4f8c8:	10960a04 	addi	r2,r2,22568
   4f8cc:	14000017 	ldw	r16,0(r2)
   4f8d0:	004b2e80 	call	4b2e8 <__locale_charset>
   4f8d4:	100f883a 	mov	r7,r2
   4f8d8:	dc800015 	stw	r18,0(sp)
   4f8dc:	000d883a 	mov	r6,zero
   4f8e0:	d9400104 	addi	r5,sp,4
   4f8e4:	8809883a 	mov	r4,r17
   4f8e8:	803ee83a 	callr	r16
   4f8ec:	003fe806 	br	4f890 <__alt_data_end+0xfffcf890>

0004f8f0 <__ascii_wctomb>:
   4f8f0:	28000526 	beq	r5,zero,4f908 <__ascii_wctomb+0x18>
   4f8f4:	00803fc4 	movi	r2,255
   4f8f8:	11800536 	bltu	r2,r6,4f910 <__ascii_wctomb+0x20>
   4f8fc:	29800005 	stb	r6,0(r5)
   4f900:	00800044 	movi	r2,1
   4f904:	f800283a 	ret
   4f908:	0005883a 	mov	r2,zero
   4f90c:	f800283a 	ret
   4f910:	00802284 	movi	r2,138
   4f914:	20800015 	stw	r2,0(r4)
   4f918:	00bfffc4 	movi	r2,-1
   4f91c:	f800283a 	ret

0004f920 <_wctomb_r>:
   4f920:	00800174 	movhi	r2,5
   4f924:	defff904 	addi	sp,sp,-28
   4f928:	10960a04 	addi	r2,r2,22568
   4f92c:	dfc00615 	stw	ra,24(sp)
   4f930:	dc400515 	stw	r17,20(sp)
   4f934:	dc000415 	stw	r16,16(sp)
   4f938:	3823883a 	mov	r17,r7
   4f93c:	14000017 	ldw	r16,0(r2)
   4f940:	d9000115 	stw	r4,4(sp)
   4f944:	d9400215 	stw	r5,8(sp)
   4f948:	d9800315 	stw	r6,12(sp)
   4f94c:	004b2e80 	call	4b2e8 <__locale_charset>
   4f950:	d9800317 	ldw	r6,12(sp)
   4f954:	d9400217 	ldw	r5,8(sp)
   4f958:	d9000117 	ldw	r4,4(sp)
   4f95c:	100f883a 	mov	r7,r2
   4f960:	dc400015 	stw	r17,0(sp)
   4f964:	803ee83a 	callr	r16
   4f968:	dfc00617 	ldw	ra,24(sp)
   4f96c:	dc400517 	ldw	r17,20(sp)
   4f970:	dc000417 	ldw	r16,16(sp)
   4f974:	dec00704 	addi	sp,sp,28
   4f978:	f800283a 	ret

0004f97c <__udivdi3>:
   4f97c:	defff504 	addi	sp,sp,-44
   4f980:	dcc00415 	stw	r19,16(sp)
   4f984:	dc000115 	stw	r16,4(sp)
   4f988:	dfc00a15 	stw	ra,40(sp)
   4f98c:	df000915 	stw	fp,36(sp)
   4f990:	ddc00815 	stw	r23,32(sp)
   4f994:	dd800715 	stw	r22,28(sp)
   4f998:	dd400615 	stw	r21,24(sp)
   4f99c:	dd000515 	stw	r20,20(sp)
   4f9a0:	dc800315 	stw	r18,12(sp)
   4f9a4:	dc400215 	stw	r17,8(sp)
   4f9a8:	2027883a 	mov	r19,r4
   4f9ac:	2821883a 	mov	r16,r5
   4f9b0:	3800411e 	bne	r7,zero,4fab8 <__udivdi3+0x13c>
   4f9b4:	3023883a 	mov	r17,r6
   4f9b8:	2025883a 	mov	r18,r4
   4f9bc:	2980522e 	bgeu	r5,r6,4fb08 <__udivdi3+0x18c>
   4f9c0:	00bfffd4 	movui	r2,65535
   4f9c4:	282d883a 	mov	r22,r5
   4f9c8:	1180a836 	bltu	r2,r6,4fc6c <__udivdi3+0x2f0>
   4f9cc:	00803fc4 	movi	r2,255
   4f9d0:	1185803a 	cmpltu	r2,r2,r6
   4f9d4:	100490fa 	slli	r2,r2,3
   4f9d8:	3086d83a 	srl	r3,r6,r2
   4f9dc:	01000174 	movhi	r4,5
   4f9e0:	210e9a04 	addi	r4,r4,14952
   4f9e4:	20c7883a 	add	r3,r4,r3
   4f9e8:	18c00003 	ldbu	r3,0(r3)
   4f9ec:	1885883a 	add	r2,r3,r2
   4f9f0:	00c00804 	movi	r3,32
   4f9f4:	1887c83a 	sub	r3,r3,r2
   4f9f8:	18000526 	beq	r3,zero,4fa10 <__udivdi3+0x94>
   4f9fc:	80e0983a 	sll	r16,r16,r3
   4fa00:	9884d83a 	srl	r2,r19,r2
   4fa04:	30e2983a 	sll	r17,r6,r3
   4fa08:	98e4983a 	sll	r18,r19,r3
   4fa0c:	142cb03a 	or	r22,r2,r16
   4fa10:	882ad43a 	srli	r21,r17,16
   4fa14:	b009883a 	mov	r4,r22
   4fa18:	8d3fffcc 	andi	r20,r17,65535
   4fa1c:	a80b883a 	mov	r5,r21
   4fa20:	004324c0 	call	4324c <__umodsi3>
   4fa24:	b009883a 	mov	r4,r22
   4fa28:	a80b883a 	mov	r5,r21
   4fa2c:	1027883a 	mov	r19,r2
   4fa30:	00431e80 	call	431e8 <__udivsi3>
   4fa34:	102d883a 	mov	r22,r2
   4fa38:	9826943a 	slli	r19,r19,16
   4fa3c:	9004d43a 	srli	r2,r18,16
   4fa40:	a5a1383a 	mul	r16,r20,r22
   4fa44:	14c4b03a 	or	r2,r2,r19
   4fa48:	1400052e 	bgeu	r2,r16,4fa60 <__udivdi3+0xe4>
   4fa4c:	1445883a 	add	r2,r2,r17
   4fa50:	b0ffffc4 	addi	r3,r22,-1
   4fa54:	14400136 	bltu	r2,r17,4fa5c <__udivdi3+0xe0>
   4fa58:	14012336 	bltu	r2,r16,4fee8 <__udivdi3+0x56c>
   4fa5c:	182d883a 	mov	r22,r3
   4fa60:	1421c83a 	sub	r16,r2,r16
   4fa64:	a80b883a 	mov	r5,r21
   4fa68:	8009883a 	mov	r4,r16
   4fa6c:	004324c0 	call	4324c <__umodsi3>
   4fa70:	1027883a 	mov	r19,r2
   4fa74:	a80b883a 	mov	r5,r21
   4fa78:	8009883a 	mov	r4,r16
   4fa7c:	00431e80 	call	431e8 <__udivsi3>
   4fa80:	9826943a 	slli	r19,r19,16
   4fa84:	a0a9383a 	mul	r20,r20,r2
   4fa88:	94bfffcc 	andi	r18,r18,65535
   4fa8c:	94e4b03a 	or	r18,r18,r19
   4fa90:	9500052e 	bgeu	r18,r20,4faa8 <__udivdi3+0x12c>
   4fa94:	8ca5883a 	add	r18,r17,r18
   4fa98:	10ffffc4 	addi	r3,r2,-1
   4fa9c:	9440f136 	bltu	r18,r17,4fe64 <__udivdi3+0x4e8>
   4faa0:	9500f02e 	bgeu	r18,r20,4fe64 <__udivdi3+0x4e8>
   4faa4:	10bfff84 	addi	r2,r2,-2
   4faa8:	b00c943a 	slli	r6,r22,16
   4faac:	0007883a 	mov	r3,zero
   4fab0:	3084b03a 	or	r2,r6,r2
   4fab4:	00005906 	br	4fc1c <__udivdi3+0x2a0>
   4fab8:	29c05636 	bltu	r5,r7,4fc14 <__udivdi3+0x298>
   4fabc:	00bfffd4 	movui	r2,65535
   4fac0:	11c0622e 	bgeu	r2,r7,4fc4c <__udivdi3+0x2d0>
   4fac4:	00804034 	movhi	r2,256
   4fac8:	10bfffc4 	addi	r2,r2,-1
   4facc:	11c0ee36 	bltu	r2,r7,4fe88 <__udivdi3+0x50c>
   4fad0:	00800404 	movi	r2,16
   4fad4:	3886d83a 	srl	r3,r7,r2
   4fad8:	01000174 	movhi	r4,5
   4fadc:	210e9a04 	addi	r4,r4,14952
   4fae0:	20c7883a 	add	r3,r4,r3
   4fae4:	18c00003 	ldbu	r3,0(r3)
   4fae8:	05400804 	movi	r21,32
   4faec:	1885883a 	add	r2,r3,r2
   4faf0:	a8abc83a 	sub	r21,r21,r2
   4faf4:	a800621e 	bne	r21,zero,4fc80 <__udivdi3+0x304>
   4faf8:	3c00e936 	bltu	r7,r16,4fea0 <__udivdi3+0x524>
   4fafc:	9985403a 	cmpgeu	r2,r19,r6
   4fb00:	0007883a 	mov	r3,zero
   4fb04:	00004506 	br	4fc1c <__udivdi3+0x2a0>
   4fb08:	3000041e 	bne	r6,zero,4fb1c <__udivdi3+0x1a0>
   4fb0c:	000b883a 	mov	r5,zero
   4fb10:	01000044 	movi	r4,1
   4fb14:	00431e80 	call	431e8 <__udivsi3>
   4fb18:	1023883a 	mov	r17,r2
   4fb1c:	00bfffd4 	movui	r2,65535
   4fb20:	14404e2e 	bgeu	r2,r17,4fc5c <__udivdi3+0x2e0>
   4fb24:	00804034 	movhi	r2,256
   4fb28:	10bfffc4 	addi	r2,r2,-1
   4fb2c:	1440d836 	bltu	r2,r17,4fe90 <__udivdi3+0x514>
   4fb30:	00800404 	movi	r2,16
   4fb34:	8886d83a 	srl	r3,r17,r2
   4fb38:	01000174 	movhi	r4,5
   4fb3c:	210e9a04 	addi	r4,r4,14952
   4fb40:	20c7883a 	add	r3,r4,r3
   4fb44:	18c00003 	ldbu	r3,0(r3)
   4fb48:	1885883a 	add	r2,r3,r2
   4fb4c:	00c00804 	movi	r3,32
   4fb50:	1887c83a 	sub	r3,r3,r2
   4fb54:	18008f1e 	bne	r3,zero,4fd94 <__udivdi3+0x418>
   4fb58:	882ad43a 	srli	r21,r17,16
   4fb5c:	8461c83a 	sub	r16,r16,r17
   4fb60:	8d3fffcc 	andi	r20,r17,65535
   4fb64:	00c00044 	movi	r3,1
   4fb68:	8009883a 	mov	r4,r16
   4fb6c:	a80b883a 	mov	r5,r21
   4fb70:	d8c00015 	stw	r3,0(sp)
   4fb74:	004324c0 	call	4324c <__umodsi3>
   4fb78:	8009883a 	mov	r4,r16
   4fb7c:	a80b883a 	mov	r5,r21
   4fb80:	1027883a 	mov	r19,r2
   4fb84:	00431e80 	call	431e8 <__udivsi3>
   4fb88:	9826943a 	slli	r19,r19,16
   4fb8c:	9008d43a 	srli	r4,r18,16
   4fb90:	1521383a 	mul	r16,r2,r20
   4fb94:	102d883a 	mov	r22,r2
   4fb98:	24c8b03a 	or	r4,r4,r19
   4fb9c:	d8c00017 	ldw	r3,0(sp)
   4fba0:	2400052e 	bgeu	r4,r16,4fbb8 <__udivdi3+0x23c>
   4fba4:	2449883a 	add	r4,r4,r17
   4fba8:	b0bfffc4 	addi	r2,r22,-1
   4fbac:	24400136 	bltu	r4,r17,4fbb4 <__udivdi3+0x238>
   4fbb0:	2400ca36 	bltu	r4,r16,4fedc <__udivdi3+0x560>
   4fbb4:	102d883a 	mov	r22,r2
   4fbb8:	2421c83a 	sub	r16,r4,r16
   4fbbc:	a80b883a 	mov	r5,r21
   4fbc0:	8009883a 	mov	r4,r16
   4fbc4:	d8c00015 	stw	r3,0(sp)
   4fbc8:	004324c0 	call	4324c <__umodsi3>
   4fbcc:	1027883a 	mov	r19,r2
   4fbd0:	a80b883a 	mov	r5,r21
   4fbd4:	8009883a 	mov	r4,r16
   4fbd8:	00431e80 	call	431e8 <__udivsi3>
   4fbdc:	9826943a 	slli	r19,r19,16
   4fbe0:	1529383a 	mul	r20,r2,r20
   4fbe4:	94bfffcc 	andi	r18,r18,65535
   4fbe8:	94e4b03a 	or	r18,r18,r19
   4fbec:	d8c00017 	ldw	r3,0(sp)
   4fbf0:	9500052e 	bgeu	r18,r20,4fc08 <__udivdi3+0x28c>
   4fbf4:	8ca5883a 	add	r18,r17,r18
   4fbf8:	113fffc4 	addi	r4,r2,-1
   4fbfc:	94409736 	bltu	r18,r17,4fe5c <__udivdi3+0x4e0>
   4fc00:	9500962e 	bgeu	r18,r20,4fe5c <__udivdi3+0x4e0>
   4fc04:	10bfff84 	addi	r2,r2,-2
   4fc08:	b00c943a 	slli	r6,r22,16
   4fc0c:	3084b03a 	or	r2,r6,r2
   4fc10:	00000206 	br	4fc1c <__udivdi3+0x2a0>
   4fc14:	0007883a 	mov	r3,zero
   4fc18:	0005883a 	mov	r2,zero
   4fc1c:	dfc00a17 	ldw	ra,40(sp)
   4fc20:	df000917 	ldw	fp,36(sp)
   4fc24:	ddc00817 	ldw	r23,32(sp)
   4fc28:	dd800717 	ldw	r22,28(sp)
   4fc2c:	dd400617 	ldw	r21,24(sp)
   4fc30:	dd000517 	ldw	r20,20(sp)
   4fc34:	dcc00417 	ldw	r19,16(sp)
   4fc38:	dc800317 	ldw	r18,12(sp)
   4fc3c:	dc400217 	ldw	r17,8(sp)
   4fc40:	dc000117 	ldw	r16,4(sp)
   4fc44:	dec00b04 	addi	sp,sp,44
   4fc48:	f800283a 	ret
   4fc4c:	00803fc4 	movi	r2,255
   4fc50:	11c5803a 	cmpltu	r2,r2,r7
   4fc54:	100490fa 	slli	r2,r2,3
   4fc58:	003f9e06 	br	4fad4 <__alt_data_end+0xfffcfad4>
   4fc5c:	00803fc4 	movi	r2,255
   4fc60:	1445803a 	cmpltu	r2,r2,r17
   4fc64:	100490fa 	slli	r2,r2,3
   4fc68:	003fb206 	br	4fb34 <__alt_data_end+0xfffcfb34>
   4fc6c:	00804034 	movhi	r2,256
   4fc70:	10bfffc4 	addi	r2,r2,-1
   4fc74:	11808836 	bltu	r2,r6,4fe98 <__udivdi3+0x51c>
   4fc78:	00800404 	movi	r2,16
   4fc7c:	003f5606 	br	4f9d8 <__alt_data_end+0xfffcf9d8>
   4fc80:	30aed83a 	srl	r23,r6,r2
   4fc84:	3d4e983a 	sll	r7,r7,r21
   4fc88:	80acd83a 	srl	r22,r16,r2
   4fc8c:	9884d83a 	srl	r2,r19,r2
   4fc90:	3deeb03a 	or	r23,r7,r23
   4fc94:	b824d43a 	srli	r18,r23,16
   4fc98:	8560983a 	sll	r16,r16,r21
   4fc9c:	b009883a 	mov	r4,r22
   4fca0:	900b883a 	mov	r5,r18
   4fca4:	3568983a 	sll	r20,r6,r21
   4fca8:	1420b03a 	or	r16,r2,r16
   4fcac:	004324c0 	call	4324c <__umodsi3>
   4fcb0:	b009883a 	mov	r4,r22
   4fcb4:	900b883a 	mov	r5,r18
   4fcb8:	1023883a 	mov	r17,r2
   4fcbc:	00431e80 	call	431e8 <__udivsi3>
   4fcc0:	8808943a 	slli	r4,r17,16
   4fcc4:	bf3fffcc 	andi	fp,r23,65535
   4fcc8:	8006d43a 	srli	r3,r16,16
   4fccc:	e0a3383a 	mul	r17,fp,r2
   4fcd0:	100d883a 	mov	r6,r2
   4fcd4:	1906b03a 	or	r3,r3,r4
   4fcd8:	1c40042e 	bgeu	r3,r17,4fcec <__udivdi3+0x370>
   4fcdc:	1dc7883a 	add	r3,r3,r23
   4fce0:	10bfffc4 	addi	r2,r2,-1
   4fce4:	1dc0752e 	bgeu	r3,r23,4febc <__udivdi3+0x540>
   4fce8:	100d883a 	mov	r6,r2
   4fcec:	1c63c83a 	sub	r17,r3,r17
   4fcf0:	900b883a 	mov	r5,r18
   4fcf4:	8809883a 	mov	r4,r17
   4fcf8:	d9800015 	stw	r6,0(sp)
   4fcfc:	004324c0 	call	4324c <__umodsi3>
   4fd00:	102d883a 	mov	r22,r2
   4fd04:	8809883a 	mov	r4,r17
   4fd08:	900b883a 	mov	r5,r18
   4fd0c:	00431e80 	call	431e8 <__udivsi3>
   4fd10:	b02c943a 	slli	r22,r22,16
   4fd14:	e089383a 	mul	r4,fp,r2
   4fd18:	843fffcc 	andi	r16,r16,65535
   4fd1c:	85a0b03a 	or	r16,r16,r22
   4fd20:	d9800017 	ldw	r6,0(sp)
   4fd24:	8100042e 	bgeu	r16,r4,4fd38 <__udivdi3+0x3bc>
   4fd28:	85e1883a 	add	r16,r16,r23
   4fd2c:	10ffffc4 	addi	r3,r2,-1
   4fd30:	85c05e2e 	bgeu	r16,r23,4feac <__udivdi3+0x530>
   4fd34:	1805883a 	mov	r2,r3
   4fd38:	300c943a 	slli	r6,r6,16
   4fd3c:	a17fffcc 	andi	r5,r20,65535
   4fd40:	a028d43a 	srli	r20,r20,16
   4fd44:	3084b03a 	or	r2,r6,r2
   4fd48:	10ffffcc 	andi	r3,r2,65535
   4fd4c:	100cd43a 	srli	r6,r2,16
   4fd50:	194f383a 	mul	r7,r3,r5
   4fd54:	1d07383a 	mul	r3,r3,r20
   4fd58:	314b383a 	mul	r5,r6,r5
   4fd5c:	3810d43a 	srli	r8,r7,16
   4fd60:	8121c83a 	sub	r16,r16,r4
   4fd64:	1947883a 	add	r3,r3,r5
   4fd68:	40c7883a 	add	r3,r8,r3
   4fd6c:	350d383a 	mul	r6,r6,r20
   4fd70:	1940022e 	bgeu	r3,r5,4fd7c <__udivdi3+0x400>
   4fd74:	01000074 	movhi	r4,1
   4fd78:	310d883a 	add	r6,r6,r4
   4fd7c:	1828d43a 	srli	r20,r3,16
   4fd80:	a18d883a 	add	r6,r20,r6
   4fd84:	81803e36 	bltu	r16,r6,4fe80 <__udivdi3+0x504>
   4fd88:	81803826 	beq	r16,r6,4fe6c <__udivdi3+0x4f0>
   4fd8c:	0007883a 	mov	r3,zero
   4fd90:	003fa206 	br	4fc1c <__alt_data_end+0xfffcfc1c>
   4fd94:	88e2983a 	sll	r17,r17,r3
   4fd98:	80a8d83a 	srl	r20,r16,r2
   4fd9c:	80e0983a 	sll	r16,r16,r3
   4fda0:	882ad43a 	srli	r21,r17,16
   4fda4:	9884d83a 	srl	r2,r19,r2
   4fda8:	a009883a 	mov	r4,r20
   4fdac:	a80b883a 	mov	r5,r21
   4fdb0:	142eb03a 	or	r23,r2,r16
   4fdb4:	98e4983a 	sll	r18,r19,r3
   4fdb8:	004324c0 	call	4324c <__umodsi3>
   4fdbc:	a009883a 	mov	r4,r20
   4fdc0:	a80b883a 	mov	r5,r21
   4fdc4:	1021883a 	mov	r16,r2
   4fdc8:	00431e80 	call	431e8 <__udivsi3>
   4fdcc:	1039883a 	mov	fp,r2
   4fdd0:	8d3fffcc 	andi	r20,r17,65535
   4fdd4:	8020943a 	slli	r16,r16,16
   4fdd8:	b804d43a 	srli	r2,r23,16
   4fddc:	a72d383a 	mul	r22,r20,fp
   4fde0:	1404b03a 	or	r2,r2,r16
   4fde4:	1580062e 	bgeu	r2,r22,4fe00 <__udivdi3+0x484>
   4fde8:	1445883a 	add	r2,r2,r17
   4fdec:	e0ffffc4 	addi	r3,fp,-1
   4fdf0:	14403836 	bltu	r2,r17,4fed4 <__udivdi3+0x558>
   4fdf4:	1580372e 	bgeu	r2,r22,4fed4 <__udivdi3+0x558>
   4fdf8:	e73fff84 	addi	fp,fp,-2
   4fdfc:	1445883a 	add	r2,r2,r17
   4fe00:	15adc83a 	sub	r22,r2,r22
   4fe04:	a80b883a 	mov	r5,r21
   4fe08:	b009883a 	mov	r4,r22
   4fe0c:	004324c0 	call	4324c <__umodsi3>
   4fe10:	1027883a 	mov	r19,r2
   4fe14:	b009883a 	mov	r4,r22
   4fe18:	a80b883a 	mov	r5,r21
   4fe1c:	00431e80 	call	431e8 <__udivsi3>
   4fe20:	9826943a 	slli	r19,r19,16
   4fe24:	a0a1383a 	mul	r16,r20,r2
   4fe28:	b93fffcc 	andi	r4,r23,65535
   4fe2c:	24c8b03a 	or	r4,r4,r19
   4fe30:	2400062e 	bgeu	r4,r16,4fe4c <__udivdi3+0x4d0>
   4fe34:	2449883a 	add	r4,r4,r17
   4fe38:	10ffffc4 	addi	r3,r2,-1
   4fe3c:	24402336 	bltu	r4,r17,4fecc <__udivdi3+0x550>
   4fe40:	2400222e 	bgeu	r4,r16,4fecc <__udivdi3+0x550>
   4fe44:	10bfff84 	addi	r2,r2,-2
   4fe48:	2449883a 	add	r4,r4,r17
   4fe4c:	e038943a 	slli	fp,fp,16
   4fe50:	2421c83a 	sub	r16,r4,r16
   4fe54:	e086b03a 	or	r3,fp,r2
   4fe58:	003f4306 	br	4fb68 <__alt_data_end+0xfffcfb68>
   4fe5c:	2005883a 	mov	r2,r4
   4fe60:	003f6906 	br	4fc08 <__alt_data_end+0xfffcfc08>
   4fe64:	1805883a 	mov	r2,r3
   4fe68:	003f0f06 	br	4faa8 <__alt_data_end+0xfffcfaa8>
   4fe6c:	1806943a 	slli	r3,r3,16
   4fe70:	9d66983a 	sll	r19,r19,r21
   4fe74:	39ffffcc 	andi	r7,r7,65535
   4fe78:	19c7883a 	add	r3,r3,r7
   4fe7c:	98ffc32e 	bgeu	r19,r3,4fd8c <__alt_data_end+0xfffcfd8c>
   4fe80:	10bfffc4 	addi	r2,r2,-1
   4fe84:	003fc106 	br	4fd8c <__alt_data_end+0xfffcfd8c>
   4fe88:	00800604 	movi	r2,24
   4fe8c:	003f1106 	br	4fad4 <__alt_data_end+0xfffcfad4>
   4fe90:	00800604 	movi	r2,24
   4fe94:	003f2706 	br	4fb34 <__alt_data_end+0xfffcfb34>
   4fe98:	00800604 	movi	r2,24
   4fe9c:	003ece06 	br	4f9d8 <__alt_data_end+0xfffcf9d8>
   4fea0:	0007883a 	mov	r3,zero
   4fea4:	00800044 	movi	r2,1
   4fea8:	003f5c06 	br	4fc1c <__alt_data_end+0xfffcfc1c>
   4feac:	813fa12e 	bgeu	r16,r4,4fd34 <__alt_data_end+0xfffcfd34>
   4feb0:	10bfff84 	addi	r2,r2,-2
   4feb4:	85e1883a 	add	r16,r16,r23
   4feb8:	003f9f06 	br	4fd38 <__alt_data_end+0xfffcfd38>
   4febc:	1c7f8a2e 	bgeu	r3,r17,4fce8 <__alt_data_end+0xfffcfce8>
   4fec0:	31bfff84 	addi	r6,r6,-2
   4fec4:	1dc7883a 	add	r3,r3,r23
   4fec8:	003f8806 	br	4fcec <__alt_data_end+0xfffcfcec>
   4fecc:	1805883a 	mov	r2,r3
   4fed0:	003fde06 	br	4fe4c <__alt_data_end+0xfffcfe4c>
   4fed4:	1839883a 	mov	fp,r3
   4fed8:	003fc906 	br	4fe00 <__alt_data_end+0xfffcfe00>
   4fedc:	b5bfff84 	addi	r22,r22,-2
   4fee0:	2449883a 	add	r4,r4,r17
   4fee4:	003f3406 	br	4fbb8 <__alt_data_end+0xfffcfbb8>
   4fee8:	b5bfff84 	addi	r22,r22,-2
   4feec:	1445883a 	add	r2,r2,r17
   4fef0:	003edb06 	br	4fa60 <__alt_data_end+0xfffcfa60>

0004fef4 <__umoddi3>:
   4fef4:	defff404 	addi	sp,sp,-48
   4fef8:	df000a15 	stw	fp,40(sp)
   4fefc:	dc400315 	stw	r17,12(sp)
   4ff00:	dc000215 	stw	r16,8(sp)
   4ff04:	dfc00b15 	stw	ra,44(sp)
   4ff08:	ddc00915 	stw	r23,36(sp)
   4ff0c:	dd800815 	stw	r22,32(sp)
   4ff10:	dd400715 	stw	r21,28(sp)
   4ff14:	dd000615 	stw	r20,24(sp)
   4ff18:	dcc00515 	stw	r19,20(sp)
   4ff1c:	dc800415 	stw	r18,16(sp)
   4ff20:	2021883a 	mov	r16,r4
   4ff24:	2823883a 	mov	r17,r5
   4ff28:	2839883a 	mov	fp,r5
   4ff2c:	38003c1e 	bne	r7,zero,50020 <__umoddi3+0x12c>
   4ff30:	3027883a 	mov	r19,r6
   4ff34:	2029883a 	mov	r20,r4
   4ff38:	2980512e 	bgeu	r5,r6,50080 <__umoddi3+0x18c>
   4ff3c:	00bfffd4 	movui	r2,65535
   4ff40:	11809a36 	bltu	r2,r6,501ac <__umoddi3+0x2b8>
   4ff44:	01003fc4 	movi	r4,255
   4ff48:	2189803a 	cmpltu	r4,r4,r6
   4ff4c:	200890fa 	slli	r4,r4,3
   4ff50:	3104d83a 	srl	r2,r6,r4
   4ff54:	00c00174 	movhi	r3,5
   4ff58:	18ce9a04 	addi	r3,r3,14952
   4ff5c:	1885883a 	add	r2,r3,r2
   4ff60:	10c00003 	ldbu	r3,0(r2)
   4ff64:	00800804 	movi	r2,32
   4ff68:	1909883a 	add	r4,r3,r4
   4ff6c:	1125c83a 	sub	r18,r2,r4
   4ff70:	90000526 	beq	r18,zero,4ff88 <__umoddi3+0x94>
   4ff74:	8ca2983a 	sll	r17,r17,r18
   4ff78:	8108d83a 	srl	r4,r16,r4
   4ff7c:	34a6983a 	sll	r19,r6,r18
   4ff80:	84a8983a 	sll	r20,r16,r18
   4ff84:	2478b03a 	or	fp,r4,r17
   4ff88:	982ed43a 	srli	r23,r19,16
   4ff8c:	e009883a 	mov	r4,fp
   4ff90:	9dbfffcc 	andi	r22,r19,65535
   4ff94:	b80b883a 	mov	r5,r23
   4ff98:	004324c0 	call	4324c <__umodsi3>
   4ff9c:	e009883a 	mov	r4,fp
   4ffa0:	b80b883a 	mov	r5,r23
   4ffa4:	102b883a 	mov	r21,r2
   4ffa8:	00431e80 	call	431e8 <__udivsi3>
   4ffac:	a806943a 	slli	r3,r21,16
   4ffb0:	a008d43a 	srli	r4,r20,16
   4ffb4:	b085383a 	mul	r2,r22,r2
   4ffb8:	20c8b03a 	or	r4,r4,r3
   4ffbc:	2080032e 	bgeu	r4,r2,4ffcc <__umoddi3+0xd8>
   4ffc0:	24c9883a 	add	r4,r4,r19
   4ffc4:	24c00136 	bltu	r4,r19,4ffcc <__umoddi3+0xd8>
   4ffc8:	20811036 	bltu	r4,r2,5040c <__umoddi3+0x518>
   4ffcc:	20abc83a 	sub	r21,r4,r2
   4ffd0:	b80b883a 	mov	r5,r23
   4ffd4:	a809883a 	mov	r4,r21
   4ffd8:	004324c0 	call	4324c <__umodsi3>
   4ffdc:	1023883a 	mov	r17,r2
   4ffe0:	b80b883a 	mov	r5,r23
   4ffe4:	a809883a 	mov	r4,r21
   4ffe8:	00431e80 	call	431e8 <__udivsi3>
   4ffec:	8822943a 	slli	r17,r17,16
   4fff0:	b085383a 	mul	r2,r22,r2
   4fff4:	a0ffffcc 	andi	r3,r20,65535
   4fff8:	1c46b03a 	or	r3,r3,r17
   4fffc:	1880042e 	bgeu	r3,r2,50010 <__umoddi3+0x11c>
   50000:	1cc7883a 	add	r3,r3,r19
   50004:	1cc00236 	bltu	r3,r19,50010 <__umoddi3+0x11c>
   50008:	1880012e 	bgeu	r3,r2,50010 <__umoddi3+0x11c>
   5000c:	1cc7883a 	add	r3,r3,r19
   50010:	1885c83a 	sub	r2,r3,r2
   50014:	1484d83a 	srl	r2,r2,r18
   50018:	0007883a 	mov	r3,zero
   5001c:	00004f06 	br	5015c <__umoddi3+0x268>
   50020:	29c04c36 	bltu	r5,r7,50154 <__umoddi3+0x260>
   50024:	00bfffd4 	movui	r2,65535
   50028:	11c0582e 	bgeu	r2,r7,5018c <__umoddi3+0x298>
   5002c:	00804034 	movhi	r2,256
   50030:	10bfffc4 	addi	r2,r2,-1
   50034:	11c0e736 	bltu	r2,r7,503d4 <__umoddi3+0x4e0>
   50038:	01000404 	movi	r4,16
   5003c:	3904d83a 	srl	r2,r7,r4
   50040:	00c00174 	movhi	r3,5
   50044:	18ce9a04 	addi	r3,r3,14952
   50048:	1885883a 	add	r2,r3,r2
   5004c:	14c00003 	ldbu	r19,0(r2)
   50050:	00c00804 	movi	r3,32
   50054:	9927883a 	add	r19,r19,r4
   50058:	1ce9c83a 	sub	r20,r3,r19
   5005c:	a000581e 	bne	r20,zero,501c0 <__umoddi3+0x2cc>
   50060:	3c400136 	bltu	r7,r17,50068 <__umoddi3+0x174>
   50064:	8180eb36 	bltu	r16,r6,50414 <__umoddi3+0x520>
   50068:	8185c83a 	sub	r2,r16,r6
   5006c:	89e3c83a 	sub	r17,r17,r7
   50070:	8089803a 	cmpltu	r4,r16,r2
   50074:	8939c83a 	sub	fp,r17,r4
   50078:	e007883a 	mov	r3,fp
   5007c:	00003706 	br	5015c <__umoddi3+0x268>
   50080:	3000041e 	bne	r6,zero,50094 <__umoddi3+0x1a0>
   50084:	000b883a 	mov	r5,zero
   50088:	01000044 	movi	r4,1
   5008c:	00431e80 	call	431e8 <__udivsi3>
   50090:	1027883a 	mov	r19,r2
   50094:	00bfffd4 	movui	r2,65535
   50098:	14c0402e 	bgeu	r2,r19,5019c <__umoddi3+0x2a8>
   5009c:	00804034 	movhi	r2,256
   500a0:	10bfffc4 	addi	r2,r2,-1
   500a4:	14c0cd36 	bltu	r2,r19,503dc <__umoddi3+0x4e8>
   500a8:	00800404 	movi	r2,16
   500ac:	9886d83a 	srl	r3,r19,r2
   500b0:	01000174 	movhi	r4,5
   500b4:	210e9a04 	addi	r4,r4,14952
   500b8:	20c7883a 	add	r3,r4,r3
   500bc:	18c00003 	ldbu	r3,0(r3)
   500c0:	1887883a 	add	r3,r3,r2
   500c4:	00800804 	movi	r2,32
   500c8:	10e5c83a 	sub	r18,r2,r3
   500cc:	9000901e 	bne	r18,zero,50310 <__umoddi3+0x41c>
   500d0:	982cd43a 	srli	r22,r19,16
   500d4:	8ce3c83a 	sub	r17,r17,r19
   500d8:	9d7fffcc 	andi	r21,r19,65535
   500dc:	b00b883a 	mov	r5,r22
   500e0:	8809883a 	mov	r4,r17
   500e4:	004324c0 	call	4324c <__umodsi3>
   500e8:	8809883a 	mov	r4,r17
   500ec:	b00b883a 	mov	r5,r22
   500f0:	1021883a 	mov	r16,r2
   500f4:	00431e80 	call	431e8 <__udivsi3>
   500f8:	8006943a 	slli	r3,r16,16
   500fc:	a008d43a 	srli	r4,r20,16
   50100:	1545383a 	mul	r2,r2,r21
   50104:	20c8b03a 	or	r4,r4,r3
   50108:	2080042e 	bgeu	r4,r2,5011c <__umoddi3+0x228>
   5010c:	24c9883a 	add	r4,r4,r19
   50110:	24c00236 	bltu	r4,r19,5011c <__umoddi3+0x228>
   50114:	2080012e 	bgeu	r4,r2,5011c <__umoddi3+0x228>
   50118:	24c9883a 	add	r4,r4,r19
   5011c:	20a1c83a 	sub	r16,r4,r2
   50120:	b00b883a 	mov	r5,r22
   50124:	8009883a 	mov	r4,r16
   50128:	004324c0 	call	4324c <__umodsi3>
   5012c:	1023883a 	mov	r17,r2
   50130:	b00b883a 	mov	r5,r22
   50134:	8009883a 	mov	r4,r16
   50138:	00431e80 	call	431e8 <__udivsi3>
   5013c:	8822943a 	slli	r17,r17,16
   50140:	1545383a 	mul	r2,r2,r21
   50144:	a53fffcc 	andi	r20,r20,65535
   50148:	a446b03a 	or	r3,r20,r17
   5014c:	18bfb02e 	bgeu	r3,r2,50010 <__alt_data_end+0xfffd0010>
   50150:	003fab06 	br	50000 <__alt_data_end+0xfffd0000>
   50154:	2005883a 	mov	r2,r4
   50158:	2807883a 	mov	r3,r5
   5015c:	dfc00b17 	ldw	ra,44(sp)
   50160:	df000a17 	ldw	fp,40(sp)
   50164:	ddc00917 	ldw	r23,36(sp)
   50168:	dd800817 	ldw	r22,32(sp)
   5016c:	dd400717 	ldw	r21,28(sp)
   50170:	dd000617 	ldw	r20,24(sp)
   50174:	dcc00517 	ldw	r19,20(sp)
   50178:	dc800417 	ldw	r18,16(sp)
   5017c:	dc400317 	ldw	r17,12(sp)
   50180:	dc000217 	ldw	r16,8(sp)
   50184:	dec00c04 	addi	sp,sp,48
   50188:	f800283a 	ret
   5018c:	04c03fc4 	movi	r19,255
   50190:	99c9803a 	cmpltu	r4,r19,r7
   50194:	200890fa 	slli	r4,r4,3
   50198:	003fa806 	br	5003c <__alt_data_end+0xfffd003c>
   5019c:	00803fc4 	movi	r2,255
   501a0:	14c5803a 	cmpltu	r2,r2,r19
   501a4:	100490fa 	slli	r2,r2,3
   501a8:	003fc006 	br	500ac <__alt_data_end+0xfffd00ac>
   501ac:	00804034 	movhi	r2,256
   501b0:	10bfffc4 	addi	r2,r2,-1
   501b4:	11808b36 	bltu	r2,r6,503e4 <__umoddi3+0x4f0>
   501b8:	01000404 	movi	r4,16
   501bc:	003f6406 	br	4ff50 <__alt_data_end+0xfffcff50>
   501c0:	34c4d83a 	srl	r2,r6,r19
   501c4:	3d0e983a 	sll	r7,r7,r20
   501c8:	8cf8d83a 	srl	fp,r17,r19
   501cc:	8d10983a 	sll	r8,r17,r20
   501d0:	38aab03a 	or	r21,r7,r2
   501d4:	a82cd43a 	srli	r22,r21,16
   501d8:	84e2d83a 	srl	r17,r16,r19
   501dc:	e009883a 	mov	r4,fp
   501e0:	b00b883a 	mov	r5,r22
   501e4:	8a22b03a 	or	r17,r17,r8
   501e8:	3524983a 	sll	r18,r6,r20
   501ec:	004324c0 	call	4324c <__umodsi3>
   501f0:	e009883a 	mov	r4,fp
   501f4:	b00b883a 	mov	r5,r22
   501f8:	102f883a 	mov	r23,r2
   501fc:	00431e80 	call	431e8 <__udivsi3>
   50200:	100d883a 	mov	r6,r2
   50204:	b808943a 	slli	r4,r23,16
   50208:	aa3fffcc 	andi	r8,r21,65535
   5020c:	8804d43a 	srli	r2,r17,16
   50210:	41af383a 	mul	r23,r8,r6
   50214:	8520983a 	sll	r16,r16,r20
   50218:	1104b03a 	or	r2,r2,r4
   5021c:	15c0042e 	bgeu	r2,r23,50230 <__umoddi3+0x33c>
   50220:	1545883a 	add	r2,r2,r21
   50224:	30ffffc4 	addi	r3,r6,-1
   50228:	1540742e 	bgeu	r2,r21,503fc <__umoddi3+0x508>
   5022c:	180d883a 	mov	r6,r3
   50230:	15efc83a 	sub	r23,r2,r23
   50234:	b00b883a 	mov	r5,r22
   50238:	b809883a 	mov	r4,r23
   5023c:	d9800115 	stw	r6,4(sp)
   50240:	da000015 	stw	r8,0(sp)
   50244:	004324c0 	call	4324c <__umodsi3>
   50248:	b00b883a 	mov	r5,r22
   5024c:	b809883a 	mov	r4,r23
   50250:	1039883a 	mov	fp,r2
   50254:	00431e80 	call	431e8 <__udivsi3>
   50258:	da000017 	ldw	r8,0(sp)
   5025c:	e038943a 	slli	fp,fp,16
   50260:	100b883a 	mov	r5,r2
   50264:	4089383a 	mul	r4,r8,r2
   50268:	8a3fffcc 	andi	r8,r17,65535
   5026c:	4710b03a 	or	r8,r8,fp
   50270:	d9800117 	ldw	r6,4(sp)
   50274:	4100042e 	bgeu	r8,r4,50288 <__umoddi3+0x394>
   50278:	4551883a 	add	r8,r8,r21
   5027c:	10bfffc4 	addi	r2,r2,-1
   50280:	45405a2e 	bgeu	r8,r21,503ec <__umoddi3+0x4f8>
   50284:	100b883a 	mov	r5,r2
   50288:	300c943a 	slli	r6,r6,16
   5028c:	91ffffcc 	andi	r7,r18,65535
   50290:	9004d43a 	srli	r2,r18,16
   50294:	314cb03a 	or	r6,r6,r5
   50298:	317fffcc 	andi	r5,r6,65535
   5029c:	300cd43a 	srli	r6,r6,16
   502a0:	29d3383a 	mul	r9,r5,r7
   502a4:	288b383a 	mul	r5,r5,r2
   502a8:	31cf383a 	mul	r7,r6,r7
   502ac:	4806d43a 	srli	r3,r9,16
   502b0:	4111c83a 	sub	r8,r8,r4
   502b4:	29cb883a 	add	r5,r5,r7
   502b8:	194b883a 	add	r5,r3,r5
   502bc:	3085383a 	mul	r2,r6,r2
   502c0:	29c0022e 	bgeu	r5,r7,502cc <__umoddi3+0x3d8>
   502c4:	00c00074 	movhi	r3,1
   502c8:	10c5883a 	add	r2,r2,r3
   502cc:	2808d43a 	srli	r4,r5,16
   502d0:	280a943a 	slli	r5,r5,16
   502d4:	4a7fffcc 	andi	r9,r9,65535
   502d8:	2085883a 	add	r2,r4,r2
   502dc:	2a4b883a 	add	r5,r5,r9
   502e0:	40803636 	bltu	r8,r2,503bc <__umoddi3+0x4c8>
   502e4:	40804d26 	beq	r8,r2,5041c <__umoddi3+0x528>
   502e8:	4089c83a 	sub	r4,r8,r2
   502ec:	280f883a 	mov	r7,r5
   502f0:	81cfc83a 	sub	r7,r16,r7
   502f4:	81c7803a 	cmpltu	r3,r16,r7
   502f8:	20c7c83a 	sub	r3,r4,r3
   502fc:	1cc4983a 	sll	r2,r3,r19
   50300:	3d0ed83a 	srl	r7,r7,r20
   50304:	1d06d83a 	srl	r3,r3,r20
   50308:	11c4b03a 	or	r2,r2,r7
   5030c:	003f9306 	br	5015c <__alt_data_end+0xfffd015c>
   50310:	9ca6983a 	sll	r19,r19,r18
   50314:	88e8d83a 	srl	r20,r17,r3
   50318:	80c4d83a 	srl	r2,r16,r3
   5031c:	982cd43a 	srli	r22,r19,16
   50320:	8ca2983a 	sll	r17,r17,r18
   50324:	a009883a 	mov	r4,r20
   50328:	b00b883a 	mov	r5,r22
   5032c:	1478b03a 	or	fp,r2,r17
   50330:	004324c0 	call	4324c <__umodsi3>
   50334:	a009883a 	mov	r4,r20
   50338:	b00b883a 	mov	r5,r22
   5033c:	1023883a 	mov	r17,r2
   50340:	00431e80 	call	431e8 <__udivsi3>
   50344:	9d7fffcc 	andi	r21,r19,65535
   50348:	880a943a 	slli	r5,r17,16
   5034c:	e008d43a 	srli	r4,fp,16
   50350:	a885383a 	mul	r2,r21,r2
   50354:	84a8983a 	sll	r20,r16,r18
   50358:	2148b03a 	or	r4,r4,r5
   5035c:	2080042e 	bgeu	r4,r2,50370 <__umoddi3+0x47c>
   50360:	24c9883a 	add	r4,r4,r19
   50364:	24c00236 	bltu	r4,r19,50370 <__umoddi3+0x47c>
   50368:	2080012e 	bgeu	r4,r2,50370 <__umoddi3+0x47c>
   5036c:	24c9883a 	add	r4,r4,r19
   50370:	20a3c83a 	sub	r17,r4,r2
   50374:	b00b883a 	mov	r5,r22
   50378:	8809883a 	mov	r4,r17
   5037c:	004324c0 	call	4324c <__umodsi3>
   50380:	102f883a 	mov	r23,r2
   50384:	8809883a 	mov	r4,r17
   50388:	b00b883a 	mov	r5,r22
   5038c:	00431e80 	call	431e8 <__udivsi3>
   50390:	b82e943a 	slli	r23,r23,16
   50394:	a885383a 	mul	r2,r21,r2
   50398:	e13fffcc 	andi	r4,fp,65535
   5039c:	25c8b03a 	or	r4,r4,r23
   503a0:	2080042e 	bgeu	r4,r2,503b4 <__umoddi3+0x4c0>
   503a4:	24c9883a 	add	r4,r4,r19
   503a8:	24c00236 	bltu	r4,r19,503b4 <__umoddi3+0x4c0>
   503ac:	2080012e 	bgeu	r4,r2,503b4 <__umoddi3+0x4c0>
   503b0:	24c9883a 	add	r4,r4,r19
   503b4:	20a3c83a 	sub	r17,r4,r2
   503b8:	003f4806 	br	500dc <__alt_data_end+0xfffd00dc>
   503bc:	2c8fc83a 	sub	r7,r5,r18
   503c0:	1545c83a 	sub	r2,r2,r21
   503c4:	29cb803a 	cmpltu	r5,r5,r7
   503c8:	1145c83a 	sub	r2,r2,r5
   503cc:	4089c83a 	sub	r4,r8,r2
   503d0:	003fc706 	br	502f0 <__alt_data_end+0xfffd02f0>
   503d4:	01000604 	movi	r4,24
   503d8:	003f1806 	br	5003c <__alt_data_end+0xfffd003c>
   503dc:	00800604 	movi	r2,24
   503e0:	003f3206 	br	500ac <__alt_data_end+0xfffd00ac>
   503e4:	01000604 	movi	r4,24
   503e8:	003ed906 	br	4ff50 <__alt_data_end+0xfffcff50>
   503ec:	413fa52e 	bgeu	r8,r4,50284 <__alt_data_end+0xfffd0284>
   503f0:	297fff84 	addi	r5,r5,-2
   503f4:	4551883a 	add	r8,r8,r21
   503f8:	003fa306 	br	50288 <__alt_data_end+0xfffd0288>
   503fc:	15ff8b2e 	bgeu	r2,r23,5022c <__alt_data_end+0xfffd022c>
   50400:	31bfff84 	addi	r6,r6,-2
   50404:	1545883a 	add	r2,r2,r21
   50408:	003f8906 	br	50230 <__alt_data_end+0xfffd0230>
   5040c:	24c9883a 	add	r4,r4,r19
   50410:	003eee06 	br	4ffcc <__alt_data_end+0xfffcffcc>
   50414:	8005883a 	mov	r2,r16
   50418:	003f1706 	br	50078 <__alt_data_end+0xfffd0078>
   5041c:	817fe736 	bltu	r16,r5,503bc <__alt_data_end+0xfffd03bc>
   50420:	280f883a 	mov	r7,r5
   50424:	0009883a 	mov	r4,zero
   50428:	003fb106 	br	502f0 <__alt_data_end+0xfffd02f0>

0005042c <__divdf3>:
   5042c:	defff204 	addi	sp,sp,-56
   50430:	dd400915 	stw	r21,36(sp)
   50434:	282ad53a 	srli	r21,r5,20
   50438:	dd000815 	stw	r20,32(sp)
   5043c:	2828d7fa 	srli	r20,r5,31
   50440:	dc000415 	stw	r16,16(sp)
   50444:	04000434 	movhi	r16,16
   50448:	df000c15 	stw	fp,48(sp)
   5044c:	843fffc4 	addi	r16,r16,-1
   50450:	dfc00d15 	stw	ra,52(sp)
   50454:	ddc00b15 	stw	r23,44(sp)
   50458:	dd800a15 	stw	r22,40(sp)
   5045c:	dcc00715 	stw	r19,28(sp)
   50460:	dc800615 	stw	r18,24(sp)
   50464:	dc400515 	stw	r17,20(sp)
   50468:	ad41ffcc 	andi	r21,r21,2047
   5046c:	2c20703a 	and	r16,r5,r16
   50470:	a7003fcc 	andi	fp,r20,255
   50474:	a8006126 	beq	r21,zero,505fc <__divdf3+0x1d0>
   50478:	0081ffc4 	movi	r2,2047
   5047c:	2025883a 	mov	r18,r4
   50480:	a8803726 	beq	r21,r2,50560 <__divdf3+0x134>
   50484:	80800434 	orhi	r2,r16,16
   50488:	100490fa 	slli	r2,r2,3
   5048c:	2020d77a 	srli	r16,r4,29
   50490:	202490fa 	slli	r18,r4,3
   50494:	ad7f0044 	addi	r21,r21,-1023
   50498:	80a0b03a 	or	r16,r16,r2
   5049c:	0027883a 	mov	r19,zero
   504a0:	0013883a 	mov	r9,zero
   504a4:	3804d53a 	srli	r2,r7,20
   504a8:	382cd7fa 	srli	r22,r7,31
   504ac:	04400434 	movhi	r17,16
   504b0:	8c7fffc4 	addi	r17,r17,-1
   504b4:	1081ffcc 	andi	r2,r2,2047
   504b8:	3011883a 	mov	r8,r6
   504bc:	3c62703a 	and	r17,r7,r17
   504c0:	b5c03fcc 	andi	r23,r22,255
   504c4:	10006c26 	beq	r2,zero,50678 <__divdf3+0x24c>
   504c8:	00c1ffc4 	movi	r3,2047
   504cc:	10c06426 	beq	r2,r3,50660 <__divdf3+0x234>
   504d0:	88c00434 	orhi	r3,r17,16
   504d4:	180690fa 	slli	r3,r3,3
   504d8:	3022d77a 	srli	r17,r6,29
   504dc:	301090fa 	slli	r8,r6,3
   504e0:	10bf0044 	addi	r2,r2,-1023
   504e4:	88e2b03a 	or	r17,r17,r3
   504e8:	000f883a 	mov	r7,zero
   504ec:	a58cf03a 	xor	r6,r20,r22
   504f0:	3cc8b03a 	or	r4,r7,r19
   504f4:	a8abc83a 	sub	r21,r21,r2
   504f8:	008003c4 	movi	r2,15
   504fc:	3007883a 	mov	r3,r6
   50500:	34c03fcc 	andi	r19,r6,255
   50504:	11009036 	bltu	r2,r4,50748 <__divdf3+0x31c>
   50508:	200890ba 	slli	r4,r4,2
   5050c:	00800174 	movhi	r2,5
   50510:	10814804 	addi	r2,r2,1312
   50514:	2089883a 	add	r4,r4,r2
   50518:	20800017 	ldw	r2,0(r4)
   5051c:	1000683a 	jmp	r2
   50520:	00050748 	cmpgei	zero,zero,5149
   50524:	00050598 	cmpnei	zero,zero,5142
   50528:	00050738 	rdprs	zero,zero,5148
   5052c:	0005058c 	andi	zero,zero,5142
   50530:	00050738 	rdprs	zero,zero,5148
   50534:	0005070c 	andi	zero,zero,5148
   50538:	00050738 	rdprs	zero,zero,5148
   5053c:	0005058c 	andi	zero,zero,5142
   50540:	00050598 	cmpnei	zero,zero,5142
   50544:	00050598 	cmpnei	zero,zero,5142
   50548:	0005070c 	andi	zero,zero,5148
   5054c:	0005058c 	andi	zero,zero,5142
   50550:	0005057c 	xorhi	zero,zero,5141
   50554:	0005057c 	xorhi	zero,zero,5141
   50558:	0005057c 	xorhi	zero,zero,5141
   5055c:	00050a2c 	andhi	zero,zero,5160
   50560:	2404b03a 	or	r2,r4,r16
   50564:	1000661e 	bne	r2,zero,50700 <__divdf3+0x2d4>
   50568:	04c00204 	movi	r19,8
   5056c:	0021883a 	mov	r16,zero
   50570:	0025883a 	mov	r18,zero
   50574:	02400084 	movi	r9,2
   50578:	003fca06 	br	504a4 <__alt_data_end+0xfffd04a4>
   5057c:	8023883a 	mov	r17,r16
   50580:	9011883a 	mov	r8,r18
   50584:	e02f883a 	mov	r23,fp
   50588:	480f883a 	mov	r7,r9
   5058c:	00800084 	movi	r2,2
   50590:	3881311e 	bne	r7,r2,50a58 <__divdf3+0x62c>
   50594:	b827883a 	mov	r19,r23
   50598:	98c0004c 	andi	r3,r19,1
   5059c:	0081ffc4 	movi	r2,2047
   505a0:	000b883a 	mov	r5,zero
   505a4:	0025883a 	mov	r18,zero
   505a8:	1004953a 	slli	r2,r2,20
   505ac:	18c03fcc 	andi	r3,r3,255
   505b0:	04400434 	movhi	r17,16
   505b4:	8c7fffc4 	addi	r17,r17,-1
   505b8:	180697fa 	slli	r3,r3,31
   505bc:	2c4a703a 	and	r5,r5,r17
   505c0:	288ab03a 	or	r5,r5,r2
   505c4:	28c6b03a 	or	r3,r5,r3
   505c8:	9005883a 	mov	r2,r18
   505cc:	dfc00d17 	ldw	ra,52(sp)
   505d0:	df000c17 	ldw	fp,48(sp)
   505d4:	ddc00b17 	ldw	r23,44(sp)
   505d8:	dd800a17 	ldw	r22,40(sp)
   505dc:	dd400917 	ldw	r21,36(sp)
   505e0:	dd000817 	ldw	r20,32(sp)
   505e4:	dcc00717 	ldw	r19,28(sp)
   505e8:	dc800617 	ldw	r18,24(sp)
   505ec:	dc400517 	ldw	r17,20(sp)
   505f0:	dc000417 	ldw	r16,16(sp)
   505f4:	dec00e04 	addi	sp,sp,56
   505f8:	f800283a 	ret
   505fc:	2404b03a 	or	r2,r4,r16
   50600:	2027883a 	mov	r19,r4
   50604:	10003926 	beq	r2,zero,506ec <__divdf3+0x2c0>
   50608:	80012e26 	beq	r16,zero,50ac4 <__divdf3+0x698>
   5060c:	8009883a 	mov	r4,r16
   50610:	d9800315 	stw	r6,12(sp)
   50614:	d9c00215 	stw	r7,8(sp)
   50618:	00462c40 	call	462c4 <__clzsi2>
   5061c:	d9800317 	ldw	r6,12(sp)
   50620:	d9c00217 	ldw	r7,8(sp)
   50624:	113ffd44 	addi	r4,r2,-11
   50628:	00c00704 	movi	r3,28
   5062c:	19012116 	blt	r3,r4,50ab4 <__divdf3+0x688>
   50630:	00c00744 	movi	r3,29
   50634:	147ffe04 	addi	r17,r2,-8
   50638:	1907c83a 	sub	r3,r3,r4
   5063c:	8460983a 	sll	r16,r16,r17
   50640:	98c6d83a 	srl	r3,r19,r3
   50644:	9c64983a 	sll	r18,r19,r17
   50648:	1c20b03a 	or	r16,r3,r16
   5064c:	1080fcc4 	addi	r2,r2,1011
   50650:	00abc83a 	sub	r21,zero,r2
   50654:	0027883a 	mov	r19,zero
   50658:	0013883a 	mov	r9,zero
   5065c:	003f9106 	br	504a4 <__alt_data_end+0xfffd04a4>
   50660:	3446b03a 	or	r3,r6,r17
   50664:	18001f1e 	bne	r3,zero,506e4 <__divdf3+0x2b8>
   50668:	0023883a 	mov	r17,zero
   5066c:	0011883a 	mov	r8,zero
   50670:	01c00084 	movi	r7,2
   50674:	003f9d06 	br	504ec <__alt_data_end+0xfffd04ec>
   50678:	3446b03a 	or	r3,r6,r17
   5067c:	18001526 	beq	r3,zero,506d4 <__divdf3+0x2a8>
   50680:	88011b26 	beq	r17,zero,50af0 <__divdf3+0x6c4>
   50684:	8809883a 	mov	r4,r17
   50688:	d9800315 	stw	r6,12(sp)
   5068c:	da400115 	stw	r9,4(sp)
   50690:	00462c40 	call	462c4 <__clzsi2>
   50694:	d9800317 	ldw	r6,12(sp)
   50698:	da400117 	ldw	r9,4(sp)
   5069c:	113ffd44 	addi	r4,r2,-11
   506a0:	00c00704 	movi	r3,28
   506a4:	19010e16 	blt	r3,r4,50ae0 <__divdf3+0x6b4>
   506a8:	00c00744 	movi	r3,29
   506ac:	123ffe04 	addi	r8,r2,-8
   506b0:	1907c83a 	sub	r3,r3,r4
   506b4:	8a22983a 	sll	r17,r17,r8
   506b8:	30c6d83a 	srl	r3,r6,r3
   506bc:	3210983a 	sll	r8,r6,r8
   506c0:	1c62b03a 	or	r17,r3,r17
   506c4:	1080fcc4 	addi	r2,r2,1011
   506c8:	0085c83a 	sub	r2,zero,r2
   506cc:	000f883a 	mov	r7,zero
   506d0:	003f8606 	br	504ec <__alt_data_end+0xfffd04ec>
   506d4:	0023883a 	mov	r17,zero
   506d8:	0011883a 	mov	r8,zero
   506dc:	01c00044 	movi	r7,1
   506e0:	003f8206 	br	504ec <__alt_data_end+0xfffd04ec>
   506e4:	01c000c4 	movi	r7,3
   506e8:	003f8006 	br	504ec <__alt_data_end+0xfffd04ec>
   506ec:	04c00104 	movi	r19,4
   506f0:	0021883a 	mov	r16,zero
   506f4:	0025883a 	mov	r18,zero
   506f8:	02400044 	movi	r9,1
   506fc:	003f6906 	br	504a4 <__alt_data_end+0xfffd04a4>
   50700:	04c00304 	movi	r19,12
   50704:	024000c4 	movi	r9,3
   50708:	003f6606 	br	504a4 <__alt_data_end+0xfffd04a4>
   5070c:	01400434 	movhi	r5,16
   50710:	0007883a 	mov	r3,zero
   50714:	297fffc4 	addi	r5,r5,-1
   50718:	04bfffc4 	movi	r18,-1
   5071c:	0081ffc4 	movi	r2,2047
   50720:	003fa106 	br	505a8 <__alt_data_end+0xfffd05a8>
   50724:	00c00044 	movi	r3,1
   50728:	1887c83a 	sub	r3,r3,r2
   5072c:	01000e04 	movi	r4,56
   50730:	20c1210e 	bge	r4,r3,50bb8 <__divdf3+0x78c>
   50734:	98c0004c 	andi	r3,r19,1
   50738:	0005883a 	mov	r2,zero
   5073c:	000b883a 	mov	r5,zero
   50740:	0025883a 	mov	r18,zero
   50744:	003f9806 	br	505a8 <__alt_data_end+0xfffd05a8>
   50748:	8c00fd36 	bltu	r17,r16,50b40 <__divdf3+0x714>
   5074c:	8440fb26 	beq	r16,r17,50b3c <__divdf3+0x710>
   50750:	8007883a 	mov	r3,r16
   50754:	ad7fffc4 	addi	r21,r21,-1
   50758:	0021883a 	mov	r16,zero
   5075c:	4004d63a 	srli	r2,r8,24
   50760:	8822923a 	slli	r17,r17,8
   50764:	1809883a 	mov	r4,r3
   50768:	402c923a 	slli	r22,r8,8
   5076c:	88b8b03a 	or	fp,r17,r2
   50770:	e028d43a 	srli	r20,fp,16
   50774:	d8c00015 	stw	r3,0(sp)
   50778:	e5ffffcc 	andi	r23,fp,65535
   5077c:	a00b883a 	mov	r5,r20
   50780:	00431e80 	call	431e8 <__udivsi3>
   50784:	d8c00017 	ldw	r3,0(sp)
   50788:	a00b883a 	mov	r5,r20
   5078c:	d8800315 	stw	r2,12(sp)
   50790:	1809883a 	mov	r4,r3
   50794:	004324c0 	call	4324c <__umodsi3>
   50798:	d9800317 	ldw	r6,12(sp)
   5079c:	1006943a 	slli	r3,r2,16
   507a0:	9004d43a 	srli	r2,r18,16
   507a4:	b9a3383a 	mul	r17,r23,r6
   507a8:	10c4b03a 	or	r2,r2,r3
   507ac:	1440062e 	bgeu	r2,r17,507c8 <__divdf3+0x39c>
   507b0:	1705883a 	add	r2,r2,fp
   507b4:	30ffffc4 	addi	r3,r6,-1
   507b8:	1700ee36 	bltu	r2,fp,50b74 <__divdf3+0x748>
   507bc:	1440ed2e 	bgeu	r2,r17,50b74 <__divdf3+0x748>
   507c0:	31bfff84 	addi	r6,r6,-2
   507c4:	1705883a 	add	r2,r2,fp
   507c8:	1463c83a 	sub	r17,r2,r17
   507cc:	a00b883a 	mov	r5,r20
   507d0:	8809883a 	mov	r4,r17
   507d4:	d9800315 	stw	r6,12(sp)
   507d8:	00431e80 	call	431e8 <__udivsi3>
   507dc:	a00b883a 	mov	r5,r20
   507e0:	8809883a 	mov	r4,r17
   507e4:	d8800215 	stw	r2,8(sp)
   507e8:	004324c0 	call	4324c <__umodsi3>
   507ec:	d9c00217 	ldw	r7,8(sp)
   507f0:	1004943a 	slli	r2,r2,16
   507f4:	94bfffcc 	andi	r18,r18,65535
   507f8:	b9d1383a 	mul	r8,r23,r7
   507fc:	90a4b03a 	or	r18,r18,r2
   50800:	d9800317 	ldw	r6,12(sp)
   50804:	9200062e 	bgeu	r18,r8,50820 <__divdf3+0x3f4>
   50808:	9725883a 	add	r18,r18,fp
   5080c:	38bfffc4 	addi	r2,r7,-1
   50810:	9700d636 	bltu	r18,fp,50b6c <__divdf3+0x740>
   50814:	9200d52e 	bgeu	r18,r8,50b6c <__divdf3+0x740>
   50818:	39ffff84 	addi	r7,r7,-2
   5081c:	9725883a 	add	r18,r18,fp
   50820:	3004943a 	slli	r2,r6,16
   50824:	b012d43a 	srli	r9,r22,16
   50828:	b1bfffcc 	andi	r6,r22,65535
   5082c:	11e2b03a 	or	r17,r2,r7
   50830:	8806d43a 	srli	r3,r17,16
   50834:	893fffcc 	andi	r4,r17,65535
   50838:	218b383a 	mul	r5,r4,r6
   5083c:	30c5383a 	mul	r2,r6,r3
   50840:	2249383a 	mul	r4,r4,r9
   50844:	280ed43a 	srli	r7,r5,16
   50848:	9225c83a 	sub	r18,r18,r8
   5084c:	2089883a 	add	r4,r4,r2
   50850:	3909883a 	add	r4,r7,r4
   50854:	1a47383a 	mul	r3,r3,r9
   50858:	2080022e 	bgeu	r4,r2,50864 <__divdf3+0x438>
   5085c:	00800074 	movhi	r2,1
   50860:	1887883a 	add	r3,r3,r2
   50864:	2004d43a 	srli	r2,r4,16
   50868:	2008943a 	slli	r4,r4,16
   5086c:	297fffcc 	andi	r5,r5,65535
   50870:	10c7883a 	add	r3,r2,r3
   50874:	2149883a 	add	r4,r4,r5
   50878:	90c0a536 	bltu	r18,r3,50b10 <__divdf3+0x6e4>
   5087c:	90c0bf26 	beq	r18,r3,50b7c <__divdf3+0x750>
   50880:	90c7c83a 	sub	r3,r18,r3
   50884:	810fc83a 	sub	r7,r16,r4
   50888:	81e5803a 	cmpltu	r18,r16,r7
   5088c:	1ca5c83a 	sub	r18,r3,r18
   50890:	e480c126 	beq	fp,r18,50b98 <__divdf3+0x76c>
   50894:	a00b883a 	mov	r5,r20
   50898:	9009883a 	mov	r4,r18
   5089c:	d9800315 	stw	r6,12(sp)
   508a0:	d9c00215 	stw	r7,8(sp)
   508a4:	da400115 	stw	r9,4(sp)
   508a8:	00431e80 	call	431e8 <__udivsi3>
   508ac:	a00b883a 	mov	r5,r20
   508b0:	9009883a 	mov	r4,r18
   508b4:	d8800015 	stw	r2,0(sp)
   508b8:	004324c0 	call	4324c <__umodsi3>
   508bc:	d9c00217 	ldw	r7,8(sp)
   508c0:	da000017 	ldw	r8,0(sp)
   508c4:	1006943a 	slli	r3,r2,16
   508c8:	3804d43a 	srli	r2,r7,16
   508cc:	ba21383a 	mul	r16,r23,r8
   508d0:	d9800317 	ldw	r6,12(sp)
   508d4:	10c4b03a 	or	r2,r2,r3
   508d8:	da400117 	ldw	r9,4(sp)
   508dc:	1400062e 	bgeu	r2,r16,508f8 <__divdf3+0x4cc>
   508e0:	1705883a 	add	r2,r2,fp
   508e4:	40ffffc4 	addi	r3,r8,-1
   508e8:	1700ad36 	bltu	r2,fp,50ba0 <__divdf3+0x774>
   508ec:	1400ac2e 	bgeu	r2,r16,50ba0 <__divdf3+0x774>
   508f0:	423fff84 	addi	r8,r8,-2
   508f4:	1705883a 	add	r2,r2,fp
   508f8:	1421c83a 	sub	r16,r2,r16
   508fc:	a00b883a 	mov	r5,r20
   50900:	8009883a 	mov	r4,r16
   50904:	d9800315 	stw	r6,12(sp)
   50908:	d9c00215 	stw	r7,8(sp)
   5090c:	da000015 	stw	r8,0(sp)
   50910:	da400115 	stw	r9,4(sp)
   50914:	00431e80 	call	431e8 <__udivsi3>
   50918:	8009883a 	mov	r4,r16
   5091c:	a00b883a 	mov	r5,r20
   50920:	1025883a 	mov	r18,r2
   50924:	004324c0 	call	4324c <__umodsi3>
   50928:	d9c00217 	ldw	r7,8(sp)
   5092c:	1004943a 	slli	r2,r2,16
   50930:	bcaf383a 	mul	r23,r23,r18
   50934:	393fffcc 	andi	r4,r7,65535
   50938:	2088b03a 	or	r4,r4,r2
   5093c:	d9800317 	ldw	r6,12(sp)
   50940:	da000017 	ldw	r8,0(sp)
   50944:	da400117 	ldw	r9,4(sp)
   50948:	25c0062e 	bgeu	r4,r23,50964 <__divdf3+0x538>
   5094c:	2709883a 	add	r4,r4,fp
   50950:	90bfffc4 	addi	r2,r18,-1
   50954:	27009436 	bltu	r4,fp,50ba8 <__divdf3+0x77c>
   50958:	25c0932e 	bgeu	r4,r23,50ba8 <__divdf3+0x77c>
   5095c:	94bfff84 	addi	r18,r18,-2
   50960:	2709883a 	add	r4,r4,fp
   50964:	4004943a 	slli	r2,r8,16
   50968:	25efc83a 	sub	r23,r4,r23
   5096c:	1490b03a 	or	r8,r2,r18
   50970:	4008d43a 	srli	r4,r8,16
   50974:	40ffffcc 	andi	r3,r8,65535
   50978:	30c5383a 	mul	r2,r6,r3
   5097c:	1a47383a 	mul	r3,r3,r9
   50980:	310d383a 	mul	r6,r6,r4
   50984:	100ad43a 	srli	r5,r2,16
   50988:	4913383a 	mul	r9,r9,r4
   5098c:	1987883a 	add	r3,r3,r6
   50990:	28c7883a 	add	r3,r5,r3
   50994:	1980022e 	bgeu	r3,r6,509a0 <__divdf3+0x574>
   50998:	01000074 	movhi	r4,1
   5099c:	4913883a 	add	r9,r9,r4
   509a0:	1808d43a 	srli	r4,r3,16
   509a4:	1806943a 	slli	r3,r3,16
   509a8:	10bfffcc 	andi	r2,r2,65535
   509ac:	2253883a 	add	r9,r4,r9
   509b0:	1887883a 	add	r3,r3,r2
   509b4:	ba403836 	bltu	r23,r9,50a98 <__divdf3+0x66c>
   509b8:	ba403626 	beq	r23,r9,50a94 <__divdf3+0x668>
   509bc:	42000054 	ori	r8,r8,1
   509c0:	a880ffc4 	addi	r2,r21,1023
   509c4:	00bf570e 	bge	zero,r2,50724 <__alt_data_end+0xfffd0724>
   509c8:	40c001cc 	andi	r3,r8,7
   509cc:	18000726 	beq	r3,zero,509ec <__divdf3+0x5c0>
   509d0:	40c003cc 	andi	r3,r8,15
   509d4:	01000104 	movi	r4,4
   509d8:	19000426 	beq	r3,r4,509ec <__divdf3+0x5c0>
   509dc:	4107883a 	add	r3,r8,r4
   509e0:	1a11803a 	cmpltu	r8,r3,r8
   509e4:	8a23883a 	add	r17,r17,r8
   509e8:	1811883a 	mov	r8,r3
   509ec:	88c0402c 	andhi	r3,r17,256
   509f0:	18000426 	beq	r3,zero,50a04 <__divdf3+0x5d8>
   509f4:	00ffc034 	movhi	r3,65280
   509f8:	18ffffc4 	addi	r3,r3,-1
   509fc:	a8810004 	addi	r2,r21,1024
   50a00:	88e2703a 	and	r17,r17,r3
   50a04:	00c1ff84 	movi	r3,2046
   50a08:	18bee316 	blt	r3,r2,50598 <__alt_data_end+0xfffd0598>
   50a0c:	8824977a 	slli	r18,r17,29
   50a10:	4010d0fa 	srli	r8,r8,3
   50a14:	8822927a 	slli	r17,r17,9
   50a18:	1081ffcc 	andi	r2,r2,2047
   50a1c:	9224b03a 	or	r18,r18,r8
   50a20:	880ad33a 	srli	r5,r17,12
   50a24:	98c0004c 	andi	r3,r19,1
   50a28:	003edf06 	br	505a8 <__alt_data_end+0xfffd05a8>
   50a2c:	8080022c 	andhi	r2,r16,8
   50a30:	10001226 	beq	r2,zero,50a7c <__divdf3+0x650>
   50a34:	8880022c 	andhi	r2,r17,8
   50a38:	1000101e 	bne	r2,zero,50a7c <__divdf3+0x650>
   50a3c:	00800434 	movhi	r2,16
   50a40:	89400234 	orhi	r5,r17,8
   50a44:	10bfffc4 	addi	r2,r2,-1
   50a48:	b007883a 	mov	r3,r22
   50a4c:	288a703a 	and	r5,r5,r2
   50a50:	4025883a 	mov	r18,r8
   50a54:	003f3106 	br	5071c <__alt_data_end+0xfffd071c>
   50a58:	008000c4 	movi	r2,3
   50a5c:	3880a626 	beq	r7,r2,50cf8 <__divdf3+0x8cc>
   50a60:	00800044 	movi	r2,1
   50a64:	3880521e 	bne	r7,r2,50bb0 <__divdf3+0x784>
   50a68:	b807883a 	mov	r3,r23
   50a6c:	0005883a 	mov	r2,zero
   50a70:	000b883a 	mov	r5,zero
   50a74:	0025883a 	mov	r18,zero
   50a78:	003ecb06 	br	505a8 <__alt_data_end+0xfffd05a8>
   50a7c:	00800434 	movhi	r2,16
   50a80:	81400234 	orhi	r5,r16,8
   50a84:	10bfffc4 	addi	r2,r2,-1
   50a88:	a007883a 	mov	r3,r20
   50a8c:	288a703a 	and	r5,r5,r2
   50a90:	003f2206 	br	5071c <__alt_data_end+0xfffd071c>
   50a94:	183fca26 	beq	r3,zero,509c0 <__alt_data_end+0xfffd09c0>
   50a98:	e5ef883a 	add	r23,fp,r23
   50a9c:	40bfffc4 	addi	r2,r8,-1
   50aa0:	bf00392e 	bgeu	r23,fp,50b88 <__divdf3+0x75c>
   50aa4:	1011883a 	mov	r8,r2
   50aa8:	ba7fc41e 	bne	r23,r9,509bc <__alt_data_end+0xfffd09bc>
   50aac:	b0ffc31e 	bne	r22,r3,509bc <__alt_data_end+0xfffd09bc>
   50ab0:	003fc306 	br	509c0 <__alt_data_end+0xfffd09c0>
   50ab4:	143ff604 	addi	r16,r2,-40
   50ab8:	9c20983a 	sll	r16,r19,r16
   50abc:	0025883a 	mov	r18,zero
   50ac0:	003ee206 	br	5064c <__alt_data_end+0xfffd064c>
   50ac4:	d9800315 	stw	r6,12(sp)
   50ac8:	d9c00215 	stw	r7,8(sp)
   50acc:	00462c40 	call	462c4 <__clzsi2>
   50ad0:	10800804 	addi	r2,r2,32
   50ad4:	d9c00217 	ldw	r7,8(sp)
   50ad8:	d9800317 	ldw	r6,12(sp)
   50adc:	003ed106 	br	50624 <__alt_data_end+0xfffd0624>
   50ae0:	147ff604 	addi	r17,r2,-40
   50ae4:	3462983a 	sll	r17,r6,r17
   50ae8:	0011883a 	mov	r8,zero
   50aec:	003ef506 	br	506c4 <__alt_data_end+0xfffd06c4>
   50af0:	3009883a 	mov	r4,r6
   50af4:	d9800315 	stw	r6,12(sp)
   50af8:	da400115 	stw	r9,4(sp)
   50afc:	00462c40 	call	462c4 <__clzsi2>
   50b00:	10800804 	addi	r2,r2,32
   50b04:	da400117 	ldw	r9,4(sp)
   50b08:	d9800317 	ldw	r6,12(sp)
   50b0c:	003ee306 	br	5069c <__alt_data_end+0xfffd069c>
   50b10:	85a1883a 	add	r16,r16,r22
   50b14:	8585803a 	cmpltu	r2,r16,r22
   50b18:	1705883a 	add	r2,r2,fp
   50b1c:	14a5883a 	add	r18,r2,r18
   50b20:	88bfffc4 	addi	r2,r17,-1
   50b24:	e4800c2e 	bgeu	fp,r18,50b58 <__divdf3+0x72c>
   50b28:	90c03e36 	bltu	r18,r3,50c24 <__divdf3+0x7f8>
   50b2c:	1c806926 	beq	r3,r18,50cd4 <__divdf3+0x8a8>
   50b30:	90c7c83a 	sub	r3,r18,r3
   50b34:	1023883a 	mov	r17,r2
   50b38:	003f5206 	br	50884 <__alt_data_end+0xfffd0884>
   50b3c:	923f0436 	bltu	r18,r8,50750 <__alt_data_end+0xfffd0750>
   50b40:	800897fa 	slli	r4,r16,31
   50b44:	9004d07a 	srli	r2,r18,1
   50b48:	8006d07a 	srli	r3,r16,1
   50b4c:	902097fa 	slli	r16,r18,31
   50b50:	20a4b03a 	or	r18,r4,r2
   50b54:	003f0106 	br	5075c <__alt_data_end+0xfffd075c>
   50b58:	e4bff51e 	bne	fp,r18,50b30 <__alt_data_end+0xfffd0b30>
   50b5c:	85bff22e 	bgeu	r16,r22,50b28 <__alt_data_end+0xfffd0b28>
   50b60:	e0c7c83a 	sub	r3,fp,r3
   50b64:	1023883a 	mov	r17,r2
   50b68:	003f4606 	br	50884 <__alt_data_end+0xfffd0884>
   50b6c:	100f883a 	mov	r7,r2
   50b70:	003f2b06 	br	50820 <__alt_data_end+0xfffd0820>
   50b74:	180d883a 	mov	r6,r3
   50b78:	003f1306 	br	507c8 <__alt_data_end+0xfffd07c8>
   50b7c:	813fe436 	bltu	r16,r4,50b10 <__alt_data_end+0xfffd0b10>
   50b80:	0007883a 	mov	r3,zero
   50b84:	003f3f06 	br	50884 <__alt_data_end+0xfffd0884>
   50b88:	ba402c36 	bltu	r23,r9,50c3c <__divdf3+0x810>
   50b8c:	4dc05426 	beq	r9,r23,50ce0 <__divdf3+0x8b4>
   50b90:	1011883a 	mov	r8,r2
   50b94:	003f8906 	br	509bc <__alt_data_end+0xfffd09bc>
   50b98:	023fffc4 	movi	r8,-1
   50b9c:	003f8806 	br	509c0 <__alt_data_end+0xfffd09c0>
   50ba0:	1811883a 	mov	r8,r3
   50ba4:	003f5406 	br	508f8 <__alt_data_end+0xfffd08f8>
   50ba8:	1025883a 	mov	r18,r2
   50bac:	003f6d06 	br	50964 <__alt_data_end+0xfffd0964>
   50bb0:	b827883a 	mov	r19,r23
   50bb4:	003f8206 	br	509c0 <__alt_data_end+0xfffd09c0>
   50bb8:	010007c4 	movi	r4,31
   50bbc:	20c02616 	blt	r4,r3,50c58 <__divdf3+0x82c>
   50bc0:	00800804 	movi	r2,32
   50bc4:	10c5c83a 	sub	r2,r2,r3
   50bc8:	888a983a 	sll	r5,r17,r2
   50bcc:	40c8d83a 	srl	r4,r8,r3
   50bd0:	4084983a 	sll	r2,r8,r2
   50bd4:	88e2d83a 	srl	r17,r17,r3
   50bd8:	2906b03a 	or	r3,r5,r4
   50bdc:	1004c03a 	cmpne	r2,r2,zero
   50be0:	1886b03a 	or	r3,r3,r2
   50be4:	188001cc 	andi	r2,r3,7
   50be8:	10000726 	beq	r2,zero,50c08 <__divdf3+0x7dc>
   50bec:	188003cc 	andi	r2,r3,15
   50bf0:	01000104 	movi	r4,4
   50bf4:	11000426 	beq	r2,r4,50c08 <__divdf3+0x7dc>
   50bf8:	1805883a 	mov	r2,r3
   50bfc:	10c00104 	addi	r3,r2,4
   50c00:	1885803a 	cmpltu	r2,r3,r2
   50c04:	88a3883a 	add	r17,r17,r2
   50c08:	8880202c 	andhi	r2,r17,128
   50c0c:	10002726 	beq	r2,zero,50cac <__divdf3+0x880>
   50c10:	98c0004c 	andi	r3,r19,1
   50c14:	00800044 	movi	r2,1
   50c18:	000b883a 	mov	r5,zero
   50c1c:	0025883a 	mov	r18,zero
   50c20:	003e6106 	br	505a8 <__alt_data_end+0xfffd05a8>
   50c24:	85a1883a 	add	r16,r16,r22
   50c28:	8585803a 	cmpltu	r2,r16,r22
   50c2c:	1705883a 	add	r2,r2,fp
   50c30:	14a5883a 	add	r18,r2,r18
   50c34:	8c7fff84 	addi	r17,r17,-2
   50c38:	003f1106 	br	50880 <__alt_data_end+0xfffd0880>
   50c3c:	b589883a 	add	r4,r22,r22
   50c40:	25ad803a 	cmpltu	r22,r4,r22
   50c44:	b739883a 	add	fp,r22,fp
   50c48:	40bfff84 	addi	r2,r8,-2
   50c4c:	bf2f883a 	add	r23,r23,fp
   50c50:	202d883a 	mov	r22,r4
   50c54:	003f9306 	br	50aa4 <__alt_data_end+0xfffd0aa4>
   50c58:	013ff844 	movi	r4,-31
   50c5c:	2085c83a 	sub	r2,r4,r2
   50c60:	8888d83a 	srl	r4,r17,r2
   50c64:	00800804 	movi	r2,32
   50c68:	18802126 	beq	r3,r2,50cf0 <__divdf3+0x8c4>
   50c6c:	00801004 	movi	r2,64
   50c70:	10c5c83a 	sub	r2,r2,r3
   50c74:	8884983a 	sll	r2,r17,r2
   50c78:	1204b03a 	or	r2,r2,r8
   50c7c:	1004c03a 	cmpne	r2,r2,zero
   50c80:	2084b03a 	or	r2,r4,r2
   50c84:	144001cc 	andi	r17,r2,7
   50c88:	88000d1e 	bne	r17,zero,50cc0 <__divdf3+0x894>
   50c8c:	000b883a 	mov	r5,zero
   50c90:	1024d0fa 	srli	r18,r2,3
   50c94:	98c0004c 	andi	r3,r19,1
   50c98:	0005883a 	mov	r2,zero
   50c9c:	9464b03a 	or	r18,r18,r17
   50ca0:	003e4106 	br	505a8 <__alt_data_end+0xfffd05a8>
   50ca4:	1007883a 	mov	r3,r2
   50ca8:	0023883a 	mov	r17,zero
   50cac:	880a927a 	slli	r5,r17,9
   50cb0:	1805883a 	mov	r2,r3
   50cb4:	8822977a 	slli	r17,r17,29
   50cb8:	280ad33a 	srli	r5,r5,12
   50cbc:	003ff406 	br	50c90 <__alt_data_end+0xfffd0c90>
   50cc0:	10c003cc 	andi	r3,r2,15
   50cc4:	01000104 	movi	r4,4
   50cc8:	193ff626 	beq	r3,r4,50ca4 <__alt_data_end+0xfffd0ca4>
   50ccc:	0023883a 	mov	r17,zero
   50cd0:	003fca06 	br	50bfc <__alt_data_end+0xfffd0bfc>
   50cd4:	813fd336 	bltu	r16,r4,50c24 <__alt_data_end+0xfffd0c24>
   50cd8:	1023883a 	mov	r17,r2
   50cdc:	003fa806 	br	50b80 <__alt_data_end+0xfffd0b80>
   50ce0:	b0ffd636 	bltu	r22,r3,50c3c <__alt_data_end+0xfffd0c3c>
   50ce4:	1011883a 	mov	r8,r2
   50ce8:	b0ff341e 	bne	r22,r3,509bc <__alt_data_end+0xfffd09bc>
   50cec:	003f3406 	br	509c0 <__alt_data_end+0xfffd09c0>
   50cf0:	0005883a 	mov	r2,zero
   50cf4:	003fe006 	br	50c78 <__alt_data_end+0xfffd0c78>
   50cf8:	00800434 	movhi	r2,16
   50cfc:	89400234 	orhi	r5,r17,8
   50d00:	10bfffc4 	addi	r2,r2,-1
   50d04:	b807883a 	mov	r3,r23
   50d08:	288a703a 	and	r5,r5,r2
   50d0c:	4025883a 	mov	r18,r8
   50d10:	003e8206 	br	5071c <__alt_data_end+0xfffd071c>

00050d14 <__ledf2>:
   50d14:	2804d53a 	srli	r2,r5,20
   50d18:	3810d53a 	srli	r8,r7,20
   50d1c:	00c00434 	movhi	r3,16
   50d20:	18ffffc4 	addi	r3,r3,-1
   50d24:	1081ffcc 	andi	r2,r2,2047
   50d28:	0241ffc4 	movi	r9,2047
   50d2c:	28d4703a 	and	r10,r5,r3
   50d30:	4201ffcc 	andi	r8,r8,2047
   50d34:	38c6703a 	and	r3,r7,r3
   50d38:	280ad7fa 	srli	r5,r5,31
   50d3c:	380ed7fa 	srli	r7,r7,31
   50d40:	12401f26 	beq	r2,r9,50dc0 <__ledf2+0xac>
   50d44:	0241ffc4 	movi	r9,2047
   50d48:	42401426 	beq	r8,r9,50d9c <__ledf2+0x88>
   50d4c:	1000091e 	bne	r2,zero,50d74 <__ledf2+0x60>
   50d50:	2296b03a 	or	r11,r4,r10
   50d54:	5813003a 	cmpeq	r9,r11,zero
   50d58:	29403fcc 	andi	r5,r5,255
   50d5c:	40000a1e 	bne	r8,zero,50d88 <__ledf2+0x74>
   50d60:	30d8b03a 	or	r12,r6,r3
   50d64:	6000081e 	bne	r12,zero,50d88 <__ledf2+0x74>
   50d68:	0005883a 	mov	r2,zero
   50d6c:	5800111e 	bne	r11,zero,50db4 <__ledf2+0xa0>
   50d70:	f800283a 	ret
   50d74:	29403fcc 	andi	r5,r5,255
   50d78:	40000c1e 	bne	r8,zero,50dac <__ledf2+0x98>
   50d7c:	30d2b03a 	or	r9,r6,r3
   50d80:	48000c26 	beq	r9,zero,50db4 <__ledf2+0xa0>
   50d84:	0013883a 	mov	r9,zero
   50d88:	39c03fcc 	andi	r7,r7,255
   50d8c:	48000826 	beq	r9,zero,50db0 <__ledf2+0x9c>
   50d90:	38001126 	beq	r7,zero,50dd8 <__ledf2+0xc4>
   50d94:	00800044 	movi	r2,1
   50d98:	f800283a 	ret
   50d9c:	30d2b03a 	or	r9,r6,r3
   50da0:	483fea26 	beq	r9,zero,50d4c <__alt_data_end+0xfffd0d4c>
   50da4:	00800084 	movi	r2,2
   50da8:	f800283a 	ret
   50dac:	39c03fcc 	andi	r7,r7,255
   50db0:	39400726 	beq	r7,r5,50dd0 <__ledf2+0xbc>
   50db4:	2800081e 	bne	r5,zero,50dd8 <__ledf2+0xc4>
   50db8:	00800044 	movi	r2,1
   50dbc:	f800283a 	ret
   50dc0:	2292b03a 	or	r9,r4,r10
   50dc4:	483fdf26 	beq	r9,zero,50d44 <__alt_data_end+0xfffd0d44>
   50dc8:	00800084 	movi	r2,2
   50dcc:	f800283a 	ret
   50dd0:	4080030e 	bge	r8,r2,50de0 <__ledf2+0xcc>
   50dd4:	383fef26 	beq	r7,zero,50d94 <__alt_data_end+0xfffd0d94>
   50dd8:	00bfffc4 	movi	r2,-1
   50ddc:	f800283a 	ret
   50de0:	123feb16 	blt	r2,r8,50d90 <__alt_data_end+0xfffd0d90>
   50de4:	1abff336 	bltu	r3,r10,50db4 <__alt_data_end+0xfffd0db4>
   50de8:	50c00326 	beq	r10,r3,50df8 <__ledf2+0xe4>
   50dec:	50c0042e 	bgeu	r10,r3,50e00 <__ledf2+0xec>
   50df0:	283fe81e 	bne	r5,zero,50d94 <__alt_data_end+0xfffd0d94>
   50df4:	003ff806 	br	50dd8 <__alt_data_end+0xfffd0dd8>
   50df8:	313fee36 	bltu	r6,r4,50db4 <__alt_data_end+0xfffd0db4>
   50dfc:	21bffc36 	bltu	r4,r6,50df0 <__alt_data_end+0xfffd0df0>
   50e00:	0005883a 	mov	r2,zero
   50e04:	f800283a 	ret

00050e08 <__floatunsidf>:
   50e08:	defffe04 	addi	sp,sp,-8
   50e0c:	dc000015 	stw	r16,0(sp)
   50e10:	dfc00115 	stw	ra,4(sp)
   50e14:	2021883a 	mov	r16,r4
   50e18:	20002226 	beq	r4,zero,50ea4 <__floatunsidf+0x9c>
   50e1c:	00462c40 	call	462c4 <__clzsi2>
   50e20:	01010784 	movi	r4,1054
   50e24:	2089c83a 	sub	r4,r4,r2
   50e28:	01810cc4 	movi	r6,1075
   50e2c:	310dc83a 	sub	r6,r6,r4
   50e30:	00c007c4 	movi	r3,31
   50e34:	1980120e 	bge	r3,r6,50e80 <__floatunsidf+0x78>
   50e38:	00c104c4 	movi	r3,1043
   50e3c:	1907c83a 	sub	r3,r3,r4
   50e40:	80ca983a 	sll	r5,r16,r3
   50e44:	00800434 	movhi	r2,16
   50e48:	10bfffc4 	addi	r2,r2,-1
   50e4c:	2101ffcc 	andi	r4,r4,2047
   50e50:	0021883a 	mov	r16,zero
   50e54:	288a703a 	and	r5,r5,r2
   50e58:	2008953a 	slli	r4,r4,20
   50e5c:	00c00434 	movhi	r3,16
   50e60:	18ffffc4 	addi	r3,r3,-1
   50e64:	28c6703a 	and	r3,r5,r3
   50e68:	8005883a 	mov	r2,r16
   50e6c:	1906b03a 	or	r3,r3,r4
   50e70:	dfc00117 	ldw	ra,4(sp)
   50e74:	dc000017 	ldw	r16,0(sp)
   50e78:	dec00204 	addi	sp,sp,8
   50e7c:	f800283a 	ret
   50e80:	00c002c4 	movi	r3,11
   50e84:	188bc83a 	sub	r5,r3,r2
   50e88:	814ad83a 	srl	r5,r16,r5
   50e8c:	00c00434 	movhi	r3,16
   50e90:	18ffffc4 	addi	r3,r3,-1
   50e94:	81a0983a 	sll	r16,r16,r6
   50e98:	2101ffcc 	andi	r4,r4,2047
   50e9c:	28ca703a 	and	r5,r5,r3
   50ea0:	003fed06 	br	50e58 <__alt_data_end+0xfffd0e58>
   50ea4:	0009883a 	mov	r4,zero
   50ea8:	000b883a 	mov	r5,zero
   50eac:	003fea06 	br	50e58 <__alt_data_end+0xfffd0e58>

00050eb0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   50eb0:	defffe04 	addi	sp,sp,-8
   50eb4:	dfc00115 	stw	ra,4(sp)
   50eb8:	df000015 	stw	fp,0(sp)
   50ebc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   50ec0:	d0a00b17 	ldw	r2,-32724(gp)
   50ec4:	10000326 	beq	r2,zero,50ed4 <alt_get_errno+0x24>
   50ec8:	d0a00b17 	ldw	r2,-32724(gp)
   50ecc:	103ee83a 	callr	r2
   50ed0:	00000106 	br	50ed8 <alt_get_errno+0x28>
   50ed4:	d0a6d704 	addi	r2,gp,-25764
}
   50ed8:	e037883a 	mov	sp,fp
   50edc:	dfc00117 	ldw	ra,4(sp)
   50ee0:	df000017 	ldw	fp,0(sp)
   50ee4:	dec00204 	addi	sp,sp,8
   50ee8:	f800283a 	ret

00050eec <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   50eec:	defffb04 	addi	sp,sp,-20
   50ef0:	dfc00415 	stw	ra,16(sp)
   50ef4:	df000315 	stw	fp,12(sp)
   50ef8:	df000304 	addi	fp,sp,12
   50efc:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   50f00:	e0bfff17 	ldw	r2,-4(fp)
   50f04:	10000616 	blt	r2,zero,50f20 <close+0x34>
   50f08:	e0bfff17 	ldw	r2,-4(fp)
   50f0c:	10c00324 	muli	r3,r2,12
   50f10:	00800174 	movhi	r2,5
   50f14:	10918d04 	addi	r2,r2,17972
   50f18:	1885883a 	add	r2,r3,r2
   50f1c:	00000106 	br	50f24 <close+0x38>
   50f20:	0005883a 	mov	r2,zero
   50f24:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   50f28:	e0bffd17 	ldw	r2,-12(fp)
   50f2c:	10001926 	beq	r2,zero,50f94 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   50f30:	e0bffd17 	ldw	r2,-12(fp)
   50f34:	10800017 	ldw	r2,0(r2)
   50f38:	10800417 	ldw	r2,16(r2)
   50f3c:	10000626 	beq	r2,zero,50f58 <close+0x6c>
   50f40:	e0bffd17 	ldw	r2,-12(fp)
   50f44:	10800017 	ldw	r2,0(r2)
   50f48:	10800417 	ldw	r2,16(r2)
   50f4c:	e13ffd17 	ldw	r4,-12(fp)
   50f50:	103ee83a 	callr	r2
   50f54:	00000106 	br	50f5c <close+0x70>
   50f58:	0005883a 	mov	r2,zero
   50f5c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   50f60:	e13fff17 	ldw	r4,-4(fp)
   50f64:	00515ac0 	call	515ac <alt_release_fd>
    if (rval < 0)
   50f68:	e0bffe17 	ldw	r2,-8(fp)
   50f6c:	1000070e 	bge	r2,zero,50f8c <close+0xa0>
    {
      ALT_ERRNO = -rval;
   50f70:	0050eb00 	call	50eb0 <alt_get_errno>
   50f74:	1007883a 	mov	r3,r2
   50f78:	e0bffe17 	ldw	r2,-8(fp)
   50f7c:	0085c83a 	sub	r2,zero,r2
   50f80:	18800015 	stw	r2,0(r3)
      return -1;
   50f84:	00bfffc4 	movi	r2,-1
   50f88:	00000706 	br	50fa8 <close+0xbc>
    }
    return 0;
   50f8c:	0005883a 	mov	r2,zero
   50f90:	00000506 	br	50fa8 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   50f94:	0050eb00 	call	50eb0 <alt_get_errno>
   50f98:	1007883a 	mov	r3,r2
   50f9c:	00801444 	movi	r2,81
   50fa0:	18800015 	stw	r2,0(r3)
    return -1;
   50fa4:	00bfffc4 	movi	r2,-1
  }
}
   50fa8:	e037883a 	mov	sp,fp
   50fac:	dfc00117 	ldw	ra,4(sp)
   50fb0:	df000017 	ldw	fp,0(sp)
   50fb4:	dec00204 	addi	sp,sp,8
   50fb8:	f800283a 	ret

00050fbc <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   50fbc:	defffc04 	addi	sp,sp,-16
   50fc0:	df000315 	stw	fp,12(sp)
   50fc4:	df000304 	addi	fp,sp,12
   50fc8:	e13ffd15 	stw	r4,-12(fp)
   50fcc:	e17ffe15 	stw	r5,-8(fp)
   50fd0:	e1bfff15 	stw	r6,-4(fp)
  return len;
   50fd4:	e0bfff17 	ldw	r2,-4(fp)
}
   50fd8:	e037883a 	mov	sp,fp
   50fdc:	df000017 	ldw	fp,0(sp)
   50fe0:	dec00104 	addi	sp,sp,4
   50fe4:	f800283a 	ret

00050fe8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   50fe8:	defffe04 	addi	sp,sp,-8
   50fec:	dfc00115 	stw	ra,4(sp)
   50ff0:	df000015 	stw	fp,0(sp)
   50ff4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   50ff8:	d0a00b17 	ldw	r2,-32724(gp)
   50ffc:	10000326 	beq	r2,zero,5100c <alt_get_errno+0x24>
   51000:	d0a00b17 	ldw	r2,-32724(gp)
   51004:	103ee83a 	callr	r2
   51008:	00000106 	br	51010 <alt_get_errno+0x28>
   5100c:	d0a6d704 	addi	r2,gp,-25764
}
   51010:	e037883a 	mov	sp,fp
   51014:	dfc00117 	ldw	ra,4(sp)
   51018:	df000017 	ldw	fp,0(sp)
   5101c:	dec00204 	addi	sp,sp,8
   51020:	f800283a 	ret

00051024 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   51024:	defffb04 	addi	sp,sp,-20
   51028:	dfc00415 	stw	ra,16(sp)
   5102c:	df000315 	stw	fp,12(sp)
   51030:	df000304 	addi	fp,sp,12
   51034:	e13ffe15 	stw	r4,-8(fp)
   51038:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   5103c:	e0bffe17 	ldw	r2,-8(fp)
   51040:	10000616 	blt	r2,zero,5105c <fstat+0x38>
   51044:	e0bffe17 	ldw	r2,-8(fp)
   51048:	10c00324 	muli	r3,r2,12
   5104c:	00800174 	movhi	r2,5
   51050:	10918d04 	addi	r2,r2,17972
   51054:	1885883a 	add	r2,r3,r2
   51058:	00000106 	br	51060 <fstat+0x3c>
   5105c:	0005883a 	mov	r2,zero
   51060:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   51064:	e0bffd17 	ldw	r2,-12(fp)
   51068:	10001026 	beq	r2,zero,510ac <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   5106c:	e0bffd17 	ldw	r2,-12(fp)
   51070:	10800017 	ldw	r2,0(r2)
   51074:	10800817 	ldw	r2,32(r2)
   51078:	10000726 	beq	r2,zero,51098 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   5107c:	e0bffd17 	ldw	r2,-12(fp)
   51080:	10800017 	ldw	r2,0(r2)
   51084:	10800817 	ldw	r2,32(r2)
   51088:	e17fff17 	ldw	r5,-4(fp)
   5108c:	e13ffd17 	ldw	r4,-12(fp)
   51090:	103ee83a 	callr	r2
   51094:	00000a06 	br	510c0 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   51098:	e0bfff17 	ldw	r2,-4(fp)
   5109c:	00c80004 	movi	r3,8192
   510a0:	10c00115 	stw	r3,4(r2)
      return 0;
   510a4:	0005883a 	mov	r2,zero
   510a8:	00000506 	br	510c0 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   510ac:	0050fe80 	call	50fe8 <alt_get_errno>
   510b0:	1007883a 	mov	r3,r2
   510b4:	00801444 	movi	r2,81
   510b8:	18800015 	stw	r2,0(r3)
    return -1;
   510bc:	00bfffc4 	movi	r2,-1
  }
}
   510c0:	e037883a 	mov	sp,fp
   510c4:	dfc00117 	ldw	ra,4(sp)
   510c8:	df000017 	ldw	fp,0(sp)
   510cc:	dec00204 	addi	sp,sp,8
   510d0:	f800283a 	ret

000510d4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   510d4:	defffe04 	addi	sp,sp,-8
   510d8:	dfc00115 	stw	ra,4(sp)
   510dc:	df000015 	stw	fp,0(sp)
   510e0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   510e4:	d0a00b17 	ldw	r2,-32724(gp)
   510e8:	10000326 	beq	r2,zero,510f8 <alt_get_errno+0x24>
   510ec:	d0a00b17 	ldw	r2,-32724(gp)
   510f0:	103ee83a 	callr	r2
   510f4:	00000106 	br	510fc <alt_get_errno+0x28>
   510f8:	d0a6d704 	addi	r2,gp,-25764
}
   510fc:	e037883a 	mov	sp,fp
   51100:	dfc00117 	ldw	ra,4(sp)
   51104:	df000017 	ldw	fp,0(sp)
   51108:	dec00204 	addi	sp,sp,8
   5110c:	f800283a 	ret

00051110 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   51110:	deffed04 	addi	sp,sp,-76
   51114:	dfc01215 	stw	ra,72(sp)
   51118:	df001115 	stw	fp,68(sp)
   5111c:	df001104 	addi	fp,sp,68
   51120:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   51124:	e0bfff17 	ldw	r2,-4(fp)
   51128:	10000616 	blt	r2,zero,51144 <isatty+0x34>
   5112c:	e0bfff17 	ldw	r2,-4(fp)
   51130:	10c00324 	muli	r3,r2,12
   51134:	00800174 	movhi	r2,5
   51138:	10918d04 	addi	r2,r2,17972
   5113c:	1885883a 	add	r2,r3,r2
   51140:	00000106 	br	51148 <isatty+0x38>
   51144:	0005883a 	mov	r2,zero
   51148:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   5114c:	e0bfef17 	ldw	r2,-68(fp)
   51150:	10000e26 	beq	r2,zero,5118c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   51154:	e0bfef17 	ldw	r2,-68(fp)
   51158:	10800017 	ldw	r2,0(r2)
   5115c:	10800817 	ldw	r2,32(r2)
   51160:	1000021e 	bne	r2,zero,5116c <isatty+0x5c>
    {
      return 1;
   51164:	00800044 	movi	r2,1
   51168:	00000d06 	br	511a0 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   5116c:	e0bff004 	addi	r2,fp,-64
   51170:	100b883a 	mov	r5,r2
   51174:	e13fff17 	ldw	r4,-4(fp)
   51178:	00510240 	call	51024 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   5117c:	e0bff117 	ldw	r2,-60(fp)
   51180:	10880020 	cmpeqi	r2,r2,8192
   51184:	10803fcc 	andi	r2,r2,255
   51188:	00000506 	br	511a0 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   5118c:	00510d40 	call	510d4 <alt_get_errno>
   51190:	1007883a 	mov	r3,r2
   51194:	00801444 	movi	r2,81
   51198:	18800015 	stw	r2,0(r3)
    return 0;
   5119c:	0005883a 	mov	r2,zero
  }
}
   511a0:	e037883a 	mov	sp,fp
   511a4:	dfc00117 	ldw	ra,4(sp)
   511a8:	df000017 	ldw	fp,0(sp)
   511ac:	dec00204 	addi	sp,sp,8
   511b0:	f800283a 	ret

000511b4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   511b4:	defffc04 	addi	sp,sp,-16
   511b8:	df000315 	stw	fp,12(sp)
   511bc:	df000304 	addi	fp,sp,12
   511c0:	e13ffd15 	stw	r4,-12(fp)
   511c4:	e17ffe15 	stw	r5,-8(fp)
   511c8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   511cc:	e0fffe17 	ldw	r3,-8(fp)
   511d0:	e0bffd17 	ldw	r2,-12(fp)
   511d4:	18800c26 	beq	r3,r2,51208 <alt_load_section+0x54>
  {
    while( to != end )
   511d8:	00000806 	br	511fc <alt_load_section+0x48>
    {
      *to++ = *from++;
   511dc:	e0bffe17 	ldw	r2,-8(fp)
   511e0:	10c00104 	addi	r3,r2,4
   511e4:	e0fffe15 	stw	r3,-8(fp)
   511e8:	e0fffd17 	ldw	r3,-12(fp)
   511ec:	19000104 	addi	r4,r3,4
   511f0:	e13ffd15 	stw	r4,-12(fp)
   511f4:	18c00017 	ldw	r3,0(r3)
   511f8:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   511fc:	e0fffe17 	ldw	r3,-8(fp)
   51200:	e0bfff17 	ldw	r2,-4(fp)
   51204:	18bff51e 	bne	r3,r2,511dc <__alt_data_end+0xfffd11dc>
    {
      *to++ = *from++;
    }
  }
}
   51208:	0001883a 	nop
   5120c:	e037883a 	mov	sp,fp
   51210:	df000017 	ldw	fp,0(sp)
   51214:	dec00104 	addi	sp,sp,4
   51218:	f800283a 	ret

0005121c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   5121c:	defffe04 	addi	sp,sp,-8
   51220:	dfc00115 	stw	ra,4(sp)
   51224:	df000015 	stw	fp,0(sp)
   51228:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   5122c:	01800174 	movhi	r6,5
   51230:	31961504 	addi	r6,r6,22612
   51234:	01400174 	movhi	r5,5
   51238:	294f5a04 	addi	r5,r5,15720
   5123c:	01000174 	movhi	r4,5
   51240:	21161504 	addi	r4,r4,22612
   51244:	00511b40 	call	511b4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   51248:	01800134 	movhi	r6,4
   5124c:	31809104 	addi	r6,r6,580
   51250:	01400134 	movhi	r5,4
   51254:	29400804 	addi	r5,r5,32
   51258:	01000134 	movhi	r4,4
   5125c:	21000804 	addi	r4,r4,32
   51260:	00511b40 	call	511b4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   51264:	01800174 	movhi	r6,5
   51268:	318f5a04 	addi	r6,r6,15720
   5126c:	01400174 	movhi	r5,5
   51270:	294dbc04 	addi	r5,r5,14064
   51274:	01000174 	movhi	r4,5
   51278:	210dbc04 	addi	r4,r4,14064
   5127c:	00511b40 	call	511b4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   51280:	00525dc0 	call	525dc <alt_dcache_flush_all>
  alt_icache_flush_all();
   51284:	00527c40 	call	527c4 <alt_icache_flush_all>
}
   51288:	0001883a 	nop
   5128c:	e037883a 	mov	sp,fp
   51290:	dfc00117 	ldw	ra,4(sp)
   51294:	df000017 	ldw	fp,0(sp)
   51298:	dec00204 	addi	sp,sp,8
   5129c:	f800283a 	ret

000512a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   512a0:	defffe04 	addi	sp,sp,-8
   512a4:	dfc00115 	stw	ra,4(sp)
   512a8:	df000015 	stw	fp,0(sp)
   512ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   512b0:	d0a00b17 	ldw	r2,-32724(gp)
   512b4:	10000326 	beq	r2,zero,512c4 <alt_get_errno+0x24>
   512b8:	d0a00b17 	ldw	r2,-32724(gp)
   512bc:	103ee83a 	callr	r2
   512c0:	00000106 	br	512c8 <alt_get_errno+0x28>
   512c4:	d0a6d704 	addi	r2,gp,-25764
}
   512c8:	e037883a 	mov	sp,fp
   512cc:	dfc00117 	ldw	ra,4(sp)
   512d0:	df000017 	ldw	fp,0(sp)
   512d4:	dec00204 	addi	sp,sp,8
   512d8:	f800283a 	ret

000512dc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   512dc:	defff904 	addi	sp,sp,-28
   512e0:	dfc00615 	stw	ra,24(sp)
   512e4:	df000515 	stw	fp,20(sp)
   512e8:	df000504 	addi	fp,sp,20
   512ec:	e13ffd15 	stw	r4,-12(fp)
   512f0:	e17ffe15 	stw	r5,-8(fp)
   512f4:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   512f8:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   512fc:	e0bffd17 	ldw	r2,-12(fp)
   51300:	10000616 	blt	r2,zero,5131c <lseek+0x40>
   51304:	e0bffd17 	ldw	r2,-12(fp)
   51308:	10c00324 	muli	r3,r2,12
   5130c:	00800174 	movhi	r2,5
   51310:	10918d04 	addi	r2,r2,17972
   51314:	1885883a 	add	r2,r3,r2
   51318:	00000106 	br	51320 <lseek+0x44>
   5131c:	0005883a 	mov	r2,zero
   51320:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   51324:	e0bffc17 	ldw	r2,-16(fp)
   51328:	10001026 	beq	r2,zero,5136c <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   5132c:	e0bffc17 	ldw	r2,-16(fp)
   51330:	10800017 	ldw	r2,0(r2)
   51334:	10800717 	ldw	r2,28(r2)
   51338:	10000926 	beq	r2,zero,51360 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   5133c:	e0bffc17 	ldw	r2,-16(fp)
   51340:	10800017 	ldw	r2,0(r2)
   51344:	10800717 	ldw	r2,28(r2)
   51348:	e1bfff17 	ldw	r6,-4(fp)
   5134c:	e17ffe17 	ldw	r5,-8(fp)
   51350:	e13ffc17 	ldw	r4,-16(fp)
   51354:	103ee83a 	callr	r2
   51358:	e0bffb15 	stw	r2,-20(fp)
   5135c:	00000506 	br	51374 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   51360:	00bfde84 	movi	r2,-134
   51364:	e0bffb15 	stw	r2,-20(fp)
   51368:	00000206 	br	51374 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   5136c:	00bfebc4 	movi	r2,-81
   51370:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   51374:	e0bffb17 	ldw	r2,-20(fp)
   51378:	1000070e 	bge	r2,zero,51398 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   5137c:	00512a00 	call	512a0 <alt_get_errno>
   51380:	1007883a 	mov	r3,r2
   51384:	e0bffb17 	ldw	r2,-20(fp)
   51388:	0085c83a 	sub	r2,zero,r2
   5138c:	18800015 	stw	r2,0(r3)
    rc = -1;
   51390:	00bfffc4 	movi	r2,-1
   51394:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   51398:	e0bffb17 	ldw	r2,-20(fp)
}
   5139c:	e037883a 	mov	sp,fp
   513a0:	dfc00117 	ldw	ra,4(sp)
   513a4:	df000017 	ldw	fp,0(sp)
   513a8:	dec00204 	addi	sp,sp,8
   513ac:	f800283a 	ret

000513b0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   513b0:	defffd04 	addi	sp,sp,-12
   513b4:	dfc00215 	stw	ra,8(sp)
   513b8:	df000115 	stw	fp,4(sp)
   513bc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   513c0:	0009883a 	mov	r4,zero
   513c4:	00518280 	call	51828 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   513c8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   513cc:	00518600 	call	51860 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   513d0:	01800174 	movhi	r6,5
   513d4:	318f5004 	addi	r6,r6,15680
   513d8:	01400174 	movhi	r5,5
   513dc:	294f5004 	addi	r5,r5,15680
   513e0:	01000174 	movhi	r4,5
   513e4:	210f5004 	addi	r4,r4,15680
   513e8:	0052b5c0 	call	52b5c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   513ec:	00527040 	call	52704 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   513f0:	01000174 	movhi	r4,5
   513f4:	2109d904 	addi	r4,r4,10084
   513f8:	005335c0 	call	5335c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   513fc:	d0a6d817 	ldw	r2,-25760(gp)
   51400:	d0e6d917 	ldw	r3,-25756(gp)
   51404:	d126da17 	ldw	r4,-25752(gp)
   51408:	200d883a 	mov	r6,r4
   5140c:	180b883a 	mov	r5,r3
   51410:	1009883a 	mov	r4,r2
   51414:	0040d1c0 	call	40d1c <main>
   51418:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   5141c:	01000044 	movi	r4,1
   51420:	0050eec0 	call	50eec <close>
  exit (result);
   51424:	e13fff17 	ldw	r4,-4(fp)
   51428:	00533700 	call	53370 <exit>

0005142c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   5142c:	defffe04 	addi	sp,sp,-8
   51430:	df000115 	stw	fp,4(sp)
   51434:	df000104 	addi	fp,sp,4
   51438:	e13fff15 	stw	r4,-4(fp)
}
   5143c:	0001883a 	nop
   51440:	e037883a 	mov	sp,fp
   51444:	df000017 	ldw	fp,0(sp)
   51448:	dec00104 	addi	sp,sp,4
   5144c:	f800283a 	ret

00051450 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   51450:	defffe04 	addi	sp,sp,-8
   51454:	df000115 	stw	fp,4(sp)
   51458:	df000104 	addi	fp,sp,4
   5145c:	e13fff15 	stw	r4,-4(fp)
}
   51460:	0001883a 	nop
   51464:	e037883a 	mov	sp,fp
   51468:	df000017 	ldw	fp,0(sp)
   5146c:	dec00104 	addi	sp,sp,4
   51470:	f800283a 	ret

00051474 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   51474:	defffe04 	addi	sp,sp,-8
   51478:	dfc00115 	stw	ra,4(sp)
   5147c:	df000015 	stw	fp,0(sp)
   51480:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   51484:	d0a00b17 	ldw	r2,-32724(gp)
   51488:	10000326 	beq	r2,zero,51498 <alt_get_errno+0x24>
   5148c:	d0a00b17 	ldw	r2,-32724(gp)
   51490:	103ee83a 	callr	r2
   51494:	00000106 	br	5149c <alt_get_errno+0x28>
   51498:	d0a6d704 	addi	r2,gp,-25764
}
   5149c:	e037883a 	mov	sp,fp
   514a0:	dfc00117 	ldw	ra,4(sp)
   514a4:	df000017 	ldw	fp,0(sp)
   514a8:	dec00204 	addi	sp,sp,8
   514ac:	f800283a 	ret

000514b0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   514b0:	defff904 	addi	sp,sp,-28
   514b4:	dfc00615 	stw	ra,24(sp)
   514b8:	df000515 	stw	fp,20(sp)
   514bc:	df000504 	addi	fp,sp,20
   514c0:	e13ffd15 	stw	r4,-12(fp)
   514c4:	e17ffe15 	stw	r5,-8(fp)
   514c8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   514cc:	e0bffd17 	ldw	r2,-12(fp)
   514d0:	10000616 	blt	r2,zero,514ec <read+0x3c>
   514d4:	e0bffd17 	ldw	r2,-12(fp)
   514d8:	10c00324 	muli	r3,r2,12
   514dc:	00800174 	movhi	r2,5
   514e0:	10918d04 	addi	r2,r2,17972
   514e4:	1885883a 	add	r2,r3,r2
   514e8:	00000106 	br	514f0 <read+0x40>
   514ec:	0005883a 	mov	r2,zero
   514f0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   514f4:	e0bffb17 	ldw	r2,-20(fp)
   514f8:	10002226 	beq	r2,zero,51584 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   514fc:	e0bffb17 	ldw	r2,-20(fp)
   51500:	10800217 	ldw	r2,8(r2)
   51504:	108000cc 	andi	r2,r2,3
   51508:	10800060 	cmpeqi	r2,r2,1
   5150c:	1000181e 	bne	r2,zero,51570 <read+0xc0>
        (fd->dev->read))
   51510:	e0bffb17 	ldw	r2,-20(fp)
   51514:	10800017 	ldw	r2,0(r2)
   51518:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   5151c:	10001426 	beq	r2,zero,51570 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   51520:	e0bffb17 	ldw	r2,-20(fp)
   51524:	10800017 	ldw	r2,0(r2)
   51528:	10800517 	ldw	r2,20(r2)
   5152c:	e0ffff17 	ldw	r3,-4(fp)
   51530:	180d883a 	mov	r6,r3
   51534:	e17ffe17 	ldw	r5,-8(fp)
   51538:	e13ffb17 	ldw	r4,-20(fp)
   5153c:	103ee83a 	callr	r2
   51540:	e0bffc15 	stw	r2,-16(fp)
   51544:	e0bffc17 	ldw	r2,-16(fp)
   51548:	1000070e 	bge	r2,zero,51568 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   5154c:	00514740 	call	51474 <alt_get_errno>
   51550:	1007883a 	mov	r3,r2
   51554:	e0bffc17 	ldw	r2,-16(fp)
   51558:	0085c83a 	sub	r2,zero,r2
   5155c:	18800015 	stw	r2,0(r3)
          return -1;
   51560:	00bfffc4 	movi	r2,-1
   51564:	00000c06 	br	51598 <read+0xe8>
        }
        return rval;
   51568:	e0bffc17 	ldw	r2,-16(fp)
   5156c:	00000a06 	br	51598 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   51570:	00514740 	call	51474 <alt_get_errno>
   51574:	1007883a 	mov	r3,r2
   51578:	00800344 	movi	r2,13
   5157c:	18800015 	stw	r2,0(r3)
   51580:	00000406 	br	51594 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   51584:	00514740 	call	51474 <alt_get_errno>
   51588:	1007883a 	mov	r3,r2
   5158c:	00801444 	movi	r2,81
   51590:	18800015 	stw	r2,0(r3)
  }
  return -1;
   51594:	00bfffc4 	movi	r2,-1
}
   51598:	e037883a 	mov	sp,fp
   5159c:	dfc00117 	ldw	ra,4(sp)
   515a0:	df000017 	ldw	fp,0(sp)
   515a4:	dec00204 	addi	sp,sp,8
   515a8:	f800283a 	ret

000515ac <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   515ac:	defffe04 	addi	sp,sp,-8
   515b0:	df000115 	stw	fp,4(sp)
   515b4:	df000104 	addi	fp,sp,4
   515b8:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   515bc:	e0bfff17 	ldw	r2,-4(fp)
   515c0:	108000d0 	cmplti	r2,r2,3
   515c4:	10000d1e 	bne	r2,zero,515fc <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   515c8:	00800174 	movhi	r2,5
   515cc:	10918d04 	addi	r2,r2,17972
   515d0:	e0ffff17 	ldw	r3,-4(fp)
   515d4:	18c00324 	muli	r3,r3,12
   515d8:	10c5883a 	add	r2,r2,r3
   515dc:	10800204 	addi	r2,r2,8
   515e0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   515e4:	00800174 	movhi	r2,5
   515e8:	10918d04 	addi	r2,r2,17972
   515ec:	e0ffff17 	ldw	r3,-4(fp)
   515f0:	18c00324 	muli	r3,r3,12
   515f4:	10c5883a 	add	r2,r2,r3
   515f8:	10000015 	stw	zero,0(r2)
  }
}
   515fc:	0001883a 	nop
   51600:	e037883a 	mov	sp,fp
   51604:	df000017 	ldw	fp,0(sp)
   51608:	dec00104 	addi	sp,sp,4
   5160c:	f800283a 	ret

00051610 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   51610:	defff904 	addi	sp,sp,-28
   51614:	df000615 	stw	fp,24(sp)
   51618:	df000604 	addi	fp,sp,24
   5161c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   51620:	0005303a 	rdctl	r2,status
   51624:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   51628:	e0fffe17 	ldw	r3,-8(fp)
   5162c:	00bfff84 	movi	r2,-2
   51630:	1884703a 	and	r2,r3,r2
   51634:	1001703a 	wrctl	status,r2
  
  return context;
   51638:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   5163c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   51640:	d0a00c17 	ldw	r2,-32720(gp)
   51644:	10c000c4 	addi	r3,r2,3
   51648:	00bfff04 	movi	r2,-4
   5164c:	1884703a 	and	r2,r3,r2
   51650:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   51654:	d0e00c17 	ldw	r3,-32720(gp)
   51658:	e0bfff17 	ldw	r2,-4(fp)
   5165c:	1887883a 	add	r3,r3,r2
   51660:	00800234 	movhi	r2,8
   51664:	10800004 	addi	r2,r2,0
   51668:	10c0062e 	bgeu	r2,r3,51684 <sbrk+0x74>
   5166c:	e0bffb17 	ldw	r2,-20(fp)
   51670:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   51674:	e0bffa17 	ldw	r2,-24(fp)
   51678:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   5167c:	00bfffc4 	movi	r2,-1
   51680:	00000b06 	br	516b0 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   51684:	d0a00c17 	ldw	r2,-32720(gp)
   51688:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   5168c:	d0e00c17 	ldw	r3,-32720(gp)
   51690:	e0bfff17 	ldw	r2,-4(fp)
   51694:	1885883a 	add	r2,r3,r2
   51698:	d0a00c15 	stw	r2,-32720(gp)
   5169c:	e0bffb17 	ldw	r2,-20(fp)
   516a0:	e0bffc15 	stw	r2,-16(fp)
   516a4:	e0bffc17 	ldw	r2,-16(fp)
   516a8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   516ac:	e0bffd17 	ldw	r2,-12(fp)
} 
   516b0:	e037883a 	mov	sp,fp
   516b4:	df000017 	ldw	fp,0(sp)
   516b8:	dec00104 	addi	sp,sp,4
   516bc:	f800283a 	ret

000516c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   516c0:	defffe04 	addi	sp,sp,-8
   516c4:	dfc00115 	stw	ra,4(sp)
   516c8:	df000015 	stw	fp,0(sp)
   516cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   516d0:	d0a00b17 	ldw	r2,-32724(gp)
   516d4:	10000326 	beq	r2,zero,516e4 <alt_get_errno+0x24>
   516d8:	d0a00b17 	ldw	r2,-32724(gp)
   516dc:	103ee83a 	callr	r2
   516e0:	00000106 	br	516e8 <alt_get_errno+0x28>
   516e4:	d0a6d704 	addi	r2,gp,-25764
}
   516e8:	e037883a 	mov	sp,fp
   516ec:	dfc00117 	ldw	ra,4(sp)
   516f0:	df000017 	ldw	fp,0(sp)
   516f4:	dec00204 	addi	sp,sp,8
   516f8:	f800283a 	ret

000516fc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   516fc:	defff904 	addi	sp,sp,-28
   51700:	dfc00615 	stw	ra,24(sp)
   51704:	df000515 	stw	fp,20(sp)
   51708:	df000504 	addi	fp,sp,20
   5170c:	e13ffd15 	stw	r4,-12(fp)
   51710:	e17ffe15 	stw	r5,-8(fp)
   51714:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   51718:	e0bffd17 	ldw	r2,-12(fp)
   5171c:	10000616 	blt	r2,zero,51738 <write+0x3c>
   51720:	e0bffd17 	ldw	r2,-12(fp)
   51724:	10c00324 	muli	r3,r2,12
   51728:	00800174 	movhi	r2,5
   5172c:	10918d04 	addi	r2,r2,17972
   51730:	1885883a 	add	r2,r3,r2
   51734:	00000106 	br	5173c <write+0x40>
   51738:	0005883a 	mov	r2,zero
   5173c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   51740:	e0bffb17 	ldw	r2,-20(fp)
   51744:	10002126 	beq	r2,zero,517cc <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   51748:	e0bffb17 	ldw	r2,-20(fp)
   5174c:	10800217 	ldw	r2,8(r2)
   51750:	108000cc 	andi	r2,r2,3
   51754:	10001826 	beq	r2,zero,517b8 <write+0xbc>
   51758:	e0bffb17 	ldw	r2,-20(fp)
   5175c:	10800017 	ldw	r2,0(r2)
   51760:	10800617 	ldw	r2,24(r2)
   51764:	10001426 	beq	r2,zero,517b8 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   51768:	e0bffb17 	ldw	r2,-20(fp)
   5176c:	10800017 	ldw	r2,0(r2)
   51770:	10800617 	ldw	r2,24(r2)
   51774:	e0ffff17 	ldw	r3,-4(fp)
   51778:	180d883a 	mov	r6,r3
   5177c:	e17ffe17 	ldw	r5,-8(fp)
   51780:	e13ffb17 	ldw	r4,-20(fp)
   51784:	103ee83a 	callr	r2
   51788:	e0bffc15 	stw	r2,-16(fp)
   5178c:	e0bffc17 	ldw	r2,-16(fp)
   51790:	1000070e 	bge	r2,zero,517b0 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   51794:	00516c00 	call	516c0 <alt_get_errno>
   51798:	1007883a 	mov	r3,r2
   5179c:	e0bffc17 	ldw	r2,-16(fp)
   517a0:	0085c83a 	sub	r2,zero,r2
   517a4:	18800015 	stw	r2,0(r3)
        return -1;
   517a8:	00bfffc4 	movi	r2,-1
   517ac:	00000c06 	br	517e0 <write+0xe4>
      }
      return rval;
   517b0:	e0bffc17 	ldw	r2,-16(fp)
   517b4:	00000a06 	br	517e0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   517b8:	00516c00 	call	516c0 <alt_get_errno>
   517bc:	1007883a 	mov	r3,r2
   517c0:	00800344 	movi	r2,13
   517c4:	18800015 	stw	r2,0(r3)
   517c8:	00000406 	br	517dc <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   517cc:	00516c00 	call	516c0 <alt_get_errno>
   517d0:	1007883a 	mov	r3,r2
   517d4:	00801444 	movi	r2,81
   517d8:	18800015 	stw	r2,0(r3)
  }
  return -1;
   517dc:	00bfffc4 	movi	r2,-1
}
   517e0:	e037883a 	mov	sp,fp
   517e4:	dfc00117 	ldw	ra,4(sp)
   517e8:	df000017 	ldw	fp,0(sp)
   517ec:	dec00204 	addi	sp,sp,8
   517f0:	f800283a 	ret

000517f4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   517f4:	defffd04 	addi	sp,sp,-12
   517f8:	dfc00215 	stw	ra,8(sp)
   517fc:	df000115 	stw	fp,4(sp)
   51800:	df000104 	addi	fp,sp,4
   51804:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   51808:	d1600804 	addi	r5,gp,-32736
   5180c:	e13fff17 	ldw	r4,-4(fp)
   51810:	00526600 	call	52660 <alt_dev_llist_insert>
}
   51814:	e037883a 	mov	sp,fp
   51818:	dfc00117 	ldw	ra,4(sp)
   5181c:	df000017 	ldw	fp,0(sp)
   51820:	dec00204 	addi	sp,sp,8
   51824:	f800283a 	ret

00051828 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   51828:	defffd04 	addi	sp,sp,-12
   5182c:	dfc00215 	stw	ra,8(sp)
   51830:	df000115 	stw	fp,4(sp)
   51834:	df000104 	addi	fp,sp,4
   51838:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   5183c:	0052fd00 	call	52fd0 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   51840:	00800044 	movi	r2,1
   51844:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   51848:	0001883a 	nop
   5184c:	e037883a 	mov	sp,fp
   51850:	dfc00117 	ldw	ra,4(sp)
   51854:	df000017 	ldw	fp,0(sp)
   51858:	dec00204 	addi	sp,sp,8
   5185c:	f800283a 	ret

00051860 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   51860:	defffe04 	addi	sp,sp,-8
   51864:	dfc00115 	stw	ra,4(sp)
   51868:	df000015 	stw	fp,0(sp)
   5186c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   51870:	000d883a 	mov	r6,zero
   51874:	000b883a 	mov	r5,zero
   51878:	01000174 	movhi	r4,5
   5187c:	2111f704 	addi	r4,r4,18396
   51880:	0051a1c0 	call	51a1c <altera_avalon_jtag_uart_init>
   51884:	01000174 	movhi	r4,5
   51888:	2111ed04 	addi	r4,r4,18356
   5188c:	00517f40 	call	517f4 <alt_dev_reg>
    ALTERA_AVALON_PERFORMANCE_COUNTER_INIT ( PERFORMANCE_COUNTER_0, performance_counter_0);
   51890:	00c00044 	movi	r3,1
   51894:	00800234 	movhi	r2,8
   51898:	10861004 	addi	r2,r2,6208
   5189c:	10c00035 	stwio	r3,0(r2)
}
   518a0:	0001883a 	nop
   518a4:	e037883a 	mov	sp,fp
   518a8:	dfc00117 	ldw	ra,4(sp)
   518ac:	df000017 	ldw	fp,0(sp)
   518b0:	dec00204 	addi	sp,sp,8
   518b4:	f800283a 	ret

000518b8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   518b8:	defffa04 	addi	sp,sp,-24
   518bc:	dfc00515 	stw	ra,20(sp)
   518c0:	df000415 	stw	fp,16(sp)
   518c4:	df000404 	addi	fp,sp,16
   518c8:	e13ffd15 	stw	r4,-12(fp)
   518cc:	e17ffe15 	stw	r5,-8(fp)
   518d0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   518d4:	e0bffd17 	ldw	r2,-12(fp)
   518d8:	10800017 	ldw	r2,0(r2)
   518dc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   518e0:	e0bffc17 	ldw	r2,-16(fp)
   518e4:	10c00a04 	addi	r3,r2,40
   518e8:	e0bffd17 	ldw	r2,-12(fp)
   518ec:	10800217 	ldw	r2,8(r2)
   518f0:	100f883a 	mov	r7,r2
   518f4:	e1bfff17 	ldw	r6,-4(fp)
   518f8:	e17ffe17 	ldw	r5,-8(fp)
   518fc:	1809883a 	mov	r4,r3
   51900:	0051ee00 	call	51ee0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   51904:	e037883a 	mov	sp,fp
   51908:	dfc00117 	ldw	ra,4(sp)
   5190c:	df000017 	ldw	fp,0(sp)
   51910:	dec00204 	addi	sp,sp,8
   51914:	f800283a 	ret

00051918 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   51918:	defffa04 	addi	sp,sp,-24
   5191c:	dfc00515 	stw	ra,20(sp)
   51920:	df000415 	stw	fp,16(sp)
   51924:	df000404 	addi	fp,sp,16
   51928:	e13ffd15 	stw	r4,-12(fp)
   5192c:	e17ffe15 	stw	r5,-8(fp)
   51930:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   51934:	e0bffd17 	ldw	r2,-12(fp)
   51938:	10800017 	ldw	r2,0(r2)
   5193c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   51940:	e0bffc17 	ldw	r2,-16(fp)
   51944:	10c00a04 	addi	r3,r2,40
   51948:	e0bffd17 	ldw	r2,-12(fp)
   5194c:	10800217 	ldw	r2,8(r2)
   51950:	100f883a 	mov	r7,r2
   51954:	e1bfff17 	ldw	r6,-4(fp)
   51958:	e17ffe17 	ldw	r5,-8(fp)
   5195c:	1809883a 	mov	r4,r3
   51960:	00520fc0 	call	520fc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   51964:	e037883a 	mov	sp,fp
   51968:	dfc00117 	ldw	ra,4(sp)
   5196c:	df000017 	ldw	fp,0(sp)
   51970:	dec00204 	addi	sp,sp,8
   51974:	f800283a 	ret

00051978 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   51978:	defffc04 	addi	sp,sp,-16
   5197c:	dfc00315 	stw	ra,12(sp)
   51980:	df000215 	stw	fp,8(sp)
   51984:	df000204 	addi	fp,sp,8
   51988:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   5198c:	e0bfff17 	ldw	r2,-4(fp)
   51990:	10800017 	ldw	r2,0(r2)
   51994:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   51998:	e0bffe17 	ldw	r2,-8(fp)
   5199c:	10c00a04 	addi	r3,r2,40
   519a0:	e0bfff17 	ldw	r2,-4(fp)
   519a4:	10800217 	ldw	r2,8(r2)
   519a8:	100b883a 	mov	r5,r2
   519ac:	1809883a 	mov	r4,r3
   519b0:	0051d880 	call	51d88 <altera_avalon_jtag_uart_close>
}
   519b4:	e037883a 	mov	sp,fp
   519b8:	dfc00117 	ldw	ra,4(sp)
   519bc:	df000017 	ldw	fp,0(sp)
   519c0:	dec00204 	addi	sp,sp,8
   519c4:	f800283a 	ret

000519c8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   519c8:	defffa04 	addi	sp,sp,-24
   519cc:	dfc00515 	stw	ra,20(sp)
   519d0:	df000415 	stw	fp,16(sp)
   519d4:	df000404 	addi	fp,sp,16
   519d8:	e13ffd15 	stw	r4,-12(fp)
   519dc:	e17ffe15 	stw	r5,-8(fp)
   519e0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   519e4:	e0bffd17 	ldw	r2,-12(fp)
   519e8:	10800017 	ldw	r2,0(r2)
   519ec:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   519f0:	e0bffc17 	ldw	r2,-16(fp)
   519f4:	10800a04 	addi	r2,r2,40
   519f8:	e1bfff17 	ldw	r6,-4(fp)
   519fc:	e17ffe17 	ldw	r5,-8(fp)
   51a00:	1009883a 	mov	r4,r2
   51a04:	0051df00 	call	51df0 <altera_avalon_jtag_uart_ioctl>
}
   51a08:	e037883a 	mov	sp,fp
   51a0c:	dfc00117 	ldw	ra,4(sp)
   51a10:	df000017 	ldw	fp,0(sp)
   51a14:	dec00204 	addi	sp,sp,8
   51a18:	f800283a 	ret

00051a1c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   51a1c:	defffa04 	addi	sp,sp,-24
   51a20:	dfc00515 	stw	ra,20(sp)
   51a24:	df000415 	stw	fp,16(sp)
   51a28:	df000404 	addi	fp,sp,16
   51a2c:	e13ffd15 	stw	r4,-12(fp)
   51a30:	e17ffe15 	stw	r5,-8(fp)
   51a34:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   51a38:	e0bffd17 	ldw	r2,-12(fp)
   51a3c:	00c00044 	movi	r3,1
   51a40:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   51a44:	e0bffd17 	ldw	r2,-12(fp)
   51a48:	10800017 	ldw	r2,0(r2)
   51a4c:	10800104 	addi	r2,r2,4
   51a50:	1007883a 	mov	r3,r2
   51a54:	e0bffd17 	ldw	r2,-12(fp)
   51a58:	10800817 	ldw	r2,32(r2)
   51a5c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   51a60:	e0bffe17 	ldw	r2,-8(fp)
   51a64:	e0ffff17 	ldw	r3,-4(fp)
   51a68:	d8000015 	stw	zero,0(sp)
   51a6c:	e1fffd17 	ldw	r7,-12(fp)
   51a70:	01800174 	movhi	r6,5
   51a74:	3186b704 	addi	r6,r6,6876
   51a78:	180b883a 	mov	r5,r3
   51a7c:	1009883a 	mov	r4,r2
   51a80:	00527f80 	call	527f8 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   51a84:	e0bffd17 	ldw	r2,-12(fp)
   51a88:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   51a8c:	e0bffd17 	ldw	r2,-12(fp)
   51a90:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   51a94:	d0e6dc17 	ldw	r3,-25744(gp)
   51a98:	e1fffd17 	ldw	r7,-12(fp)
   51a9c:	01800174 	movhi	r6,5
   51aa0:	31873a04 	addi	r6,r6,7400
   51aa4:	180b883a 	mov	r5,r3
   51aa8:	1009883a 	mov	r4,r2
   51aac:	00524b00 	call	524b0 <alt_alarm_start>
   51ab0:	1000040e 	bge	r2,zero,51ac4 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   51ab4:	e0fffd17 	ldw	r3,-12(fp)
   51ab8:	00a00034 	movhi	r2,32768
   51abc:	10bfffc4 	addi	r2,r2,-1
   51ac0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   51ac4:	0001883a 	nop
   51ac8:	e037883a 	mov	sp,fp
   51acc:	dfc00117 	ldw	ra,4(sp)
   51ad0:	df000017 	ldw	fp,0(sp)
   51ad4:	dec00204 	addi	sp,sp,8
   51ad8:	f800283a 	ret

00051adc <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   51adc:	defff804 	addi	sp,sp,-32
   51ae0:	df000715 	stw	fp,28(sp)
   51ae4:	df000704 	addi	fp,sp,28
   51ae8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   51aec:	e0bfff17 	ldw	r2,-4(fp)
   51af0:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   51af4:	e0bffb17 	ldw	r2,-20(fp)
   51af8:	10800017 	ldw	r2,0(r2)
   51afc:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   51b00:	e0bffc17 	ldw	r2,-16(fp)
   51b04:	10800104 	addi	r2,r2,4
   51b08:	10800037 	ldwio	r2,0(r2)
   51b0c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   51b10:	e0bffd17 	ldw	r2,-12(fp)
   51b14:	1080c00c 	andi	r2,r2,768
   51b18:	10006d26 	beq	r2,zero,51cd0 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   51b1c:	e0bffd17 	ldw	r2,-12(fp)
   51b20:	1080400c 	andi	r2,r2,256
   51b24:	10003526 	beq	r2,zero,51bfc <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   51b28:	00800074 	movhi	r2,1
   51b2c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   51b30:	e0bffb17 	ldw	r2,-20(fp)
   51b34:	10800a17 	ldw	r2,40(r2)
   51b38:	10800044 	addi	r2,r2,1
   51b3c:	1081ffcc 	andi	r2,r2,2047
   51b40:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   51b44:	e0bffb17 	ldw	r2,-20(fp)
   51b48:	10c00b17 	ldw	r3,44(r2)
   51b4c:	e0bffe17 	ldw	r2,-8(fp)
   51b50:	18801526 	beq	r3,r2,51ba8 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   51b54:	e0bffc17 	ldw	r2,-16(fp)
   51b58:	10800037 	ldwio	r2,0(r2)
   51b5c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   51b60:	e0bff917 	ldw	r2,-28(fp)
   51b64:	10a0000c 	andi	r2,r2,32768
   51b68:	10001126 	beq	r2,zero,51bb0 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   51b6c:	e0bffb17 	ldw	r2,-20(fp)
   51b70:	10800a17 	ldw	r2,40(r2)
   51b74:	e0fff917 	ldw	r3,-28(fp)
   51b78:	1809883a 	mov	r4,r3
   51b7c:	e0fffb17 	ldw	r3,-20(fp)
   51b80:	1885883a 	add	r2,r3,r2
   51b84:	10800e04 	addi	r2,r2,56
   51b88:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   51b8c:	e0bffb17 	ldw	r2,-20(fp)
   51b90:	10800a17 	ldw	r2,40(r2)
   51b94:	10800044 	addi	r2,r2,1
   51b98:	10c1ffcc 	andi	r3,r2,2047
   51b9c:	e0bffb17 	ldw	r2,-20(fp)
   51ba0:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   51ba4:	003fe206 	br	51b30 <__alt_data_end+0xfffd1b30>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   51ba8:	0001883a 	nop
   51bac:	00000106 	br	51bb4 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   51bb0:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   51bb4:	e0bff917 	ldw	r2,-28(fp)
   51bb8:	10bfffec 	andhi	r2,r2,65535
   51bbc:	10000f26 	beq	r2,zero,51bfc <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   51bc0:	e0bffb17 	ldw	r2,-20(fp)
   51bc4:	10c00817 	ldw	r3,32(r2)
   51bc8:	00bfff84 	movi	r2,-2
   51bcc:	1886703a 	and	r3,r3,r2
   51bd0:	e0bffb17 	ldw	r2,-20(fp)
   51bd4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   51bd8:	e0bffc17 	ldw	r2,-16(fp)
   51bdc:	10800104 	addi	r2,r2,4
   51be0:	1007883a 	mov	r3,r2
   51be4:	e0bffb17 	ldw	r2,-20(fp)
   51be8:	10800817 	ldw	r2,32(r2)
   51bec:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   51bf0:	e0bffc17 	ldw	r2,-16(fp)
   51bf4:	10800104 	addi	r2,r2,4
   51bf8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   51bfc:	e0bffd17 	ldw	r2,-12(fp)
   51c00:	1080800c 	andi	r2,r2,512
   51c04:	103fbe26 	beq	r2,zero,51b00 <__alt_data_end+0xfffd1b00>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   51c08:	e0bffd17 	ldw	r2,-12(fp)
   51c0c:	1004d43a 	srli	r2,r2,16
   51c10:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   51c14:	00001406 	br	51c68 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   51c18:	e0bffc17 	ldw	r2,-16(fp)
   51c1c:	e0fffb17 	ldw	r3,-20(fp)
   51c20:	18c00d17 	ldw	r3,52(r3)
   51c24:	e13ffb17 	ldw	r4,-20(fp)
   51c28:	20c7883a 	add	r3,r4,r3
   51c2c:	18c20e04 	addi	r3,r3,2104
   51c30:	18c00003 	ldbu	r3,0(r3)
   51c34:	18c03fcc 	andi	r3,r3,255
   51c38:	18c0201c 	xori	r3,r3,128
   51c3c:	18ffe004 	addi	r3,r3,-128
   51c40:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   51c44:	e0bffb17 	ldw	r2,-20(fp)
   51c48:	10800d17 	ldw	r2,52(r2)
   51c4c:	10800044 	addi	r2,r2,1
   51c50:	10c1ffcc 	andi	r3,r2,2047
   51c54:	e0bffb17 	ldw	r2,-20(fp)
   51c58:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   51c5c:	e0bffa17 	ldw	r2,-24(fp)
   51c60:	10bfffc4 	addi	r2,r2,-1
   51c64:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   51c68:	e0bffa17 	ldw	r2,-24(fp)
   51c6c:	10000526 	beq	r2,zero,51c84 <altera_avalon_jtag_uart_irq+0x1a8>
   51c70:	e0bffb17 	ldw	r2,-20(fp)
   51c74:	10c00d17 	ldw	r3,52(r2)
   51c78:	e0bffb17 	ldw	r2,-20(fp)
   51c7c:	10800c17 	ldw	r2,48(r2)
   51c80:	18bfe51e 	bne	r3,r2,51c18 <__alt_data_end+0xfffd1c18>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   51c84:	e0bffa17 	ldw	r2,-24(fp)
   51c88:	103f9d26 	beq	r2,zero,51b00 <__alt_data_end+0xfffd1b00>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   51c8c:	e0bffb17 	ldw	r2,-20(fp)
   51c90:	10c00817 	ldw	r3,32(r2)
   51c94:	00bfff44 	movi	r2,-3
   51c98:	1886703a 	and	r3,r3,r2
   51c9c:	e0bffb17 	ldw	r2,-20(fp)
   51ca0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   51ca4:	e0bffb17 	ldw	r2,-20(fp)
   51ca8:	10800017 	ldw	r2,0(r2)
   51cac:	10800104 	addi	r2,r2,4
   51cb0:	1007883a 	mov	r3,r2
   51cb4:	e0bffb17 	ldw	r2,-20(fp)
   51cb8:	10800817 	ldw	r2,32(r2)
   51cbc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   51cc0:	e0bffc17 	ldw	r2,-16(fp)
   51cc4:	10800104 	addi	r2,r2,4
   51cc8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   51ccc:	003f8c06 	br	51b00 <__alt_data_end+0xfffd1b00>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   51cd0:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   51cd4:	0001883a 	nop
   51cd8:	e037883a 	mov	sp,fp
   51cdc:	df000017 	ldw	fp,0(sp)
   51ce0:	dec00104 	addi	sp,sp,4
   51ce4:	f800283a 	ret

00051ce8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   51ce8:	defff804 	addi	sp,sp,-32
   51cec:	df000715 	stw	fp,28(sp)
   51cf0:	df000704 	addi	fp,sp,28
   51cf4:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   51cf8:	e0bffb17 	ldw	r2,-20(fp)
   51cfc:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   51d00:	e0bff917 	ldw	r2,-28(fp)
   51d04:	10800017 	ldw	r2,0(r2)
   51d08:	10800104 	addi	r2,r2,4
   51d0c:	10800037 	ldwio	r2,0(r2)
   51d10:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   51d14:	e0bffa17 	ldw	r2,-24(fp)
   51d18:	1081000c 	andi	r2,r2,1024
   51d1c:	10000b26 	beq	r2,zero,51d4c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   51d20:	e0bff917 	ldw	r2,-28(fp)
   51d24:	10800017 	ldw	r2,0(r2)
   51d28:	10800104 	addi	r2,r2,4
   51d2c:	1007883a 	mov	r3,r2
   51d30:	e0bff917 	ldw	r2,-28(fp)
   51d34:	10800817 	ldw	r2,32(r2)
   51d38:	10810014 	ori	r2,r2,1024
   51d3c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   51d40:	e0bff917 	ldw	r2,-28(fp)
   51d44:	10000915 	stw	zero,36(r2)
   51d48:	00000a06 	br	51d74 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   51d4c:	e0bff917 	ldw	r2,-28(fp)
   51d50:	10c00917 	ldw	r3,36(r2)
   51d54:	00a00034 	movhi	r2,32768
   51d58:	10bfff04 	addi	r2,r2,-4
   51d5c:	10c00536 	bltu	r2,r3,51d74 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   51d60:	e0bff917 	ldw	r2,-28(fp)
   51d64:	10800917 	ldw	r2,36(r2)
   51d68:	10c00044 	addi	r3,r2,1
   51d6c:	e0bff917 	ldw	r2,-28(fp)
   51d70:	10c00915 	stw	r3,36(r2)
   51d74:	d0a6dc17 	ldw	r2,-25744(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   51d78:	e037883a 	mov	sp,fp
   51d7c:	df000017 	ldw	fp,0(sp)
   51d80:	dec00104 	addi	sp,sp,4
   51d84:	f800283a 	ret

00051d88 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   51d88:	defffd04 	addi	sp,sp,-12
   51d8c:	df000215 	stw	fp,8(sp)
   51d90:	df000204 	addi	fp,sp,8
   51d94:	e13ffe15 	stw	r4,-8(fp)
   51d98:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   51d9c:	00000506 	br	51db4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   51da0:	e0bfff17 	ldw	r2,-4(fp)
   51da4:	1090000c 	andi	r2,r2,16384
   51da8:	10000226 	beq	r2,zero,51db4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   51dac:	00bffd44 	movi	r2,-11
   51db0:	00000b06 	br	51de0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   51db4:	e0bffe17 	ldw	r2,-8(fp)
   51db8:	10c00d17 	ldw	r3,52(r2)
   51dbc:	e0bffe17 	ldw	r2,-8(fp)
   51dc0:	10800c17 	ldw	r2,48(r2)
   51dc4:	18800526 	beq	r3,r2,51ddc <altera_avalon_jtag_uart_close+0x54>
   51dc8:	e0bffe17 	ldw	r2,-8(fp)
   51dcc:	10c00917 	ldw	r3,36(r2)
   51dd0:	e0bffe17 	ldw	r2,-8(fp)
   51dd4:	10800117 	ldw	r2,4(r2)
   51dd8:	18bff136 	bltu	r3,r2,51da0 <__alt_data_end+0xfffd1da0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   51ddc:	0005883a 	mov	r2,zero
}
   51de0:	e037883a 	mov	sp,fp
   51de4:	df000017 	ldw	fp,0(sp)
   51de8:	dec00104 	addi	sp,sp,4
   51dec:	f800283a 	ret

00051df0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   51df0:	defffa04 	addi	sp,sp,-24
   51df4:	df000515 	stw	fp,20(sp)
   51df8:	df000504 	addi	fp,sp,20
   51dfc:	e13ffd15 	stw	r4,-12(fp)
   51e00:	e17ffe15 	stw	r5,-8(fp)
   51e04:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   51e08:	00bff9c4 	movi	r2,-25
   51e0c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   51e10:	e0bffe17 	ldw	r2,-8(fp)
   51e14:	10da8060 	cmpeqi	r3,r2,27137
   51e18:	1800031e 	bne	r3,zero,51e28 <altera_avalon_jtag_uart_ioctl+0x38>
   51e1c:	109a80a0 	cmpeqi	r2,r2,27138
   51e20:	1000181e 	bne	r2,zero,51e84 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   51e24:	00002906 	br	51ecc <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   51e28:	e0bffd17 	ldw	r2,-12(fp)
   51e2c:	10c00117 	ldw	r3,4(r2)
   51e30:	00a00034 	movhi	r2,32768
   51e34:	10bfffc4 	addi	r2,r2,-1
   51e38:	18802126 	beq	r3,r2,51ec0 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   51e3c:	e0bfff17 	ldw	r2,-4(fp)
   51e40:	10800017 	ldw	r2,0(r2)
   51e44:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   51e48:	e0bffc17 	ldw	r2,-16(fp)
   51e4c:	10800090 	cmplti	r2,r2,2
   51e50:	1000061e 	bne	r2,zero,51e6c <altera_avalon_jtag_uart_ioctl+0x7c>
   51e54:	e0fffc17 	ldw	r3,-16(fp)
   51e58:	00a00034 	movhi	r2,32768
   51e5c:	10bfffc4 	addi	r2,r2,-1
   51e60:	18800226 	beq	r3,r2,51e6c <altera_avalon_jtag_uart_ioctl+0x7c>
   51e64:	e0bffc17 	ldw	r2,-16(fp)
   51e68:	00000206 	br	51e74 <altera_avalon_jtag_uart_ioctl+0x84>
   51e6c:	00a00034 	movhi	r2,32768
   51e70:	10bfff84 	addi	r2,r2,-2
   51e74:	e0fffd17 	ldw	r3,-12(fp)
   51e78:	18800115 	stw	r2,4(r3)
      rc = 0;
   51e7c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   51e80:	00000f06 	br	51ec0 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   51e84:	e0bffd17 	ldw	r2,-12(fp)
   51e88:	10c00117 	ldw	r3,4(r2)
   51e8c:	00a00034 	movhi	r2,32768
   51e90:	10bfffc4 	addi	r2,r2,-1
   51e94:	18800c26 	beq	r3,r2,51ec8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   51e98:	e0bffd17 	ldw	r2,-12(fp)
   51e9c:	10c00917 	ldw	r3,36(r2)
   51ea0:	e0bffd17 	ldw	r2,-12(fp)
   51ea4:	10800117 	ldw	r2,4(r2)
   51ea8:	1885803a 	cmpltu	r2,r3,r2
   51eac:	10c03fcc 	andi	r3,r2,255
   51eb0:	e0bfff17 	ldw	r2,-4(fp)
   51eb4:	10c00015 	stw	r3,0(r2)
      rc = 0;
   51eb8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   51ebc:	00000206 	br	51ec8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   51ec0:	0001883a 	nop
   51ec4:	00000106 	br	51ecc <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   51ec8:	0001883a 	nop

  default:
    break;
  }

  return rc;
   51ecc:	e0bffb17 	ldw	r2,-20(fp)
}
   51ed0:	e037883a 	mov	sp,fp
   51ed4:	df000017 	ldw	fp,0(sp)
   51ed8:	dec00104 	addi	sp,sp,4
   51edc:	f800283a 	ret

00051ee0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   51ee0:	defff304 	addi	sp,sp,-52
   51ee4:	dfc00c15 	stw	ra,48(sp)
   51ee8:	df000b15 	stw	fp,44(sp)
   51eec:	df000b04 	addi	fp,sp,44
   51ef0:	e13ffc15 	stw	r4,-16(fp)
   51ef4:	e17ffd15 	stw	r5,-12(fp)
   51ef8:	e1bffe15 	stw	r6,-8(fp)
   51efc:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   51f00:	e0bffd17 	ldw	r2,-12(fp)
   51f04:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   51f08:	00004706 	br	52028 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   51f0c:	e0bffc17 	ldw	r2,-16(fp)
   51f10:	10800a17 	ldw	r2,40(r2)
   51f14:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   51f18:	e0bffc17 	ldw	r2,-16(fp)
   51f1c:	10800b17 	ldw	r2,44(r2)
   51f20:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   51f24:	e0fff717 	ldw	r3,-36(fp)
   51f28:	e0bff817 	ldw	r2,-32(fp)
   51f2c:	18800536 	bltu	r3,r2,51f44 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   51f30:	e0fff717 	ldw	r3,-36(fp)
   51f34:	e0bff817 	ldw	r2,-32(fp)
   51f38:	1885c83a 	sub	r2,r3,r2
   51f3c:	e0bff615 	stw	r2,-40(fp)
   51f40:	00000406 	br	51f54 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   51f44:	00c20004 	movi	r3,2048
   51f48:	e0bff817 	ldw	r2,-32(fp)
   51f4c:	1885c83a 	sub	r2,r3,r2
   51f50:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   51f54:	e0bff617 	ldw	r2,-40(fp)
   51f58:	10001e26 	beq	r2,zero,51fd4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   51f5c:	e0fffe17 	ldw	r3,-8(fp)
   51f60:	e0bff617 	ldw	r2,-40(fp)
   51f64:	1880022e 	bgeu	r3,r2,51f70 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   51f68:	e0bffe17 	ldw	r2,-8(fp)
   51f6c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   51f70:	e0bffc17 	ldw	r2,-16(fp)
   51f74:	10c00e04 	addi	r3,r2,56
   51f78:	e0bff817 	ldw	r2,-32(fp)
   51f7c:	1885883a 	add	r2,r3,r2
   51f80:	e1bff617 	ldw	r6,-40(fp)
   51f84:	100b883a 	mov	r5,r2
   51f88:	e13ff517 	ldw	r4,-44(fp)
   51f8c:	004bdf40 	call	4bdf4 <memcpy>
      ptr   += n;
   51f90:	e0fff517 	ldw	r3,-44(fp)
   51f94:	e0bff617 	ldw	r2,-40(fp)
   51f98:	1885883a 	add	r2,r3,r2
   51f9c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   51fa0:	e0fffe17 	ldw	r3,-8(fp)
   51fa4:	e0bff617 	ldw	r2,-40(fp)
   51fa8:	1885c83a 	sub	r2,r3,r2
   51fac:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   51fb0:	e0fff817 	ldw	r3,-32(fp)
   51fb4:	e0bff617 	ldw	r2,-40(fp)
   51fb8:	1885883a 	add	r2,r3,r2
   51fbc:	10c1ffcc 	andi	r3,r2,2047
   51fc0:	e0bffc17 	ldw	r2,-16(fp)
   51fc4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   51fc8:	e0bffe17 	ldw	r2,-8(fp)
   51fcc:	00bfcf16 	blt	zero,r2,51f0c <__alt_data_end+0xfffd1f0c>
   51fd0:	00000106 	br	51fd8 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   51fd4:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   51fd8:	e0fff517 	ldw	r3,-44(fp)
   51fdc:	e0bffd17 	ldw	r2,-12(fp)
   51fe0:	1880141e 	bne	r3,r2,52034 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   51fe4:	e0bfff17 	ldw	r2,-4(fp)
   51fe8:	1090000c 	andi	r2,r2,16384
   51fec:	1000131e 	bne	r2,zero,5203c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   51ff0:	0001883a 	nop
   51ff4:	e0bffc17 	ldw	r2,-16(fp)
   51ff8:	10c00a17 	ldw	r3,40(r2)
   51ffc:	e0bff717 	ldw	r2,-36(fp)
   52000:	1880051e 	bne	r3,r2,52018 <altera_avalon_jtag_uart_read+0x138>
   52004:	e0bffc17 	ldw	r2,-16(fp)
   52008:	10c00917 	ldw	r3,36(r2)
   5200c:	e0bffc17 	ldw	r2,-16(fp)
   52010:	10800117 	ldw	r2,4(r2)
   52014:	18bff736 	bltu	r3,r2,51ff4 <__alt_data_end+0xfffd1ff4>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   52018:	e0bffc17 	ldw	r2,-16(fp)
   5201c:	10c00a17 	ldw	r3,40(r2)
   52020:	e0bff717 	ldw	r2,-36(fp)
   52024:	18800726 	beq	r3,r2,52044 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   52028:	e0bffe17 	ldw	r2,-8(fp)
   5202c:	00bfb716 	blt	zero,r2,51f0c <__alt_data_end+0xfffd1f0c>
   52030:	00000506 	br	52048 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   52034:	0001883a 	nop
   52038:	00000306 	br	52048 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   5203c:	0001883a 	nop
   52040:	00000106 	br	52048 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   52044:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   52048:	e0fff517 	ldw	r3,-44(fp)
   5204c:	e0bffd17 	ldw	r2,-12(fp)
   52050:	18801826 	beq	r3,r2,520b4 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   52054:	0005303a 	rdctl	r2,status
   52058:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   5205c:	e0fffb17 	ldw	r3,-20(fp)
   52060:	00bfff84 	movi	r2,-2
   52064:	1884703a 	and	r2,r3,r2
   52068:	1001703a 	wrctl	status,r2
  
  return context;
   5206c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   52070:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   52074:	e0bffc17 	ldw	r2,-16(fp)
   52078:	10800817 	ldw	r2,32(r2)
   5207c:	10c00054 	ori	r3,r2,1
   52080:	e0bffc17 	ldw	r2,-16(fp)
   52084:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   52088:	e0bffc17 	ldw	r2,-16(fp)
   5208c:	10800017 	ldw	r2,0(r2)
   52090:	10800104 	addi	r2,r2,4
   52094:	1007883a 	mov	r3,r2
   52098:	e0bffc17 	ldw	r2,-16(fp)
   5209c:	10800817 	ldw	r2,32(r2)
   520a0:	18800035 	stwio	r2,0(r3)
   520a4:	e0bffa17 	ldw	r2,-24(fp)
   520a8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   520ac:	e0bff917 	ldw	r2,-28(fp)
   520b0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   520b4:	e0fff517 	ldw	r3,-44(fp)
   520b8:	e0bffd17 	ldw	r2,-12(fp)
   520bc:	18800426 	beq	r3,r2,520d0 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   520c0:	e0fff517 	ldw	r3,-44(fp)
   520c4:	e0bffd17 	ldw	r2,-12(fp)
   520c8:	1885c83a 	sub	r2,r3,r2
   520cc:	00000606 	br	520e8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   520d0:	e0bfff17 	ldw	r2,-4(fp)
   520d4:	1090000c 	andi	r2,r2,16384
   520d8:	10000226 	beq	r2,zero,520e4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   520dc:	00bffd44 	movi	r2,-11
   520e0:	00000106 	br	520e8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   520e4:	00bffec4 	movi	r2,-5
}
   520e8:	e037883a 	mov	sp,fp
   520ec:	dfc00117 	ldw	ra,4(sp)
   520f0:	df000017 	ldw	fp,0(sp)
   520f4:	dec00204 	addi	sp,sp,8
   520f8:	f800283a 	ret

000520fc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   520fc:	defff304 	addi	sp,sp,-52
   52100:	dfc00c15 	stw	ra,48(sp)
   52104:	df000b15 	stw	fp,44(sp)
   52108:	df000b04 	addi	fp,sp,44
   5210c:	e13ffc15 	stw	r4,-16(fp)
   52110:	e17ffd15 	stw	r5,-12(fp)
   52114:	e1bffe15 	stw	r6,-8(fp)
   52118:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   5211c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   52120:	e0bffd17 	ldw	r2,-12(fp)
   52124:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   52128:	00003706 	br	52208 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   5212c:	e0bffc17 	ldw	r2,-16(fp)
   52130:	10800c17 	ldw	r2,48(r2)
   52134:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   52138:	e0bffc17 	ldw	r2,-16(fp)
   5213c:	10800d17 	ldw	r2,52(r2)
   52140:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   52144:	e0fff917 	ldw	r3,-28(fp)
   52148:	e0bff517 	ldw	r2,-44(fp)
   5214c:	1880062e 	bgeu	r3,r2,52168 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   52150:	e0fff517 	ldw	r3,-44(fp)
   52154:	e0bff917 	ldw	r2,-28(fp)
   52158:	1885c83a 	sub	r2,r3,r2
   5215c:	10bfffc4 	addi	r2,r2,-1
   52160:	e0bff615 	stw	r2,-40(fp)
   52164:	00000b06 	br	52194 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   52168:	e0bff517 	ldw	r2,-44(fp)
   5216c:	10000526 	beq	r2,zero,52184 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   52170:	00c20004 	movi	r3,2048
   52174:	e0bff917 	ldw	r2,-28(fp)
   52178:	1885c83a 	sub	r2,r3,r2
   5217c:	e0bff615 	stw	r2,-40(fp)
   52180:	00000406 	br	52194 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   52184:	00c1ffc4 	movi	r3,2047
   52188:	e0bff917 	ldw	r2,-28(fp)
   5218c:	1885c83a 	sub	r2,r3,r2
   52190:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   52194:	e0bff617 	ldw	r2,-40(fp)
   52198:	10001e26 	beq	r2,zero,52214 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   5219c:	e0fffe17 	ldw	r3,-8(fp)
   521a0:	e0bff617 	ldw	r2,-40(fp)
   521a4:	1880022e 	bgeu	r3,r2,521b0 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   521a8:	e0bffe17 	ldw	r2,-8(fp)
   521ac:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   521b0:	e0bffc17 	ldw	r2,-16(fp)
   521b4:	10c20e04 	addi	r3,r2,2104
   521b8:	e0bff917 	ldw	r2,-28(fp)
   521bc:	1885883a 	add	r2,r3,r2
   521c0:	e1bff617 	ldw	r6,-40(fp)
   521c4:	e17ffd17 	ldw	r5,-12(fp)
   521c8:	1009883a 	mov	r4,r2
   521cc:	004bdf40 	call	4bdf4 <memcpy>
      ptr   += n;
   521d0:	e0fffd17 	ldw	r3,-12(fp)
   521d4:	e0bff617 	ldw	r2,-40(fp)
   521d8:	1885883a 	add	r2,r3,r2
   521dc:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   521e0:	e0fffe17 	ldw	r3,-8(fp)
   521e4:	e0bff617 	ldw	r2,-40(fp)
   521e8:	1885c83a 	sub	r2,r3,r2
   521ec:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   521f0:	e0fff917 	ldw	r3,-28(fp)
   521f4:	e0bff617 	ldw	r2,-40(fp)
   521f8:	1885883a 	add	r2,r3,r2
   521fc:	10c1ffcc 	andi	r3,r2,2047
   52200:	e0bffc17 	ldw	r2,-16(fp)
   52204:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   52208:	e0bffe17 	ldw	r2,-8(fp)
   5220c:	00bfc716 	blt	zero,r2,5212c <__alt_data_end+0xfffd212c>
   52210:	00000106 	br	52218 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   52214:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   52218:	0005303a 	rdctl	r2,status
   5221c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   52220:	e0fffb17 	ldw	r3,-20(fp)
   52224:	00bfff84 	movi	r2,-2
   52228:	1884703a 	and	r2,r3,r2
   5222c:	1001703a 	wrctl	status,r2
  
  return context;
   52230:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   52234:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   52238:	e0bffc17 	ldw	r2,-16(fp)
   5223c:	10800817 	ldw	r2,32(r2)
   52240:	10c00094 	ori	r3,r2,2
   52244:	e0bffc17 	ldw	r2,-16(fp)
   52248:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   5224c:	e0bffc17 	ldw	r2,-16(fp)
   52250:	10800017 	ldw	r2,0(r2)
   52254:	10800104 	addi	r2,r2,4
   52258:	1007883a 	mov	r3,r2
   5225c:	e0bffc17 	ldw	r2,-16(fp)
   52260:	10800817 	ldw	r2,32(r2)
   52264:	18800035 	stwio	r2,0(r3)
   52268:	e0bffa17 	ldw	r2,-24(fp)
   5226c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   52270:	e0bff817 	ldw	r2,-32(fp)
   52274:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   52278:	e0bffe17 	ldw	r2,-8(fp)
   5227c:	0080100e 	bge	zero,r2,522c0 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   52280:	e0bfff17 	ldw	r2,-4(fp)
   52284:	1090000c 	andi	r2,r2,16384
   52288:	1000101e 	bne	r2,zero,522cc <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   5228c:	0001883a 	nop
   52290:	e0bffc17 	ldw	r2,-16(fp)
   52294:	10c00d17 	ldw	r3,52(r2)
   52298:	e0bff517 	ldw	r2,-44(fp)
   5229c:	1880051e 	bne	r3,r2,522b4 <altera_avalon_jtag_uart_write+0x1b8>
   522a0:	e0bffc17 	ldw	r2,-16(fp)
   522a4:	10c00917 	ldw	r3,36(r2)
   522a8:	e0bffc17 	ldw	r2,-16(fp)
   522ac:	10800117 	ldw	r2,4(r2)
   522b0:	18bff736 	bltu	r3,r2,52290 <__alt_data_end+0xfffd2290>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   522b4:	e0bffc17 	ldw	r2,-16(fp)
   522b8:	10800917 	ldw	r2,36(r2)
   522bc:	1000051e 	bne	r2,zero,522d4 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   522c0:	e0bffe17 	ldw	r2,-8(fp)
   522c4:	00bfd016 	blt	zero,r2,52208 <__alt_data_end+0xfffd2208>
   522c8:	00000306 	br	522d8 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   522cc:	0001883a 	nop
   522d0:	00000106 	br	522d8 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   522d4:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   522d8:	e0fffd17 	ldw	r3,-12(fp)
   522dc:	e0bff717 	ldw	r2,-36(fp)
   522e0:	18800426 	beq	r3,r2,522f4 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   522e4:	e0fffd17 	ldw	r3,-12(fp)
   522e8:	e0bff717 	ldw	r2,-36(fp)
   522ec:	1885c83a 	sub	r2,r3,r2
   522f0:	00000606 	br	5230c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   522f4:	e0bfff17 	ldw	r2,-4(fp)
   522f8:	1090000c 	andi	r2,r2,16384
   522fc:	10000226 	beq	r2,zero,52308 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   52300:	00bffd44 	movi	r2,-11
   52304:	00000106 	br	5230c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   52308:	00bffec4 	movi	r2,-5
}
   5230c:	e037883a 	mov	sp,fp
   52310:	dfc00117 	ldw	ra,4(sp)
   52314:	df000017 	ldw	fp,0(sp)
   52318:	dec00204 	addi	sp,sp,8
   5231c:	f800283a 	ret

00052320 <perf_get_section_time>:

#include "altera_avalon_performance_counter.h"
#include "system.h"

alt_u64 perf_get_section_time (void* hw_base_address, int which_section)
{
   52320:	defff904 	addi	sp,sp,-28
   52324:	df000615 	stw	fp,24(sp)
   52328:	df000604 	addi	fp,sp,24
   5232c:	e13ffe15 	stw	r4,-8(fp)
   52330:	e17fff15 	stw	r5,-4(fp)
  alt_u32 lo;
  alt_u32 hi;
  alt_u64 result = 0;
   52334:	e03ffa15 	stw	zero,-24(fp)
   52338:	e03ffb15 	stw	zero,-20(fp)

  PERF_STOP_MEASURING(hw_base_address);
   5233c:	000b883a 	mov	r5,zero
   52340:	e13ffe17 	ldw	r4,-8(fp)
   52344:	21400035 	stwio	r5,0(r4)
  lo = IORD(hw_base_address, ( which_section*4   ));
   52348:	e13fff17 	ldw	r4,-4(fp)
   5234c:	2008913a 	slli	r4,r4,4
   52350:	200b883a 	mov	r5,r4
   52354:	e13ffe17 	ldw	r4,-8(fp)
   52358:	2149883a 	add	r4,r4,r5
   5235c:	21000037 	ldwio	r4,0(r4)
   52360:	e13ffc15 	stw	r4,-16(fp)
  hi = IORD(hw_base_address, ((which_section*4)+1));
   52364:	e13fff17 	ldw	r4,-4(fp)
   52368:	2008913a 	slli	r4,r4,4
   5236c:	21000104 	addi	r4,r4,4
   52370:	200b883a 	mov	r5,r4
   52374:	e13ffe17 	ldw	r4,-8(fp)
   52378:	2149883a 	add	r4,r4,r5
   5237c:	21000037 	ldwio	r4,0(r4)
   52380:	e13ffd15 	stw	r4,-12(fp)

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
   52384:	e13ffd17 	ldw	r4,-12(fp)
   52388:	2011883a 	mov	r8,r4
   5238c:	0013883a 	mov	r9,zero
   52390:	4006983a 	sll	r3,r8,zero
   52394:	0005883a 	mov	r2,zero
           ((alt_u64)(((alt_u64) lo)                 ))  ;
   52398:	e13ffc17 	ldw	r4,-16(fp)
   5239c:	200d883a 	mov	r6,r4
   523a0:	000f883a 	mov	r7,zero

  PERF_STOP_MEASURING(hw_base_address);
  lo = IORD(hw_base_address, ( which_section*4   ));
  hi = IORD(hw_base_address, ((which_section*4)+1));

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
   523a4:	1188b03a 	or	r4,r2,r6
   523a8:	e13ffa15 	stw	r4,-24(fp)
   523ac:	19c4b03a 	or	r2,r3,r7
   523b0:	e0bffb15 	stw	r2,-20(fp)
           ((alt_u64)(((alt_u64) lo)                 ))  ;
  return result;
   523b4:	e0bffa17 	ldw	r2,-24(fp)
   523b8:	e0fffb17 	ldw	r3,-20(fp)
   523bc:	1009883a 	mov	r4,r2
   523c0:	180b883a 	mov	r5,r3
}
   523c4:	2005883a 	mov	r2,r4
   523c8:	2807883a 	mov	r3,r5
   523cc:	e037883a 	mov	sp,fp
   523d0:	df000017 	ldw	fp,0(sp)
   523d4:	dec00104 	addi	sp,sp,4
   523d8:	f800283a 	ret

000523dc <perf_get_total_time>:

alt_u64 perf_get_total_time   (void* hw_base_address)
{
   523dc:	defffd04 	addi	sp,sp,-12
   523e0:	dfc00215 	stw	ra,8(sp)
   523e4:	df000115 	stw	fp,4(sp)
   523e8:	df000104 	addi	fp,sp,4
   523ec:	e13fff15 	stw	r4,-4(fp)
  return perf_get_section_time (hw_base_address, 0);
   523f0:	000b883a 	mov	r5,zero
   523f4:	e13fff17 	ldw	r4,-4(fp)
   523f8:	00523200 	call	52320 <perf_get_section_time>
   523fc:	100b883a 	mov	r5,r2
   52400:	180d883a 	mov	r6,r3
   52404:	2807883a 	mov	r3,r5
   52408:	3009883a 	mov	r4,r6
}
   5240c:	1805883a 	mov	r2,r3
   52410:	2007883a 	mov	r3,r4
   52414:	e037883a 	mov	sp,fp
   52418:	dfc00117 	ldw	ra,4(sp)
   5241c:	df000017 	ldw	fp,0(sp)
   52420:	dec00204 	addi	sp,sp,8
   52424:	f800283a 	ret

00052428 <perf_get_num_starts>:

alt_u32 perf_get_num_starts   (void* hw_base_address, int which_section)
{
   52428:	defffd04 	addi	sp,sp,-12
   5242c:	df000215 	stw	fp,8(sp)
   52430:	df000204 	addi	fp,sp,8
   52434:	e13ffe15 	stw	r4,-8(fp)
   52438:	e17fff15 	stw	r5,-4(fp)
  return IORD(hw_base_address, ((which_section*4)+2));
   5243c:	e0bfff17 	ldw	r2,-4(fp)
   52440:	1004913a 	slli	r2,r2,4
   52444:	10800204 	addi	r2,r2,8
   52448:	1007883a 	mov	r3,r2
   5244c:	e0bffe17 	ldw	r2,-8(fp)
   52450:	10c5883a 	add	r2,r2,r3
   52454:	10800037 	ldwio	r2,0(r2)
}
   52458:	e037883a 	mov	sp,fp
   5245c:	df000017 	ldw	fp,0(sp)
   52460:	dec00104 	addi	sp,sp,4
   52464:	f800283a 	ret

00052468 <alt_get_performance_counter_base>:
 * in Nios II IDE just like is done for the system clock timer and
 * timestamp timer.
 */
void* 
alt_get_performance_counter_base()
{
   52468:	deffff04 	addi	sp,sp,-4
   5246c:	df000015 	stw	fp,0(sp)
   52470:	d839883a 	mov	fp,sp
#ifdef PERFORMANCE_COUNTER_0_BASE
    return (void*)PERFORMANCE_COUNTER_0_BASE;
   52474:	00800234 	movhi	r2,8
   52478:	10861004 	addi	r2,r2,6208
#else
    return (void*)0;
#endif
}
   5247c:	e037883a 	mov	sp,fp
   52480:	df000017 	ldw	fp,0(sp)
   52484:	dec00104 	addi	sp,sp,4
   52488:	f800283a 	ret

0005248c <alt_get_cpu_freq>:
 * If the performance counter peripheral is in a different time domain,
 * this won't necessarily be the same frequency of the CPU.
 */
alt_u32 
alt_get_cpu_freq()
{
   5248c:	deffff04 	addi	sp,sp,-4
   52490:	df000015 	stw	fp,0(sp)
   52494:	d839883a 	mov	fp,sp
    return ALT_CPU_FREQ;
   52498:	0080bef4 	movhi	r2,763
   5249c:	10bc2004 	addi	r2,r2,-3968
}
   524a0:	e037883a 	mov	sp,fp
   524a4:	df000017 	ldw	fp,0(sp)
   524a8:	dec00104 	addi	sp,sp,4
   524ac:	f800283a 	ret

000524b0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   524b0:	defff504 	addi	sp,sp,-44
   524b4:	df000a15 	stw	fp,40(sp)
   524b8:	df000a04 	addi	fp,sp,40
   524bc:	e13ffc15 	stw	r4,-16(fp)
   524c0:	e17ffd15 	stw	r5,-12(fp)
   524c4:	e1bffe15 	stw	r6,-8(fp)
   524c8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   524cc:	e03ff615 	stw	zero,-40(fp)
   524d0:	d0a6dc17 	ldw	r2,-25744(gp)
  
  if (alt_ticks_per_second ())
   524d4:	10003c26 	beq	r2,zero,525c8 <alt_alarm_start+0x118>
  {
    if (alarm)
   524d8:	e0bffc17 	ldw	r2,-16(fp)
   524dc:	10003826 	beq	r2,zero,525c0 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   524e0:	e0bffc17 	ldw	r2,-16(fp)
   524e4:	e0fffe17 	ldw	r3,-8(fp)
   524e8:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   524ec:	e0bffc17 	ldw	r2,-16(fp)
   524f0:	e0ffff17 	ldw	r3,-4(fp)
   524f4:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   524f8:	0005303a 	rdctl	r2,status
   524fc:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   52500:	e0fff917 	ldw	r3,-28(fp)
   52504:	00bfff84 	movi	r2,-2
   52508:	1884703a 	and	r2,r3,r2
   5250c:	1001703a 	wrctl	status,r2
  
  return context;
   52510:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   52514:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   52518:	d0a6dd17 	ldw	r2,-25740(gp)
      
      current_nticks = alt_nticks();
   5251c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   52520:	e0fffd17 	ldw	r3,-12(fp)
   52524:	e0bff617 	ldw	r2,-40(fp)
   52528:	1885883a 	add	r2,r3,r2
   5252c:	10c00044 	addi	r3,r2,1
   52530:	e0bffc17 	ldw	r2,-16(fp)
   52534:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   52538:	e0bffc17 	ldw	r2,-16(fp)
   5253c:	10c00217 	ldw	r3,8(r2)
   52540:	e0bff617 	ldw	r2,-40(fp)
   52544:	1880042e 	bgeu	r3,r2,52558 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   52548:	e0bffc17 	ldw	r2,-16(fp)
   5254c:	00c00044 	movi	r3,1
   52550:	10c00405 	stb	r3,16(r2)
   52554:	00000206 	br	52560 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   52558:	e0bffc17 	ldw	r2,-16(fp)
   5255c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   52560:	e0bffc17 	ldw	r2,-16(fp)
   52564:	d0e00e04 	addi	r3,gp,-32712
   52568:	e0fffa15 	stw	r3,-24(fp)
   5256c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   52570:	e0bffb17 	ldw	r2,-20(fp)
   52574:	e0fffa17 	ldw	r3,-24(fp)
   52578:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   5257c:	e0bffa17 	ldw	r2,-24(fp)
   52580:	10c00017 	ldw	r3,0(r2)
   52584:	e0bffb17 	ldw	r2,-20(fp)
   52588:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   5258c:	e0bffa17 	ldw	r2,-24(fp)
   52590:	10800017 	ldw	r2,0(r2)
   52594:	e0fffb17 	ldw	r3,-20(fp)
   52598:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   5259c:	e0bffa17 	ldw	r2,-24(fp)
   525a0:	e0fffb17 	ldw	r3,-20(fp)
   525a4:	10c00015 	stw	r3,0(r2)
   525a8:	e0bff817 	ldw	r2,-32(fp)
   525ac:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   525b0:	e0bff717 	ldw	r2,-36(fp)
   525b4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   525b8:	0005883a 	mov	r2,zero
   525bc:	00000306 	br	525cc <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   525c0:	00bffa84 	movi	r2,-22
   525c4:	00000106 	br	525cc <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   525c8:	00bfde84 	movi	r2,-134
  }
}
   525cc:	e037883a 	mov	sp,fp
   525d0:	df000017 	ldw	fp,0(sp)
   525d4:	dec00104 	addi	sp,sp,4
   525d8:	f800283a 	ret

000525dc <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   525dc:	defffe04 	addi	sp,sp,-8
   525e0:	df000115 	stw	fp,4(sp)
   525e4:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   525e8:	e03fff15 	stw	zero,-4(fp)
   525ec:	00000506 	br	52604 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   525f0:	e0bfff17 	ldw	r2,-4(fp)
   525f4:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   525f8:	e0bfff17 	ldw	r2,-4(fp)
   525fc:	10800804 	addi	r2,r2,32
   52600:	e0bfff15 	stw	r2,-4(fp)
   52604:	e0bfff17 	ldw	r2,-4(fp)
   52608:	10820030 	cmpltui	r2,r2,2048
   5260c:	103ff81e 	bne	r2,zero,525f0 <__alt_data_end+0xfffd25f0>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   52610:	0001883a 	nop
   52614:	e037883a 	mov	sp,fp
   52618:	df000017 	ldw	fp,0(sp)
   5261c:	dec00104 	addi	sp,sp,4
   52620:	f800283a 	ret

00052624 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   52624:	defffe04 	addi	sp,sp,-8
   52628:	dfc00115 	stw	ra,4(sp)
   5262c:	df000015 	stw	fp,0(sp)
   52630:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   52634:	d0a00b17 	ldw	r2,-32724(gp)
   52638:	10000326 	beq	r2,zero,52648 <alt_get_errno+0x24>
   5263c:	d0a00b17 	ldw	r2,-32724(gp)
   52640:	103ee83a 	callr	r2
   52644:	00000106 	br	5264c <alt_get_errno+0x28>
   52648:	d0a6d704 	addi	r2,gp,-25764
}
   5264c:	e037883a 	mov	sp,fp
   52650:	dfc00117 	ldw	ra,4(sp)
   52654:	df000017 	ldw	fp,0(sp)
   52658:	dec00204 	addi	sp,sp,8
   5265c:	f800283a 	ret

00052660 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   52660:	defffa04 	addi	sp,sp,-24
   52664:	dfc00515 	stw	ra,20(sp)
   52668:	df000415 	stw	fp,16(sp)
   5266c:	df000404 	addi	fp,sp,16
   52670:	e13ffe15 	stw	r4,-8(fp)
   52674:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   52678:	e0bffe17 	ldw	r2,-8(fp)
   5267c:	10000326 	beq	r2,zero,5268c <alt_dev_llist_insert+0x2c>
   52680:	e0bffe17 	ldw	r2,-8(fp)
   52684:	10800217 	ldw	r2,8(r2)
   52688:	1000061e 	bne	r2,zero,526a4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   5268c:	00526240 	call	52624 <alt_get_errno>
   52690:	1007883a 	mov	r3,r2
   52694:	00800584 	movi	r2,22
   52698:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   5269c:	00bffa84 	movi	r2,-22
   526a0:	00001306 	br	526f0 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   526a4:	e0bffe17 	ldw	r2,-8(fp)
   526a8:	e0ffff17 	ldw	r3,-4(fp)
   526ac:	e0fffc15 	stw	r3,-16(fp)
   526b0:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   526b4:	e0bffd17 	ldw	r2,-12(fp)
   526b8:	e0fffc17 	ldw	r3,-16(fp)
   526bc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   526c0:	e0bffc17 	ldw	r2,-16(fp)
   526c4:	10c00017 	ldw	r3,0(r2)
   526c8:	e0bffd17 	ldw	r2,-12(fp)
   526cc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   526d0:	e0bffc17 	ldw	r2,-16(fp)
   526d4:	10800017 	ldw	r2,0(r2)
   526d8:	e0fffd17 	ldw	r3,-12(fp)
   526dc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   526e0:	e0bffc17 	ldw	r2,-16(fp)
   526e4:	e0fffd17 	ldw	r3,-12(fp)
   526e8:	10c00015 	stw	r3,0(r2)

  return 0;  
   526ec:	0005883a 	mov	r2,zero
}
   526f0:	e037883a 	mov	sp,fp
   526f4:	dfc00117 	ldw	ra,4(sp)
   526f8:	df000017 	ldw	fp,0(sp)
   526fc:	dec00204 	addi	sp,sp,8
   52700:	f800283a 	ret

00052704 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   52704:	defffd04 	addi	sp,sp,-12
   52708:	dfc00215 	stw	ra,8(sp)
   5270c:	df000115 	stw	fp,4(sp)
   52710:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   52714:	00800174 	movhi	r2,5
   52718:	108dbb04 	addi	r2,r2,14060
   5271c:	e0bfff15 	stw	r2,-4(fp)
   52720:	00000606 	br	5273c <_do_ctors+0x38>
        (*ctor) (); 
   52724:	e0bfff17 	ldw	r2,-4(fp)
   52728:	10800017 	ldw	r2,0(r2)
   5272c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   52730:	e0bfff17 	ldw	r2,-4(fp)
   52734:	10bfff04 	addi	r2,r2,-4
   52738:	e0bfff15 	stw	r2,-4(fp)
   5273c:	e0ffff17 	ldw	r3,-4(fp)
   52740:	00800174 	movhi	r2,5
   52744:	108dbc04 	addi	r2,r2,14064
   52748:	18bff62e 	bgeu	r3,r2,52724 <__alt_data_end+0xfffd2724>
        (*ctor) (); 
}
   5274c:	0001883a 	nop
   52750:	e037883a 	mov	sp,fp
   52754:	dfc00117 	ldw	ra,4(sp)
   52758:	df000017 	ldw	fp,0(sp)
   5275c:	dec00204 	addi	sp,sp,8
   52760:	f800283a 	ret

00052764 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   52764:	defffd04 	addi	sp,sp,-12
   52768:	dfc00215 	stw	ra,8(sp)
   5276c:	df000115 	stw	fp,4(sp)
   52770:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   52774:	00800174 	movhi	r2,5
   52778:	108dbb04 	addi	r2,r2,14060
   5277c:	e0bfff15 	stw	r2,-4(fp)
   52780:	00000606 	br	5279c <_do_dtors+0x38>
        (*dtor) (); 
   52784:	e0bfff17 	ldw	r2,-4(fp)
   52788:	10800017 	ldw	r2,0(r2)
   5278c:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   52790:	e0bfff17 	ldw	r2,-4(fp)
   52794:	10bfff04 	addi	r2,r2,-4
   52798:	e0bfff15 	stw	r2,-4(fp)
   5279c:	e0ffff17 	ldw	r3,-4(fp)
   527a0:	00800174 	movhi	r2,5
   527a4:	108dbc04 	addi	r2,r2,14064
   527a8:	18bff62e 	bgeu	r3,r2,52784 <__alt_data_end+0xfffd2784>
        (*dtor) (); 
}
   527ac:	0001883a 	nop
   527b0:	e037883a 	mov	sp,fp
   527b4:	dfc00117 	ldw	ra,4(sp)
   527b8:	df000017 	ldw	fp,0(sp)
   527bc:	dec00204 	addi	sp,sp,8
   527c0:	f800283a 	ret

000527c4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   527c4:	defffe04 	addi	sp,sp,-8
   527c8:	dfc00115 	stw	ra,4(sp)
   527cc:	df000015 	stw	fp,0(sp)
   527d0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   527d4:	01440004 	movi	r5,4096
   527d8:	0009883a 	mov	r4,zero
   527dc:	00532300 	call	53230 <alt_icache_flush>
#endif
}
   527e0:	0001883a 	nop
   527e4:	e037883a 	mov	sp,fp
   527e8:	dfc00117 	ldw	ra,4(sp)
   527ec:	df000017 	ldw	fp,0(sp)
   527f0:	dec00204 	addi	sp,sp,8
   527f4:	f800283a 	ret

000527f8 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   527f8:	defff904 	addi	sp,sp,-28
   527fc:	dfc00615 	stw	ra,24(sp)
   52800:	df000515 	stw	fp,20(sp)
   52804:	df000504 	addi	fp,sp,20
   52808:	e13ffc15 	stw	r4,-16(fp)
   5280c:	e17ffd15 	stw	r5,-12(fp)
   52810:	e1bffe15 	stw	r6,-8(fp)
   52814:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   52818:	e0800217 	ldw	r2,8(fp)
   5281c:	d8800015 	stw	r2,0(sp)
   52820:	e1ffff17 	ldw	r7,-4(fp)
   52824:	e1bffe17 	ldw	r6,-8(fp)
   52828:	e17ffd17 	ldw	r5,-12(fp)
   5282c:	e13ffc17 	ldw	r4,-16(fp)
   52830:	00529a80 	call	529a8 <alt_iic_isr_register>
}  
   52834:	e037883a 	mov	sp,fp
   52838:	dfc00117 	ldw	ra,4(sp)
   5283c:	df000017 	ldw	fp,0(sp)
   52840:	dec00204 	addi	sp,sp,8
   52844:	f800283a 	ret

00052848 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   52848:	defff904 	addi	sp,sp,-28
   5284c:	df000615 	stw	fp,24(sp)
   52850:	df000604 	addi	fp,sp,24
   52854:	e13ffe15 	stw	r4,-8(fp)
   52858:	e17fff15 	stw	r5,-4(fp)
   5285c:	e0bfff17 	ldw	r2,-4(fp)
   52860:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   52864:	0005303a 	rdctl	r2,status
   52868:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   5286c:	e0fffb17 	ldw	r3,-20(fp)
   52870:	00bfff84 	movi	r2,-2
   52874:	1884703a 	and	r2,r3,r2
   52878:	1001703a 	wrctl	status,r2
  
  return context;
   5287c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   52880:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   52884:	00c00044 	movi	r3,1
   52888:	e0bffa17 	ldw	r2,-24(fp)
   5288c:	1884983a 	sll	r2,r3,r2
   52890:	1007883a 	mov	r3,r2
   52894:	d0a6db17 	ldw	r2,-25748(gp)
   52898:	1884b03a 	or	r2,r3,r2
   5289c:	d0a6db15 	stw	r2,-25748(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   528a0:	d0a6db17 	ldw	r2,-25748(gp)
   528a4:	100170fa 	wrctl	ienable,r2
   528a8:	e0bffc17 	ldw	r2,-16(fp)
   528ac:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   528b0:	e0bffd17 	ldw	r2,-12(fp)
   528b4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   528b8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   528bc:	0001883a 	nop
}
   528c0:	e037883a 	mov	sp,fp
   528c4:	df000017 	ldw	fp,0(sp)
   528c8:	dec00104 	addi	sp,sp,4
   528cc:	f800283a 	ret

000528d0 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   528d0:	defff904 	addi	sp,sp,-28
   528d4:	df000615 	stw	fp,24(sp)
   528d8:	df000604 	addi	fp,sp,24
   528dc:	e13ffe15 	stw	r4,-8(fp)
   528e0:	e17fff15 	stw	r5,-4(fp)
   528e4:	e0bfff17 	ldw	r2,-4(fp)
   528e8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   528ec:	0005303a 	rdctl	r2,status
   528f0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   528f4:	e0fffb17 	ldw	r3,-20(fp)
   528f8:	00bfff84 	movi	r2,-2
   528fc:	1884703a 	and	r2,r3,r2
   52900:	1001703a 	wrctl	status,r2
  
  return context;
   52904:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   52908:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   5290c:	00c00044 	movi	r3,1
   52910:	e0bffa17 	ldw	r2,-24(fp)
   52914:	1884983a 	sll	r2,r3,r2
   52918:	0084303a 	nor	r2,zero,r2
   5291c:	1007883a 	mov	r3,r2
   52920:	d0a6db17 	ldw	r2,-25748(gp)
   52924:	1884703a 	and	r2,r3,r2
   52928:	d0a6db15 	stw	r2,-25748(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   5292c:	d0a6db17 	ldw	r2,-25748(gp)
   52930:	100170fa 	wrctl	ienable,r2
   52934:	e0bffc17 	ldw	r2,-16(fp)
   52938:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   5293c:	e0bffd17 	ldw	r2,-12(fp)
   52940:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   52944:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   52948:	0001883a 	nop
}
   5294c:	e037883a 	mov	sp,fp
   52950:	df000017 	ldw	fp,0(sp)
   52954:	dec00104 	addi	sp,sp,4
   52958:	f800283a 	ret

0005295c <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   5295c:	defffc04 	addi	sp,sp,-16
   52960:	df000315 	stw	fp,12(sp)
   52964:	df000304 	addi	fp,sp,12
   52968:	e13ffe15 	stw	r4,-8(fp)
   5296c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   52970:	000530fa 	rdctl	r2,ienable
   52974:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   52978:	00c00044 	movi	r3,1
   5297c:	e0bfff17 	ldw	r2,-4(fp)
   52980:	1884983a 	sll	r2,r3,r2
   52984:	1007883a 	mov	r3,r2
   52988:	e0bffd17 	ldw	r2,-12(fp)
   5298c:	1884703a 	and	r2,r3,r2
   52990:	1004c03a 	cmpne	r2,r2,zero
   52994:	10803fcc 	andi	r2,r2,255
}
   52998:	e037883a 	mov	sp,fp
   5299c:	df000017 	ldw	fp,0(sp)
   529a0:	dec00104 	addi	sp,sp,4
   529a4:	f800283a 	ret

000529a8 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   529a8:	defff504 	addi	sp,sp,-44
   529ac:	dfc00a15 	stw	ra,40(sp)
   529b0:	df000915 	stw	fp,36(sp)
   529b4:	df000904 	addi	fp,sp,36
   529b8:	e13ffc15 	stw	r4,-16(fp)
   529bc:	e17ffd15 	stw	r5,-12(fp)
   529c0:	e1bffe15 	stw	r6,-8(fp)
   529c4:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   529c8:	00bffa84 	movi	r2,-22
   529cc:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   529d0:	e0bffd17 	ldw	r2,-12(fp)
   529d4:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   529d8:	e0bff817 	ldw	r2,-32(fp)
   529dc:	10800808 	cmpgei	r2,r2,32
   529e0:	1000271e 	bne	r2,zero,52a80 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   529e4:	0005303a 	rdctl	r2,status
   529e8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   529ec:	e0fffb17 	ldw	r3,-20(fp)
   529f0:	00bfff84 	movi	r2,-2
   529f4:	1884703a 	and	r2,r3,r2
   529f8:	1001703a 	wrctl	status,r2
  
  return context;
   529fc:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   52a00:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   52a04:	00800174 	movhi	r2,5
   52a08:	109cee04 	addi	r2,r2,29624
   52a0c:	e0fff817 	ldw	r3,-32(fp)
   52a10:	180690fa 	slli	r3,r3,3
   52a14:	10c5883a 	add	r2,r2,r3
   52a18:	e0fffe17 	ldw	r3,-8(fp)
   52a1c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   52a20:	00800174 	movhi	r2,5
   52a24:	109cee04 	addi	r2,r2,29624
   52a28:	e0fff817 	ldw	r3,-32(fp)
   52a2c:	180690fa 	slli	r3,r3,3
   52a30:	10c5883a 	add	r2,r2,r3
   52a34:	10800104 	addi	r2,r2,4
   52a38:	e0ffff17 	ldw	r3,-4(fp)
   52a3c:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   52a40:	e0bffe17 	ldw	r2,-8(fp)
   52a44:	10000526 	beq	r2,zero,52a5c <alt_iic_isr_register+0xb4>
   52a48:	e0bff817 	ldw	r2,-32(fp)
   52a4c:	100b883a 	mov	r5,r2
   52a50:	e13ffc17 	ldw	r4,-16(fp)
   52a54:	00528480 	call	52848 <alt_ic_irq_enable>
   52a58:	00000406 	br	52a6c <alt_iic_isr_register+0xc4>
   52a5c:	e0bff817 	ldw	r2,-32(fp)
   52a60:	100b883a 	mov	r5,r2
   52a64:	e13ffc17 	ldw	r4,-16(fp)
   52a68:	00528d00 	call	528d0 <alt_ic_irq_disable>
   52a6c:	e0bff715 	stw	r2,-36(fp)
   52a70:	e0bffa17 	ldw	r2,-24(fp)
   52a74:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   52a78:	e0bff917 	ldw	r2,-28(fp)
   52a7c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   52a80:	e0bff717 	ldw	r2,-36(fp)
}
   52a84:	e037883a 	mov	sp,fp
   52a88:	dfc00117 	ldw	ra,4(sp)
   52a8c:	df000017 	ldw	fp,0(sp)
   52a90:	dec00204 	addi	sp,sp,8
   52a94:	f800283a 	ret

00052a98 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   52a98:	defff904 	addi	sp,sp,-28
   52a9c:	dfc00615 	stw	ra,24(sp)
   52aa0:	df000515 	stw	fp,20(sp)
   52aa4:	df000504 	addi	fp,sp,20
   52aa8:	e13ffc15 	stw	r4,-16(fp)
   52aac:	e17ffd15 	stw	r5,-12(fp)
   52ab0:	e1bffe15 	stw	r6,-8(fp)
   52ab4:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   52ab8:	e1bfff17 	ldw	r6,-4(fp)
   52abc:	e17ffe17 	ldw	r5,-8(fp)
   52ac0:	e13ffd17 	ldw	r4,-12(fp)
   52ac4:	0052cd80 	call	52cd8 <open>
   52ac8:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   52acc:	e0bffb17 	ldw	r2,-20(fp)
   52ad0:	10001c16 	blt	r2,zero,52b44 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   52ad4:	00800174 	movhi	r2,5
   52ad8:	10918d04 	addi	r2,r2,17972
   52adc:	e0fffb17 	ldw	r3,-20(fp)
   52ae0:	18c00324 	muli	r3,r3,12
   52ae4:	10c5883a 	add	r2,r2,r3
   52ae8:	10c00017 	ldw	r3,0(r2)
   52aec:	e0bffc17 	ldw	r2,-16(fp)
   52af0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   52af4:	00800174 	movhi	r2,5
   52af8:	10918d04 	addi	r2,r2,17972
   52afc:	e0fffb17 	ldw	r3,-20(fp)
   52b00:	18c00324 	muli	r3,r3,12
   52b04:	10c5883a 	add	r2,r2,r3
   52b08:	10800104 	addi	r2,r2,4
   52b0c:	10c00017 	ldw	r3,0(r2)
   52b10:	e0bffc17 	ldw	r2,-16(fp)
   52b14:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   52b18:	00800174 	movhi	r2,5
   52b1c:	10918d04 	addi	r2,r2,17972
   52b20:	e0fffb17 	ldw	r3,-20(fp)
   52b24:	18c00324 	muli	r3,r3,12
   52b28:	10c5883a 	add	r2,r2,r3
   52b2c:	10800204 	addi	r2,r2,8
   52b30:	10c00017 	ldw	r3,0(r2)
   52b34:	e0bffc17 	ldw	r2,-16(fp)
   52b38:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   52b3c:	e13ffb17 	ldw	r4,-20(fp)
   52b40:	00515ac0 	call	515ac <alt_release_fd>
  }
} 
   52b44:	0001883a 	nop
   52b48:	e037883a 	mov	sp,fp
   52b4c:	dfc00117 	ldw	ra,4(sp)
   52b50:	df000017 	ldw	fp,0(sp)
   52b54:	dec00204 	addi	sp,sp,8
   52b58:	f800283a 	ret

00052b5c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   52b5c:	defffb04 	addi	sp,sp,-20
   52b60:	dfc00415 	stw	ra,16(sp)
   52b64:	df000315 	stw	fp,12(sp)
   52b68:	df000304 	addi	fp,sp,12
   52b6c:	e13ffd15 	stw	r4,-12(fp)
   52b70:	e17ffe15 	stw	r5,-8(fp)
   52b74:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   52b78:	01c07fc4 	movi	r7,511
   52b7c:	01800044 	movi	r6,1
   52b80:	e17ffd17 	ldw	r5,-12(fp)
   52b84:	01000174 	movhi	r4,5
   52b88:	21119004 	addi	r4,r4,17984
   52b8c:	0052a980 	call	52a98 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   52b90:	01c07fc4 	movi	r7,511
   52b94:	000d883a 	mov	r6,zero
   52b98:	e17ffe17 	ldw	r5,-8(fp)
   52b9c:	01000174 	movhi	r4,5
   52ba0:	21118d04 	addi	r4,r4,17972
   52ba4:	0052a980 	call	52a98 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   52ba8:	01c07fc4 	movi	r7,511
   52bac:	01800044 	movi	r6,1
   52bb0:	e17fff17 	ldw	r5,-4(fp)
   52bb4:	01000174 	movhi	r4,5
   52bb8:	21119304 	addi	r4,r4,17996
   52bbc:	0052a980 	call	52a98 <alt_open_fd>
}  
   52bc0:	0001883a 	nop
   52bc4:	e037883a 	mov	sp,fp
   52bc8:	dfc00117 	ldw	ra,4(sp)
   52bcc:	df000017 	ldw	fp,0(sp)
   52bd0:	dec00204 	addi	sp,sp,8
   52bd4:	f800283a 	ret

00052bd8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   52bd8:	defffe04 	addi	sp,sp,-8
   52bdc:	dfc00115 	stw	ra,4(sp)
   52be0:	df000015 	stw	fp,0(sp)
   52be4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   52be8:	d0a00b17 	ldw	r2,-32724(gp)
   52bec:	10000326 	beq	r2,zero,52bfc <alt_get_errno+0x24>
   52bf0:	d0a00b17 	ldw	r2,-32724(gp)
   52bf4:	103ee83a 	callr	r2
   52bf8:	00000106 	br	52c00 <alt_get_errno+0x28>
   52bfc:	d0a6d704 	addi	r2,gp,-25764
}
   52c00:	e037883a 	mov	sp,fp
   52c04:	dfc00117 	ldw	ra,4(sp)
   52c08:	df000017 	ldw	fp,0(sp)
   52c0c:	dec00204 	addi	sp,sp,8
   52c10:	f800283a 	ret

00052c14 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   52c14:	defffd04 	addi	sp,sp,-12
   52c18:	df000215 	stw	fp,8(sp)
   52c1c:	df000204 	addi	fp,sp,8
   52c20:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   52c24:	e0bfff17 	ldw	r2,-4(fp)
   52c28:	10800217 	ldw	r2,8(r2)
   52c2c:	10d00034 	orhi	r3,r2,16384
   52c30:	e0bfff17 	ldw	r2,-4(fp)
   52c34:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   52c38:	e03ffe15 	stw	zero,-8(fp)
   52c3c:	00001d06 	br	52cb4 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   52c40:	00800174 	movhi	r2,5
   52c44:	10918d04 	addi	r2,r2,17972
   52c48:	e0fffe17 	ldw	r3,-8(fp)
   52c4c:	18c00324 	muli	r3,r3,12
   52c50:	10c5883a 	add	r2,r2,r3
   52c54:	10c00017 	ldw	r3,0(r2)
   52c58:	e0bfff17 	ldw	r2,-4(fp)
   52c5c:	10800017 	ldw	r2,0(r2)
   52c60:	1880111e 	bne	r3,r2,52ca8 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   52c64:	00800174 	movhi	r2,5
   52c68:	10918d04 	addi	r2,r2,17972
   52c6c:	e0fffe17 	ldw	r3,-8(fp)
   52c70:	18c00324 	muli	r3,r3,12
   52c74:	10c5883a 	add	r2,r2,r3
   52c78:	10800204 	addi	r2,r2,8
   52c7c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   52c80:	1000090e 	bge	r2,zero,52ca8 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   52c84:	e0bffe17 	ldw	r2,-8(fp)
   52c88:	10c00324 	muli	r3,r2,12
   52c8c:	00800174 	movhi	r2,5
   52c90:	10918d04 	addi	r2,r2,17972
   52c94:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   52c98:	e0bfff17 	ldw	r2,-4(fp)
   52c9c:	18800226 	beq	r3,r2,52ca8 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   52ca0:	00bffcc4 	movi	r2,-13
   52ca4:	00000806 	br	52cc8 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   52ca8:	e0bffe17 	ldw	r2,-8(fp)
   52cac:	10800044 	addi	r2,r2,1
   52cb0:	e0bffe15 	stw	r2,-8(fp)
   52cb4:	d0a00a17 	ldw	r2,-32728(gp)
   52cb8:	1007883a 	mov	r3,r2
   52cbc:	e0bffe17 	ldw	r2,-8(fp)
   52cc0:	18bfdf2e 	bgeu	r3,r2,52c40 <__alt_data_end+0xfffd2c40>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   52cc4:	0005883a 	mov	r2,zero
}
   52cc8:	e037883a 	mov	sp,fp
   52ccc:	df000017 	ldw	fp,0(sp)
   52cd0:	dec00104 	addi	sp,sp,4
   52cd4:	f800283a 	ret

00052cd8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   52cd8:	defff604 	addi	sp,sp,-40
   52cdc:	dfc00915 	stw	ra,36(sp)
   52ce0:	df000815 	stw	fp,32(sp)
   52ce4:	df000804 	addi	fp,sp,32
   52ce8:	e13ffd15 	stw	r4,-12(fp)
   52cec:	e17ffe15 	stw	r5,-8(fp)
   52cf0:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   52cf4:	00bfffc4 	movi	r2,-1
   52cf8:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   52cfc:	00bffb44 	movi	r2,-19
   52d00:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   52d04:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   52d08:	d1600804 	addi	r5,gp,-32736
   52d0c:	e13ffd17 	ldw	r4,-12(fp)
   52d10:	0052ff40 	call	52ff4 <alt_find_dev>
   52d14:	e0bff815 	stw	r2,-32(fp)
   52d18:	e0bff817 	ldw	r2,-32(fp)
   52d1c:	1000051e 	bne	r2,zero,52d34 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   52d20:	e13ffd17 	ldw	r4,-12(fp)
   52d24:	00530840 	call	53084 <alt_find_file>
   52d28:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   52d2c:	00800044 	movi	r2,1
   52d30:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   52d34:	e0bff817 	ldw	r2,-32(fp)
   52d38:	10002926 	beq	r2,zero,52de0 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   52d3c:	e13ff817 	ldw	r4,-32(fp)
   52d40:	005318c0 	call	5318c <alt_get_fd>
   52d44:	e0bff915 	stw	r2,-28(fp)
   52d48:	e0bff917 	ldw	r2,-28(fp)
   52d4c:	1000030e 	bge	r2,zero,52d5c <open+0x84>
    {
      status = index;
   52d50:	e0bff917 	ldw	r2,-28(fp)
   52d54:	e0bffa15 	stw	r2,-24(fp)
   52d58:	00002306 	br	52de8 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   52d5c:	e0bff917 	ldw	r2,-28(fp)
   52d60:	10c00324 	muli	r3,r2,12
   52d64:	00800174 	movhi	r2,5
   52d68:	10918d04 	addi	r2,r2,17972
   52d6c:	1885883a 	add	r2,r3,r2
   52d70:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   52d74:	e0fffe17 	ldw	r3,-8(fp)
   52d78:	00900034 	movhi	r2,16384
   52d7c:	10bfffc4 	addi	r2,r2,-1
   52d80:	1886703a 	and	r3,r3,r2
   52d84:	e0bffc17 	ldw	r2,-16(fp)
   52d88:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   52d8c:	e0bffb17 	ldw	r2,-20(fp)
   52d90:	1000051e 	bne	r2,zero,52da8 <open+0xd0>
   52d94:	e13ffc17 	ldw	r4,-16(fp)
   52d98:	0052c140 	call	52c14 <alt_file_locked>
   52d9c:	e0bffa15 	stw	r2,-24(fp)
   52da0:	e0bffa17 	ldw	r2,-24(fp)
   52da4:	10001016 	blt	r2,zero,52de8 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   52da8:	e0bff817 	ldw	r2,-32(fp)
   52dac:	10800317 	ldw	r2,12(r2)
   52db0:	10000826 	beq	r2,zero,52dd4 <open+0xfc>
   52db4:	e0bff817 	ldw	r2,-32(fp)
   52db8:	10800317 	ldw	r2,12(r2)
   52dbc:	e1ffff17 	ldw	r7,-4(fp)
   52dc0:	e1bffe17 	ldw	r6,-8(fp)
   52dc4:	e17ffd17 	ldw	r5,-12(fp)
   52dc8:	e13ffc17 	ldw	r4,-16(fp)
   52dcc:	103ee83a 	callr	r2
   52dd0:	00000106 	br	52dd8 <open+0x100>
   52dd4:	0005883a 	mov	r2,zero
   52dd8:	e0bffa15 	stw	r2,-24(fp)
   52ddc:	00000206 	br	52de8 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   52de0:	00bffb44 	movi	r2,-19
   52de4:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   52de8:	e0bffa17 	ldw	r2,-24(fp)
   52dec:	1000090e 	bge	r2,zero,52e14 <open+0x13c>
  {
    alt_release_fd (index);  
   52df0:	e13ff917 	ldw	r4,-28(fp)
   52df4:	00515ac0 	call	515ac <alt_release_fd>
    ALT_ERRNO = -status;
   52df8:	0052bd80 	call	52bd8 <alt_get_errno>
   52dfc:	1007883a 	mov	r3,r2
   52e00:	e0bffa17 	ldw	r2,-24(fp)
   52e04:	0085c83a 	sub	r2,zero,r2
   52e08:	18800015 	stw	r2,0(r3)
    return -1;
   52e0c:	00bfffc4 	movi	r2,-1
   52e10:	00000106 	br	52e18 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   52e14:	e0bff917 	ldw	r2,-28(fp)
}
   52e18:	e037883a 	mov	sp,fp
   52e1c:	dfc00117 	ldw	ra,4(sp)
   52e20:	df000017 	ldw	fp,0(sp)
   52e24:	dec00204 	addi	sp,sp,8
   52e28:	f800283a 	ret

00052e2c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   52e2c:	defffa04 	addi	sp,sp,-24
   52e30:	df000515 	stw	fp,20(sp)
   52e34:	df000504 	addi	fp,sp,20
   52e38:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   52e3c:	0005303a 	rdctl	r2,status
   52e40:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   52e44:	e0fffc17 	ldw	r3,-16(fp)
   52e48:	00bfff84 	movi	r2,-2
   52e4c:	1884703a 	and	r2,r3,r2
   52e50:	1001703a 	wrctl	status,r2
  
  return context;
   52e54:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   52e58:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   52e5c:	e0bfff17 	ldw	r2,-4(fp)
   52e60:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   52e64:	e0bffd17 	ldw	r2,-12(fp)
   52e68:	10800017 	ldw	r2,0(r2)
   52e6c:	e0fffd17 	ldw	r3,-12(fp)
   52e70:	18c00117 	ldw	r3,4(r3)
   52e74:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   52e78:	e0bffd17 	ldw	r2,-12(fp)
   52e7c:	10800117 	ldw	r2,4(r2)
   52e80:	e0fffd17 	ldw	r3,-12(fp)
   52e84:	18c00017 	ldw	r3,0(r3)
   52e88:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   52e8c:	e0bffd17 	ldw	r2,-12(fp)
   52e90:	e0fffd17 	ldw	r3,-12(fp)
   52e94:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   52e98:	e0bffd17 	ldw	r2,-12(fp)
   52e9c:	e0fffd17 	ldw	r3,-12(fp)
   52ea0:	10c00015 	stw	r3,0(r2)
   52ea4:	e0bffb17 	ldw	r2,-20(fp)
   52ea8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   52eac:	e0bffe17 	ldw	r2,-8(fp)
   52eb0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   52eb4:	0001883a 	nop
   52eb8:	e037883a 	mov	sp,fp
   52ebc:	df000017 	ldw	fp,0(sp)
   52ec0:	dec00104 	addi	sp,sp,4
   52ec4:	f800283a 	ret

00052ec8 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   52ec8:	defffb04 	addi	sp,sp,-20
   52ecc:	dfc00415 	stw	ra,16(sp)
   52ed0:	df000315 	stw	fp,12(sp)
   52ed4:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   52ed8:	d0a00e17 	ldw	r2,-32712(gp)
   52edc:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   52ee0:	d0a6dd17 	ldw	r2,-25740(gp)
   52ee4:	10800044 	addi	r2,r2,1
   52ee8:	d0a6dd15 	stw	r2,-25740(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   52eec:	00002e06 	br	52fa8 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   52ef0:	e0bffd17 	ldw	r2,-12(fp)
   52ef4:	10800017 	ldw	r2,0(r2)
   52ef8:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   52efc:	e0bffd17 	ldw	r2,-12(fp)
   52f00:	10800403 	ldbu	r2,16(r2)
   52f04:	10803fcc 	andi	r2,r2,255
   52f08:	10000426 	beq	r2,zero,52f1c <alt_tick+0x54>
   52f0c:	d0a6dd17 	ldw	r2,-25740(gp)
   52f10:	1000021e 	bne	r2,zero,52f1c <alt_tick+0x54>
    {
      alarm->rollover = 0;
   52f14:	e0bffd17 	ldw	r2,-12(fp)
   52f18:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   52f1c:	e0bffd17 	ldw	r2,-12(fp)
   52f20:	10800217 	ldw	r2,8(r2)
   52f24:	d0e6dd17 	ldw	r3,-25740(gp)
   52f28:	18801d36 	bltu	r3,r2,52fa0 <alt_tick+0xd8>
   52f2c:	e0bffd17 	ldw	r2,-12(fp)
   52f30:	10800403 	ldbu	r2,16(r2)
   52f34:	10803fcc 	andi	r2,r2,255
   52f38:	1000191e 	bne	r2,zero,52fa0 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   52f3c:	e0bffd17 	ldw	r2,-12(fp)
   52f40:	10800317 	ldw	r2,12(r2)
   52f44:	e0fffd17 	ldw	r3,-12(fp)
   52f48:	18c00517 	ldw	r3,20(r3)
   52f4c:	1809883a 	mov	r4,r3
   52f50:	103ee83a 	callr	r2
   52f54:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   52f58:	e0bfff17 	ldw	r2,-4(fp)
   52f5c:	1000031e 	bne	r2,zero,52f6c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   52f60:	e13ffd17 	ldw	r4,-12(fp)
   52f64:	0052e2c0 	call	52e2c <alt_alarm_stop>
   52f68:	00000d06 	br	52fa0 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   52f6c:	e0bffd17 	ldw	r2,-12(fp)
   52f70:	10c00217 	ldw	r3,8(r2)
   52f74:	e0bfff17 	ldw	r2,-4(fp)
   52f78:	1887883a 	add	r3,r3,r2
   52f7c:	e0bffd17 	ldw	r2,-12(fp)
   52f80:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   52f84:	e0bffd17 	ldw	r2,-12(fp)
   52f88:	10c00217 	ldw	r3,8(r2)
   52f8c:	d0a6dd17 	ldw	r2,-25740(gp)
   52f90:	1880032e 	bgeu	r3,r2,52fa0 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   52f94:	e0bffd17 	ldw	r2,-12(fp)
   52f98:	00c00044 	movi	r3,1
   52f9c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   52fa0:	e0bffe17 	ldw	r2,-8(fp)
   52fa4:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   52fa8:	e0fffd17 	ldw	r3,-12(fp)
   52fac:	d0a00e04 	addi	r2,gp,-32712
   52fb0:	18bfcf1e 	bne	r3,r2,52ef0 <__alt_data_end+0xfffd2ef0>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   52fb4:	0001883a 	nop
}
   52fb8:	0001883a 	nop
   52fbc:	e037883a 	mov	sp,fp
   52fc0:	dfc00117 	ldw	ra,4(sp)
   52fc4:	df000017 	ldw	fp,0(sp)
   52fc8:	dec00204 	addi	sp,sp,8
   52fcc:	f800283a 	ret

00052fd0 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   52fd0:	deffff04 	addi	sp,sp,-4
   52fd4:	df000015 	stw	fp,0(sp)
   52fd8:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   52fdc:	000170fa 	wrctl	ienable,zero
}
   52fe0:	0001883a 	nop
   52fe4:	e037883a 	mov	sp,fp
   52fe8:	df000017 	ldw	fp,0(sp)
   52fec:	dec00104 	addi	sp,sp,4
   52ff0:	f800283a 	ret

00052ff4 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   52ff4:	defffa04 	addi	sp,sp,-24
   52ff8:	dfc00515 	stw	ra,20(sp)
   52ffc:	df000415 	stw	fp,16(sp)
   53000:	df000404 	addi	fp,sp,16
   53004:	e13ffe15 	stw	r4,-8(fp)
   53008:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   5300c:	e0bfff17 	ldw	r2,-4(fp)
   53010:	10800017 	ldw	r2,0(r2)
   53014:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   53018:	e13ffe17 	ldw	r4,-8(fp)
   5301c:	00464680 	call	46468 <strlen>
   53020:	10800044 	addi	r2,r2,1
   53024:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   53028:	00000d06 	br	53060 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   5302c:	e0bffc17 	ldw	r2,-16(fp)
   53030:	10800217 	ldw	r2,8(r2)
   53034:	e0fffd17 	ldw	r3,-12(fp)
   53038:	180d883a 	mov	r6,r3
   5303c:	e17ffe17 	ldw	r5,-8(fp)
   53040:	1009883a 	mov	r4,r2
   53044:	00533a80 	call	533a8 <memcmp>
   53048:	1000021e 	bne	r2,zero,53054 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   5304c:	e0bffc17 	ldw	r2,-16(fp)
   53050:	00000706 	br	53070 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   53054:	e0bffc17 	ldw	r2,-16(fp)
   53058:	10800017 	ldw	r2,0(r2)
   5305c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   53060:	e0fffc17 	ldw	r3,-16(fp)
   53064:	e0bfff17 	ldw	r2,-4(fp)
   53068:	18bff01e 	bne	r3,r2,5302c <__alt_data_end+0xfffd302c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   5306c:	0005883a 	mov	r2,zero
}
   53070:	e037883a 	mov	sp,fp
   53074:	dfc00117 	ldw	ra,4(sp)
   53078:	df000017 	ldw	fp,0(sp)
   5307c:	dec00204 	addi	sp,sp,8
   53080:	f800283a 	ret

00053084 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   53084:	defffb04 	addi	sp,sp,-20
   53088:	dfc00415 	stw	ra,16(sp)
   5308c:	df000315 	stw	fp,12(sp)
   53090:	df000304 	addi	fp,sp,12
   53094:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   53098:	d0a00617 	ldw	r2,-32744(gp)
   5309c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   530a0:	00003106 	br	53168 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   530a4:	e0bffd17 	ldw	r2,-12(fp)
   530a8:	10800217 	ldw	r2,8(r2)
   530ac:	1009883a 	mov	r4,r2
   530b0:	00464680 	call	46468 <strlen>
   530b4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   530b8:	e0bffd17 	ldw	r2,-12(fp)
   530bc:	10c00217 	ldw	r3,8(r2)
   530c0:	e0bffe17 	ldw	r2,-8(fp)
   530c4:	10bfffc4 	addi	r2,r2,-1
   530c8:	1885883a 	add	r2,r3,r2
   530cc:	10800003 	ldbu	r2,0(r2)
   530d0:	10803fcc 	andi	r2,r2,255
   530d4:	1080201c 	xori	r2,r2,128
   530d8:	10bfe004 	addi	r2,r2,-128
   530dc:	10800bd8 	cmpnei	r2,r2,47
   530e0:	1000031e 	bne	r2,zero,530f0 <alt_find_file+0x6c>
    {
      len -= 1;
   530e4:	e0bffe17 	ldw	r2,-8(fp)
   530e8:	10bfffc4 	addi	r2,r2,-1
   530ec:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   530f0:	e0bffe17 	ldw	r2,-8(fp)
   530f4:	e0ffff17 	ldw	r3,-4(fp)
   530f8:	1885883a 	add	r2,r3,r2
   530fc:	10800003 	ldbu	r2,0(r2)
   53100:	10803fcc 	andi	r2,r2,255
   53104:	1080201c 	xori	r2,r2,128
   53108:	10bfe004 	addi	r2,r2,-128
   5310c:	10800be0 	cmpeqi	r2,r2,47
   53110:	1000081e 	bne	r2,zero,53134 <alt_find_file+0xb0>
   53114:	e0bffe17 	ldw	r2,-8(fp)
   53118:	e0ffff17 	ldw	r3,-4(fp)
   5311c:	1885883a 	add	r2,r3,r2
   53120:	10800003 	ldbu	r2,0(r2)
   53124:	10803fcc 	andi	r2,r2,255
   53128:	1080201c 	xori	r2,r2,128
   5312c:	10bfe004 	addi	r2,r2,-128
   53130:	10000a1e 	bne	r2,zero,5315c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   53134:	e0bffd17 	ldw	r2,-12(fp)
   53138:	10800217 	ldw	r2,8(r2)
   5313c:	e0fffe17 	ldw	r3,-8(fp)
   53140:	180d883a 	mov	r6,r3
   53144:	e17fff17 	ldw	r5,-4(fp)
   53148:	1009883a 	mov	r4,r2
   5314c:	00533a80 	call	533a8 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   53150:	1000021e 	bne	r2,zero,5315c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   53154:	e0bffd17 	ldw	r2,-12(fp)
   53158:	00000706 	br	53178 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   5315c:	e0bffd17 	ldw	r2,-12(fp)
   53160:	10800017 	ldw	r2,0(r2)
   53164:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   53168:	e0fffd17 	ldw	r3,-12(fp)
   5316c:	d0a00604 	addi	r2,gp,-32744
   53170:	18bfcc1e 	bne	r3,r2,530a4 <__alt_data_end+0xfffd30a4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   53174:	0005883a 	mov	r2,zero
}
   53178:	e037883a 	mov	sp,fp
   5317c:	dfc00117 	ldw	ra,4(sp)
   53180:	df000017 	ldw	fp,0(sp)
   53184:	dec00204 	addi	sp,sp,8
   53188:	f800283a 	ret

0005318c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   5318c:	defffc04 	addi	sp,sp,-16
   53190:	df000315 	stw	fp,12(sp)
   53194:	df000304 	addi	fp,sp,12
   53198:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   5319c:	00bffa04 	movi	r2,-24
   531a0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   531a4:	e03ffd15 	stw	zero,-12(fp)
   531a8:	00001906 	br	53210 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   531ac:	00800174 	movhi	r2,5
   531b0:	10918d04 	addi	r2,r2,17972
   531b4:	e0fffd17 	ldw	r3,-12(fp)
   531b8:	18c00324 	muli	r3,r3,12
   531bc:	10c5883a 	add	r2,r2,r3
   531c0:	10800017 	ldw	r2,0(r2)
   531c4:	10000f1e 	bne	r2,zero,53204 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   531c8:	00800174 	movhi	r2,5
   531cc:	10918d04 	addi	r2,r2,17972
   531d0:	e0fffd17 	ldw	r3,-12(fp)
   531d4:	18c00324 	muli	r3,r3,12
   531d8:	10c5883a 	add	r2,r2,r3
   531dc:	e0ffff17 	ldw	r3,-4(fp)
   531e0:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   531e4:	d0e00a17 	ldw	r3,-32728(gp)
   531e8:	e0bffd17 	ldw	r2,-12(fp)
   531ec:	1880020e 	bge	r3,r2,531f8 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   531f0:	e0bffd17 	ldw	r2,-12(fp)
   531f4:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   531f8:	e0bffd17 	ldw	r2,-12(fp)
   531fc:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   53200:	00000606 	br	5321c <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   53204:	e0bffd17 	ldw	r2,-12(fp)
   53208:	10800044 	addi	r2,r2,1
   5320c:	e0bffd15 	stw	r2,-12(fp)
   53210:	e0bffd17 	ldw	r2,-12(fp)
   53214:	10800810 	cmplti	r2,r2,32
   53218:	103fe41e 	bne	r2,zero,531ac <__alt_data_end+0xfffd31ac>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   5321c:	e0bffe17 	ldw	r2,-8(fp)
}
   53220:	e037883a 	mov	sp,fp
   53224:	df000017 	ldw	fp,0(sp)
   53228:	dec00104 	addi	sp,sp,4
   5322c:	f800283a 	ret

00053230 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   53230:	defffb04 	addi	sp,sp,-20
   53234:	df000415 	stw	fp,16(sp)
   53238:	df000404 	addi	fp,sp,16
   5323c:	e13ffe15 	stw	r4,-8(fp)
   53240:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   53244:	e0bfff17 	ldw	r2,-4(fp)
   53248:	10840070 	cmpltui	r2,r2,4097
   5324c:	1000021e 	bne	r2,zero,53258 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   53250:	00840004 	movi	r2,4096
   53254:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   53258:	e0fffe17 	ldw	r3,-8(fp)
   5325c:	e0bfff17 	ldw	r2,-4(fp)
   53260:	1885883a 	add	r2,r3,r2
   53264:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   53268:	e0bffe17 	ldw	r2,-8(fp)
   5326c:	e0bffc15 	stw	r2,-16(fp)
   53270:	00000506 	br	53288 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   53274:	e0bffc17 	ldw	r2,-16(fp)
   53278:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   5327c:	e0bffc17 	ldw	r2,-16(fp)
   53280:	10800804 	addi	r2,r2,32
   53284:	e0bffc15 	stw	r2,-16(fp)
   53288:	e0fffc17 	ldw	r3,-16(fp)
   5328c:	e0bffd17 	ldw	r2,-12(fp)
   53290:	18bff836 	bltu	r3,r2,53274 <__alt_data_end+0xfffd3274>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   53294:	e0bffe17 	ldw	r2,-8(fp)
   53298:	108007cc 	andi	r2,r2,31
   5329c:	10000226 	beq	r2,zero,532a8 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   532a0:	e0bffc17 	ldw	r2,-16(fp)
   532a4:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   532a8:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   532ac:	0001883a 	nop
   532b0:	e037883a 	mov	sp,fp
   532b4:	df000017 	ldw	fp,0(sp)
   532b8:	dec00104 	addi	sp,sp,4
   532bc:	f800283a 	ret

000532c0 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   532c0:	defffe04 	addi	sp,sp,-8
   532c4:	df000115 	stw	fp,4(sp)
   532c8:	df000104 	addi	fp,sp,4
   532cc:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   532d0:	e0bfff17 	ldw	r2,-4(fp)
   532d4:	10bffe84 	addi	r2,r2,-6
   532d8:	10c00428 	cmpgeui	r3,r2,16
   532dc:	18001a1e 	bne	r3,zero,53348 <alt_exception_cause_generated_bad_addr+0x88>
   532e0:	100690ba 	slli	r3,r2,2
   532e4:	00800174 	movhi	r2,5
   532e8:	108cbe04 	addi	r2,r2,13048
   532ec:	1885883a 	add	r2,r3,r2
   532f0:	10800017 	ldw	r2,0(r2)
   532f4:	1000683a 	jmp	r2
   532f8:	00053338 	rdprs	zero,zero,5324
   532fc:	00053338 	rdprs	zero,zero,5324
   53300:	00053348 	cmpgei	zero,zero,5325
   53304:	00053348 	cmpgei	zero,zero,5325
   53308:	00053348 	cmpgei	zero,zero,5325
   5330c:	00053338 	rdprs	zero,zero,5324
   53310:	00053340 	call	5334 <__alt_mem_onchip_memory2_0-0x3accc>
   53314:	00053348 	cmpgei	zero,zero,5325
   53318:	00053338 	rdprs	zero,zero,5324
   5331c:	00053338 	rdprs	zero,zero,5324
   53320:	00053348 	cmpgei	zero,zero,5325
   53324:	00053338 	rdprs	zero,zero,5324
   53328:	00053340 	call	5334 <__alt_mem_onchip_memory2_0-0x3accc>
   5332c:	00053348 	cmpgei	zero,zero,5325
   53330:	00053348 	cmpgei	zero,zero,5325
   53334:	00053338 	rdprs	zero,zero,5324
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   53338:	00800044 	movi	r2,1
   5333c:	00000306 	br	5334c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   53340:	0005883a 	mov	r2,zero
   53344:	00000106 	br	5334c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   53348:	0005883a 	mov	r2,zero
  }
}
   5334c:	e037883a 	mov	sp,fp
   53350:	df000017 	ldw	fp,0(sp)
   53354:	dec00104 	addi	sp,sp,4
   53358:	f800283a 	ret

0005335c <atexit>:
   5335c:	200b883a 	mov	r5,r4
   53360:	000f883a 	mov	r7,zero
   53364:	000d883a 	mov	r6,zero
   53368:	0009883a 	mov	r4,zero
   5336c:	00534241 	jmpi	53424 <__register_exitproc>

00053370 <exit>:
   53370:	defffe04 	addi	sp,sp,-8
   53374:	000b883a 	mov	r5,zero
   53378:	dc000015 	stw	r16,0(sp)
   5337c:	dfc00115 	stw	ra,4(sp)
   53380:	2021883a 	mov	r16,r4
   53384:	005353c0 	call	5353c <__call_exitprocs>
   53388:	00800174 	movhi	r2,5
   5338c:	10960504 	addi	r2,r2,22548
   53390:	11000017 	ldw	r4,0(r2)
   53394:	20800f17 	ldw	r2,60(r4)
   53398:	10000126 	beq	r2,zero,533a0 <exit+0x30>
   5339c:	103ee83a 	callr	r2
   533a0:	8009883a 	mov	r4,r16
   533a4:	00536bc0 	call	536bc <_exit>

000533a8 <memcmp>:
   533a8:	01c000c4 	movi	r7,3
   533ac:	3980192e 	bgeu	r7,r6,53414 <memcmp+0x6c>
   533b0:	2144b03a 	or	r2,r4,r5
   533b4:	11c4703a 	and	r2,r2,r7
   533b8:	10000f26 	beq	r2,zero,533f8 <memcmp+0x50>
   533bc:	20800003 	ldbu	r2,0(r4)
   533c0:	28c00003 	ldbu	r3,0(r5)
   533c4:	10c0151e 	bne	r2,r3,5341c <memcmp+0x74>
   533c8:	31bfff84 	addi	r6,r6,-2
   533cc:	01ffffc4 	movi	r7,-1
   533d0:	00000406 	br	533e4 <memcmp+0x3c>
   533d4:	20800003 	ldbu	r2,0(r4)
   533d8:	28c00003 	ldbu	r3,0(r5)
   533dc:	31bfffc4 	addi	r6,r6,-1
   533e0:	10c00e1e 	bne	r2,r3,5341c <memcmp+0x74>
   533e4:	21000044 	addi	r4,r4,1
   533e8:	29400044 	addi	r5,r5,1
   533ec:	31fff91e 	bne	r6,r7,533d4 <__alt_data_end+0xfffd33d4>
   533f0:	0005883a 	mov	r2,zero
   533f4:	f800283a 	ret
   533f8:	20c00017 	ldw	r3,0(r4)
   533fc:	28800017 	ldw	r2,0(r5)
   53400:	18bfee1e 	bne	r3,r2,533bc <__alt_data_end+0xfffd33bc>
   53404:	31bfff04 	addi	r6,r6,-4
   53408:	21000104 	addi	r4,r4,4
   5340c:	29400104 	addi	r5,r5,4
   53410:	39bff936 	bltu	r7,r6,533f8 <__alt_data_end+0xfffd33f8>
   53414:	303fe91e 	bne	r6,zero,533bc <__alt_data_end+0xfffd33bc>
   53418:	003ff506 	br	533f0 <__alt_data_end+0xfffd33f0>
   5341c:	10c5c83a 	sub	r2,r2,r3
   53420:	f800283a 	ret

00053424 <__register_exitproc>:
   53424:	defffa04 	addi	sp,sp,-24
   53428:	dc000315 	stw	r16,12(sp)
   5342c:	04000174 	movhi	r16,5
   53430:	84160504 	addi	r16,r16,22548
   53434:	80c00017 	ldw	r3,0(r16)
   53438:	dc400415 	stw	r17,16(sp)
   5343c:	dfc00515 	stw	ra,20(sp)
   53440:	18805217 	ldw	r2,328(r3)
   53444:	2023883a 	mov	r17,r4
   53448:	10003726 	beq	r2,zero,53528 <__register_exitproc+0x104>
   5344c:	10c00117 	ldw	r3,4(r2)
   53450:	010007c4 	movi	r4,31
   53454:	20c00e16 	blt	r4,r3,53490 <__register_exitproc+0x6c>
   53458:	1a000044 	addi	r8,r3,1
   5345c:	8800221e 	bne	r17,zero,534e8 <__register_exitproc+0xc4>
   53460:	18c00084 	addi	r3,r3,2
   53464:	18c7883a 	add	r3,r3,r3
   53468:	18c7883a 	add	r3,r3,r3
   5346c:	12000115 	stw	r8,4(r2)
   53470:	10c7883a 	add	r3,r2,r3
   53474:	19400015 	stw	r5,0(r3)
   53478:	0005883a 	mov	r2,zero
   5347c:	dfc00517 	ldw	ra,20(sp)
   53480:	dc400417 	ldw	r17,16(sp)
   53484:	dc000317 	ldw	r16,12(sp)
   53488:	dec00604 	addi	sp,sp,24
   5348c:	f800283a 	ret
   53490:	00800034 	movhi	r2,0
   53494:	10800004 	addi	r2,r2,0
   53498:	10002626 	beq	r2,zero,53534 <__register_exitproc+0x110>
   5349c:	01006404 	movi	r4,400
   534a0:	d9400015 	stw	r5,0(sp)
   534a4:	d9800115 	stw	r6,4(sp)
   534a8:	d9c00215 	stw	r7,8(sp)
   534ac:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x40000>
   534b0:	d9400017 	ldw	r5,0(sp)
   534b4:	d9800117 	ldw	r6,4(sp)
   534b8:	d9c00217 	ldw	r7,8(sp)
   534bc:	10001d26 	beq	r2,zero,53534 <__register_exitproc+0x110>
   534c0:	81000017 	ldw	r4,0(r16)
   534c4:	10000115 	stw	zero,4(r2)
   534c8:	02000044 	movi	r8,1
   534cc:	22405217 	ldw	r9,328(r4)
   534d0:	0007883a 	mov	r3,zero
   534d4:	12400015 	stw	r9,0(r2)
   534d8:	20805215 	stw	r2,328(r4)
   534dc:	10006215 	stw	zero,392(r2)
   534e0:	10006315 	stw	zero,396(r2)
   534e4:	883fde26 	beq	r17,zero,53460 <__alt_data_end+0xfffd3460>
   534e8:	18c9883a 	add	r4,r3,r3
   534ec:	2109883a 	add	r4,r4,r4
   534f0:	1109883a 	add	r4,r2,r4
   534f4:	21802215 	stw	r6,136(r4)
   534f8:	01800044 	movi	r6,1
   534fc:	12406217 	ldw	r9,392(r2)
   53500:	30cc983a 	sll	r6,r6,r3
   53504:	4992b03a 	or	r9,r9,r6
   53508:	12406215 	stw	r9,392(r2)
   5350c:	21c04215 	stw	r7,264(r4)
   53510:	01000084 	movi	r4,2
   53514:	893fd21e 	bne	r17,r4,53460 <__alt_data_end+0xfffd3460>
   53518:	11006317 	ldw	r4,396(r2)
   5351c:	218cb03a 	or	r6,r4,r6
   53520:	11806315 	stw	r6,396(r2)
   53524:	003fce06 	br	53460 <__alt_data_end+0xfffd3460>
   53528:	18805304 	addi	r2,r3,332
   5352c:	18805215 	stw	r2,328(r3)
   53530:	003fc606 	br	5344c <__alt_data_end+0xfffd344c>
   53534:	00bfffc4 	movi	r2,-1
   53538:	003fd006 	br	5347c <__alt_data_end+0xfffd347c>

0005353c <__call_exitprocs>:
   5353c:	defff504 	addi	sp,sp,-44
   53540:	df000915 	stw	fp,36(sp)
   53544:	dd400615 	stw	r21,24(sp)
   53548:	dc800315 	stw	r18,12(sp)
   5354c:	dfc00a15 	stw	ra,40(sp)
   53550:	ddc00815 	stw	r23,32(sp)
   53554:	dd800715 	stw	r22,28(sp)
   53558:	dd000515 	stw	r20,20(sp)
   5355c:	dcc00415 	stw	r19,16(sp)
   53560:	dc400215 	stw	r17,8(sp)
   53564:	dc000115 	stw	r16,4(sp)
   53568:	d9000015 	stw	r4,0(sp)
   5356c:	2839883a 	mov	fp,r5
   53570:	04800044 	movi	r18,1
   53574:	057fffc4 	movi	r21,-1
   53578:	00800174 	movhi	r2,5
   5357c:	10960504 	addi	r2,r2,22548
   53580:	12000017 	ldw	r8,0(r2)
   53584:	45005217 	ldw	r20,328(r8)
   53588:	44c05204 	addi	r19,r8,328
   5358c:	a0001c26 	beq	r20,zero,53600 <__call_exitprocs+0xc4>
   53590:	a0800117 	ldw	r2,4(r20)
   53594:	15ffffc4 	addi	r23,r2,-1
   53598:	b8000d16 	blt	r23,zero,535d0 <__call_exitprocs+0x94>
   5359c:	14000044 	addi	r16,r2,1
   535a0:	8421883a 	add	r16,r16,r16
   535a4:	8421883a 	add	r16,r16,r16
   535a8:	84402004 	addi	r17,r16,128
   535ac:	a463883a 	add	r17,r20,r17
   535b0:	a421883a 	add	r16,r20,r16
   535b4:	e0001e26 	beq	fp,zero,53630 <__call_exitprocs+0xf4>
   535b8:	80804017 	ldw	r2,256(r16)
   535bc:	e0801c26 	beq	fp,r2,53630 <__call_exitprocs+0xf4>
   535c0:	bdffffc4 	addi	r23,r23,-1
   535c4:	843fff04 	addi	r16,r16,-4
   535c8:	8c7fff04 	addi	r17,r17,-4
   535cc:	bd7ff91e 	bne	r23,r21,535b4 <__alt_data_end+0xfffd35b4>
   535d0:	00800034 	movhi	r2,0
   535d4:	10800004 	addi	r2,r2,0
   535d8:	10000926 	beq	r2,zero,53600 <__call_exitprocs+0xc4>
   535dc:	a0800117 	ldw	r2,4(r20)
   535e0:	1000301e 	bne	r2,zero,536a4 <__call_exitprocs+0x168>
   535e4:	a0800017 	ldw	r2,0(r20)
   535e8:	10003226 	beq	r2,zero,536b4 <__call_exitprocs+0x178>
   535ec:	a009883a 	mov	r4,r20
   535f0:	98800015 	stw	r2,0(r19)
   535f4:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x40000>
   535f8:	9d000017 	ldw	r20,0(r19)
   535fc:	a03fe41e 	bne	r20,zero,53590 <__alt_data_end+0xfffd3590>
   53600:	dfc00a17 	ldw	ra,40(sp)
   53604:	df000917 	ldw	fp,36(sp)
   53608:	ddc00817 	ldw	r23,32(sp)
   5360c:	dd800717 	ldw	r22,28(sp)
   53610:	dd400617 	ldw	r21,24(sp)
   53614:	dd000517 	ldw	r20,20(sp)
   53618:	dcc00417 	ldw	r19,16(sp)
   5361c:	dc800317 	ldw	r18,12(sp)
   53620:	dc400217 	ldw	r17,8(sp)
   53624:	dc000117 	ldw	r16,4(sp)
   53628:	dec00b04 	addi	sp,sp,44
   5362c:	f800283a 	ret
   53630:	a0800117 	ldw	r2,4(r20)
   53634:	80c00017 	ldw	r3,0(r16)
   53638:	10bfffc4 	addi	r2,r2,-1
   5363c:	15c01426 	beq	r2,r23,53690 <__call_exitprocs+0x154>
   53640:	80000015 	stw	zero,0(r16)
   53644:	183fde26 	beq	r3,zero,535c0 <__alt_data_end+0xfffd35c0>
   53648:	95c8983a 	sll	r4,r18,r23
   5364c:	a0806217 	ldw	r2,392(r20)
   53650:	a5800117 	ldw	r22,4(r20)
   53654:	2084703a 	and	r2,r4,r2
   53658:	10000b26 	beq	r2,zero,53688 <__call_exitprocs+0x14c>
   5365c:	a0806317 	ldw	r2,396(r20)
   53660:	2088703a 	and	r4,r4,r2
   53664:	20000c1e 	bne	r4,zero,53698 <__call_exitprocs+0x15c>
   53668:	89400017 	ldw	r5,0(r17)
   5366c:	d9000017 	ldw	r4,0(sp)
   53670:	183ee83a 	callr	r3
   53674:	a0800117 	ldw	r2,4(r20)
   53678:	15bfbf1e 	bne	r2,r22,53578 <__alt_data_end+0xfffd3578>
   5367c:	98800017 	ldw	r2,0(r19)
   53680:	153fcf26 	beq	r2,r20,535c0 <__alt_data_end+0xfffd35c0>
   53684:	003fbc06 	br	53578 <__alt_data_end+0xfffd3578>
   53688:	183ee83a 	callr	r3
   5368c:	003ff906 	br	53674 <__alt_data_end+0xfffd3674>
   53690:	a5c00115 	stw	r23,4(r20)
   53694:	003feb06 	br	53644 <__alt_data_end+0xfffd3644>
   53698:	89000017 	ldw	r4,0(r17)
   5369c:	183ee83a 	callr	r3
   536a0:	003ff406 	br	53674 <__alt_data_end+0xfffd3674>
   536a4:	a0800017 	ldw	r2,0(r20)
   536a8:	a027883a 	mov	r19,r20
   536ac:	1029883a 	mov	r20,r2
   536b0:	003fb606 	br	5358c <__alt_data_end+0xfffd358c>
   536b4:	0005883a 	mov	r2,zero
   536b8:	003ffb06 	br	536a8 <__alt_data_end+0xfffd36a8>

000536bc <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   536bc:	defffd04 	addi	sp,sp,-12
   536c0:	df000215 	stw	fp,8(sp)
   536c4:	df000204 	addi	fp,sp,8
   536c8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   536cc:	0001883a 	nop
   536d0:	e0bfff17 	ldw	r2,-4(fp)
   536d4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   536d8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   536dc:	10000226 	beq	r2,zero,536e8 <_exit+0x2c>
    ALT_SIM_FAIL();
   536e0:	002af070 	cmpltui	zero,zero,43969
   536e4:	00000106 	br	536ec <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   536e8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   536ec:	003fff06 	br	536ec <__alt_data_end+0xfffd36ec>
